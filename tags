!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	data/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	data/appdata/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	data/icons/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	help/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	libtomboy/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/backlinks/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/bugzilla/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/exporttogtg/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/exporttohtml/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/filesystemsyncservice/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/fixedwidth/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/inserttimestamp/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/notedirectorywatcher/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/noteoftheday/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/printnotes/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/readonly/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/replacetitle/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/specialnotes/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/statistics/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/stickynoteimport/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/tableofcontents/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/todo/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/tomboyimport/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/underline/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/addins/webdavsyncservice/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL	src/dbus/Makefile	/^ACLOCAL = ${SHELL} \/development\/gitarchives\/gnote\/missing aclocal-1.14$/;"	m
ACLOCAL_AMFLAGS	Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	data/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	data/appdata/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	data/icons/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	help/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libtomboy/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/backlinks/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/bugzilla/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/exporttogtg/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/exporttohtml/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/filesystemsyncservice/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/fixedwidth/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/inserttimestamp/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/notedirectorywatcher/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/noteoftheday/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/printnotes/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/readonly/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/replacetitle/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/specialnotes/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/statistics/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/stickynoteimport/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/tableofcontents/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/todo/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/tomboyimport/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/underline/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/addins/webdavsyncservice/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	src/dbus/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACQUIRING_LOCK	src/synchronization/syncutils.hpp	/^    ACQUIRING_LOCK,$/;"	e	enum:gnote::sync::SyncState
ACTIVE_NOTES	src/iconmanager.cpp	/^const char *IconManager::ACTIVE_NOTES = "active-notes";$/;"	m	class:gnote::IconManager	file:
ACTIVE_NOTES	src/iconmanager.hpp	/^  static const char *ACTIVE_NOTES;$/;"	m	class:gnote::IconManager	access:public
ADDINSDIR	src/addins/addins.mk	/^ADDINSDIR = ${exec_prefix}\/lib\/gnote\/addins\/3.15.0$/;"	m
ADDIN_ATTS	src/addininfo.cpp	/^    const char * ADDIN_ATTS = "AddinAttributes";$/;"	m	namespace:gnote::__anon8	file:
ADDIN_CATEGORY_DESKTOP_INTEGRATION	src/addininfo.hpp	/^  ADDIN_CATEGORY_DESKTOP_INTEGRATION,$/;"	e	enum:gnote::AddinCategory
ADDIN_CATEGORY_FORMATTING	src/addininfo.hpp	/^  ADDIN_CATEGORY_FORMATTING,$/;"	e	enum:gnote::AddinCategory
ADDIN_CATEGORY_SYNCHRONIZATION	src/addininfo.hpp	/^  ADDIN_CATEGORY_SYNCHRONIZATION$/;"	e	enum:gnote::AddinCategory
ADDIN_CATEGORY_TOOLS	src/addininfo.hpp	/^  ADDIN_CATEGORY_TOOLS,$/;"	e	enum:gnote::AddinCategory
ADDIN_CATEGORY_UNKNOWN	src/addininfo.hpp	/^  ADDIN_CATEGORY_UNKNOWN,$/;"	e	enum:gnote::AddinCategory
ADDIN_INFO	src/addininfo.cpp	/^    const char * ADDIN_INFO = "AddinInfo";$/;"	m	namespace:gnote::__anon8	file:
ADD_INTERFACE_IMPL	src/sharp/dynamicmodule.hpp	48;"	d
ALL_LINGUAS	Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	data/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	data/appdata/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	data/icons/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	help/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	libtomboy/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	po/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/backlinks/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/bugzilla/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/exporttogtg/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/exporttohtml/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/filesystemsyncservice/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/fixedwidth/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/inserttimestamp/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/notedirectorywatcher/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/noteoftheday/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/printnotes/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/readonly/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/replacetitle/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/specialnotes/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/statistics/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/stickynoteimport/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/tableofcontents/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/todo/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/tomboyimport/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/underline/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/addins/webdavsyncservice/Makefile	/^ALL_LINGUAS = $/;"	m
ALL_LINGUAS	src/dbus/Makefile	/^ALL_LINGUAS = $/;"	m
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	data/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	data/appdata/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	data/icons/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	help/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libtomboy/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/backlinks/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/bugzilla/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/exporttogtg/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/exporttohtml/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/filesystemsyncservice/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/fixedwidth/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/inserttimestamp/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/notedirectorywatcher/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/noteoftheday/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/printnotes/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/readonly/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/replacetitle/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/specialnotes/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/statistics/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/stickynoteimport/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/tableofcontents/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/todo/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/tomboyimport/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/underline/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/addins/webdavsyncservice/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	src/dbus/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	libtomboy/Makefile	/^AM_CPPFLAGS = \\$/;"	m
AM_CPPFLAGS	src/Makefile	/^AM_CPPFLAGS = -I$(top_srcdir) -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include  -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include  \\$/;"	m
AM_CPPFLAGS	src/addins/addins.mk	/^AM_CPPFLAGS=-pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include  -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include  \\$/;"	m
AM_CPPFLAGS	src/addins/exporttohtml/Makefile	/^AM_CPPFLAGS = -I\/usr\/include\/libxml2 $/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	data/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	data/appdata/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	data/icons/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	help/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libtomboy/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	po/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/backlinks/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/bugzilla/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/exporttogtg/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/exporttohtml/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/filesystemsyncservice/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/fixedwidth/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/inserttimestamp/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/notedirectorywatcher/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/noteoftheday/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/printnotes/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/readonly/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/replacetitle/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/specialnotes/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/statistics/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/stickynoteimport/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/tableofcontents/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/todo/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/tomboyimport/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/underline/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/addins/webdavsyncservice/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	src/dbus/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LDFLAGS	src/Makefile	/^AM_LDFLAGS = -export-dynamic$/;"	m
AM_LDFLAGS	src/addins/addins.mk	/^AM_LDFLAGS = -avoid-version -module -export-dynamic$/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	data/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	src/addins/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_V_CC	libtomboy/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/backlinks/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/bugzilla/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/exporttogtg/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/exporttohtml/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/filesystemsyncservice/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/fixedwidth/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/inserttimestamp/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/notedirectorywatcher/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/noteoftheday/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/printnotes/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/readonly/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/replacetitle/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/specialnotes/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/statistics/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/stickynoteimport/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/tableofcontents/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/todo/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/tomboyimport/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/underline/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	src/addins/webdavsyncservice/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCLD	libtomboy/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/backlinks/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/bugzilla/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/exporttogtg/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/exporttohtml/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/filesystemsyncservice/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/fixedwidth/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/inserttimestamp/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/notedirectorywatcher/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/noteoftheday/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/printnotes/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/readonly/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/replacetitle/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/specialnotes/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/statistics/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/stickynoteimport/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/tableofcontents/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/todo/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/tomboyimport/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/underline/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	src/addins/webdavsyncservice/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CXX	src/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/backlinks/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/bugzilla/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/exporttogtg/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/exporttohtml/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/filesystemsyncservice/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/fixedwidth/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/inserttimestamp/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/notedirectorywatcher/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/noteoftheday/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/printnotes/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/readonly/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/replacetitle/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/specialnotes/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/statistics/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/stickynoteimport/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/tableofcontents/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/todo/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/tomboyimport/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/underline/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	src/addins/webdavsyncservice/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	src/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/backlinks/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/bugzilla/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/exporttogtg/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/exporttohtml/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/filesystemsyncservice/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/fixedwidth/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/inserttimestamp/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/notedirectorywatcher/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/noteoftheday/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/printnotes/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/readonly/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/replacetitle/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/specialnotes/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/statistics/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/stickynoteimport/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/tableofcontents/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/todo/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/tomboyimport/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/underline/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	src/addins/webdavsyncservice/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	data/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	data/appdata/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	data/icons/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	help/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libtomboy/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/backlinks/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/bugzilla/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/exporttogtg/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/exporttohtml/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/filesystemsyncservice/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/fixedwidth/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/inserttimestamp/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/notedirectorywatcher/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/noteoftheday/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/printnotes/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/readonly/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/replacetitle/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/specialnotes/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/statistics/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/stickynoteimport/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/tableofcontents/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/todo/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/tomboyimport/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/underline/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/addins/webdavsyncservice/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	src/dbus/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	data/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	data/appdata/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	data/icons/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	help/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libtomboy/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/backlinks/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/bugzilla/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/exporttogtg/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/exporttohtml/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/filesystemsyncservice/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/fixedwidth/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/inserttimestamp/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/notedirectorywatcher/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/noteoftheday/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/printnotes/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/readonly/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/replacetitle/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/specialnotes/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/statistics/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/stickynoteimport/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/tableofcontents/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/todo/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/tomboyimport/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/underline/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/addins/webdavsyncservice/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	src/dbus/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	data/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	data/appdata/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	data/icons/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	help/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libtomboy/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/backlinks/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/bugzilla/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/exporttogtg/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/exporttohtml/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/filesystemsyncservice/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/fixedwidth/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/inserttimestamp/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/notedirectorywatcher/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/noteoftheday/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/printnotes/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/readonly/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/replacetitle/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/specialnotes/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/statistics/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/stickynoteimport/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/tableofcontents/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/todo/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/tomboyimport/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/underline/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/addins/webdavsyncservice/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	src/dbus/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	libtomboy/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/backlinks/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/bugzilla/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/exporttogtg/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/exporttohtml/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/filesystemsyncservice/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/fixedwidth/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/inserttimestamp/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/notedirectorywatcher/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/noteoftheday/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/printnotes/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/readonly/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/replacetitle/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/specialnotes/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/statistics/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/stickynoteimport/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/tableofcontents/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/todo/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/tomboyimport/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/underline/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	src/addins/webdavsyncservice/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
APP_ACTION_LAST	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_LAST = 3;$/;"	m	class:gnote::IActionManager	file:
APP_ACTION_LAST	src/iactionmanager.hpp	/^  static const int APP_ACTION_LAST;$/;"	m	class:gnote::IActionManager	access:public
APP_ACTION_MANAGE	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_MANAGE = 2;$/;"	m	class:gnote::IActionManager	file:
APP_ACTION_MANAGE	src/iactionmanager.hpp	/^  static const int APP_ACTION_MANAGE;$/;"	m	class:gnote::IActionManager	access:public
APP_ACTION_NEW	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_NEW = 1;$/;"	m	class:gnote::IActionManager	file:
APP_ACTION_NEW	src/iactionmanager.hpp	/^  static const int APP_ACTION_NEW;$/;"	m	class:gnote::IActionManager	access:public
AR	Makefile	/^AR = ar$/;"	m
AR	data/Makefile	/^AR = ar$/;"	m
AR	data/appdata/Makefile	/^AR = ar$/;"	m
AR	data/icons/Makefile	/^AR = ar$/;"	m
AR	help/Makefile	/^AR = ar$/;"	m
AR	libtomboy/Makefile	/^AR = ar$/;"	m
AR	src/Makefile	/^AR = ar$/;"	m
AR	src/addins/Makefile	/^AR = ar$/;"	m
AR	src/addins/backlinks/Makefile	/^AR = ar$/;"	m
AR	src/addins/bugzilla/Makefile	/^AR = ar$/;"	m
AR	src/addins/exporttogtg/Makefile	/^AR = ar$/;"	m
AR	src/addins/exporttohtml/Makefile	/^AR = ar$/;"	m
AR	src/addins/filesystemsyncservice/Makefile	/^AR = ar$/;"	m
AR	src/addins/fixedwidth/Makefile	/^AR = ar$/;"	m
AR	src/addins/inserttimestamp/Makefile	/^AR = ar$/;"	m
AR	src/addins/notedirectorywatcher/Makefile	/^AR = ar$/;"	m
AR	src/addins/noteoftheday/Makefile	/^AR = ar$/;"	m
AR	src/addins/printnotes/Makefile	/^AR = ar$/;"	m
AR	src/addins/readonly/Makefile	/^AR = ar$/;"	m
AR	src/addins/replacetitle/Makefile	/^AR = ar$/;"	m
AR	src/addins/specialnotes/Makefile	/^AR = ar$/;"	m
AR	src/addins/statistics/Makefile	/^AR = ar$/;"	m
AR	src/addins/stickynoteimport/Makefile	/^AR = ar$/;"	m
AR	src/addins/tableofcontents/Makefile	/^AR = ar$/;"	m
AR	src/addins/todo/Makefile	/^AR = ar$/;"	m
AR	src/addins/tomboyimport/Makefile	/^AR = ar$/;"	m
AR	src/addins/underline/Makefile	/^AR = ar$/;"	m
AR	src/addins/webdavsyncservice/Makefile	/^AR = ar$/;"	m
AR	src/dbus/Makefile	/^AR = ar$/;"	m
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	data/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	data/appdata/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	data/icons/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	help/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	libtomboy/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/backlinks/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/bugzilla/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/exporttogtg/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/exporttohtml/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/filesystemsyncservice/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/fixedwidth/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/inserttimestamp/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/notedirectorywatcher/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/noteoftheday/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/printnotes/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/readonly/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/replacetitle/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/specialnotes/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/statistics/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/stickynoteimport/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/tableofcontents/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/todo/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/tomboyimport/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/underline/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/addins/webdavsyncservice/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOCONF	src/dbus/Makefile	/^AUTOCONF = ${SHELL} \/development\/gitarchives\/gnote\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	data/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	data/appdata/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	data/icons/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	help/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	libtomboy/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/backlinks/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/bugzilla/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/exporttogtg/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/exporttohtml/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/filesystemsyncservice/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/fixedwidth/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/inserttimestamp/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/notedirectorywatcher/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/noteoftheday/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/printnotes/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/readonly/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/replacetitle/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/specialnotes/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/statistics/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/stickynoteimport/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/tableofcontents/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/todo/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/tomboyimport/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/underline/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/addins/webdavsyncservice/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOHEADER	src/dbus/Makefile	/^AUTOHEADER = ${SHELL} \/development\/gitarchives\/gnote\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	data/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	data/appdata/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	data/icons/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	help/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	libtomboy/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/backlinks/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/bugzilla/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/exporttogtg/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/exporttohtml/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/filesystemsyncservice/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/fixedwidth/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/inserttimestamp/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/notedirectorywatcher/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/noteoftheday/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/printnotes/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/readonly/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/replacetitle/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/specialnotes/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/statistics/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/stickynoteimport/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/tableofcontents/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/todo/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/tomboyimport/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/underline/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/addins/webdavsyncservice/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOMAKE	src/dbus/Makefile	/^AUTOMAKE = ${SHELL} \/development\/gitarchives\/gnote\/missing automake-1.14$/;"	m
AUTOSIZE_NOTE_WINDOW	src/preferences.cpp	/^  const char * Preferences::AUTOSIZE_NOTE_WINDOW = "autosize-note-window";$/;"	m	class:gnote::Preferences	file:
AUTOSIZE_NOTE_WINDOW	src/preferences.hpp	/^    static const char *AUTOSIZE_NOTE_WINDOW;$/;"	m	class:gnote::Preferences	access:public
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	data/Makefile	/^AWK = gawk$/;"	m
AWK	data/appdata/Makefile	/^AWK = gawk$/;"	m
AWK	data/icons/Makefile	/^AWK = gawk$/;"	m
AWK	help/Makefile	/^AWK = gawk$/;"	m
AWK	libtomboy/Makefile	/^AWK = gawk$/;"	m
AWK	src/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/backlinks/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/bugzilla/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/exporttogtg/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/exporttohtml/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/filesystemsyncservice/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/fixedwidth/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/inserttimestamp/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/notedirectorywatcher/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/noteoftheday/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/printnotes/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/readonly/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/replacetitle/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/specialnotes/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/statistics/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/stickynoteimport/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/tableofcontents/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/todo/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/tomboyimport/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/underline/Makefile	/^AWK = gawk$/;"	m
AWK	src/addins/webdavsyncservice/Makefile	/^AWK = gawk$/;"	m
AWK	src/dbus/Makefile	/^AWK = gawk$/;"	m
AbstractAddin	src/abstractaddin.cpp	/^  AbstractAddin::AbstractAddin()$/;"	f	class:gnote::AbstractAddin	signature:()
AbstractAddin	src/abstractaddin.hpp	/^  AbstractAddin();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
AbstractAddin	src/abstractaddin.hpp	/^class AbstractAddin$/;"	c	namespace:gnote	inherits:sharp::IInterface,sigc::trackable
ActionManager	src/actionmanager.cpp	/^  ActionManager::ActionManager()$/;"	f	class:gnote::ActionManager	signature:()
ActionManager	src/actionmanager.hpp	/^  ActionManager();$/;"	p	class:gnote::ActionManager	access:public	signature:()
ActionManager	src/actionmanager.hpp	/^class ActionManager$/;"	c	namespace:gnote	inherits:IActionManager
ActivateResult	src/dbus/searchprovider.cpp	/^void SearchProvider::ActivateResult(const Glib::ustring & identifier,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::ustring & identifier, const std::vector<Glib::ustring> & , guint32 )
ActivateResult	src/dbus/searchprovider.hpp	/^  void ActivateResult(const Glib::ustring & identifier, const std::vector<Glib::ustring> & terms, guint32 timestamp);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const Glib::ustring & identifier, const std::vector<Glib::ustring> & terms, guint32 timestamp)
ActivateResult_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::ActivateResult_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
ActivateResult_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase ActivateResult_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
ActiveNotesNotebook	src/notebooks/specialnotebooks.cpp	/^ActiveNotesNotebook::ActiveNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(NoteManager & manager)
ActiveNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  ActiveNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:public	signature:(NoteManager &)
ActiveNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class ActiveNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
AddTagToNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool AddTagToNote(const std::string& uri, const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& tag_name)
AddTagToNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::AddTagToNote(const std::string& uri, const std::string& tag_name)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& tag_name)
AddTagToNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::AddTagToNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
AddTagToNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase AddTagToNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
AddinCategory	src/addininfo.hpp	/^enum AddinCategory {$/;"	g	namespace:gnote
AddinInfo	src/addininfo.cpp	/^AddinInfo::AddinInfo(const std::string & info_file)$/;"	f	class:gnote::AddinInfo	signature:(const std::string & info_file)
AddinInfo	src/addininfo.hpp	/^  AddinInfo(){}$/;"	f	class:gnote::AddinInfo	access:public	signature:()
AddinInfo	src/addininfo.hpp	/^  explicit AddinInfo(const std::string & info_file);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const std::string & info_file)
AddinInfo	src/addininfo.hpp	/^class AddinInfo$/;"	c	namespace:gnote
AddinInfoDialog	src/preferencesdialog.cpp	/^    AddinInfoDialog(const AddinInfo & module, Gtk::Dialog &parent);$/;"	p	class:gnote::AddinInfoDialog	file:	access:public	signature:(const AddinInfo & module, Gtk::Dialog &parent)
AddinInfoDialog	src/preferencesdialog.cpp	/^  AddinInfoDialog::AddinInfoDialog(const AddinInfo & addin_info,$/;"	f	class:gnote::AddinInfoDialog	signature:(const AddinInfo & addin_info, Gtk::Dialog &parent)
AddinInfoDialog	src/preferencesdialog.cpp	/^  class AddinInfoDialog$/;"	c	namespace:gnote	file:	inherits:Gtk::Dialog
AddinInfoMap	src/addinmanager.hpp	/^typedef std::map<std::string, AddinInfo> AddinInfoMap;$/;"	t	namespace:gnote
AddinManager	src/addinmanager.cpp	/^  AddinManager::AddinManager(NoteManager & note_manager, const std::string & conf_dir)$/;"	f	class:gnote::AddinManager	signature:(NoteManager & note_manager, const std::string & conf_dir)
AddinManager	src/addinmanager.hpp	/^  AddinManager(NoteManager & note_manager, const std::string & conf_dir);$/;"	p	class:gnote::AddinManager	access:public	signature:(NoteManager & note_manager, const std::string & conf_dir)
AddinManager	src/addinmanager.hpp	/^class AddinManager$/;"	c	namespace:gnote
AddinPreferenceFactory	src/addinpreferencefactory.hpp	/^class AddinPreferenceFactory$/;"	c	namespace:gnote	inherits:AddinPreferenceFactoryBase
AddinPreferenceFactoryBase	src/addinpreferencefactory.hpp	/^class AddinPreferenceFactoryBase$/;"	c	namespace:gnote	inherits:sharp::IInterface
AddinsColumns	src/sharp/addinstreemodel.hpp	/^    AddinsColumns()$/;"	f	class:sharp::AddinsTreeModel::AddinsColumns	access:public	signature:()
AddinsColumns	src/sharp/addinstreemodel.hpp	/^  class AddinsColumns$/;"	c	class:sharp::AddinsTreeModel	inherits:Gtk::TreeModelColumnRecord	access:public
AddinsTreeModel	src/sharp/addinstreemodel.cpp	/^  AddinsTreeModel::AddinsTreeModel()$/;"	f	class:sharp::AddinsTreeModel	signature:()
AddinsTreeModel	src/sharp/addinstreemodel.hpp	/^  AddinsTreeModel();$/;"	p	class:sharp::AddinsTreeModel	access:protected	signature:()
AddinsTreeModel	src/sharp/addinstreemodel.hpp	/^class AddinsTreeModel$/;"	c	namespace:sharp	inherits:Gtk::TreeStore
AllNotesNotebook	src/notebooks/specialnotebooks.cpp	/^AllNotesNotebook::AllNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(NoteManager & manager)
AllNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  AllNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::AllNotesNotebook	access:public	signature:(NoteManager &)
AllNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class AllNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
AppAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, ApplicationAddin*> AppAddinMap;$/;"	t	class:gnote::AddinManager	access:private
AppMenuItem	src/actionmanager.hpp	/^    AppMenuItem(int ord, const std::string & lbl, const std::string & act_def)$/;"	f	struct:gnote::ActionManager::AppMenuItem	access:public	signature:(int ord, const std::string & lbl, const std::string & act_def)
AppMenuItem	src/actionmanager.hpp	/^  struct AppMenuItem$/;"	s	class:gnote::ActionManager	access:private
AppMenuItemMultiMap	src/actionmanager.hpp	/^  typedef std::multimap<int, AppMenuItem> AppMenuItemMultiMap;$/;"	t	class:gnote::ActionManager	access:private
ApplicationAddin	src/applicationaddin.hpp	/^class ApplicationAddin$/;"	c	namespace:gnote	inherits:AbstractAddin
AttributeMap	src/notetag.hpp	/^  typedef std::map<std::string, std::string> AttributeMap;$/;"	t	class:gnote::DynamicNoteTag	access:public
BACKLINKS_ORDER	src/iactionmanager.hpp	/^  BACKLINKS_ORDER = 100,$/;"	e	enum:gnote::NoteActionOrder
BOOST_CPPFLAGS	Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	data/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	data/appdata/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	data/icons/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	help/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	libtomboy/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/backlinks/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/bugzilla/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/exporttogtg/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/exporttohtml/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/filesystemsyncservice/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/fixedwidth/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/inserttimestamp/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/notedirectorywatcher/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/noteoftheday/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/printnotes/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/readonly/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/replacetitle/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/specialnotes/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/statistics/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/stickynoteimport/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/tableofcontents/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/todo/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/tomboyimport/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/underline/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/addins/webdavsyncservice/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_CPPFLAGS	src/dbus/Makefile	/^BOOST_CPPFLAGS = $/;"	m
BOOST_LDPATH	Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	data/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	data/appdata/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	data/icons/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	help/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	libtomboy/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/backlinks/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/bugzilla/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/exporttogtg/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/exporttohtml/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/filesystemsyncservice/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/fixedwidth/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/inserttimestamp/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/notedirectorywatcher/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/noteoftheday/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/printnotes/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/readonly/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/replacetitle/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/specialnotes/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/statistics/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/stickynoteimport/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/tableofcontents/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/todo/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/tomboyimport/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/underline/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/addins/webdavsyncservice/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_LDPATH	src/dbus/Makefile	/^BOOST_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_ROOT	Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	data/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	data/appdata/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	data/icons/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	help/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	libtomboy/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/backlinks/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/bugzilla/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/exporttogtg/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/exporttohtml/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/filesystemsyncservice/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/fixedwidth/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/inserttimestamp/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/notedirectorywatcher/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/noteoftheday/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/printnotes/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/readonly/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/replacetitle/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/specialnotes/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/statistics/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/stickynoteimport/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/tableofcontents/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/todo/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/tomboyimport/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/underline/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/addins/webdavsyncservice/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_ROOT	src/dbus/Makefile	/^BOOST_ROOT = $/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	data/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	data/appdata/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	data/icons/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	help/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	libtomboy/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/backlinks/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/bugzilla/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/exporttogtg/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/exporttohtml/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/filesystemsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/fixedwidth/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/inserttimestamp/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/notedirectorywatcher/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/noteoftheday/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/printnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/readonly/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/replacetitle/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/specialnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/statistics/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/stickynoteimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/tableofcontents/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/todo/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/tomboyimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/underline/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/addins/webdavsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS	src/dbus/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDFLAGS = -L\/usr\/local\/lib -Wl,-R,\/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	data/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	data/appdata/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	data/icons/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	help/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	libtomboy/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/backlinks/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/bugzilla/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/exporttogtg/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/exporttohtml/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/filesystemsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/fixedwidth/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/inserttimestamp/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/notedirectorywatcher/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/noteoftheday/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/printnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/readonly/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/replacetitle/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/specialnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/statistics/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/stickynoteimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/tableofcontents/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/todo/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/tomboyimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/underline/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/addins/webdavsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LDPATH	src/dbus/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LDPATH = \/usr\/local\/lib$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	data/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	data/appdata/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	data/icons/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	help/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	libtomboy/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/backlinks/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/bugzilla/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/exporttogtg/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/exporttohtml/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/filesystemsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/fixedwidth/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/inserttimestamp/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/notedirectorywatcher/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/noteoftheday/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/printnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/readonly/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/replacetitle/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/specialnotes/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/statistics/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/stickynoteimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/tableofcontents/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/todo/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/tomboyimport/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/underline/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/addins/webdavsyncservice/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BOOST_UNIT_TEST_FRAMEWORK_LIBS	src/dbus/Makefile	/^BOOST_UNIT_TEST_FRAMEWORK_LIBS = -lboost_unit_test_framework$/;"	m
BUG	src/iconmanager.cpp	/^const char *IconManager::BUG = "bug";$/;"	m	class:gnote::IconManager	file:
BUG	src/iconmanager.hpp	/^  static const char *BUG;$/;"	m	class:gnote::IconManager	access:public
BacklinkAction	src/addins/backlinks/backlinkmenuitem.cpp	/^BacklinkAction::BacklinkAction(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:backlinks::BacklinkAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
BacklinkAction	src/addins/backlinks/backlinkmenuitem.hpp	/^  BacklinkAction(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:backlinks::BacklinkAction	access:private	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
BacklinkAction	src/addins/backlinks/backlinkmenuitem.hpp	/^class BacklinkAction$/;"	c	namespace:backlinks	inherits:gnote::NoteWindow::NonModifyingAction
BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.cpp	/^BacklinkMenuItem::BacklinkMenuItem(const gnote::NoteBase::Ptr & note,$/;"	f	class:backlinks::BacklinkMenuItem	signature:(const gnote::NoteBase::Ptr & note, const std::string & title_search)
BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.hpp	/^  BacklinkMenuItem(const gnote::NoteBase::Ptr &, const std::string &);$/;"	p	class:backlinks::BacklinkMenuItem	access:public	signature:(const gnote::NoteBase::Ptr &, const std::string &)
BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.hpp	/^class BacklinkMenuItem$/;"	c	namespace:backlinks	inherits:Gtk::ImageMenuItem
BacklinksModule	src/addins/backlinks/backlinksnoteaddin.cpp	/^BacklinksModule::BacklinksModule()$/;"	f	class:backlinks::BacklinksModule	signature:()
BacklinksModule	src/addins/backlinks/backlinksnoteaddin.hpp	/^  BacklinksModule();$/;"	p	class:backlinks::BacklinksModule	access:public	signature:()
BacklinksModule	src/addins/backlinks/backlinksnoteaddin.hpp	/^class BacklinksModule$/;"	c	namespace:backlinks	inherits:sharp::DynamicModule
BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.cpp	/^BacklinksNoteAddin::BacklinksNoteAddin()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.hpp	/^  BacklinksNoteAddin();$/;"	p	class:backlinks::BacklinksNoteAddin	access:public	signature:()
BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.hpp	/^class BacklinksNoteAddin$/;"	c	namespace:backlinks	inherits:gnote::NoteAddin
Binding	libtomboy/tomboykeybinder.c	/^} Binding;$/;"	t	typeref:struct:_Binding	file:
Binding	src/prefskeybinder.cpp	/^    Binding(const std::string & pref_path, const std::string & default_binding,$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler, IKeybinder & native_keybinder)
Binding	src/prefskeybinder.cpp	/^  PrefsKeybinder::Binding::Binding(const std::string & pref_path, $/;"	f	class:gnote::PrefsKeybinder::Binding	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler, IKeybinder & native_keybinder)
Binding	src/prefskeybinder.cpp	/^  class PrefsKeybinder::Binding$/;"	c	class:gnote::PrefsKeybinder	file:
BindingMap	src/xkeybinder.hpp	/^  typedef std::map<std::string, Handler> BindingMap;$/;"	t	class:gnote::XKeybinder	access:private
BugzillaLink	src/addins/bugzilla/bugzillalink.cpp	/^  BugzillaLink::BugzillaLink()$/;"	f	class:bugzilla::BugzillaLink	signature:()
BugzillaLink	src/addins/bugzilla/bugzillalink.hpp	/^  BugzillaLink();$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:()
BugzillaLink	src/addins/bugzilla/bugzillalink.hpp	/^class BugzillaLink$/;"	c	namespace:bugzilla	inherits:gnote::DynamicNoteTag
BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  BugzillaModule::BugzillaModule()$/;"	f	class:bugzilla::BugzillaModule	signature:()
BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  BugzillaModule();$/;"	p	class:bugzilla::BugzillaModule	access:public	signature:()
BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.hpp	/^class BugzillaModule$/;"	c	namespace:bugzilla	inherits:sharp::DynamicModule
BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  BugzillaNoteAddin::BugzillaNoteAddin()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  BugzillaNoteAddin();$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:()
BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.hpp	/^class BugzillaNoteAddin$/;"	c	namespace:bugzilla	inherits:gnote::NoteAddin
BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.cpp	/^  BugzillaPreferences::BugzillaPreferences(gnote::NoteManager &)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(gnote::NoteManager &)
BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.hpp	/^  BugzillaPreferences(gnote::NoteManager &);$/;"	p	class:bugzilla::BugzillaPreferences	access:public	signature:(gnote::NoteManager &)
BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.hpp	/^class BugzillaPreferences$/;"	c	namespace:bugzilla	inherits:Gtk::Grid
BugzillaPreferencesFactory	src/addins/bugzilla/bugzillapreferencesfactory.hpp	/^class BugzillaPreferencesFactory$/;"	c	namespace:bugzilla	inherits:gnote::AddinPreferenceFactory
CANCEL	src/synchronization/syncutils.hpp	/^    CANCEL,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
CAN_ACTIVATE	src/notetag.hpp	/^    CAN_ACTIVATE  = 16,$/;"	e	enum:gnote::NoteTag::TagFlags
CAN_GROW	src/notetag.hpp	/^    CAN_GROW      = 4,$/;"	e	enum:gnote::NoteTag::TagFlags
CAN_SERIALIZE	src/notetag.hpp	/^    CAN_SERIALIZE = 1,$/;"	e	enum:gnote::NoteTag::TagFlags
CAN_SPELL_CHECK	src/notetag.hpp	/^    CAN_SPELL_CHECK = 8,$/;"	e	enum:gnote::NoteTag::TagFlags
CAN_SPLIT	src/notetag.hpp	/^    CAN_SPLIT     = 32$/;"	e	enum:gnote::NoteTag::TagFlags
CAN_UNDO	src/notetag.hpp	/^    CAN_UNDO      = 2,$/;"	e	enum:gnote::NoteTag::TagFlags
CATALOGS	Makefile	/^CATALOGS = $/;"	m
CATALOGS	data/Makefile	/^CATALOGS = $/;"	m
CATALOGS	data/appdata/Makefile	/^CATALOGS = $/;"	m
CATALOGS	data/icons/Makefile	/^CATALOGS = $/;"	m
CATALOGS	help/Makefile	/^CATALOGS = $/;"	m
CATALOGS	libtomboy/Makefile	/^CATALOGS = $/;"	m
CATALOGS	po/Makefile	/^CATALOGS=$(shell LINGUAS="$(USE_LINGUAS)"; for lang in $$LINGUAS; do printf "$$lang.gmo "; done)$/;"	m
CATALOGS	src/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/backlinks/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/bugzilla/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/exporttogtg/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/exporttohtml/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/filesystemsyncservice/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/fixedwidth/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/inserttimestamp/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/notedirectorywatcher/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/noteoftheday/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/printnotes/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/readonly/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/replacetitle/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/specialnotes/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/statistics/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/stickynoteimport/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/tableofcontents/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/todo/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/tomboyimport/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/underline/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/addins/webdavsyncservice/Makefile	/^CATALOGS = $/;"	m
CATALOGS	src/dbus/Makefile	/^CATALOGS = $/;"	m
CATOBJEXT	Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	data/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	data/appdata/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	data/icons/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	help/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	libtomboy/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/backlinks/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/bugzilla/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/exporttogtg/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/exporttohtml/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/filesystemsyncservice/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/fixedwidth/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/inserttimestamp/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/notedirectorywatcher/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/noteoftheday/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/printnotes/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/readonly/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/replacetitle/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/specialnotes/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/statistics/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/stickynoteimport/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/tableofcontents/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/todo/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/tomboyimport/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/underline/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/addins/webdavsyncservice/Makefile	/^CATOBJEXT = .gmo$/;"	m
CATOBJEXT	src/dbus/Makefile	/^CATOBJEXT = .gmo$/;"	m
CC	Makefile	/^CC = gcc$/;"	m
CC	data/Makefile	/^CC = gcc$/;"	m
CC	data/appdata/Makefile	/^CC = gcc$/;"	m
CC	data/icons/Makefile	/^CC = gcc$/;"	m
CC	help/Makefile	/^CC = gcc$/;"	m
CC	libtomboy/Makefile	/^CC = gcc$/;"	m
CC	src/Makefile	/^CC = gcc$/;"	m
CC	src/addins/Makefile	/^CC = gcc$/;"	m
CC	src/addins/backlinks/Makefile	/^CC = gcc$/;"	m
CC	src/addins/bugzilla/Makefile	/^CC = gcc$/;"	m
CC	src/addins/exporttogtg/Makefile	/^CC = gcc$/;"	m
CC	src/addins/exporttohtml/Makefile	/^CC = gcc$/;"	m
CC	src/addins/filesystemsyncservice/Makefile	/^CC = gcc$/;"	m
CC	src/addins/fixedwidth/Makefile	/^CC = gcc$/;"	m
CC	src/addins/inserttimestamp/Makefile	/^CC = gcc$/;"	m
CC	src/addins/notedirectorywatcher/Makefile	/^CC = gcc$/;"	m
CC	src/addins/noteoftheday/Makefile	/^CC = gcc$/;"	m
CC	src/addins/printnotes/Makefile	/^CC = gcc$/;"	m
CC	src/addins/readonly/Makefile	/^CC = gcc$/;"	m
CC	src/addins/replacetitle/Makefile	/^CC = gcc$/;"	m
CC	src/addins/specialnotes/Makefile	/^CC = gcc$/;"	m
CC	src/addins/statistics/Makefile	/^CC = gcc$/;"	m
CC	src/addins/stickynoteimport/Makefile	/^CC = gcc$/;"	m
CC	src/addins/tableofcontents/Makefile	/^CC = gcc$/;"	m
CC	src/addins/todo/Makefile	/^CC = gcc$/;"	m
CC	src/addins/tomboyimport/Makefile	/^CC = gcc$/;"	m
CC	src/addins/underline/Makefile	/^CC = gcc$/;"	m
CC	src/addins/webdavsyncservice/Makefile	/^CC = gcc$/;"	m
CC	src/dbus/Makefile	/^CC = gcc$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	data/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	data/appdata/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	data/icons/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	help/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libtomboy/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/backlinks/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/bugzilla/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/exporttogtg/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/exporttohtml/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/filesystemsyncservice/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/fixedwidth/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/inserttimestamp/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/notedirectorywatcher/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/noteoftheday/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/printnotes/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/readonly/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/replacetitle/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/specialnotes/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/statistics/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/stickynoteimport/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/tableofcontents/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/todo/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/tomboyimport/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/underline/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/addins/webdavsyncservice/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	src/dbus/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	libtomboy/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/backlinks/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/bugzilla/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/exporttogtg/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/exporttohtml/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/filesystemsyncservice/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/fixedwidth/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/inserttimestamp/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/notedirectorywatcher/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/noteoftheday/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/printnotes/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/readonly/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/replacetitle/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/specialnotes/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/statistics/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/stickynoteimport/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/tableofcontents/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/todo/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/tomboyimport/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/underline/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	src/addins/webdavsyncservice/Makefile	/^CCLD = $(CC)$/;"	m
CFLAGS	Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	data/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	data/appdata/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	data/icons/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	help/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	libtomboy/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/backlinks/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/bugzilla/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/exporttogtg/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/exporttohtml/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/filesystemsyncservice/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/fixedwidth/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/inserttimestamp/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/notedirectorywatcher/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/noteoftheday/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/printnotes/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/readonly/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/replacetitle/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/specialnotes/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/statistics/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/stickynoteimport/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/tableofcontents/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/todo/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/tomboyimport/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/underline/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/addins/webdavsyncservice/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CFLAGS	src/dbus/Makefile	/^CFLAGS = -g -O2 -DNDEBUG $/;"	m
CHECK_INTERVAL	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^const char *CHECK_INTERVAL = "check-interval";$/;"	m	namespace:notedirectorywatcher	file:
COLUMN_BOOL	src/noterenamedialog.hpp	/^    COLUMN_BOOL = 0,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
COLUMN_COUNT	src/noterenamedialog.hpp	/^    COLUMN_COUNT$/;"	e	enum:gnote::ModelColumnRecord::__anon7
COLUMN_NOTE	src/noterenamedialog.hpp	/^    COLUMN_NOTE,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
COLUMN_TITLE	src/noterenamedialog.hpp	/^    COLUMN_TITLE,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
COMMITTING_CHANGES	src/synchronization/syncutils.hpp	/^    COMMITTING_CHANGES,$/;"	e	enum:gnote::sync::SyncState
COMPILE	libtomboy/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/backlinks/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/bugzilla/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/exporttogtg/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/exporttohtml/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/filesystemsyncservice/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/fixedwidth/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/inserttimestamp/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/notedirectorywatcher/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/noteoftheday/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/printnotes/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/readonly/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/replacetitle/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/specialnotes/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/statistics/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/stickynoteimport/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/tableofcontents/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/todo/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/tomboyimport/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/underline/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	src/addins/webdavsyncservice/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	data/Makefile	/^CONFIG_CLEAN_FILES = gnote.desktop.in$/;"	m
CONFIG_CLEAN_FILES	data/appdata/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	data/icons/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	help/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libtomboy/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	src/addins/Makefile	/^CONFIG_CLEAN_FILES = addins.mk$/;"	m
CONFIG_CLEAN_FILES	src/addins/backlinks/Makefile	/^CONFIG_CLEAN_FILES = backlinks.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/bugzilla/Makefile	/^CONFIG_CLEAN_FILES = bugzilla.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/exporttogtg/Makefile	/^CONFIG_CLEAN_FILES = exporttogtg.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/exporttohtml/Makefile	/^CONFIG_CLEAN_FILES = exporttohtml.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/filesystemsyncservice/Makefile	/^CONFIG_CLEAN_FILES = filesystemsyncservice.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/fixedwidth/Makefile	/^CONFIG_CLEAN_FILES = fixedwidth.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/inserttimestamp/Makefile	/^CONFIG_CLEAN_FILES = inserttimestamp.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/notedirectorywatcher/Makefile	/^CONFIG_CLEAN_FILES = notedirectorywatcher.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/noteoftheday/Makefile	/^CONFIG_CLEAN_FILES = noteoftheday.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/printnotes/Makefile	/^CONFIG_CLEAN_FILES = printnotes.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/readonly/Makefile	/^CONFIG_CLEAN_FILES = readonly.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/replacetitle/Makefile	/^CONFIG_CLEAN_FILES = replacetitle.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/specialnotes/Makefile	/^CONFIG_CLEAN_FILES = specialnotes.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/statistics/Makefile	/^CONFIG_CLEAN_FILES = statistics.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/stickynoteimport/Makefile	/^CONFIG_CLEAN_FILES = stickynoteimport.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/tableofcontents/Makefile	/^CONFIG_CLEAN_FILES = tableofcontents.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/todo/Makefile	/^CONFIG_CLEAN_FILES = todo.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/tomboyimport/Makefile	/^CONFIG_CLEAN_FILES = tomboyimport.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/underline/Makefile	/^CONFIG_CLEAN_FILES = underline.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/addins/webdavsyncservice/Makefile	/^CONFIG_CLEAN_FILES = webdavsyncservice.desktop.in$/;"	m
CONFIG_CLEAN_FILES	src/dbus/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	data/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	data/appdata/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	data/icons/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	help/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libtomboy/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/backlinks/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/bugzilla/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/exporttogtg/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/exporttohtml/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/filesystemsyncservice/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/fixedwidth/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/inserttimestamp/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/notedirectorywatcher/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/noteoftheday/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/printnotes/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/readonly/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/replacetitle/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/specialnotes/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/statistics/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/stickynoteimport/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/tableofcontents/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/todo/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/tomboyimport/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/underline/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/addins/webdavsyncservice/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	src/dbus/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	data/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	data/appdata/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	data/icons/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	help/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	libtomboy/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/backlinks/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/bugzilla/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/exporttogtg/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/exporttohtml/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/filesystemsyncservice/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/fixedwidth/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/inserttimestamp/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/notedirectorywatcher/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/noteoftheday/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/printnotes/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/readonly/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/replacetitle/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/specialnotes/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/statistics/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/stickynoteimport/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/tableofcontents/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/todo/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/tomboyimport/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/underline/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/addins/webdavsyncservice/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	src/dbus/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONNECTING	src/synchronization/syncutils.hpp	/^    CONNECTING,$/;"	e	enum:gnote::sync::SyncState
CONTENT	src/notetag.hpp	/^  CONTENT$/;"	e	enum:gnote::TagSaveType
CONTENT_CHANGED	src/tag.hpp	/^    CONTENT_CHANGED,$/;"	e	enum:gnote::ChangeType
CONTRAST_COLOR_AQUA	src/contrast.hpp	/^  CONTRAST_COLOR_AQUA        =  0,$/;"	e	enum:__anon20
CONTRAST_COLOR_BLACK	src/contrast.hpp	/^  CONTRAST_COLOR_BLACK       =  1,$/;"	e	enum:__anon20
CONTRAST_COLOR_BLUE	src/contrast.hpp	/^  CONTRAST_COLOR_BLUE        =  2,$/;"	e	enum:__anon20
CONTRAST_COLOR_BROWN	src/contrast.hpp	/^  CONTRAST_COLOR_BROWN       =  3,$/;"	e	enum:__anon20
CONTRAST_COLOR_CYAN	src/contrast.hpp	/^  CONTRAST_COLOR_CYAN        =  4,$/;"	e	enum:__anon20
CONTRAST_COLOR_DARK_BLUE	src/contrast.hpp	/^  CONTRAST_COLOR_DARK_BLUE   =  5,$/;"	e	enum:__anon20
CONTRAST_COLOR_DARK_GREEN	src/contrast.hpp	/^  CONTRAST_COLOR_DARK_GREEN  =  6,$/;"	e	enum:__anon20
CONTRAST_COLOR_DARK_GREY	src/contrast.hpp	/^  CONTRAST_COLOR_DARK_GREY   =  7,$/;"	e	enum:__anon20
CONTRAST_COLOR_DARK_RED	src/contrast.hpp	/^  CONTRAST_COLOR_DARK_RED    =  8,$/;"	e	enum:__anon20
CONTRAST_COLOR_GREEN	src/contrast.hpp	/^  CONTRAST_COLOR_GREEN       =  9,$/;"	e	enum:__anon20
CONTRAST_COLOR_GREY	src/contrast.hpp	/^  CONTRAST_COLOR_GREY        = 10,$/;"	e	enum:__anon20
CONTRAST_COLOR_LAST	src/contrast.hpp	/^  CONTRAST_COLOR_LAST        = 23$/;"	e	enum:__anon20
CONTRAST_COLOR_LIGHT_BLUE	src/contrast.hpp	/^  CONTRAST_COLOR_LIGHT_BLUE  = 11,$/;"	e	enum:__anon20
CONTRAST_COLOR_LIGHT_BROWN	src/contrast.hpp	/^  CONTRAST_COLOR_LIGHT_BROWN = 12,$/;"	e	enum:__anon20
CONTRAST_COLOR_LIGHT_GREEN	src/contrast.hpp	/^  CONTRAST_COLOR_LIGHT_GREEN = 13,$/;"	e	enum:__anon20
CONTRAST_COLOR_LIGHT_GREY	src/contrast.hpp	/^  CONTRAST_COLOR_LIGHT_GREY  = 14,$/;"	e	enum:__anon20
CONTRAST_COLOR_LIGHT_RED	src/contrast.hpp	/^  CONTRAST_COLOR_LIGHT_RED   = 15,$/;"	e	enum:__anon20
CONTRAST_COLOR_MAGENTA	src/contrast.hpp	/^  CONTRAST_COLOR_MAGENTA     = 16,$/;"	e	enum:__anon20
CONTRAST_COLOR_ORANGE	src/contrast.hpp	/^  CONTRAST_COLOR_ORANGE      = 17,$/;"	e	enum:__anon20
CONTRAST_COLOR_PURPLE	src/contrast.hpp	/^  CONTRAST_COLOR_PURPLE      = 18,$/;"	e	enum:__anon20
CONTRAST_COLOR_RED	src/contrast.hpp	/^  CONTRAST_COLOR_RED         = 19,$/;"	e	enum:__anon20
CONTRAST_COLOR_VIOLET	src/contrast.hpp	/^  CONTRAST_COLOR_VIOLET      = 20,$/;"	e	enum:__anon20
CONTRAST_COLOR_WHITE	src/contrast.hpp	/^  CONTRAST_COLOR_WHITE       = 21,$/;"	e	enum:__anon20
CONTRAST_COLOR_YELLOW	src/contrast.hpp	/^  CONTRAST_COLOR_YELLOW      = 22,$/;"	e	enum:__anon20
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	data/Makefile	/^CPP = gcc -E$/;"	m
CPP	data/appdata/Makefile	/^CPP = gcc -E$/;"	m
CPP	data/icons/Makefile	/^CPP = gcc -E$/;"	m
CPP	help/Makefile	/^CPP = gcc -E$/;"	m
CPP	libtomboy/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/backlinks/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/bugzilla/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/exporttogtg/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/exporttohtml/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/filesystemsyncservice/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/fixedwidth/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/inserttimestamp/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/notedirectorywatcher/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/noteoftheday/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/printnotes/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/readonly/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/replacetitle/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/specialnotes/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/statistics/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/stickynoteimport/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/tableofcontents/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/todo/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/tomboyimport/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/underline/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/addins/webdavsyncservice/Makefile	/^CPP = gcc -E$/;"	m
CPP	src/dbus/Makefile	/^CPP = gcc -E$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	data/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	data/appdata/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	data/icons/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	help/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	libtomboy/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/backlinks/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/bugzilla/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/exporttogtg/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/exporttohtml/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/filesystemsyncservice/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/fixedwidth/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/inserttimestamp/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/notedirectorywatcher/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/noteoftheday/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/printnotes/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/readonly/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/replacetitle/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/specialnotes/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/statistics/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/stickynoteimport/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/tableofcontents/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/todo/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/tomboyimport/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/underline/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/addins/webdavsyncservice/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CPPFLAGS	src/dbus/Makefile	/^CPPFLAGS =  -DNDEBUG -Wall -Wcast-align -Wcast-qual -Wformat-security -Wpointer-arith -Wreturn-type$/;"	m
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	data/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libtomboy/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/backlinks/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/bugzilla/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/exporttogtg/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/exporttohtml/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/filesystemsyncservice/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/fixedwidth/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/inserttimestamp/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/notedirectorywatcher/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/noteoftheday/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/printnotes/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/readonly/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/replacetitle/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/specialnotes/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/statistics/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/stickynoteimport/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/tableofcontents/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/todo/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/tomboyimport/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/underline/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	src/addins/webdavsyncservice/Makefile	/^CTAGS = ctags$/;"	m
CURRENT_VERSION	src/notebase.cpp	/^const char *NoteArchiver::CURRENT_VERSION = "0.3";$/;"	m	class:gnote::NoteArchiver	file:
CURRENT_VERSION	src/notebase.hpp	/^  static const char *CURRENT_VERSION;$/;"	m	class:gnote::NoteArchiver	access:public
CUSTOM_FONT_FACE	src/preferences.cpp	/^  const char * Preferences::CUSTOM_FONT_FACE = "custom-font-face";$/;"	m	class:gnote::Preferences	file:
CUSTOM_FONT_FACE	src/preferences.hpp	/^    static const char *CUSTOM_FONT_FACE;$/;"	m	class:gnote::Preferences	access:public
CXX	Makefile	/^CXX = g++$/;"	m
CXX	data/Makefile	/^CXX = g++$/;"	m
CXX	data/appdata/Makefile	/^CXX = g++$/;"	m
CXX	data/icons/Makefile	/^CXX = g++$/;"	m
CXX	help/Makefile	/^CXX = g++$/;"	m
CXX	libtomboy/Makefile	/^CXX = g++$/;"	m
CXX	src/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/backlinks/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/bugzilla/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/exporttogtg/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/exporttohtml/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/filesystemsyncservice/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/fixedwidth/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/inserttimestamp/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/notedirectorywatcher/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/noteoftheday/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/printnotes/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/readonly/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/replacetitle/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/specialnotes/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/statistics/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/stickynoteimport/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/tableofcontents/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/todo/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/tomboyimport/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/underline/Makefile	/^CXX = g++$/;"	m
CXX	src/addins/webdavsyncservice/Makefile	/^CXX = g++$/;"	m
CXX	src/dbus/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	src/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/backlinks/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/bugzilla/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/exporttogtg/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/exporttohtml/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/filesystemsyncservice/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/fixedwidth/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/inserttimestamp/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/notedirectorywatcher/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/noteoftheday/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/printnotes/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/readonly/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/replacetitle/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/specialnotes/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/statistics/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/stickynoteimport/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/tableofcontents/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/todo/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/tomboyimport/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/underline/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	src/addins/webdavsyncservice/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	data/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	data/appdata/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	data/icons/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	help/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	libtomboy/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/backlinks/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/bugzilla/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/exporttogtg/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/exporttohtml/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/filesystemsyncservice/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/fixedwidth/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/inserttimestamp/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/notedirectorywatcher/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/noteoftheday/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/printnotes/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/readonly/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/replacetitle/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/specialnotes/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/statistics/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/stickynoteimport/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/tableofcontents/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/todo/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/tomboyimport/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/underline/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/addins/webdavsyncservice/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	src/dbus/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	data/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	data/appdata/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	data/icons/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	help/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	libtomboy/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/backlinks/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/bugzilla/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/exporttogtg/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/exporttohtml/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/filesystemsyncservice/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/fixedwidth/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/inserttimestamp/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/notedirectorywatcher/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/noteoftheday/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/printnotes/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/readonly/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/replacetitle/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/specialnotes/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/statistics/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/stickynoteimport/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/tableofcontents/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/todo/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/tomboyimport/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/underline/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/addins/webdavsyncservice/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	src/dbus/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	data/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	data/appdata/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	data/icons/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	help/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	libtomboy/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/backlinks/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/bugzilla/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/exporttogtg/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/exporttohtml/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/filesystemsyncservice/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/fixedwidth/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/inserttimestamp/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/notedirectorywatcher/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/noteoftheday/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/printnotes/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/readonly/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/replacetitle/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/specialnotes/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/statistics/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/stickynoteimport/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/tableofcontents/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/todo/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/tomboyimport/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/underline/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/addins/webdavsyncservice/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXFLAGS	src/dbus/Makefile	/^CXXFLAGS = -g -O2 -DNDEBUG  -std=gnu++11 -Wall -Wextra -Wsign-compare -Wpointer-arith -Wchar-subscripts -Wwrite-strings -Wunused -Wpointer-arith -Wshadow -fshow-column$/;"	m
CXXLD	src/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/backlinks/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/bugzilla/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/exporttogtg/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/exporttohtml/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/filesystemsyncservice/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/fixedwidth/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/inserttimestamp/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/notedirectorywatcher/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/noteoftheday/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/printnotes/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/readonly/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/replacetitle/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/specialnotes/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/statistics/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/stickynoteimport/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/tableofcontents/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/todo/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/tomboyimport/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/underline/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	src/addins/webdavsyncservice/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	src/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/backlinks/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/bugzilla/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/exporttogtg/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/exporttohtml/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/filesystemsyncservice/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/fixedwidth/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/inserttimestamp/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/notedirectorywatcher/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/noteoftheday/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/printnotes/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/readonly/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/replacetitle/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/specialnotes/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/statistics/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/stickynoteimport/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/tableofcontents/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/todo/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/tomboyimport/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/underline/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CXXLINK	src/addins/webdavsyncservice/Makefile	/^CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	data/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	data/appdata/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	data/icons/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	help/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libtomboy/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/backlinks/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/bugzilla/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/exporttogtg/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/exporttohtml/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/filesystemsyncservice/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/fixedwidth/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/inserttimestamp/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/notedirectorywatcher/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/noteoftheday/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/printnotes/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/readonly/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/replacetitle/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/specialnotes/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/statistics/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/stickynoteimport/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/tableofcontents/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/todo/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/tomboyimport/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/underline/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/addins/webdavsyncservice/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	src/dbus/Makefile	/^CYGPATH_W = echo$/;"	m
ChangeDepthAction	src/undo.cpp	/^  ChangeDepthAction::ChangeDepthAction(int line, bool direction)$/;"	f	class:gnote::ChangeDepthAction	signature:(int line, bool direction)
ChangeDepthAction	src/undo.hpp	/^  ChangeDepthAction(int line, bool direction);$/;"	p	class:gnote::ChangeDepthAction	access:public	signature:(int line, bool direction)
ChangeDepthAction	src/undo.hpp	/^class ChangeDepthAction$/;"	c	namespace:gnote	inherits:EditAction
ChangeDepthHandler	src/notebuffer.hpp	/^  typedef sigc::signal<void, int, bool> ChangeDepthHandler;$/;"	t	class:gnote::NoteBuffer	access:public
ChangeType	src/tag.hpp	/^  enum ChangeType {$/;"	g	namespace:gnote
ChangedHandler	src/notemanagerbase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr &> ChangedHandler;$/;"	t	class:gnote::NoteManagerBase	access:public
CheckAction	src/utils.cpp	/^    CheckAction::CheckAction(const Glib::ustring & name)$/;"	f	class:gnote::utils::CheckAction	signature:(const Glib::ustring & name)
CheckAction	src/utils.hpp	/^      CheckAction(const Glib::ustring & name);$/;"	p	class:gnote::utils::CheckAction	access:protected	signature:(const Glib::ustring & name)
CheckAction	src/utils.hpp	/^    class CheckAction$/;"	c	namespace:gnote::utils	inherits:Gtk::Action
ChildWidgetData	src/note.hpp	/^    ChildWidgetData(const Glib::RefPtr<Gtk::TextChildAnchor> & _anchor,$/;"	f	struct:gnote::Note::ChildWidgetData	access:public	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & _anchor, Gtk::Widget *_widget)
ChildWidgetData	src/note.hpp	/^  struct ChildWidgetData$/;"	s	class:gnote::Note	access:private
ChopBuffer	src/undo.cpp	/^  ChopBuffer::ChopBuffer(const Glib::RefPtr<Gtk::TextTagTable> & table)$/;"	f	class:gnote::ChopBuffer	signature:(const Glib::RefPtr<Gtk::TextTagTable> & table)
ChopBuffer	src/undo.hpp	/^  ChopBuffer(const Glib::RefPtr<Gtk::TextTagTable> & table);$/;"	p	class:gnote::ChopBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTagTable> & table)
ChopBuffer	src/undo.hpp	/^class ChopBuffer$/;"	c	namespace:gnote	inherits:Gtk::TextBuffer
ColumnRecord	src/notebooks/notebookmanager.hpp	/^    ColumnRecord()$/;"	f	class:gnote::notebooks::NotebookManager::ColumnRecord	access:public	signature:()
ColumnRecord	src/notebooks/notebookmanager.hpp	/^  class ColumnRecord$/;"	c	class:gnote::notebooks::NotebookManager	inherits:Gtk::TreeModelColumnRecord	access:private
ColumnRecord	src/tagmanager.hpp	/^    ColumnRecord()$/;"	f	class:gnote::TagManager::ColumnRecord	access:public	signature:()
ColumnRecord	src/tagmanager.hpp	/^  class ColumnRecord$/;"	c	class:gnote::TagManager	inherits:Gtk::TreeModelColumnRecord	access:private
Columns	src/addins/bugzilla/bugzillapreferences.hpp	/^    Columns()$/;"	f	class:bugzilla::BugzillaPreferences::Columns	access:public	signature:()
Columns	src/addins/bugzilla/bugzillapreferences.hpp	/^  class Columns$/;"	c	class:bugzilla::BugzillaPreferences	inherits:Gtk::TreeModelColumnRecord	access:private
CompareSyncAddinsByName	src/preferencesdialog.cpp	/^  struct CompareSyncAddinsByName$/;"	s	namespace:gnote	file:
ConstPtr	src/notetag.hpp	/^  typedef Glib::RefPtr<const DynamicNoteTag> ConstPtr;$/;"	t	class:gnote::DynamicNoteTag	access:public
ConstPtr	src/notetag.hpp	/^  typedef Glib::RefPtr<const NoteTag> ConstPtr;$/;"	t	class:gnote::NoteTag	access:public
ContrastPaletteColor	src/contrast.hpp	/^} ContrastPaletteColor;$/;"	t	typeref:enum:__anon20
CreateNamedNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::CreateNamedNote(const std::string & linked_title)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & linked_title)
CreateNamedNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string CreateNamedNote(const std::string & linked_title);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & linked_title)
CreateNamedNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string CreateNamedNote(const std::string& linked_title) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& linked_title)
CreateNamedNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::CreateNamedNote(const std::string& linked_title)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& linked_title)
CreateNamedNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::CreateNamedNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
CreateNamedNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase CreateNamedNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
CreateNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::CreateNote()$/;"	f	class:RemoteControl_proxy	signature:()
CreateNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string CreateNote();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
CreateNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string CreateNote() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
CreateNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::CreateNote()$/;"	f	class:gnote::RemoteControl	signature:()
CreateNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::CreateNote_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
CreateNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase CreateNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
CreateNotebookDialog	src/notebooks/createnotebookdialog.cpp	/^    CreateNotebookDialog::CreateNotebookDialog(Gtk::Window *parent, GtkDialogFlags f)$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:(Gtk::Window *parent, GtkDialogFlags f)
CreateNotebookDialog	src/notebooks/createnotebookdialog.hpp	/^  CreateNotebookDialog(Gtk::Window *parent, GtkDialogFlags f);$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:(Gtk::Window *parent, GtkDialogFlags f)
CreateNotebookDialog	src/notebooks/createnotebookdialog.hpp	/^class CreateNotebookDialog$/;"	c	namespace:gnote::notebooks	inherits:utils::HIGMessageDialog
CreateProcess	libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DATA	data/Makefile	/^DATA = $(dbusservice_DATA) $(desktop_DATA) $(noinst_DATA)$/;"	m
DATA	data/appdata/Makefile	/^DATA = $(appdata_DATA)$/;"	m
DATA	data/icons/Makefile	/^DATA = $(noinst_DATA)$/;"	m
DATA	src/addins/backlinks/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/bugzilla/Makefile	/^DATA = $(addins_DATA) $(icon_DATA)$/;"	m
DATA	src/addins/exporttogtg/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/exporttohtml/Makefile	/^DATA = $(addins_DATA) $(xsl_DATA)$/;"	m
DATA	src/addins/filesystemsyncservice/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/fixedwidth/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/inserttimestamp/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/notedirectorywatcher/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/noteoftheday/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/printnotes/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/readonly/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/replacetitle/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/specialnotes/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/statistics/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/stickynoteimport/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/tableofcontents/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/todo/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/tomboyimport/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/underline/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/addins/webdavsyncservice/Makefile	/^DATA = $(addins_DATA)$/;"	m
DATA	src/dbus/Makefile	/^DATA = $(introspect_DATA) $(searchprovider_DATA)$/;"	m
DATADIRNAME	Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	data/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	data/appdata/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	data/icons/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	help/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	libtomboy/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	po/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/backlinks/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/bugzilla/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/exporttogtg/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/exporttohtml/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/filesystemsyncservice/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/fixedwidth/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/inserttimestamp/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/notedirectorywatcher/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/noteoftheday/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/printnotes/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/readonly/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/replacetitle/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/specialnotes/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/statistics/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/stickynoteimport/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/tableofcontents/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/todo/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/tomboyimport/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/underline/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/addins/webdavsyncservice/Makefile	/^DATADIRNAME = share$/;"	m
DATADIRNAME	src/dbus/Makefile	/^DATADIRNAME = share$/;"	m
DBG	src/debug.hpp	36;"	d
DBG	src/synchronization/silentui.cpp	/^  void SilentUI::note_synchronized(const std::string & DBG(noteTitle), NoteSyncType DBG(type))$/;"	f	namespace:gnote::sync	signature:(type)
DBG	src/synchronization/silentui.cpp	/^  void SilentUI::note_synchronized(const std::string & DBG(noteTitle), NoteSyncType DBG(type))$/;"	p	class:gnote::sync::SilentUI	file:	signature:(noteTitle)
DBG	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_added(const NoteBase& DBG(note), const Tag::Ptr& DBG(tag))$/;"	f	namespace:gnote	signature:(tag)
DBG	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_added(const NoteBase& DBG(note), const Tag::Ptr& DBG(tag))$/;"	p	class:gnote::NoteTagsWatcher	file:	signature:(note)
DBG_ASSERT	src/debug.hpp	49;"	d
DBG_OUT	src/debug.hpp	42;"	d
DBUS_SERVICE_DIR	Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	data/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	data/appdata/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	data/icons/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	help/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	libtomboy/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/backlinks/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/bugzilla/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/exporttogtg/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/exporttohtml/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/filesystemsyncservice/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/fixedwidth/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/inserttimestamp/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/notedirectorywatcher/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/noteoftheday/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/printnotes/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/readonly/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/replacetitle/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/specialnotes/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/statistics/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/stickynoteimport/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/tableofcontents/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/todo/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/tomboyimport/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/underline/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/addins/webdavsyncservice/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SERVICE_DIR	src/dbus/Makefile	/^DBUS_SERVICE_DIR = ${datarootdir}\/dbus-1\/services$/;"	m
DBUS_SOURCES	src/Makefile	/^DBUS_SOURCES = remotecontrolproxy.hpp remotecontrolproxy.cpp \\$/;"	m
DEBUG_CREATE_ERROR_BASE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_CREATE_ERROR_BASE = "StickyNoteImporter: Error while trying to create note \\"%s\\": %s";$/;"	m	namespace:stickynote	file:
DEBUG_FIRST_RUN_DETECTED	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_FIRST_RUN_DETECTED = "StickyNoteImporter: Detecting that importer has never been run...";$/;"	m	namespace:stickynote	file:
DEBUG_MSG	src/debug.cpp	73;"	d	file:
DEBUG_MSG	src/debug.cpp	82;"	d	file:
DEBUG_NO_STICKY_FILE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_NO_STICKY_FILE = "StickyNoteImporter: Sticky Notes XML file does not exist or is invalid!";$/;"	m	namespace:stickynote	file:
DECLARE_MODULE	src/addins/backlinks/backlinksnoteaddin.hpp	/^DECLARE_MODULE(BacklinksModule);$/;"	p	namespace:backlinks	signature:(BacklinksModule)
DECLARE_MODULE	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  DECLARE_MODULE(BugzillaModule);$/;"	p	namespace:bugzilla	file:	signature:(BugzillaModule)
DECLARE_MODULE	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^DECLARE_MODULE(ExportToGTGModule);$/;"	p	namespace:exporttogtg	signature:(ExportToGTGModule)
DECLARE_MODULE	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^DECLARE_MODULE(ExportToHtmlModule);$/;"	p	namespace:exporttohtml	signature:(ExportToHtmlModule)
DECLARE_MODULE	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  DECLARE_MODULE(FixedWidthModule);$/;"	p	namespace:fixedwidth	signature:(FixedWidthModule)
DECLARE_MODULE	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^DECLARE_MODULE(InsertTimeStampModule);$/;"	p	namespace:inserttimestamp	signature:(InsertTimeStampModule)
DECLARE_MODULE	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^DECLARE_MODULE(NoteDirectoryWatcherModule);$/;"	p	namespace:notedirectorywatcher	signature:(NoteDirectoryWatcherModule)
DECLARE_MODULE	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^DECLARE_MODULE(NoteOfTheDayModule);$/;"	p	namespace:noteoftheday	file:	signature:(NoteOfTheDayModule)
DECLARE_MODULE	src/addins/printnotes/printnotesnoteaddin.hpp	/^DECLARE_MODULE(PrintNotesModule);$/;"	p	namespace:printnotes	signature:(PrintNotesModule)
DECLARE_MODULE	src/addins/readonly/readonlynoteaddin.cpp	/^DECLARE_MODULE(ReadOnlyModule);$/;"	p	namespace:readonly	file:	signature:(ReadOnlyModule)
DECLARE_MODULE	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^DECLARE_MODULE(ReplaceTitleModule);$/;"	p	namespace:replacetitle	signature:(ReplaceTitleModule)
DECLARE_MODULE	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^DECLARE_MODULE(SpecialNotesModule);$/;"	p	namespace:specialnotes	file:	signature:(SpecialNotesModule)
DECLARE_MODULE	src/addins/statistics/statisticsapplicationaddin.hpp	/^DECLARE_MODULE(StatisticsModule);$/;"	p	namespace:statistics	signature:(StatisticsModule)
DECLARE_MODULE	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^DECLARE_MODULE(StickyNoteImportModule);$/;"	p	namespace:stickynote	signature:(StickyNoteImportModule)
DECLARE_MODULE	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^DECLARE_MODULE(TableofcontentsModule);$/;"	p	namespace:tableofcontents	signature:(TableofcontentsModule)
DECLARE_MODULE	src/addins/todo/todonoteaddin.hpp	/^DECLARE_MODULE(TodoModule);$/;"	p	namespace:todo	signature:(TodoModule)
DECLARE_MODULE	src/addins/tomboyimport/tomboyimportaddin.hpp	/^DECLARE_MODULE(TomboyImportModule);$/;"	p	namespace:tomboyimport	signature:(TomboyImportModule)
DECLARE_MODULE	src/addins/underline/underlinenoteaddin.hpp	/^  DECLARE_MODULE(UnderlineModule);$/;"	p	namespace:underline	signature:(UnderlineModule)
DECLARE_MODULE	src/sharp/dynamicmodule.hpp	43;"	d
DEFAULT_INCLUDES	libtomboy/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/backlinks/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/bugzilla/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/exporttogtg/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/exporttohtml/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/filesystemsyncservice/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/fixedwidth/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/inserttimestamp/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/notedirectorywatcher/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/noteoftheday/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/printnotes/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/readonly/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/replacetitle/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/specialnotes/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/statistics/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/stickynoteimport/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/tableofcontents/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/todo/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/tomboyimport/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/underline/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	src/addins/webdavsyncservice/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_MOUNT_TIMEOUT_MS	src/synchronization/fusesyncserviceaddin.cpp	/^const int FuseSyncServiceAddin::DEFAULT_MOUNT_TIMEOUT_MS = 10000;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	file:
DEFAULT_MOUNT_TIMEOUT_MS	src/synchronization/fusesyncserviceaddin.hpp	/^  static const int DEFAULT_MOUNT_TIMEOUT_MS;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
DEFAULT_SYNC_CONFIGURED_CONFLICT_BEHAVIOR	src/preferencesdialog.cpp	60;"	d	file:
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	data/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	data/appdata/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	data/icons/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	help/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	libtomboy/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/backlinks/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/bugzilla/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/exporttogtg/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/exporttohtml/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/filesystemsyncservice/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/fixedwidth/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/inserttimestamp/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/notedirectorywatcher/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/noteoftheday/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/printnotes/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/readonly/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/replacetitle/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/specialnotes/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/statistics/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/stickynoteimport/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/tableofcontents/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/todo/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/tomboyimport/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/underline/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/addins/webdavsyncservice/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	src/dbus/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DELETE_FROM_CLIENT	src/synchronization/syncutils.hpp	/^    DELETE_FROM_CLIENT$/;"	e	enum:gnote::sync::NoteSyncType
DELETE_FROM_SERVER	src/synchronization/syncutils.hpp	/^    DELETE_FROM_SERVER,$/;"	e	enum:gnote::sync::NoteSyncType
DELETE_SERVER_NOTES	src/synchronization/syncutils.hpp	/^    DELETE_SERVER_NOTES,$/;"	e	enum:gnote::sync::SyncState
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	data/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	data/appdata/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	data/icons/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	help/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libtomboy/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/backlinks/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/bugzilla/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/exporttogtg/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/exporttohtml/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/filesystemsyncservice/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/fixedwidth/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/inserttimestamp/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/notedirectorywatcher/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/noteoftheday/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/printnotes/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/readonly/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/replacetitle/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/specialnotes/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/statistics/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/stickynoteimport/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/tableofcontents/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/todo/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/tomboyimport/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/underline/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/addins/webdavsyncservice/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	src/dbus/Makefile	/^DEPDIR = .deps$/;"	m
DESKTOP_GNOME_CLOCK_FORMAT	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_CLOCK_FORMAT = "clock-format";$/;"	m	class:gnote::Preferences	file:
DESKTOP_GNOME_CLOCK_FORMAT	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_CLOCK_FORMAT;$/;"	m	class:gnote::Preferences	access:public
DESKTOP_GNOME_FONT	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_FONT = "document-font-name";$/;"	m	class:gnote::Preferences	file:
DESKTOP_GNOME_FONT	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_FONT;$/;"	m	class:gnote::Preferences	access:public
DESKTOP_GNOME_KEY_THEME	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_KEY_THEME = "gtk-key-theme";$/;"	m	class:gnote::Preferences	file:
DESKTOP_GNOME_KEY_THEME	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_KEY_THEME;$/;"	m	class:gnote::Preferences	access:public
DISTCHECK_CONFIGURE_FLAGS	Makefile	/^DISTCHECK_CONFIGURE_FLAGS = --disable-schemas-install --disable-scrollkeeper --without-cxx11-support --with-x11-support$/;"	m
DISTCHECK_CONFIGURE_FLAGS	data/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	data/appdata/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	data/icons/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	help/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	libtomboy/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/backlinks/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/bugzilla/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/exporttogtg/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/exporttohtml/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/filesystemsyncservice/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/fixedwidth/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/inserttimestamp/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/notedirectorywatcher/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/noteoftheday/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/printnotes/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/readonly/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/replacetitle/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/specialnotes/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/statistics/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/stickynoteimport/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/tableofcontents/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/todo/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/tomboyimport/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/underline/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/addins/webdavsyncservice/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCHECK_CONFIGURE_FLAGS	src/dbus/Makefile	/^DISTCHECK_CONFIGURE_FLAGS =  '--with-boost='$/;"	m
DISTCLEANFILES	Makefile	/^DISTCLEANFILES = intltool-extract \\$/;"	m
DISTCLEANFILES	data/Makefile	/^DISTCLEANFILES = \\$/;"	m
DISTCLEANFILES	data/appdata/Makefile	/^DISTCLEANFILES = $(app_data_files)$/;"	m
DISTCLEANFILES	src/addins/backlinks/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/bugzilla/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/exporttogtg/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/exporttohtml/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/filesystemsyncservice/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/fixedwidth/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/inserttimestamp/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/notedirectorywatcher/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/noteoftheday/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/printnotes/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/readonly/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/replacetitle/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/specialnotes/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/statistics/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/stickynoteimport/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/tableofcontents/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/todo/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/tomboyimport/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/underline/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTCLEANFILES	src/addins/webdavsyncservice/Makefile	/^DISTCLEANFILES = $(desktop_files)$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	data/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	data/appdata/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	data/icons/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	help/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libtomboy/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	po/Makefile	/^DISTFILES = Makefile.in.in POTFILES.in $(POFILES)$/;"	m
DISTFILES	src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/backlinks/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/bugzilla/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/exporttogtg/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/exporttohtml/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/filesystemsyncservice/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/fixedwidth/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/inserttimestamp/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/notedirectorywatcher/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/noteoftheday/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/printnotes/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/readonly/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/replacetitle/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/specialnotes/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/statistics/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/stickynoteimport/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/tableofcontents/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/todo/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/tomboyimport/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/underline/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/addins/webdavsyncservice/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	src/dbus/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	data/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	data/appdata/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am$/;"	m
DIST_COMMON	data/icons/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am$/;"	m
DIST_COMMON	help/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am$/;"	m
DIST_COMMON	libtomboy/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/backlinks/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/bugzilla/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/exporttogtg/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/exporttohtml/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/filesystemsyncservice/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/fixedwidth/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/inserttimestamp/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/notedirectorywatcher/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/noteoftheday/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/printnotes/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/readonly/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/replacetitle/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/specialnotes/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/statistics/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/stickynoteimport/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/tableofcontents/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/todo/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/tomboyimport/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/underline/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/addins/webdavsyncservice/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am \\$/;"	m
DIST_COMMON	src/dbus/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/Makefile.am$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	data/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	data/appdata/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	data/icons/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	help/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libtomboy/Makefile	/^DIST_SOURCES = $(libtomboy_la_SOURCES)$/;"	m
DIST_SOURCES	src/Makefile	/^DIST_SOURCES = $(libgnote_la_SOURCES) $(dttest_SOURCES) \\$/;"	m
DIST_SOURCES	src/addins/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	src/addins/backlinks/Makefile	/^DIST_SOURCES = $(backlinks_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/bugzilla/Makefile	/^DIST_SOURCES = $(bugzilla_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/exporttogtg/Makefile	/^DIST_SOURCES = $(exporttogtg_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/exporttohtml/Makefile	/^DIST_SOURCES = $(exporttohtml_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/filesystemsyncservice/Makefile	/^DIST_SOURCES = $(filesystemsyncservice_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/fixedwidth/Makefile	/^DIST_SOURCES = $(fixedwidth_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/inserttimestamp/Makefile	/^DIST_SOURCES = $(inserttimestamp_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/notedirectorywatcher/Makefile	/^DIST_SOURCES = $(notedirectorywatcher_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/noteoftheday/Makefile	/^DIST_SOURCES = $(noteoftheday_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/printnotes/Makefile	/^DIST_SOURCES = $(printnotes_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/readonly/Makefile	/^DIST_SOURCES = $(readonly_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/replacetitle/Makefile	/^DIST_SOURCES = $(replacetitle_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/specialnotes/Makefile	/^DIST_SOURCES = $(specialnotes_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/statistics/Makefile	/^DIST_SOURCES = $(statistics_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/stickynoteimport/Makefile	/^DIST_SOURCES = $(stickynoteimport_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/tableofcontents/Makefile	/^DIST_SOURCES = $(tableofcontents_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/todo/Makefile	/^DIST_SOURCES = $(todo_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/tomboyimport/Makefile	/^DIST_SOURCES = $(tomboyimport_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/underline/Makefile	/^DIST_SOURCES = $(underline_la_SOURCES)$/;"	m
DIST_SOURCES	src/addins/webdavsyncservice/Makefile	/^DIST_SOURCES = $(webdavsyncservice_la_SOURCES)$/;"	m
DIST_SOURCES	src/dbus/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = data libtomboy src po help$/;"	m
DIST_SUBDIRS	data/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	src/addins/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-bzip2 dist-gzip$/;"	m
DLLTOOL	Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	data/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	data/appdata/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	data/icons/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	help/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libtomboy/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/backlinks/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/bugzilla/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/exporttogtg/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/exporttohtml/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/filesystemsyncservice/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/fixedwidth/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/inserttimestamp/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/notedirectorywatcher/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/noteoftheday/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/printnotes/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/readonly/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/replacetitle/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/specialnotes/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/statistics/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/stickynoteimport/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/tableofcontents/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/todo/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/tomboyimport/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/underline/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/addins/webdavsyncservice/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	src/dbus/Makefile	/^DLLTOOL = false$/;"	m
DOWNLOADING	src/synchronization/syncutils.hpp	/^    DOWNLOADING,$/;"	e	enum:gnote::sync::SyncState
DOWNLOAD_MODIFIED	src/synchronization/syncutils.hpp	/^    DOWNLOAD_MODIFIED,$/;"	e	enum:gnote::sync::NoteSyncType
DOWNLOAD_NEW	src/synchronization/syncutils.hpp	/^    DOWNLOAD_NEW,$/;"	e	enum:gnote::sync::NoteSyncType
DSYMUTIL	Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	data/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	data/appdata/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	data/icons/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	help/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libtomboy/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/backlinks/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/bugzilla/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/exporttogtg/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/exporttohtml/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/filesystemsyncservice/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/fixedwidth/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/inserttimestamp/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/notedirectorywatcher/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/noteoftheday/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/printnotes/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/readonly/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/replacetitle/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/specialnotes/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/statistics/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/stickynoteimport/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/tableofcontents/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/todo/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/tomboyimport/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/underline/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/addins/webdavsyncservice/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	src/dbus/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	data/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	data/appdata/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	data/icons/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	help/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libtomboy/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/backlinks/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/bugzilla/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/exporttogtg/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/exporttohtml/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/filesystemsyncservice/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/fixedwidth/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/inserttimestamp/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/notedirectorywatcher/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/noteoftheday/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/printnotes/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/readonly/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/replacetitle/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/specialnotes/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/statistics/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/stickynoteimport/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/tableofcontents/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/todo/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/tomboyimport/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/underline/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/addins/webdavsyncservice/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	src/dbus/Makefile	/^DUMPBIN = $/;"	m
DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime()$/;"	f	class:sharp::DateTime	signature:()
DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime(const Glib::TimeVal & v)$/;"	f	class:sharp::DateTime	signature:(const Glib::TimeVal & v)
DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime(time_t t, glong _usec)$/;"	f	class:sharp::DateTime	signature:(time_t t, glong _usec)
DateTime	src/sharp/datetime.hpp	/^  DateTime();$/;"	p	class:sharp::DateTime	access:public	signature:()
DateTime	src/sharp/datetime.hpp	/^  explicit DateTime(const Glib::TimeVal & v);$/;"	p	class:sharp::DateTime	access:public	signature:(const Glib::TimeVal & v)
DateTime	src/sharp/datetime.hpp	/^  explicit DateTime(time_t t, glong _usec = 0);$/;"	p	class:sharp::DateTime	access:public	signature:(time_t t, glong _usec = 0)
DateTime	src/sharp/datetime.hpp	/^class DateTime$/;"	c	namespace:sharp
DeleteNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DeleteNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
DeleteNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DeleteNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
DeleteNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DeleteNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
DeleteNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DeleteNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
DepthNoteTag	src/notetag.cpp	/^  DepthNoteTag::DepthNoteTag(int depth, Pango::Direction direction)$/;"	f	class:gnote::DepthNoteTag	signature:(int depth, Pango::Direction direction)
DepthNoteTag	src/notetag.hpp	/^  DepthNoteTag(int depth, Pango::Direction direction);$/;"	p	class:gnote::DepthNoteTag	access:public	signature:(int depth, Pango::Direction direction)
DepthNoteTag	src/notetag.hpp	/^class DepthNoteTag$/;"	c	namespace:gnote	inherits:NoteTag
DisplayNote	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::DisplayNote(const std::string & uri)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri)
DisplayNote	src/dbus/remotecontrol-client-glue.hpp	/^  bool DisplayNote(const std::string & uri);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri)
DisplayNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DisplayNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
DisplayNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DisplayNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
DisplayNoteWithSearch	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::DisplayNoteWithSearch(const std::string & uri, const std::string & search)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri, const std::string & search)
DisplayNoteWithSearch	src/dbus/remotecontrol-client-glue.hpp	/^  bool DisplayNoteWithSearch(const std::string & uri, const std::string & search);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri, const std::string & search)
DisplayNoteWithSearch	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DisplayNoteWithSearch(const std::string& uri, const std::string& search) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& search)
DisplayNoteWithSearch	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DisplayNoteWithSearch(const std::string& uri, const std::string& search)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& search)
DisplayNoteWithSearch_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplayNoteWithSearch_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
DisplayNoteWithSearch_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplayNoteWithSearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
DisplayNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplayNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
DisplayNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplayNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
DisplaySearch	src/dbus/remotecontrol-client-glue.cpp	/^void RemoteControl_proxy::DisplaySearch()$/;"	f	class:RemoteControl_proxy	signature:()
DisplaySearch	src/dbus/remotecontrol-client-glue.hpp	/^  void DisplaySearch();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
DisplaySearch	src/dbus/remotecontrol-glue.hpp	/^  virtual void DisplaySearch() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
DisplaySearch	src/dbus/remotecontrol.cpp	/^  void RemoteControl::DisplaySearch()$/;"	f	class:gnote::RemoteControl	signature:()
DisplaySearchWithText	src/dbus/remotecontrol-client-glue.cpp	/^void RemoteControl_proxy::DisplaySearchWithText(const std::string & search_text)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & search_text)
DisplaySearchWithText	src/dbus/remotecontrol-client-glue.hpp	/^  void DisplaySearchWithText(const std::string & search_text);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & search_text)
DisplaySearchWithText	src/dbus/remotecontrol-glue.hpp	/^  virtual void DisplaySearchWithText(const std::string& search_text) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& search_text)
DisplaySearchWithText	src/dbus/remotecontrol.cpp	/^  void RemoteControl::DisplaySearchWithText(const std::string& search_text)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& search_text)
DisplaySearchWithText_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplaySearchWithText_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
DisplaySearchWithText_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplaySearchWithText_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
DisplaySearch_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplaySearch_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
DisplaySearch_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplaySearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
DynamicModule	src/sharp/dynamicmodule.cpp	/^  DynamicModule::DynamicModule()$/;"	f	class:sharp::DynamicModule	signature:()
DynamicModule	src/sharp/dynamicmodule.hpp	/^  DynamicModule();$/;"	p	class:sharp::DynamicModule	access:protected	signature:()
DynamicModule	src/sharp/dynamicmodule.hpp	/^class DynamicModule$/;"	c	namespace:sharp
DynamicNoteTag	src/notetag.hpp	/^class DynamicNoteTag$/;"	c	namespace:gnote	inherits:NoteTag
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	data/Makefile	/^ECHO_C = $/;"	m
ECHO_C	data/appdata/Makefile	/^ECHO_C = $/;"	m
ECHO_C	data/icons/Makefile	/^ECHO_C = $/;"	m
ECHO_C	help/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libtomboy/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/backlinks/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/bugzilla/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/exporttogtg/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/exporttohtml/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/filesystemsyncservice/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/fixedwidth/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/inserttimestamp/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/notedirectorywatcher/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/noteoftheday/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/printnotes/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/readonly/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/replacetitle/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/specialnotes/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/statistics/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/stickynoteimport/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/tableofcontents/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/todo/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/tomboyimport/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/underline/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/addins/webdavsyncservice/Makefile	/^ECHO_C = $/;"	m
ECHO_C	src/dbus/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	data/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	data/appdata/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	data/icons/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	help/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libtomboy/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/backlinks/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/bugzilla/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/exporttogtg/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/exporttohtml/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/filesystemsyncservice/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/fixedwidth/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/inserttimestamp/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/notedirectorywatcher/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/noteoftheday/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/printnotes/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/readonly/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/replacetitle/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/specialnotes/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/statistics/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/stickynoteimport/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/tableofcontents/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/todo/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/tomboyimport/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/underline/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/addins/webdavsyncservice/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	src/dbus/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	data/Makefile	/^ECHO_T = $/;"	m
ECHO_T	data/appdata/Makefile	/^ECHO_T = $/;"	m
ECHO_T	data/icons/Makefile	/^ECHO_T = $/;"	m
ECHO_T	help/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libtomboy/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/backlinks/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/bugzilla/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/exporttogtg/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/exporttohtml/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/filesystemsyncservice/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/fixedwidth/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/inserttimestamp/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/notedirectorywatcher/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/noteoftheday/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/printnotes/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/readonly/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/replacetitle/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/specialnotes/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/statistics/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/stickynoteimport/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/tableofcontents/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/todo/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/tomboyimport/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/underline/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/addins/webdavsyncservice/Makefile	/^ECHO_T = $/;"	m
ECHO_T	src/dbus/Makefile	/^ECHO_T = $/;"	m
EGG_MODMAP_ENTRY_CONTROL	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_CONTROL = 2,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_LAST	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_LAST    = 8$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_LOCK	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_LOCK    = 1,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_MOD1	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_MOD1    = 3,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_MOD2	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_MOD2    = 4,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_MOD3	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_MOD3    = 5,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_MOD4	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_MOD4    = 6,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_MOD5	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_MOD5    = 7,$/;"	e	enum:__anon2	file:
EGG_MODMAP_ENTRY_SHIFT	libtomboy/eggaccelerators.c	/^  EGG_MODMAP_ENTRY_SHIFT   = 0,$/;"	e	enum:__anon2	file:
EGG_VIRTUAL_ALT_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_ALT_MASK      = 1 << 3, \/* fixed as Mod1 *\/$/;"	e	enum:__anon1
EGG_VIRTUAL_CONTROL_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_CONTROL_MASK  = 1 << 2,$/;"	e	enum:__anon1
EGG_VIRTUAL_HYPER_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_HYPER_MASK = 1 << 26,$/;"	e	enum:__anon1
EGG_VIRTUAL_LOCK_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_LOCK_MASK	    = 1 << 1,$/;"	e	enum:__anon1
EGG_VIRTUAL_META_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_META_MASK = 1 << 24,$/;"	e	enum:__anon1
EGG_VIRTUAL_MOD2_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MOD2_MASK	    = 1 << 4,$/;"	e	enum:__anon1
EGG_VIRTUAL_MOD3_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MOD3_MASK	    = 1 << 5,$/;"	e	enum:__anon1
EGG_VIRTUAL_MOD4_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MOD4_MASK	    = 1 << 6,$/;"	e	enum:__anon1
EGG_VIRTUAL_MOD5_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MOD5_MASK	    = 1 << 7,$/;"	e	enum:__anon1
EGG_VIRTUAL_MODE_SWITCH_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MODE_SWITCH_MASK = 1 << 27, $/;"	e	enum:__anon1
EGG_VIRTUAL_MODIFIER_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_MODIFIER_MASK = 0x7f0000ff$/;"	e	enum:__anon1
EGG_VIRTUAL_NUM_LOCK_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_NUM_LOCK_MASK = 1 << 28,$/;"	e	enum:__anon1
EGG_VIRTUAL_RELEASE_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_RELEASE_MASK  = 1 << 30,$/;"	e	enum:__anon1
EGG_VIRTUAL_SCROLL_LOCK_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_SCROLL_LOCK_MASK = 1 << 29,$/;"	e	enum:__anon1
EGG_VIRTUAL_SHIFT_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_SHIFT_MASK    = 1 << 0,$/;"	e	enum:__anon1
EGG_VIRTUAL_SUPER_MASK	libtomboy/eggaccelerators.h	/^  EGG_VIRTUAL_SUPER_MASK = 1 << 25,$/;"	e	enum:__anon1
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	data/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	data/appdata/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	data/icons/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	help/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libtomboy/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/backlinks/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/bugzilla/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/exporttogtg/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/exporttohtml/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/filesystemsyncservice/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/fixedwidth/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/inserttimestamp/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/notedirectorywatcher/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/noteoftheday/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/printnotes/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/readonly/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/replacetitle/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/specialnotes/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/statistics/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/stickynoteimport/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/tableofcontents/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/todo/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/tomboyimport/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/underline/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/addins/webdavsyncservice/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	src/dbus/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EMBLEM_PACKAGE	src/iconmanager.cpp	/^const char *IconManager::EMBLEM_PACKAGE = "emblem-package";$/;"	m	class:gnote::IconManager	file:
EMBLEM_PACKAGE	src/iconmanager.hpp	/^  static const char *EMBLEM_PACKAGE;$/;"	m	class:gnote::IconManager	access:public
ENABLE_AUTO_BULLETED_LISTS	src/preferences.cpp	/^  const char * Preferences::ENABLE_AUTO_BULLETED_LISTS = "enable-bulleted-lists";$/;"	m	class:gnote::Preferences	file:
ENABLE_AUTO_BULLETED_LISTS	src/preferences.hpp	/^    static const char *ENABLE_AUTO_BULLETED_LISTS;$/;"	m	class:gnote::Preferences	access:public
ENABLE_AUTO_LINKS	src/preferences.cpp	/^  const char * Preferences::ENABLE_AUTO_LINKS = "enable-auto-links";$/;"	m	class:gnote::Preferences	file:
ENABLE_AUTO_LINKS	src/preferences.hpp	/^    static const char *ENABLE_AUTO_LINKS;$/;"	m	class:gnote::Preferences	access:public
ENABLE_CLOSE_NOTE_ON_ESCAPE	src/preferences.cpp	/^  const char * Preferences::ENABLE_CLOSE_NOTE_ON_ESCAPE = "enable-close-note-on-escape";$/;"	m	class:gnote::Preferences	file:
ENABLE_CLOSE_NOTE_ON_ESCAPE	src/preferences.hpp	/^    static const char *ENABLE_CLOSE_NOTE_ON_ESCAPE;$/;"	m	class:gnote::Preferences	access:public
ENABLE_CUSTOM_FONT	src/preferences.cpp	/^  const char * Preferences::ENABLE_CUSTOM_FONT = "enable-custom-font";$/;"	m	class:gnote::Preferences	file:
ENABLE_CUSTOM_FONT	src/preferences.hpp	/^    static const char *ENABLE_CUSTOM_FONT;$/;"	m	class:gnote::Preferences	access:public
ENABLE_ICON_PASTE	src/preferences.cpp	/^  const char * Preferences::ENABLE_ICON_PASTE = "enable-icon-paste";$/;"	m	class:gnote::Preferences	file:
ENABLE_ICON_PASTE	src/preferences.hpp	/^    static const char *ENABLE_ICON_PASTE;$/;"	m	class:gnote::Preferences	access:public
ENABLE_KEYBINDINGS	src/preferences.cpp	/^  const char * Preferences::ENABLE_KEYBINDINGS = "enable-keybindings";$/;"	m	class:gnote::Preferences	file:
ENABLE_KEYBINDINGS	src/preferences.hpp	/^    static const char *ENABLE_KEYBINDINGS;$/;"	m	class:gnote::Preferences	access:public
ENABLE_NLS	config.h	5;"	d
ENABLE_SPELLCHECKING	src/preferences.cpp	/^  const char * Preferences::ENABLE_SPELLCHECKING = "enable-spellchecking";$/;"	m	class:gnote::Preferences	file:
ENABLE_SPELLCHECKING	src/preferences.hpp	/^    static const char *ENABLE_SPELLCHECKING;$/;"	m	class:gnote::Preferences	access:public
ENABLE_URL_LINKS	src/preferences.cpp	/^  const char * Preferences::ENABLE_URL_LINKS = "enable-url-links";$/;"	m	class:gnote::Preferences	file:
ENABLE_URL_LINKS	src/preferences.hpp	/^    static const char *ENABLE_URL_LINKS;$/;"	m	class:gnote::Preferences	access:public
ENABLE_WIKIWORDS	src/preferences.cpp	/^  const char * Preferences::ENABLE_WIKIWORDS = "enable-wikiwords";$/;"	m	class:gnote::Preferences	file:
ENABLE_WIKIWORDS	src/preferences.hpp	/^    static const char *ENABLE_WIKIWORDS;$/;"	m	class:gnote::Preferences	access:public
ERROR_MSG	src/debug.cpp	102;"	d	file:
ERROR_MSG	src/debug.cpp	111;"	d	file:
ERR_OUT	src/debug.hpp	56;"	d
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	data/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libtomboy/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/backlinks/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/bugzilla/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/exporttogtg/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/exporttohtml/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/filesystemsyncservice/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/fixedwidth/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/inserttimestamp/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/notedirectorywatcher/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/noteoftheday/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/printnotes/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/readonly/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/replacetitle/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/specialnotes/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/statistics/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/stickynoteimport/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/tableofcontents/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/todo/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/tomboyimport/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/underline/Makefile	/^ETAGS = etags$/;"	m
ETAGS	src/addins/webdavsyncservice/Makefile	/^ETAGS = etags$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	data/Makefile	/^EXEEXT = $/;"	m
EXEEXT	data/appdata/Makefile	/^EXEEXT = $/;"	m
EXEEXT	data/icons/Makefile	/^EXEEXT = $/;"	m
EXEEXT	help/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libtomboy/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/backlinks/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/bugzilla/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/exporttogtg/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/exporttohtml/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/filesystemsyncservice/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/fixedwidth/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/inserttimestamp/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/notedirectorywatcher/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/noteoftheday/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/printnotes/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/readonly/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/replacetitle/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/specialnotes/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/statistics/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/stickynoteimport/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/tableofcontents/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/todo/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/tomboyimport/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/underline/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/addins/webdavsyncservice/Makefile	/^EXEEXT = $/;"	m
EXEEXT	src/dbus/Makefile	/^EXEEXT = $/;"	m
EXPORTHTML_EXPORT_LINKED	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_EXPORT_LINKED = "export-linked";$/;"	m	namespace:exporttohtml	file:
EXPORTHTML_EXPORT_LINKED_ALL	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_EXPORT_LINKED_ALL = "export-linked-all";$/;"	m	namespace:exporttohtml	file:
EXPORTHTML_LAST_DIRECTORY	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_LAST_DIRECTORY = "last-directory";$/;"	m	namespace:exporttohtml	file:
EXPORT_TO_GTG_ORDER	src/iactionmanager.hpp	/^  EXPORT_TO_GTG_ORDER = 250,$/;"	e	enum:gnote::NoteActionOrder
EXPORT_TO_HTML_ORDER	src/iactionmanager.hpp	/^  EXPORT_TO_HTML_ORDER = 200,$/;"	e	enum:gnote::NoteActionOrder
EXTRA_DIST	Makefile	/^EXTRA_DIST = $/;"	m
EXTRA_DIST	data/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	data/appdata/Makefile	/^EXTRA_DIST = $(app_data_in_files)$/;"	m
EXTRA_DIST	data/icons/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	help/Makefile	/^EXTRA_DIST ?=$/;"	m
EXTRA_DIST	src/addins/backlinks/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/bugzilla/Makefile	/^EXTRA_DIST = bug.png \\$/;"	m
EXTRA_DIST	src/addins/exporttogtg/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/exporttohtml/Makefile	/^EXTRA_DIST = exporttohtml.xsl \\$/;"	m
EXTRA_DIST	src/addins/filesystemsyncservice/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/fixedwidth/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/inserttimestamp/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/notedirectorywatcher/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/noteoftheday/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/printnotes/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/readonly/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/replacetitle/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/specialnotes/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/statistics/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/stickynoteimport/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/tableofcontents/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/todo/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/tomboyimport/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/underline/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/addins/webdavsyncservice/Makefile	/^EXTRA_DIST = $(desktop_in_files)$/;"	m
EXTRA_DIST	src/dbus/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DISTFILES	po/Makefile	/^EXTRA_DISTFILES = ChangeLog POTFILES.skip Makevars LINGUAS$/;"	m
EditAction	src/undo.hpp	/^class EditAction$/;"	c	namespace:gnote
EggModmap	libtomboy/eggaccelerators.c	/^} EggModmap;$/;"	t	typeref:struct:__anon3	file:
EggVirtualModifierType	libtomboy/eggaccelerators.h	/^} EggVirtualModifierType;$/;"	t	typeref:enum:__anon1
EmbeddableWidget	src/mainwindowembeds.hpp	/^  EmbeddableWidget() : m_host(NULL) {}$/;"	f	class:gnote::EmbeddableWidget	access:public	signature:()
EmbeddableWidget	src/mainwindowembeds.hpp	/^class EmbeddableWidget$/;"	c	namespace:gnote
EmbeddableWidgetHost	src/mainwindowembeds.hpp	/^class EmbeddableWidgetHost$/;"	c	namespace:gnote
EraseAction	src/undo.cpp	/^  EraseAction::EraseAction(const Gtk::TextIter & start_iter, $/;"	f	class:gnote::EraseAction	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter, const ChopBuffer::Ptr & chop_buf)
EraseAction	src/undo.hpp	/^  EraseAction(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter,$/;"	p	class:gnote::EraseAction	access:public	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter, const ChopBuffer::Ptr & chop_buf)
EraseAction	src/undo.hpp	/^class EraseAction $/;"	c	namespace:gnote	inherits:SplitterAction
EventHandler	src/synchronization/syncserviceaddin.hpp	/^    typedef sigc::slot<void> EventHandler;$/;"	t	class:gnote::sync::SyncServiceAddin	access:public
Exception	src/sharp/exception.hpp	/^  Exception(const std::string & m) throw()$/;"	f	class:sharp::Exception	access:public	signature:(const std::string & m)
Exception	src/sharp/exception.hpp	/^class Exception$/;"	c	namespace:sharp	inherits:std::exception
ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^ExportToGTGModule::ExportToGTGModule()$/;"	f	class:exporttogtg::ExportToGTGModule	signature:()
ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  ExportToGTGModule();$/;"	p	class:exporttogtg::ExportToGTGModule	access:public	signature:()
ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^class ExportToGTGModule$/;"	c	namespace:exporttogtg	inherits:sharp::DynamicModule
ExportToGTGNoteAddin	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^class ExportToGTGNoteAddin$/;"	c	namespace:exporttogtg	inherits:gnote::NoteAddin
ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.cpp	/^ExportToHtmlDialog::ExportToHtmlDialog(const std::string & default_file)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(const std::string & default_file)
ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  ExportToHtmlDialog(const std::string &);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(const std::string &)
ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.hpp	/^class ExportToHtmlDialog$/;"	c	namespace:exporttohtml	inherits:Gtk::FileChooserDialog
ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^ExportToHtmlModule::ExportToHtmlModule()$/;"	f	class:exporttohtml::ExportToHtmlModule	signature:()
ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  ExportToHtmlModule();$/;"	p	class:exporttohtml::ExportToHtmlModule	access:public	signature:()
ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^class ExportToHtmlModule$/;"	c	namespace:exporttohtml	inherits:sharp::DynamicModule
ExportToHtmlNoteAddin	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^class ExportToHtmlNoteAddin$/;"	c	namespace:exporttohtml	inherits:gnote::NoteAddin
FAILED	src/synchronization/syncutils.hpp	/^    FAILED,$/;"	e	enum:gnote::sync::SyncState
FGREP	Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	data/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	data/appdata/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	data/icons/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	help/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libtomboy/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/backlinks/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/bugzilla/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/exporttogtg/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/exporttohtml/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/filesystemsyncservice/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/fixedwidth/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/inserttimestamp/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/notedirectorywatcher/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/noteoftheday/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/printnotes/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/readonly/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/replacetitle/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/specialnotes/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/statistics/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/stickynoteimport/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/tableofcontents/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/todo/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/tomboyimport/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/underline/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/addins/webdavsyncservice/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	src/dbus/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FILE_URI_SCHEME	src/sharp/uri.cpp	32;"	d	file:
FILTER_NOTE_ALL	src/iconmanager.cpp	/^const char *IconManager::FILTER_NOTE_ALL = "filter-note-all";$/;"	m	class:gnote::IconManager	file:
FILTER_NOTE_ALL	src/iconmanager.hpp	/^  static const char *FILTER_NOTE_ALL;$/;"	m	class:gnote::IconManager	access:public
FILTER_NOTE_UNFILED	src/iconmanager.cpp	/^const char *IconManager::FILTER_NOTE_UNFILED = "filter-note-unfiled";$/;"	m	class:gnote::IconManager	file:
FILTER_NOTE_UNFILED	src/iconmanager.hpp	/^  static const char *FILTER_NOTE_UNFILED;$/;"	m	class:gnote::IconManager	access:public
FOREACH	src/base/macros.hpp	52;"	d
FTP_URI_SCHEME	src/sharp/uri.cpp	36;"	d	file:
Factory	src/notetag.hpp	/^  typedef sigc::slot<DynamicNoteTag::Ptr> Factory;$/;"	t	class:gnote::NoteTagTable	access:public
FileInfo	src/sharp/fileinfo.cpp	/^  FileInfo::FileInfo(const std::string & s)$/;"	f	class:sharp::FileInfo	signature:(const std::string & s)
FileInfo	src/sharp/fileinfo.hpp	/^  FileInfo(const std::string & );$/;"	p	class:sharp::FileInfo	access:public	signature:(const std::string & )
FileInfo	src/sharp/fileinfo.hpp	/^class FileInfo$/;"	c	namespace:sharp
FileSystemSyncServer	src/synchronization/filesystemsyncserver.cpp	/^FileSystemSyncServer::FileSystemSyncServer(const std::string & localSyncPath)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & localSyncPath)
FileSystemSyncServer	src/synchronization/filesystemsyncserver.hpp	/^  explicit FileSystemSyncServer(const std::string & path);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const std::string & path)
FileSystemSyncServer	src/synchronization/filesystemsyncserver.hpp	/^class FileSystemSyncServer$/;"	c	namespace:gnote::sync	inherits:SyncServer
FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^FileSystemSyncServiceAddin::FileSystemSyncServiceAddin()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  FileSystemSyncServiceAddin();$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public	signature:()
FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^class FileSystemSyncServiceAddin$/;"	c	namespace:filesystemsyncservice	inherits:gnote::sync::SyncServiceAddin
FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^FileSystemSyncServiceModule::FileSystemSyncServiceModule()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceModule	signature:()
FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  FileSystemSyncServiceModule();$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceModule	access:public	signature:()
FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^class FileSystemSyncServiceModule$/;"	c	namespace:filesystemsyncservice	inherits:sharp::DynamicModule
FindNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::FindNote(const std::string & linked_title)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & linked_title)
FindNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string FindNote(const std::string & linked_title);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & linked_title)
FindNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string FindNote(const std::string& linked_title) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& linked_title)
FindNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::FindNote(const std::string& linked_title)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& linked_title)
FindNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::FindNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
FindNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase FindNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
FindStartHereNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::FindStartHereNote()$/;"	f	class:RemoteControl_proxy	signature:()
FindStartHereNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string FindStartHereNote();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
FindStartHereNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string FindStartHereNote() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
FindStartHereNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::FindStartHereNote()$/;"	f	class:gnote::RemoteControl	signature:()
FindStartHereNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::FindStartHereNote_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
FindStartHereNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase FindStartHereNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  FixedWidthMenuItem::FixedWidthMenuItem(gnote::NoteAddin *addin)$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:(gnote::NoteAddin *addin)
FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  FixedWidthMenuItem(gnote::NoteAddin *);$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:public	signature:(gnote::NoteAddin *)
FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^class FixedWidthMenuItem$/;"	c	namespace:fixedwidth	inherits:Gtk::CheckMenuItem
FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  FixedWidthModule::FixedWidthModule()$/;"	f	class:fixedwidth::FixedWidthModule	signature:()
FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    FixedWidthModule();$/;"	p	class:fixedwidth::FixedWidthModule	access:public	signature:()
FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  class FixedWidthModule$/;"	c	namespace:fixedwidth	inherits:sharp::DynamicModule
FixedWidthNoteAddin	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  class FixedWidthNoteAddin$/;"	c	namespace:fixedwidth	inherits:gnote::NoteAddin
FixedWidthTag	src/addins/fixedwidth/fixedwidthtag.hpp	/^  FixedWidthTag()$/;"	f	class:fixedwidth::FixedWidthTag	access:public	signature:()
FixedWidthTag	src/addins/fixedwidth/fixedwidthtag.hpp	/^class FixedWidthTag$/;"	c	namespace:fixedwidth	inherits:gnote::NoteTag
ForcedPresentWindow	src/utils.hpp	/^      ForcedPresentWindow(const Glib::ustring & title)$/;"	f	class:gnote::utils::ForcedPresentWindow	access:public	signature:(const Glib::ustring & title)
ForcedPresentWindow	src/utils.hpp	/^    class ForcedPresentWindow $/;"	c	namespace:gnote::utils	inherits:Gtk::ApplicationWindow
FormatColumns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    FormatColumns()$/;"	f	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public	signature:()
FormatColumns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  class FormatColumns$/;"	c	class:inserttimestamp::InsertTimestampPreferences	inherits:Gtk::TreeModelColumnRecord	access:private
FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.cpp	/^FuseSyncServiceAddin::FuseSyncServiceAddin()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.hpp	/^  FuseSyncServiceAddin();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.hpp	/^class FuseSyncServiceAddin$/;"	c	namespace:gnote::sync	inherits:SyncServiceAddin
GENPOT	po/Makefile	/^GENPOT   = INTLTOOL_EXTRACT="$(INTLTOOL_EXTRACT)" XGETTEXT="$(XGETTEXT)" srcdir=$(srcdir) $(INTLTOOL_UPDATE) --gettext-package $(GETTEXT_PACKAGE) --pot$/;"	m
GETTEXT_PACKAGE	Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	config.h	11;"	d
GETTEXT_PACKAGE	data/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	data/appdata/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	data/icons/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	help/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	libtomboy/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	po/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/backlinks/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/bugzilla/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/exporttogtg/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/exporttohtml/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/filesystemsyncservice/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/fixedwidth/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/inserttimestamp/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/notedirectorywatcher/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/noteoftheday/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/printnotes/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/readonly/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/replacetitle/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/specialnotes/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/statistics/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/stickynoteimport/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/tableofcontents/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/todo/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/tomboyimport/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/underline/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/addins/webdavsyncservice/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GETTEXT_PACKAGE	src/dbus/Makefile	/^GETTEXT_PACKAGE = gnote$/;"	m
GLIB_COMPILE_SCHEMAS	Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	data/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	data/appdata/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	data/icons/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	help/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	libtomboy/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/backlinks/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/bugzilla/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/exporttogtg/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/exporttohtml/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/filesystemsyncservice/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/fixedwidth/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/inserttimestamp/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/notedirectorywatcher/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/noteoftheday/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/printnotes/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/readonly/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/replacetitle/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/specialnotes/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/statistics/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/stickynoteimport/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/tableofcontents/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/todo/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/tomboyimport/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/underline/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/addins/webdavsyncservice/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GLIB_COMPILE_SCHEMAS	src/dbus/Makefile	/^GLIB_COMPILE_SCHEMAS = \/usr\/lib\/i386-linux-gnu\/glib-2.0\/glib-compile-schemas$/;"	m
GMOFILES	Makefile	/^GMOFILES = $/;"	m
GMOFILES	data/Makefile	/^GMOFILES = $/;"	m
GMOFILES	data/appdata/Makefile	/^GMOFILES = $/;"	m
GMOFILES	data/icons/Makefile	/^GMOFILES = $/;"	m
GMOFILES	help/Makefile	/^GMOFILES = $/;"	m
GMOFILES	libtomboy/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/backlinks/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/bugzilla/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/exporttogtg/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/exporttohtml/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/filesystemsyncservice/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/fixedwidth/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/inserttimestamp/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/notedirectorywatcher/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/noteoftheday/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/printnotes/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/readonly/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/replacetitle/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/specialnotes/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/statistics/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/stickynoteimport/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/tableofcontents/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/todo/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/tomboyimport/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/underline/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/addins/webdavsyncservice/Makefile	/^GMOFILES = $/;"	m
GMOFILES	src/dbus/Makefile	/^GMOFILES = $/;"	m
GMSGFMT	Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	data/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	data/appdata/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	data/icons/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	help/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	libtomboy/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	po/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/backlinks/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/bugzilla/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/exporttogtg/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/exporttohtml/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/filesystemsyncservice/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/fixedwidth/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/inserttimestamp/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/notedirectorywatcher/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/noteoftheday/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/printnotes/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/readonly/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/replacetitle/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/specialnotes/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/statistics/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/stickynoteimport/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/tableofcontents/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/todo/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/tomboyimport/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/underline/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/addins/webdavsyncservice/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GMSGFMT	src/dbus/Makefile	/^GMSGFMT = \/usr\/bin\/msgfmt$/;"	m
GNOTE	src/iconmanager.cpp	/^const char *IconManager::GNOTE = "gnote";$/;"	m	class:gnote::IconManager	file:
GNOTE	src/iconmanager.hpp	/^  static const char *GNOTE;$/;"	m	class:gnote::IconManager	access:public
GNOTE_BUILD_CONFIG	config.h	14;"	d
GNOTE_DBUS_IFACE	tools/DBusClientTest.py	/^GNOTE_DBUS_IFACE = "org.gnome.Gnote"$/;"	v
GNOTE_DBUS_PATH	tools/DBusClientTest.py	/^GNOTE_DBUS_PATH = "\/org\/gnome\/Gnote\/RemoteControl"$/;"	v
GNOTE_INTERFACE_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_INTERFACE_NAME = "org.gnome.Gnote.RemoteControl";$/;"	m	class:gnote::RemoteControlProxy	file:
GNOTE_INTERFACE_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_INTERFACE_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
GNOTE_LIBS	src/Makefile	/^GNOTE_LIBS = libgnote.la $(LIBGNOTE_LIBS)$/;"	m
GNOTE_LOCALEDIR	Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	data/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	data/appdata/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	data/icons/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	help/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	libtomboy/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/backlinks/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/bugzilla/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/exporttogtg/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/exporttohtml/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/filesystemsyncservice/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/fixedwidth/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/inserttimestamp/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/notedirectorywatcher/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/noteoftheday/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/printnotes/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/readonly/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/replacetitle/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/specialnotes/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/statistics/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/stickynoteimport/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/tableofcontents/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/todo/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/tomboyimport/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/underline/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/addins/webdavsyncservice/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_LOCALEDIR	src/dbus/Makefile	/^GNOTE_LOCALEDIR = ${datarootdir}\/locale$/;"	m
GNOTE_SEARCH_PROVIDER_INTERFACE_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SEARCH_PROVIDER_INTERFACE_NAME = "org.gnome.Shell.SearchProvider2";$/;"	m	class:gnote::RemoteControlProxy	file:
GNOTE_SEARCH_PROVIDER_INTERFACE_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SEARCH_PROVIDER_INTERFACE_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
GNOTE_SEARCH_PROVIDER_PATH	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SEARCH_PROVIDER_PATH = "\/org\/gnome\/Gnote\/SearchProvider";$/;"	m	class:gnote::RemoteControlProxy	file:
GNOTE_SEARCH_PROVIDER_PATH	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SEARCH_PROVIDER_PATH;$/;"	m	class:gnote::RemoteControlProxy	access:public
GNOTE_SERVER_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SERVER_NAME = "org.gnome.Gnote";$/;"	m	class:gnote::RemoteControlProxy	file:
GNOTE_SERVER_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SERVER_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
GNOTE_SERVER_PATH	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SERVER_PATH = "\/org\/gnome\/Gnote\/RemoteControl";$/;"	m	class:gnote::RemoteControlProxy	file:
GNOTE_SERVER_PATH	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SERVER_PATH;$/;"	m	class:gnote::RemoteControlProxy	access:public
GNOTE_VERSION	Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	data/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	data/appdata/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	data/icons/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	help/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	libtomboy/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/backlinks/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/bugzilla/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/exporttogtg/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/exporttohtml/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/filesystemsyncservice/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/fixedwidth/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/inserttimestamp/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/notedirectorywatcher/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/noteoftheday/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/printnotes/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/readonly/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/replacetitle/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/specialnotes/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/statistics/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/stickynoteimport/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/tableofcontents/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/todo/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/tomboyimport/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/underline/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/addins/webdavsyncservice/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GNOTE_VERSION	src/dbus/Makefile	/^GNOTE_VERSION = 3.15.0$/;"	m
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	data/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	data/appdata/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	data/icons/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	help/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libtomboy/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/backlinks/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/bugzilla/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/exporttogtg/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/exporttohtml/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/filesystemsyncservice/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/fixedwidth/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/inserttimestamp/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/notedirectorywatcher/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/noteoftheday/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/printnotes/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/readonly/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/replacetitle/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/specialnotes/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/statistics/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/stickynoteimport/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/tableofcontents/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/todo/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/tomboyimport/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/underline/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/addins/webdavsyncservice/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	src/dbus/Makefile	/^GREP = \/bin\/grep$/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	data/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	data/appdata/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	data/icons/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	help/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	libtomboy/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/backlinks/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/bugzilla/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/exporttogtg/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/exporttohtml/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/filesystemsyncservice/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/fixedwidth/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/inserttimestamp/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/notedirectorywatcher/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/noteoftheday/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/printnotes/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/readonly/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/replacetitle/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/specialnotes/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/statistics/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/stickynoteimport/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/tableofcontents/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/todo/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/tomboyimport/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/underline/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/addins/webdavsyncservice/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GSETTINGS_DISABLE_SCHEMAS_COMPILE	src/dbus/Makefile	/^GSETTINGS_DISABLE_SCHEMAS_COMPILE = $/;"	m
GTG_INTERFACE	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^const char *GTG_INTERFACE =$/;"	m	namespace:__anon17	file:
GTKSPELL_CFLAGS	Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	data/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	data/appdata/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	data/icons/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	help/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	libtomboy/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/backlinks/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/bugzilla/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/exporttogtg/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/exporttohtml/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/fixedwidth/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/inserttimestamp/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/noteoftheday/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/printnotes/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/readonly/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/replacetitle/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/specialnotes/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/statistics/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/stickynoteimport/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/tableofcontents/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/todo/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/tomboyimport/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/underline/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/addins/webdavsyncservice/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_CFLAGS	src/dbus/Makefile	/^GTKSPELL_CFLAGS = $/;"	m
GTKSPELL_LIBS	Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	data/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	data/appdata/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	data/icons/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	help/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	libtomboy/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/backlinks/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/bugzilla/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/exporttogtg/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/exporttohtml/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/filesystemsyncservice/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/fixedwidth/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/inserttimestamp/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/notedirectorywatcher/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/noteoftheday/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/printnotes/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/readonly/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/replacetitle/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/specialnotes/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/statistics/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/stickynoteimport/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/tableofcontents/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/todo/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/tomboyimport/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/underline/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/addins/webdavsyncservice/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTKSPELL_LIBS	src/dbus/Makefile	/^GTKSPELL_LIBS = $/;"	m
GTK_CFLAGS	Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	data/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	data/appdata/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	data/icons/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	help/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	libtomboy/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/backlinks/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/bugzilla/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/exporttogtg/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/exporttohtml/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/fixedwidth/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/inserttimestamp/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/noteoftheday/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/printnotes/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/readonly/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/replacetitle/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/specialnotes/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/statistics/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/stickynoteimport/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/tableofcontents/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/todo/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/tomboyimport/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/underline/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/addins/webdavsyncservice/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_CFLAGS	src/dbus/Makefile	/^GTK_CFLAGS = -pthread -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
GTK_LIBS	Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	data/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	data/appdata/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	data/icons/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	help/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	libtomboy/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/backlinks/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/bugzilla/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/exporttogtg/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/exporttohtml/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/filesystemsyncservice/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/fixedwidth/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/inserttimestamp/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/notedirectorywatcher/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/noteoftheday/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/printnotes/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/readonly/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/replacetitle/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/specialnotes/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/statistics/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/stickynoteimport/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/tableofcontents/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/todo/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/tomboyimport/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/underline/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/addins/webdavsyncservice/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GTK_LIBS	src/dbus/Makefile	/^GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GetAllNotesWithTag	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> GetAllNotesWithTag(const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& tag_name)
GetAllNotesWithTag	src/dbus/remotecontrol.cpp	/^  std::vector< std::string > RemoteControl::GetAllNotesWithTag(const std::string& tag_name)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& tag_name)
GetAllNotesWithTag_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetAllNotesWithTag_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetAllNotesWithTag_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetAllNotesWithTag_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetInitialResultSet	src/dbus/searchprovider.cpp	/^std::vector<Glib::ustring> SearchProvider::GetInitialResultSet(const std::vector<Glib::ustring> & terms)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const std::vector<Glib::ustring> & terms)
GetInitialResultSet	src/dbus/searchprovider.hpp	/^  std::vector<Glib::ustring> GetInitialResultSet(const std::vector<Glib::ustring> & terms);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const std::vector<Glib::ustring> & terms)
GetInitialResultSet_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetInitialResultSet_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
GetInitialResultSet_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetInitialResultSet_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteChangeDate	src/dbus/remotecontrol-glue.hpp	/^  virtual int32_t GetNoteChangeDate(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteChangeDate	src/dbus/remotecontrol.cpp	/^  int32_t RemoteControl::GetNoteChangeDate(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteChangeDate_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteChangeDate_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteChangeDate_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteChangeDate_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteCompleteXml	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteCompleteXml(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteCompleteXml	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteCompleteXml(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteCompleteXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteCompleteXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteContents	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteContents(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteContents	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteContents(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteContentsXml	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteContentsXml(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteContentsXml	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteContentsXml(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteContentsXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteContentsXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteContentsXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteContentsXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteContents_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteContents_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteContents_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteContents_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteCreateDate	src/dbus/remotecontrol-glue.hpp	/^  virtual int32_t GetNoteCreateDate(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteCreateDate	src/dbus/remotecontrol.cpp	/^  int32_t RemoteControl::GetNoteCreateDate(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteCreateDate_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteCreateDate_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteCreateDate_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteCreateDate_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetNoteTitle	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteTitle(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetNoteTitle	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteTitle(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetNoteTitle_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteTitle_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetNoteTitle_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteTitle_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GetResultMetas	src/dbus/searchprovider.cpp	/^std::vector<std::map<Glib::ustring, Glib::ustring> > SearchProvider::GetResultMetas($/;"	f	class:org::gnome::Gnote::SearchProvider	signature:( const std::vector<Glib::ustring> & identifiers)
GetResultMetas	src/dbus/searchprovider.hpp	/^  std::vector<std::map<Glib::ustring, Glib::ustring> > GetResultMetas($/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:( const std::vector<Glib::ustring> & identifiers)
GetResultMetas_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetResultMetas_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
GetResultMetas_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetResultMetas_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
GetSubsearchResultSet	src/dbus/searchprovider.cpp	/^std::vector<Glib::ustring> SearchProvider::GetSubsearchResultSet($/;"	f	class:org::gnome::Gnote::SearchProvider	signature:( const std::vector<Glib::ustring> & previous_results, const std::vector<Glib::ustring> & terms)
GetSubsearchResultSet	src/dbus/searchprovider.hpp	/^  std::vector<Glib::ustring> GetSubsearchResultSet(const std::vector<Glib::ustring> & previous_results,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const std::vector<Glib::ustring> & previous_results, const std::vector<Glib::ustring> & terms)
GetSubsearchResultSet_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetSubsearchResultSet_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
GetSubsearchResultSet_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetSubsearchResultSet_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
GetTagsForNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> GetTagsForNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
GetTagsForNote	src/dbus/remotecontrol.cpp	/^  std::vector< std::string > RemoteControl::GetTagsForNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
GetTagsForNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetTagsForNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
GetTagsForNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetTagsForNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
GlobalKeybinder	src/utils.hpp	/^      GlobalKeybinder(const Glib::RefPtr<Gtk::AccelGroup> & accel_group)$/;"	f	class:gnote::utils::GlobalKeybinder	access:public	signature:(const Glib::RefPtr<Gtk::AccelGroup> & accel_group)
GlobalKeybinder	src/utils.hpp	/^    class GlobalKeybinder$/;"	c	namespace:gnote::utils
Gnote	src/dbus/remotecontrol-client-glue.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
Gnote	src/dbus/remotecontrol-glue.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
Gnote	src/dbus/searchprovider.cpp	/^namespace Gnote {$/;"	n	namespace:org::gnome	file:
Gnote	src/dbus/searchprovider.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
Gnote	src/gnote.cpp	/^  Gnote::Gnote()$/;"	f	class:gnote::Gnote	signature:()
Gnote	src/gnote.hpp	/^  Gnote();$/;"	p	class:gnote::Gnote	access:private	signature:()
Gnote	src/gnote.hpp	/^class Gnote$/;"	c	namespace:gnote	inherits:Gtk::Application,IGnote
Gnote	src/remotecontrolproxy.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
GnoteCommandLine	src/gnote.cpp	/^  GnoteCommandLine::GnoteCommandLine()$/;"	f	class:gnote::GnoteCommandLine	signature:()
GnoteCommandLine	src/gnote.hpp	/^  GnoteCommandLine();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
GnoteCommandLine	src/gnote.hpp	/^class GnoteCommandLine$/;"	c	namespace:gnote
GnotePrefsKeybinder	src/prefskeybinder.cpp	/^  GnotePrefsKeybinder::GnotePrefsKeybinder(IKeybinder & keybinder,$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon)
GnotePrefsKeybinder	src/prefskeybinder.hpp	/^  GnotePrefsKeybinder(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon)
GnotePrefsKeybinder	src/prefskeybinder.hpp	/^class GnotePrefsKeybinder$/;"	c	namespace:gnote	inherits:PrefsKeybinder
GnoteSyncClient	src/synchronization/gnotesyncclient.cpp	/^  GnoteSyncClient::GnoteSyncClient()$/;"	f	class:gnote::sync::GnoteSyncClient	signature:()
GnoteSyncClient	src/synchronization/gnotesyncclient.hpp	/^    GnoteSyncClient();$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:()
GnoteSyncClient	src/synchronization/gnotesyncclient.hpp	/^  class GnoteSyncClient$/;"	c	namespace:gnote::sync	inherits:SyncClient
GnoteSyncException	src/synchronization/isyncmanager.hpp	/^  GnoteSyncException(const char * what_arg) : std::runtime_error(what_arg){}$/;"	f	class:gnote::sync::GnoteSyncException	access:public	signature:(const char * what_arg)
GnoteSyncException	src/synchronization/isyncmanager.hpp	/^class GnoteSyncException$/;"	c	namespace:gnote::sync	inherits:std::runtime_error
HAVE_BIND_TEXTDOMAIN_CODESET	config.h	17;"	d
HAVE_BOOST	config.h	20;"	d
HAVE_BOOST_BIND_HPP	config.h	23;"	d
HAVE_BOOST_FORMAT_HPP	config.h	32;"	d
HAVE_BOOST_TEST_UNIT_TEST_HPP	config.h	38;"	d
HAVE_CXX11	Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	config.h	41;"	d
HAVE_CXX11	data/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	data/appdata/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	data/icons/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	help/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	libtomboy/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/backlinks/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/bugzilla/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/exporttogtg/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/exporttohtml/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/filesystemsyncservice/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/fixedwidth/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/inserttimestamp/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/notedirectorywatcher/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/noteoftheday/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/printnotes/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/readonly/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/replacetitle/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/specialnotes/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/statistics/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/stickynoteimport/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/tableofcontents/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/todo/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/tomboyimport/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/underline/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/addins/webdavsyncservice/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_CXX11	src/dbus/Makefile	/^HAVE_CXX11 = 1$/;"	m
HAVE_DCGETTEXT	config.h	44;"	d
HAVE_DESKTOP_FILE_VALIDATE	Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	data/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	data/appdata/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	data/icons/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	help/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	libtomboy/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/backlinks/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/bugzilla/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/exporttogtg/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/exporttohtml/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/filesystemsyncservice/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/fixedwidth/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/inserttimestamp/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/notedirectorywatcher/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/noteoftheday/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/printnotes/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/readonly/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/replacetitle/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/specialnotes/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/statistics/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/stickynoteimport/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/tableofcontents/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/todo/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/tomboyimport/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/underline/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/addins/webdavsyncservice/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DESKTOP_FILE_VALIDATE	src/dbus/Makefile	/^HAVE_DESKTOP_FILE_VALIDATE = yes$/;"	m
HAVE_DLFCN_H	config.h	47;"	d
HAVE_GETTEXT	config.h	50;"	d
HAVE_INTTYPES_H	config.h	53;"	d
HAVE_LC_MESSAGES	config.h	56;"	d
HAVE_LOCALE_H	config.h	59;"	d
HAVE_MEMORY_H	config.h	62;"	d
HAVE_STDINT_H	config.h	65;"	d
HAVE_STDLIB_H	config.h	68;"	d
HAVE_STRINGS_H	config.h	71;"	d
HAVE_STRING_H	config.h	74;"	d
HAVE_SYS_STAT_H	config.h	77;"	d
HAVE_SYS_TYPES_H	config.h	80;"	d
HAVE_UNISTD_H	config.h	83;"	d
HELP_DIR	Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	data/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	data/appdata/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	data/icons/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	help/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	libtomboy/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/backlinks/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/bugzilla/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/exporttogtg/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/exporttohtml/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/filesystemsyncservice/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/fixedwidth/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/inserttimestamp/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/notedirectorywatcher/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/noteoftheday/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/printnotes/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/readonly/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/replacetitle/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/specialnotes/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/statistics/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/stickynoteimport/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/tableofcontents/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/todo/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/tomboyimport/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/underline/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/addins/webdavsyncservice/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_DIR	src/dbus/Makefile	/^HELP_DIR = ${datadir}\/help$/;"	m
HELP_EXTRA	help/Makefile	/^HELP_EXTRA ?=$/;"	m
HELP_FILES	help/Makefile	/^HELP_FILES = \\$/;"	m
HELP_FILES	help/Makefile	/^HELP_FILES ?=$/;"	m
HELP_ID	help/Makefile	/^HELP_ID = gnote$/;"	m
HELP_ID	help/Makefile	/^HELP_ID ?=$/;"	m
HELP_LINGUAS	help/Makefile	/^HELP_LINGUAS = cs da de el es fr hu lt ru sl zh_CN$/;"	m
HELP_LINGUAS	help/Makefile	/^HELP_LINGUAS ?=$/;"	m
HELP_MEDIA	help/Makefile	/^HELP_MEDIA = \\$/;"	m
HELP_MEDIA	help/Makefile	/^HELP_MEDIA ?=$/;"	m
HELP_POT	help/Makefile	/^HELP_POT ?=$/;"	m
HIGMessageDialog	src/utils.cpp	/^    HIGMessageDialog::HIGMessageDialog(Gtk::Window *parent,$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Window *parent, GtkDialogFlags flags, Gtk::MessageType msg_type, Gtk::ButtonsType btn_type, const Glib::ustring & header, const Glib::ustring & msg)
HIGMessageDialog	src/utils.hpp	/^      HIGMessageDialog(Gtk::Window *, GtkDialogFlags flags, Gtk::MessageType msg_type, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Window *, GtkDialogFlags flags, Gtk::MessageType msg_type, Gtk::ButtonsType btn_type, const Glib::ustring & header = Glib::ustring(), const Glib::ustring & msg = Glib::ustring())
HIGMessageDialog	src/utils.hpp	/^    class HIGMessageDialog$/;"	c	namespace:gnote::utils	inherits:Gtk::Dialog
HTTPS_URI_SCHEME	src/sharp/uri.cpp	35;"	d	file:
HTTP_URI_SCHEME	src/sharp/uri.cpp	34;"	d	file:
Handler	src/xkeybinder.hpp	/^  typedef sigc::slot<void> Handler;$/;"	t	class:gnote::XKeybinder	access:private
HasActions	src/mainwindowembeds.hpp	/^class HasActions$/;"	c	namespace:gnote
HasEmbeddableToolbar	src/mainwindowembeds.hpp	/^class HasEmbeddableToolbar$/;"	c	namespace:gnote
Heading	src/addins/tableofcontents/tableofcontents.hpp	/^namespace Heading { \/\/ Heading level,$/;"	n	namespace:tableofcontents
HideNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool HideNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
HideNote	src/dbus/remotecontrol.cpp	/^bool RemoteControl::HideNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
HideNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::HideNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
HideNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase HideNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
IActionManager	src/iactionmanager.hpp	/^class IActionManager$/;"	c	namespace:gnote	inherits:base::Singleton
IDLE	src/synchronization/syncutils.hpp	/^    IDLE,$/;"	e	enum:gnote::sync::SyncState
IFACE_NAME	src/addinpreferencefactory.cpp	/^const char * AddinPreferenceFactoryBase::IFACE_NAME = "gnote::AddinPreferenceFactoryBase";$/;"	m	class:gnote::AddinPreferenceFactoryBase	file:
IFACE_NAME	src/addinpreferencefactory.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::AddinPreferenceFactoryBase	access:public
IFACE_NAME	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^const char * NoteOfTheDayApplicationAddin::IFACE_NAME$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	file:
IFACE_NAME	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
IFACE_NAME	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^const char *SpecialNotesApplicationAddin::IFACE_NAME = "gnote::ApplicationAddin";$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	file:
IFACE_NAME	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
IFACE_NAME	src/applicationaddin.cpp	/^const char * ApplicationAddin::IFACE_NAME = "gnote::ApplicationAddin";$/;"	m	class:gnote::ApplicationAddin	file:
IFACE_NAME	src/applicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::ApplicationAddin	access:public
IFACE_NAME	src/importaddin.cpp	/^  const char * ImportAddin::IFACE_NAME = "gnote::ImportAddin";$/;"	m	class:gnote::ImportAddin	file:
IFACE_NAME	src/importaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::ImportAddin	access:public
IFACE_NAME	src/noteaddin.cpp	/^  const char * NoteAddin::IFACE_NAME = "gnote::NoteAddin";$/;"	m	class:gnote::NoteAddin	file:
IFACE_NAME	src/noteaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::NoteAddin	access:public
IFACE_NAME	src/synchronization/syncserviceaddin.cpp	/^const char * SyncServiceAddin::IFACE_NAME = "gnote::sync::SyncServiceAddin";$/;"	m	class:gnote::sync::SyncServiceAddin	file:
IFACE_NAME	src/synchronization/syncserviceaddin.hpp	/^    static const char * IFACE_NAME;$/;"	m	class:gnote::sync::SyncServiceAddin	access:public
IGnote	src/ignote.hpp	/^class IGnote$/;"	c	namespace:gnote	inherits:base::Singleton
IGnoteTray	src/tray.hpp	/^class IGnoteTray$/;"	c	namespace:gnote
IInterface	src/sharp/modulefactory.hpp	/^  IInterface()$/;"	f	class:sharp::IInterface	access:protected	signature:()
IInterface	src/sharp/modulefactory.hpp	/^class IInterface$/;"	c	namespace:sharp
IKeybinder	src/keybinder.hpp	/^class IKeybinder$/;"	c	namespace:gnote
INCLUDES	src/addins/addins.mk	/^INCLUDES = -I$(top_srcdir) -I$(top_srcdir)\/src$/;"	m
INSERT_TIMESTAMP_FORMAT	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  const char * INSERT_TIMESTAMP_FORMAT = "format";$/;"	m	namespace:inserttimestamp	file:
INSERT_TIMESTAMP_ORDER	src/iactionmanager.hpp	/^  INSERT_TIMESTAMP_ORDER = 300,$/;"	e	enum:gnote::NoteActionOrder
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	data/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	data/appdata/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	data/icons/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	help/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libtomboy/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	po/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/backlinks/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/bugzilla/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/exporttogtg/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/exporttohtml/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/filesystemsyncservice/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/fixedwidth/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/inserttimestamp/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/notedirectorywatcher/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/noteoftheday/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/printnotes/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/readonly/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/replacetitle/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/specialnotes/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/statistics/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/stickynoteimport/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/tableofcontents/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/todo/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/tomboyimport/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/underline/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/addins/webdavsyncservice/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	src/dbus/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	data/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	data/appdata/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	data/icons/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	help/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libtomboy/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	po/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/backlinks/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/bugzilla/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/exporttogtg/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/exporttohtml/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/filesystemsyncservice/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/fixedwidth/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/inserttimestamp/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/notedirectorywatcher/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/noteoftheday/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/printnotes/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/readonly/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/replacetitle/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/specialnotes/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/statistics/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/stickynoteimport/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/tableofcontents/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/todo/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/tomboyimport/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/underline/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/addins/webdavsyncservice/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	src/dbus/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	data/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	data/appdata/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	data/icons/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	help/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libtomboy/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/backlinks/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/bugzilla/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/exporttogtg/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/exporttohtml/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/filesystemsyncservice/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/fixedwidth/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/inserttimestamp/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/notedirectorywatcher/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/noteoftheday/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/printnotes/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/readonly/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/replacetitle/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/specialnotes/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/statistics/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/stickynoteimport/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/tableofcontents/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/todo/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/tomboyimport/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/underline/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/addins/webdavsyncservice/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	src/dbus/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	data/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	data/appdata/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	data/icons/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	help/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libtomboy/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/backlinks/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/bugzilla/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/exporttogtg/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/exporttohtml/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/filesystemsyncservice/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/fixedwidth/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/inserttimestamp/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/notedirectorywatcher/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/noteoftheday/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/printnotes/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/readonly/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/replacetitle/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/specialnotes/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/statistics/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/stickynoteimport/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/tableofcontents/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/todo/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/tomboyimport/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/underline/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/addins/webdavsyncservice/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	src/dbus/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	data/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	data/appdata/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	data/icons/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	help/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libtomboy/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/backlinks/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/bugzilla/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/exporttogtg/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/exporttohtml/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/filesystemsyncservice/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/fixedwidth/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/inserttimestamp/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/notedirectorywatcher/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/noteoftheday/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/printnotes/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/readonly/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/replacetitle/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/specialnotes/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/statistics/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/stickynoteimport/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/tableofcontents/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/todo/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/tomboyimport/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/underline/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/addins/webdavsyncservice/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	src/dbus/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	data/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	data/appdata/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	data/icons/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	help/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libtomboy/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/backlinks/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/bugzilla/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/exporttogtg/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/exporttohtml/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/filesystemsyncservice/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/fixedwidth/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/inserttimestamp/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/notedirectorywatcher/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/noteoftheday/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/printnotes/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/readonly/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/replacetitle/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/specialnotes/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/statistics/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/stickynoteimport/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/tableofcontents/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/todo/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/tomboyimport/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/underline/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/addins/webdavsyncservice/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	src/dbus/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTOBJEXT	Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	data/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	data/appdata/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	data/icons/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	help/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	libtomboy/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/backlinks/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/bugzilla/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/exporttogtg/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/exporttohtml/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/filesystemsyncservice/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/fixedwidth/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/inserttimestamp/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/notedirectorywatcher/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/noteoftheday/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/printnotes/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/readonly/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/replacetitle/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/specialnotes/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/statistics/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/stickynoteimport/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/tableofcontents/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/todo/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/tomboyimport/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/underline/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/addins/webdavsyncservice/Makefile	/^INSTOBJEXT = .mo$/;"	m
INSTOBJEXT	src/dbus/Makefile	/^INSTOBJEXT = .mo$/;"	m
INTLLIBS	Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	data/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	data/appdata/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	data/icons/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	help/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	libtomboy/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/backlinks/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/bugzilla/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/exporttogtg/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/exporttohtml/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/filesystemsyncservice/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/fixedwidth/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/inserttimestamp/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/notedirectorywatcher/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/noteoftheday/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/printnotes/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/readonly/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/replacetitle/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/specialnotes/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/statistics/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/stickynoteimport/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/tableofcontents/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/todo/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/tomboyimport/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/underline/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/addins/webdavsyncservice/Makefile	/^INTLLIBS = $/;"	m
INTLLIBS	src/dbus/Makefile	/^INTLLIBS = $/;"	m
INTLTOOL_EXTRACT	Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	data/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	data/appdata/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	data/icons/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	help/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	libtomboy/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	po/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/backlinks/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/bugzilla/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/exporttogtg/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/exporttohtml/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/fixedwidth/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/inserttimestamp/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/noteoftheday/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/printnotes/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/readonly/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/replacetitle/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/specialnotes/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/statistics/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/stickynoteimport/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/tableofcontents/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/todo/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/tomboyimport/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/underline/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_EXTRACT	src/dbus/Makefile	/^INTLTOOL_EXTRACT = \/usr\/bin\/intltool-extract$/;"	m
INTLTOOL_FILES	Makefile	/^INTLTOOL_FILES = intltool-extract.in \\$/;"	m
INTLTOOL_MERGE	Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	data/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	data/appdata/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	data/icons/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	help/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	libtomboy/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/backlinks/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/bugzilla/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/exporttogtg/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/exporttohtml/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/fixedwidth/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/inserttimestamp/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/noteoftheday/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/printnotes/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/readonly/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/replacetitle/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/specialnotes/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/statistics/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/stickynoteimport/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/tableofcontents/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/todo/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/tomboyimport/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/underline/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_MERGE	src/dbus/Makefile	/^INTLTOOL_MERGE = \/usr\/bin\/intltool-merge$/;"	m
INTLTOOL_PERL	Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	data/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	data/appdata/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	data/icons/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	help/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	libtomboy/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/backlinks/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/bugzilla/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/exporttogtg/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/exporttohtml/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/fixedwidth/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/inserttimestamp/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/noteoftheday/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/printnotes/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/readonly/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/replacetitle/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/specialnotes/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/statistics/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/stickynoteimport/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/tableofcontents/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/todo/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/tomboyimport/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/underline/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_PERL	src/dbus/Makefile	/^INTLTOOL_PERL = \/usr\/bin\/perl$/;"	m
INTLTOOL_UPDATE	Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	data/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	data/appdata/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	data/icons/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	help/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	libtomboy/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	po/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/backlinks/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/bugzilla/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/exporttogtg/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/exporttohtml/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/fixedwidth/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/inserttimestamp/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/noteoftheday/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/printnotes/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/readonly/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/replacetitle/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/specialnotes/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/statistics/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/stickynoteimport/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/tableofcontents/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/todo/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/tomboyimport/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/underline/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_UPDATE	src/dbus/Makefile	/^INTLTOOL_UPDATE = \/usr\/bin\/intltool-update$/;"	m
INTLTOOL_V_MERGE	Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	data/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	data/appdata/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	data/icons/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	help/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	libtomboy/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/backlinks/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/bugzilla/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/exporttogtg/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/exporttohtml/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/fixedwidth/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/inserttimestamp/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/noteoftheday/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/printnotes/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/readonly/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/replacetitle/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/specialnotes/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/statistics/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/stickynoteimport/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/tableofcontents/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/todo/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/tomboyimport/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/underline/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE	src/dbus/Makefile	/^INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	data/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	data/appdata/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	data/icons/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	help/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	libtomboy/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/backlinks/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/bugzilla/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/exporttogtg/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/exporttohtml/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/fixedwidth/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/inserttimestamp/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/noteoftheday/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/printnotes/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/readonly/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/replacetitle/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/specialnotes/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/statistics/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/stickynoteimport/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/tableofcontents/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/todo/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/tomboyimport/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/underline/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/addins/webdavsyncservice/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MERGE_OPTIONS	src/dbus/Makefile	/^INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))$/;"	m
INTLTOOL_V_MSGFMT	po/Makefile	/^INTLTOOL_V_MSGFMT = $(INTLTOOL__v_MSGFMT_$(V))$/;"	m
INTLTOOL__v_MERGE_	Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	data/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	data/appdata/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	data/icons/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	help/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	libtomboy/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/backlinks/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/bugzilla/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/exporttogtg/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/exporttohtml/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/fixedwidth/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/inserttimestamp/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/noteoftheday/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/printnotes/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/readonly/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/replacetitle/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/specialnotes/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/statistics/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/stickynoteimport/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/tableofcontents/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/todo/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/tomboyimport/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/underline/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/addins/webdavsyncservice/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_	src/dbus/Makefile	/^INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MERGE_0	Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	data/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	data/appdata/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	data/icons/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	help/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	libtomboy/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/backlinks/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/bugzilla/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/exporttogtg/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/exporttohtml/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/filesystemsyncservice/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/fixedwidth/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/inserttimestamp/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/notedirectorywatcher/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/noteoftheday/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/printnotes/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/readonly/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/replacetitle/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/specialnotes/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/statistics/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/stickynoteimport/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/tableofcontents/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/todo/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/tomboyimport/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/underline/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/addins/webdavsyncservice/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MERGE_0	src/dbus/Makefile	/^INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;$/;"	m
INTLTOOL__v_MSGFMT_	po/Makefile	/^INTLTOOL__v_MSGFMT_= $(INTLTOOL__v_MSGFMT_$(AM_DEFAULT_VERBOSITY))$/;"	m
INTLTOOL__v_MSGFMT_0	po/Makefile	/^INTLTOOL__v_MSGFMT_0 = @echo "  MSGFMT" $@;$/;"	m
IRemoteControl	src/dbus/iremotecontrol.hpp	/^typedef org::gnome::Gnote::RemoteControl_adaptor IRemoteControl;$/;"	t	namespace:gnote
ISyncManager	src/synchronization/isyncmanager.hpp	/^class ISyncManager$/;"	c	namespace:gnote::sync	inherits:base::Singleton
ITSTOOL	Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	data/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	data/appdata/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	data/icons/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	help/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	libtomboy/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/backlinks/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/bugzilla/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/exporttogtg/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/exporttohtml/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/filesystemsyncservice/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/fixedwidth/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/inserttimestamp/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/notedirectorywatcher/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/noteoftheday/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/printnotes/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/readonly/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/replacetitle/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/specialnotes/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/statistics/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/stickynoteimport/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/tableofcontents/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/todo/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/tomboyimport/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/underline/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/addins/webdavsyncservice/Makefile	/^ITSTOOL = itstool$/;"	m
ITSTOOL	src/dbus/Makefile	/^ITSTOOL = itstool$/;"	m
ITagManager	src/itagmanager.hpp	/^class ITagManager$/;"	c	namespace:gnote	inherits:base::Singleton
IconDef	src/iconmanager.hpp	/^  typedef std::pair<std::string, int> IconDef;$/;"	t	class:gnote::IconManager	access:private
IconManager	src/iconmanager.hpp	/^class IconManager$/;"	c	namespace:gnote	inherits:base::Singleton
IconMap	src/iconmanager.hpp	/^  typedef std::map<IconDef, Glib::RefPtr<Gdk::Pixbuf> > IconMap;$/;"	t	class:gnote::IconManager	access:private
IdAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, NoteAddin *> IdAddinMap;$/;"	t	class:gnote::AddinManager	access:private
IdAddinPrefsMap	src/addinmanager.hpp	/^  typedef std::map<std::string, AddinPreferenceFactoryBase*> IdAddinPrefsMap;$/;"	t	class:gnote::AddinManager	access:private
IdImportAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, ImportAddin *> IdImportAddinMap;$/;"	t	class:gnote::AddinManager	access:private
IdInfoMap	src/addinmanager.hpp	/^  typedef std::map<std::string, sharp::IfaceFactoryBase*> IdInfoMap;$/;"	t	class:gnote::AddinManager	access:private
IdPrefTabAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, PreferenceTabAddin*> IdPrefTabAddinMap;$/;"	t	class:gnote::AddinManager	access:private
IdSyncServiceAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, sync::SyncServiceAddin*> IdSyncServiceAddinMap;$/;"	t	class:gnote::AddinManager	access:private
IfaceFactory	src/sharp/modulefactory.hpp	/^class IfaceFactory$/;"	c	namespace:sharp	inherits:IfaceFactoryBase
IfaceFactoryBase	src/sharp/modulefactory.hpp	/^class IfaceFactoryBase$/;"	c	namespace:sharp
ImportAddin	src/importaddin.cpp	/^  ImportAddin::ImportAddin()$/;"	f	class:gnote::ImportAddin	signature:()
ImportAddin	src/importaddin.hpp	/^  ImportAddin();$/;"	p	class:gnote::ImportAddin	access:public	signature:()
ImportAddin	src/importaddin.hpp	/^class ImportAddin $/;"	c	namespace:gnote	inherits:ApplicationAddin
InsertAction	src/undo.cpp	/^  InsertAction::InsertAction(const Gtk::TextIter & start, $/;"	f	class:gnote::InsertAction	signature:(const Gtk::TextIter & start, const std::string & , int length, const ChopBuffer::Ptr & chop_buf)
InsertAction	src/undo.hpp	/^  InsertAction(const Gtk::TextIter & start, const std::string & text, int length,$/;"	p	class:gnote::InsertAction	access:public	signature:(const Gtk::TextIter & start, const std::string & text, int length, const ChopBuffer::Ptr & chop_buf)
InsertAction	src/undo.hpp	/^class InsertAction$/;"	c	namespace:gnote	inherits:SplitterAction
InsertBugAction	src/addins/bugzilla/insertbugaction.cpp	/^  InsertBugAction::InsertBugAction(const Gtk::TextIter & start, const std::string & id,$/;"	f	class:bugzilla::InsertBugAction	signature:(const Gtk::TextIter & start, const std::string & id, const BugzillaLink::Ptr & tag)
InsertBugAction	src/addins/bugzilla/insertbugaction.hpp	/^  InsertBugAction(const Gtk::TextIter & start, const std::string & id,$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(const Gtk::TextIter & start, const std::string & id, const BugzillaLink::Ptr & tag)
InsertBugAction	src/addins/bugzilla/insertbugaction.hpp	/^class InsertBugAction$/;"	c	namespace:bugzilla	inherits:gnote::SplitterAction
InsertBulletAction	src/undo.cpp	/^  InsertBulletAction::InsertBulletAction(int offset, int depth, $/;"	f	class:gnote::InsertBulletAction	signature:(int offset, int depth, Pango::Direction direction)
InsertBulletAction	src/undo.hpp	/^  InsertBulletAction(int offset, int depth, Pango::Direction direction);$/;"	p	class:gnote::InsertBulletAction	access:public	signature:(int offset, int depth, Pango::Direction direction)
InsertBulletAction	src/undo.hpp	/^class InsertBulletAction$/;"	c	namespace:gnote	inherits:EditAction
InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  InsertTimeStampModule::InsertTimeStampModule()$/;"	f	class:inserttimestamp::InsertTimeStampModule	signature:()
InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  InsertTimeStampModule();$/;"	p	class:inserttimestamp::InsertTimeStampModule	access:public	signature:()
InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^class InsertTimeStampModule$/;"	c	namespace:inserttimestamp	inherits:sharp::DynamicModule
InsertTimestampAction	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      InsertTimestampAction(gnote::NoteWindow *note_window)$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
InsertTimestampAction	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^    class InsertTimestampAction$/;"	c	namespace:inserttimestamp::__anon14	file:	inherits:Gtk::Action
InsertTimestampNoteAddin	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^class InsertTimestampNoteAddin$/;"	c	namespace:inserttimestamp	inherits:gnote::NoteAddin
InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  InsertTimestampPreferences::InsertTimestampPreferences(gnote::NoteManager &)$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:(gnote::NoteManager &)
InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  InsertTimestampPreferences(gnote::NoteManager &);$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:public	signature:(gnote::NoteManager &)
InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^class InsertTimestampPreferences$/;"	c	namespace:inserttimestamp	inherits:Gtk::Grid
InsertTimestampPreferencesFactory	src/addins/inserttimestamp/inserttimestamppreferencesfactory.hpp	/^  class InsertTimestampPreferencesFactory$/;"	c	namespace:inserttimestamp	inherits:gnote::AddinPreferenceFactory
InternalMap	src/tagmanager.hpp	/^  typedef std::map<std::string, Tag::Ptr> InternalMap;$/;"	t	class:gnote::TagManager	access:private
InterruptableTimeout	src/utils.hpp	/^      InterruptableTimeout()$/;"	f	class:gnote::utils::InterruptableTimeout	access:public	signature:()
InterruptableTimeout	src/utils.hpp	/^    class InterruptableTimeout$/;"	c	namespace:gnote::utils
KEYBINDER_SOURCES	src/Makefile	/^KEYBINDER_SOURCES = keybinder.hpp \\$/;"	m
KEYBINDING_CREATE_NEW_NOTE	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_CREATE_NEW_NOTE = "create-new-note";$/;"	m	class:gnote::Preferences	file:
KEYBINDING_CREATE_NEW_NOTE	src/preferences.hpp	/^    static const char *KEYBINDING_CREATE_NEW_NOTE;$/;"	m	class:gnote::Preferences	access:public
KEYBINDING_CREATE_NEW_NOTE_DEFAULT	src/prefskeybinder.cpp	36;"	d	file:
KEYBINDING_OPEN_RECENT_CHANGES	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_RECENT_CHANGES = "open-recent-changes";$/;"	m	class:gnote::Preferences	file:
KEYBINDING_OPEN_RECENT_CHANGES	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_RECENT_CHANGES;$/;"	m	class:gnote::Preferences	access:public
KEYBINDING_OPEN_RECENT_CHANGES_DEFAULT	src/prefskeybinder.cpp	38;"	d	file:
KEYBINDING_OPEN_SEARCH	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_SEARCH = "open-search";$/;"	m	class:gnote::Preferences	file:
KEYBINDING_OPEN_SEARCH	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_SEARCH;$/;"	m	class:gnote::Preferences	access:public
KEYBINDING_OPEN_SEARCH_DEFAULT	src/prefskeybinder.cpp	37;"	d	file:
KEYBINDING_OPEN_START_HERE	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_START_HERE = "open-start-here";$/;"	m	class:gnote::Preferences	file:
KEYBINDING_OPEN_START_HERE	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_START_HERE;$/;"	m	class:gnote::Preferences	access:public
KEYBINDING_OPEN_START_HERE_DEFAULT	src/prefskeybinder.cpp	35;"	d	file:
KEYBINDING_SHOW_NOTE_MENU	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_SHOW_NOTE_MENU = "show-note-menu";$/;"	m	class:gnote::Preferences	file:
KEYBINDING_SHOW_NOTE_MENU	src/preferences.hpp	/^    static const char *KEYBINDING_SHOW_NOTE_MENU;$/;"	m	class:gnote::Preferences	access:public
KEYBINDING_SHOW_NOTE_MENU_DEFAULT	src/prefskeybinder.cpp	34;"	d	file:
KEYRING_ITEM_NAME	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^const char *WebDavSyncServiceAddin::KEYRING_ITEM_NAME = "Tomboy sync WebDAV account";$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	file:
KEYRING_ITEM_NAME	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static const char *KEYRING_ITEM_NAME;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
KeybindingToAccel	src/tray.hpp	/^class KeybindingToAccel$/;"	c	namespace:gnote
KeyringException	src/gnome_keyring/keyringexception.hpp	/^  KeyringException(const std::string & msg)$/;"	f	class:gnome::keyring::KeyringException	access:public	signature:(const std::string & msg)
KeyringException	src/gnome_keyring/keyringexception.hpp	/^class KeyringException$/;"	c	namespace:gnome::keyring	inherits:std::exception
LANG_DISABLED	src/watchers.cpp	/^  const char *NoteSpellChecker::LANG_DISABLED = "disabled";$/;"	m	class:gnote::NoteSpellChecker	file:
LANG_DISABLED	src/watchers.hpp	/^    static const char *LANG_DISABLED;$/;"	m	class:gnote::NoteSpellChecker	access:private
LANG_PREFIX	src/watchers.cpp	/^  const char *NoteSpellChecker::LANG_PREFIX = "spellchecklang:";$/;"	m	class:gnote::NoteSpellChecker	file:
LANG_PREFIX	src/watchers.hpp	/^    static const char *LANG_PREFIX;$/;"	m	class:gnote::NoteSpellChecker	access:private
LD	Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	data/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	data/appdata/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	data/icons/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	help/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	libtomboy/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/backlinks/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/bugzilla/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/exporttogtg/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/exporttohtml/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/filesystemsyncservice/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/fixedwidth/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/inserttimestamp/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/notedirectorywatcher/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/noteoftheday/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/printnotes/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/readonly/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/replacetitle/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/specialnotes/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/statistics/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/stickynoteimport/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/tableofcontents/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/todo/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/tomboyimport/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/underline/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/addins/webdavsyncservice/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LD	src/dbus/Makefile	/^LD = \/usr\/bin\/ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	data/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	data/appdata/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	data/icons/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	help/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	libtomboy/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/backlinks/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/bugzilla/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/exporttogtg/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/exporttohtml/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/filesystemsyncservice/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/fixedwidth/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/inserttimestamp/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/notedirectorywatcher/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/noteoftheday/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/printnotes/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/readonly/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/replacetitle/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/specialnotes/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/statistics/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/stickynoteimport/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/tableofcontents/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/todo/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/tomboyimport/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/underline/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/addins/webdavsyncservice/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	src/dbus/Makefile	/^LDFLAGS = $/;"	m
LIBGLIBMM_CFLAGS	Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	data/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	data/appdata/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	data/icons/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	help/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	libtomboy/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/backlinks/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/bugzilla/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/exporttogtg/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/exporttohtml/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/fixedwidth/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/inserttimestamp/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/noteoftheday/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/printnotes/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/readonly/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/replacetitle/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/specialnotes/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/statistics/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/stickynoteimport/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/tableofcontents/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/todo/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/tomboyimport/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/underline/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/addins/webdavsyncservice/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_CFLAGS	src/dbus/Makefile	/^LIBGLIBMM_CFLAGS = -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include $/;"	m
LIBGLIBMM_LIBS	Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	data/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	data/appdata/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	data/icons/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	help/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	libtomboy/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/backlinks/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/bugzilla/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/exporttogtg/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/exporttohtml/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/fixedwidth/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/inserttimestamp/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/noteoftheday/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/printnotes/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/readonly/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/replacetitle/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/specialnotes/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/statistics/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/stickynoteimport/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/tableofcontents/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/todo/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/tomboyimport/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/underline/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/addins/webdavsyncservice/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGLIBMM_LIBS	src/dbus/Makefile	/^LIBGLIBMM_LIBS = -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
LIBGNOTE_LIBS	src/Makefile	/^LIBGNOTE_LIBS = $(LIBTOMBOY_LIBS)\\$/;"	m
LIBGNOTE_RELEASE	Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	config.h	89;"	d
LIBGNOTE_RELEASE	data/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	data/appdata/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	data/icons/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	help/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	libtomboy/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/backlinks/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/bugzilla/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/exporttogtg/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/exporttohtml/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/filesystemsyncservice/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/fixedwidth/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/inserttimestamp/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/notedirectorywatcher/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/noteoftheday/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/printnotes/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/readonly/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/replacetitle/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/specialnotes/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/statistics/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/stickynoteimport/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/tableofcontents/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/todo/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/tomboyimport/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/underline/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/addins/webdavsyncservice/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_RELEASE	src/dbus/Makefile	/^LIBGNOTE_RELEASE = 3.15$/;"	m
LIBGNOTE_VERSION_INFO	Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	config.h	92;"	d
LIBGNOTE_VERSION_INFO	data/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	data/appdata/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	data/icons/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	help/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	libtomboy/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/backlinks/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/bugzilla/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/exporttogtg/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/exporttohtml/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/filesystemsyncservice/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/fixedwidth/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/inserttimestamp/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/notedirectorywatcher/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/noteoftheday/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/printnotes/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/readonly/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/replacetitle/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/specialnotes/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/statistics/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/stickynoteimport/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/tableofcontents/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/todo/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/tomboyimport/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/underline/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/addins/webdavsyncservice/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGNOTE_VERSION_INFO	src/dbus/Makefile	/^LIBGNOTE_VERSION_INFO = 0:0:0$/;"	m
LIBGTKMM_CFLAGS	Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	data/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	data/appdata/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	data/icons/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	help/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	libtomboy/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/backlinks/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/bugzilla/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/exporttogtg/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/exporttohtml/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/fixedwidth/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/inserttimestamp/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/noteoftheday/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/printnotes/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/readonly/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/replacetitle/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/specialnotes/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/statistics/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/stickynoteimport/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/tableofcontents/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/todo/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/tomboyimport/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/underline/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/addins/webdavsyncservice/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_CFLAGS	src/dbus/Makefile	/^LIBGTKMM_CFLAGS = -pthread -I\/usr\/include\/gtkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gtkmm-3.0\/include -I\/usr\/include\/atkmm-1.6 -I\/usr\/include\/gtk-3.0\/unix-print -I\/usr\/include\/gdkmm-3.0 -I\/usr\/lib\/i386-linux-gnu\/gdkmm-3.0\/include -I\/usr\/include\/giomm-2.4 -I\/usr\/lib\/i386-linux-gnu\/giomm-2.4\/include -I\/usr\/include\/pangomm-1.4 -I\/usr\/lib\/i386-linux-gnu\/pangomm-1.4\/include -I\/usr\/include\/glibmm-2.4 -I\/usr\/lib\/i386-linux-gnu\/glibmm-2.4\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/at-spi2-atk\/2.0 -I\/usr\/include\/at-spi-2.0 -I\/usr\/include\/dbus-1.0 -I\/usr\/lib\/i386-linux-gnu\/dbus-1.0\/include -I\/usr\/include\/gtk-3.0 -I\/usr\/include\/gio-unix-2.0\/ -I\/usr\/include\/mirclient -I\/usr\/include\/mircommon -I\/usr\/include\/cairo -I\/usr\/include\/pango-1.0 -I\/usr\/include\/harfbuzz -I\/usr\/include\/pango-1.0 -I\/usr\/include\/atk-1.0 -I\/usr\/include\/cairo -I\/usr\/include\/cairomm-1.0 -I\/usr\/lib\/i386-linux-gnu\/cairomm-1.0\/include -I\/usr\/include\/cairo -I\/usr\/include\/pixman-1 -I\/usr\/include\/freetype2 -I\/usr\/include\/libpng12 -I\/usr\/include\/sigc++-2.0 -I\/usr\/lib\/i386-linux-gnu\/sigc++-2.0\/include -I\/usr\/include\/gdk-pixbuf-2.0 -I\/usr\/include\/libpng12 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBGTKMM_LIBS	Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	data/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	data/appdata/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	data/icons/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	help/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	libtomboy/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/backlinks/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/bugzilla/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/exporttogtg/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/exporttohtml/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/fixedwidth/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/inserttimestamp/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/noteoftheday/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/printnotes/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/readonly/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/replacetitle/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/specialnotes/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/statistics/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/stickynoteimport/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/tableofcontents/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/todo/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/tomboyimport/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/underline/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/addins/webdavsyncservice/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBGTKMM_LIBS	src/dbus/Makefile	/^LIBGTKMM_LIBS = -lgtkmm-3.0 -latkmm-1.6 -lgdkmm-3.0 -lgiomm-2.4 -lpangomm-1.4 -lglibmm-2.4 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lgio-2.0 -lcairomm-1.0 -lcairo -lsigc-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	data/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	data/appdata/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	data/icons/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	help/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libtomboy/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/backlinks/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/bugzilla/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/exporttogtg/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/exporttohtml/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/filesystemsyncservice/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/fixedwidth/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/inserttimestamp/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/notedirectorywatcher/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/noteoftheday/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/printnotes/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/readonly/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/replacetitle/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/specialnotes/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/statistics/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/stickynoteimport/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/tableofcontents/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/todo/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/tomboyimport/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/underline/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/addins/webdavsyncservice/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	src/dbus/Makefile	/^LIBOBJS = $/;"	m
LIBS	Makefile	/^LIBS = $/;"	m
LIBS	data/Makefile	/^LIBS = $/;"	m
LIBS	data/appdata/Makefile	/^LIBS = $/;"	m
LIBS	data/icons/Makefile	/^LIBS = $/;"	m
LIBS	help/Makefile	/^LIBS = $/;"	m
LIBS	libtomboy/Makefile	/^LIBS = $/;"	m
LIBS	src/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/backlinks/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/bugzilla/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/exporttogtg/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/exporttohtml/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/fixedwidth/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/inserttimestamp/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/noteoftheday/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/printnotes/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/readonly/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/replacetitle/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/specialnotes/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/statistics/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/stickynoteimport/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/tableofcontents/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/todo/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/tomboyimport/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/underline/Makefile	/^LIBS = $/;"	m
LIBS	src/addins/webdavsyncservice/Makefile	/^LIBS = $/;"	m
LIBS	src/dbus/Makefile	/^LIBS = $/;"	m
LIBSECRET_CFLAGS	Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	data/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	data/appdata/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	data/icons/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	help/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	libtomboy/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/backlinks/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/bugzilla/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/exporttogtg/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/exporttohtml/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/fixedwidth/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/inserttimestamp/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/noteoftheday/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/printnotes/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/readonly/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/replacetitle/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/specialnotes/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/statistics/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/stickynoteimport/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/tableofcontents/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/todo/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/tomboyimport/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/underline/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/addins/webdavsyncservice/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_CFLAGS	src/dbus/Makefile	/^LIBSECRET_CFLAGS = -pthread -I\/usr\/include\/libsecret-1 -I\/usr\/include\/glib-2.0 -I\/usr\/lib\/i386-linux-gnu\/glib-2.0\/include $/;"	m
LIBSECRET_LIBS	Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	data/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	data/appdata/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	data/icons/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	help/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	libtomboy/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/backlinks/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/bugzilla/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/exporttogtg/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/exporttohtml/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/fixedwidth/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/inserttimestamp/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/noteoftheday/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/printnotes/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/readonly/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/replacetitle/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/specialnotes/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/statistics/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/stickynoteimport/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/tableofcontents/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/todo/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/tomboyimport/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/underline/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/addins/webdavsyncservice/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBSECRET_LIBS	src/dbus/Makefile	/^LIBSECRET_LIBS = -lsecret-1 -lgio-2.0 -lgobject-2.0 -lglib-2.0 $/;"	m
LIBTOMBOYDIR	Makefile	/^LIBTOMBOYDIR = libtomboy$/;"	m
LIBTOMBOY_LIBS	src/Makefile	/^LIBTOMBOY_LIBS = $(top_builddir)\/libtomboy\/libtomboy.la$/;"	m
LIBTOOL	Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	data/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	data/appdata/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	data/icons/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	help/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libtomboy/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/backlinks/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/bugzilla/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/exporttogtg/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/exporttohtml/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/filesystemsyncservice/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/fixedwidth/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/inserttimestamp/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/notedirectorywatcher/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/noteoftheday/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/printnotes/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/readonly/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/replacetitle/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/specialnotes/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/statistics/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/stickynoteimport/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/tableofcontents/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/todo/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/tomboyimport/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/underline/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/addins/webdavsyncservice/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	src/dbus/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBXML_CFLAGS	Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	data/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	data/appdata/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	data/icons/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	help/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	libtomboy/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/backlinks/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/bugzilla/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/exporttogtg/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/exporttohtml/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/fixedwidth/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/inserttimestamp/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/noteoftheday/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/printnotes/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/readonly/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/replacetitle/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/specialnotes/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/statistics/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/stickynoteimport/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/tableofcontents/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/todo/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/tomboyimport/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/underline/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/addins/webdavsyncservice/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_CFLAGS	src/dbus/Makefile	/^LIBXML_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXML_LIBS	Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	data/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	data/appdata/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	data/icons/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	help/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	libtomboy/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/backlinks/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/bugzilla/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/exporttogtg/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/exporttohtml/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/fixedwidth/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/inserttimestamp/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/noteoftheday/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/printnotes/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/readonly/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/replacetitle/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/specialnotes/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/statistics/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/stickynoteimport/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/tableofcontents/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/todo/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/tomboyimport/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/underline/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/addins/webdavsyncservice/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXML_LIBS	src/dbus/Makefile	/^LIBXML_LIBS = -lxml2 $/;"	m
LIBXSLT_CFLAGS	Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	data/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	data/appdata/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	data/icons/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	help/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	libtomboy/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/backlinks/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/bugzilla/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/exporttogtg/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/exporttohtml/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/fixedwidth/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/inserttimestamp/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/noteoftheday/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/printnotes/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/readonly/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/replacetitle/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/specialnotes/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/statistics/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/stickynoteimport/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/tableofcontents/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/todo/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/tomboyimport/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/underline/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/addins/webdavsyncservice/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_CFLAGS	src/dbus/Makefile	/^LIBXSLT_CFLAGS = -I\/usr\/include\/libxml2 $/;"	m
LIBXSLT_LIBS	Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	data/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	data/appdata/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	data/icons/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	help/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	libtomboy/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/backlinks/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/bugzilla/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/exporttogtg/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/exporttohtml/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/filesystemsyncservice/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/fixedwidth/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/inserttimestamp/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/notedirectorywatcher/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/noteoftheday/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/printnotes/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/readonly/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/replacetitle/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/specialnotes/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/statistics/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/stickynoteimport/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/tableofcontents/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/todo/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/tomboyimport/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/underline/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/addins/webdavsyncservice/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LIBXSLT_LIBS	src/dbus/Makefile	/^LIBXSLT_LIBS = -lxslt -lxml2 $/;"	m
LINK	libtomboy/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/backlinks/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/bugzilla/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/exporttogtg/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/exporttohtml/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/filesystemsyncservice/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/fixedwidth/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/inserttimestamp/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/notedirectorywatcher/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/noteoftheday/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/printnotes/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/readonly/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/replacetitle/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/specialnotes/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/statistics/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/stickynoteimport/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/tableofcontents/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/todo/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/tomboyimport/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/underline/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	src/addins/webdavsyncservice/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LIPO	Makefile	/^LIPO = $/;"	m
LIPO	data/Makefile	/^LIPO = $/;"	m
LIPO	data/appdata/Makefile	/^LIPO = $/;"	m
LIPO	data/icons/Makefile	/^LIPO = $/;"	m
LIPO	help/Makefile	/^LIPO = $/;"	m
LIPO	libtomboy/Makefile	/^LIPO = $/;"	m
LIPO	src/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/backlinks/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/bugzilla/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/exporttogtg/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/exporttohtml/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/filesystemsyncservice/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/fixedwidth/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/inserttimestamp/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/notedirectorywatcher/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/noteoftheday/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/printnotes/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/readonly/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/replacetitle/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/specialnotes/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/statistics/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/stickynoteimport/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/tableofcontents/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/todo/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/tomboyimport/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/underline/Makefile	/^LIPO = $/;"	m
LIPO	src/addins/webdavsyncservice/Makefile	/^LIPO = $/;"	m
LIPO	src/dbus/Makefile	/^LIPO = $/;"	m
LN_S	Makefile	/^LN_S = ln -s$/;"	m
LN_S	data/Makefile	/^LN_S = ln -s$/;"	m
LN_S	data/appdata/Makefile	/^LN_S = ln -s$/;"	m
LN_S	data/icons/Makefile	/^LN_S = ln -s$/;"	m
LN_S	help/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libtomboy/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/backlinks/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/bugzilla/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/exporttogtg/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/exporttohtml/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/filesystemsyncservice/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/fixedwidth/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/inserttimestamp/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/notedirectorywatcher/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/noteoftheday/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/printnotes/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/readonly/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/replacetitle/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/specialnotes/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/statistics/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/stickynoteimport/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/tableofcontents/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/todo/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/tomboyimport/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/underline/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/addins/webdavsyncservice/Makefile	/^LN_S = ln -s$/;"	m
LN_S	src/dbus/Makefile	/^LN_S = ln -s$/;"	m
LOCAL_MANIFEST_FILE_NAME	src/synchronization/gnotesyncclient.cpp	/^  const char * GnoteSyncClient::LOCAL_MANIFEST_FILE_NAME = "manifest.xml";$/;"	m	class:gnote::sync::GnoteSyncClient	file:
LOCAL_MANIFEST_FILE_NAME	src/synchronization/gnotesyncclient.hpp	/^    static const char *LOCAL_MANIFEST_FILE_NAME;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
LOCKED	src/synchronization/syncutils.hpp	/^    LOCKED,$/;"	e	enum:gnote::sync::SyncState
LOG_COMPILE	src/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_DRIVER	src/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/test-driver$/;"	m
LOG_MSG	src/debug.cpp	118;"	d	file:
LOG_MSG	src/debug.cpp	131;"	d	file:
LOG_OUT	src/debug.hpp	60;"	d
LTCOMPILE	libtomboy/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/backlinks/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/bugzilla/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/exporttogtg/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/exporttohtml/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/filesystemsyncservice/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/fixedwidth/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/inserttimestamp/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/notedirectorywatcher/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/noteoftheday/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/printnotes/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/readonly/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/replacetitle/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/specialnotes/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/statistics/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/stickynoteimport/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/tableofcontents/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/todo/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/tomboyimport/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/underline/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	src/addins/webdavsyncservice/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/backlinks/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/bugzilla/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/exporttogtg/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/exporttohtml/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/filesystemsyncservice/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/fixedwidth/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/inserttimestamp/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/notedirectorywatcher/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/noteoftheday/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/printnotes/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/readonly/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/replacetitle/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/specialnotes/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/statistics/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/stickynoteimport/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/tableofcontents/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/todo/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/tomboyimport/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/underline/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCXXCOMPILE	src/addins/webdavsyncservice/Makefile	/^LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	data/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	data/appdata/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	data/icons/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	help/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libtomboy/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/backlinks/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/bugzilla/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/exporttogtg/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/exporttohtml/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/filesystemsyncservice/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/fixedwidth/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/inserttimestamp/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/notedirectorywatcher/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/noteoftheday/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/printnotes/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/readonly/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/replacetitle/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/specialnotes/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/statistics/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/stickynoteimport/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/tableofcontents/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/todo/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/tomboyimport/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/underline/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/addins/webdavsyncservice/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	src/dbus/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	libtomboy/Makefile	/^LTLIBRARIES = $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/backlinks/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/bugzilla/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/exporttogtg/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/exporttohtml/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/filesystemsyncservice/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/fixedwidth/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/inserttimestamp/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/notedirectorywatcher/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/noteoftheday/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/printnotes/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/readonly/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/replacetitle/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/specialnotes/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/statistics/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/stickynoteimport/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/tableofcontents/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/todo/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/tomboyimport/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/underline/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LTLIBRARIES	src/addins/webdavsyncservice/Makefile	/^LTLIBRARIES = $(addins_LTLIBRARIES)$/;"	m
LT_OBJDIR	config.h	96;"	d
LaunchSearch_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::LaunchSearch_stub(const Glib::VariantContainerBase &)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase &)
LaunchSearch_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase LaunchSearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
Level_1	src/addins/tableofcontents/tableofcontents.hpp	/^    Level_1,       \/\/  Heading::Level_1  == 1st level heading == Ctrl-1$/;"	e	enum:tableofcontents::Heading::Type
Level_2	src/addins/tableofcontents/tableofcontents.hpp	/^    Level_2,       \/\/  Heading::Level_2  == 2nd level heading == Ctrl-2$/;"	e	enum:tableofcontents::Heading::Type
List	src/note.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::Note	access:public
List	src/notebase.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::NoteBase	access:public
List	src/triehit.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::TrieHit	access:public
ListAllNotes	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> ListAllNotes() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
ListAllNotes	src/dbus/remotecontrol.cpp	/^std::vector< std::string > RemoteControl::ListAllNotes()$/;"	f	class:gnote::RemoteControl	signature:()
ListAllNotes_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::ListAllNotes_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
ListAllNotes_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase ListAllNotes_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
ListPtr	src/triehit.hpp	/^  typedef shared_ptr<List> ListPtr;$/;"	t	class:gnote::TrieHit	access:public
MAILTO_URI_SCHEME	src/sharp/uri.cpp	33;"	d	file:
MAINT	Makefile	/^MAINT = $/;"	m
MAINT	data/Makefile	/^MAINT = $/;"	m
MAINT	data/appdata/Makefile	/^MAINT = $/;"	m
MAINT	data/icons/Makefile	/^MAINT = $/;"	m
MAINT	help/Makefile	/^MAINT = $/;"	m
MAINT	libtomboy/Makefile	/^MAINT = $/;"	m
MAINT	src/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/backlinks/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/bugzilla/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/exporttogtg/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/exporttohtml/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/filesystemsyncservice/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/fixedwidth/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/inserttimestamp/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/notedirectorywatcher/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/noteoftheday/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/printnotes/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/readonly/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/replacetitle/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/specialnotes/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/statistics/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/stickynoteimport/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/tableofcontents/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/todo/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/tomboyimport/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/underline/Makefile	/^MAINT = $/;"	m
MAINT	src/addins/webdavsyncservice/Makefile	/^MAINT = $/;"	m
MAINT	src/dbus/Makefile	/^MAINT = $/;"	m
MAIN_WINDOW_MAXIMIZED	src/preferences.cpp	/^  const char * Preferences::MAIN_WINDOW_MAXIMIZED = "main-window-maximized";$/;"	m	class:gnote::Preferences	file:
MAIN_WINDOW_MAXIMIZED	src/preferences.hpp	/^    static const char *MAIN_WINDOW_MAXIMIZED;$/;"	m	class:gnote::Preferences	access:public
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	data/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	data/appdata/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	data/icons/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	help/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	libtomboy/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/backlinks/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/bugzilla/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/exporttogtg/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/exporttohtml/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/filesystemsyncservice/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/fixedwidth/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/inserttimestamp/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/notedirectorywatcher/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/noteoftheday/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/printnotes/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/readonly/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/replacetitle/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/specialnotes/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/statistics/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/stickynoteimport/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/tableofcontents/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/todo/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/tomboyimport/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/underline/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/addins/webdavsyncservice/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MAKEINFO	src/dbus/Makefile	/^MAKEINFO = ${SHELL} \/development\/gitarchives\/gnote\/missing makeinfo$/;"	m
MANIFEST_TOOL	Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	data/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	data/appdata/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	data/icons/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	help/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libtomboy/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/backlinks/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/bugzilla/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/exporttogtg/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/exporttohtml/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/filesystemsyncservice/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/fixedwidth/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/inserttimestamp/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/notedirectorywatcher/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/noteoftheday/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/printnotes/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/readonly/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/replacetitle/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/specialnotes/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/statistics/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/stickynoteimport/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/tableofcontents/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/todo/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/tomboyimport/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/underline/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/addins/webdavsyncservice/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	src/dbus/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANS	data/Makefile	/^MANS = $(man_MANS)$/;"	m
MENU_NOTE_COUNT	src/preferences.cpp	/^  const char * Preferences::MENU_NOTE_COUNT = "menu-note-count";$/;"	m	class:gnote::Preferences	file:
MENU_NOTE_COUNT	src/preferences.hpp	/^    static const char *MENU_NOTE_COUNT;$/;"	m	class:gnote::Preferences	access:public
MENU_PINNED_NOTES	src/preferences.cpp	/^  const char * Preferences::MENU_PINNED_NOTES = "menu-pinned-notes";$/;"	m	class:gnote::Preferences	file:
MENU_PINNED_NOTES	src/preferences.hpp	/^    static const char *MENU_PINNED_NOTES;$/;"	m	class:gnote::Preferences	access:public
META	src/notetag.hpp	/^  META,$/;"	e	enum:gnote::TagSaveType
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	data/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	data/appdata/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	data/icons/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	help/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libtomboy/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/backlinks/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/bugzilla/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/exporttogtg/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/exporttohtml/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/filesystemsyncservice/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/fixedwidth/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/inserttimestamp/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/notedirectorywatcher/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/noteoftheday/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/printnotes/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/readonly/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/replacetitle/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/specialnotes/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/statistics/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/stickynoteimport/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/tableofcontents/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/todo/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/tomboyimport/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/underline/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/addins/webdavsyncservice/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	src/dbus/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKINSTALLDIRS	Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	data/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	data/appdata/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	data/icons/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	help/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	libtomboy/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/backlinks/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/bugzilla/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/exporttogtg/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/exporttohtml/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/filesystemsyncservice/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/fixedwidth/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/inserttimestamp/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/notedirectorywatcher/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/noteoftheday/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/printnotes/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/readonly/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/replacetitle/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/specialnotes/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/statistics/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/stickynoteimport/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/tableofcontents/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/todo/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/tomboyimport/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/underline/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/addins/webdavsyncservice/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MKINSTALLDIRS	src/dbus/Makefile	/^MKINSTALLDIRS = .\/mkinstalldirs$/;"	m
MODMAP_ENTRY_TO_MODIFIER	libtomboy/eggaccelerators.c	40;"	d	file:
MSGFMT	Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	data/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	data/appdata/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	data/icons/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	help/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	libtomboy/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	po/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/backlinks/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/bugzilla/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/exporttogtg/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/exporttohtml/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/filesystemsyncservice/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/fixedwidth/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/inserttimestamp/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/notedirectorywatcher/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/noteoftheday/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/printnotes/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/readonly/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/replacetitle/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/specialnotes/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/statistics/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/stickynoteimport/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/tableofcontents/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/todo/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/tomboyimport/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/underline/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/addins/webdavsyncservice/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT	src/dbus/Makefile	/^MSGFMT = \/usr\/bin\/msgfmt$/;"	m
MSGFMT_OPTS	Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	data/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	data/appdata/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	data/icons/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	help/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	libtomboy/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/backlinks/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/bugzilla/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/exporttogtg/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/exporttohtml/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/filesystemsyncservice/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/fixedwidth/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/inserttimestamp/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/notedirectorywatcher/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/noteoftheday/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/printnotes/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/readonly/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/replacetitle/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/specialnotes/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/statistics/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/stickynoteimport/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/tableofcontents/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/todo/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/tomboyimport/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/underline/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/addins/webdavsyncservice/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGFMT_OPTS	src/dbus/Makefile	/^MSGFMT_OPTS = -c$/;"	m
MSGMERGE	Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	data/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	data/appdata/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	data/icons/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	help/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	libtomboy/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	po/Makefile	/^MSGMERGE = INTLTOOL_EXTRACT="$(INTLTOOL_EXTRACT)" XGETTEXT="$(XGETTEXT)" srcdir=$(srcdir) $(INTLTOOL_UPDATE) --gettext-package $(GETTEXT_PACKAGE) --dist$/;"	m
MSGMERGE	src/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/backlinks/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/bugzilla/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/exporttogtg/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/exporttohtml/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/filesystemsyncservice/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/fixedwidth/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/inserttimestamp/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/notedirectorywatcher/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/noteoftheday/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/printnotes/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/readonly/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/replacetitle/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/specialnotes/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/statistics/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/stickynoteimport/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/tableofcontents/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/todo/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/tomboyimport/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/underline/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/addins/webdavsyncservice/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MSGMERGE	src/dbus/Makefile	/^MSGMERGE = \/usr\/bin\/msgmerge$/;"	m
MainWindow	src/mainwindow.cpp	/^MainWindow::MainWindow(const std::string & title)$/;"	f	class:gnote::MainWindow	signature:(const std::string & title)
MainWindow	src/mainwindow.hpp	/^  explicit MainWindow(const std::string & title);$/;"	p	class:gnote::MainWindow	access:public	signature:(const std::string & title)
MainWindow	src/mainwindow.hpp	/^class MainWindow$/;"	c	namespace:gnote	inherits:utils::ForcedPresentWindow,EmbeddableWidgetHost
MapPtr	src/noterenamedialog.hpp	/^  typedef shared_ptr<std::map<NoteBase::Ptr, bool> > MapPtr;$/;"	t	class:gnote::NoteRenameDialog	access:public
Match	src/notewindow.hpp	/^  struct Match$/;"	s	class:gnote::NoteFindHandler	access:private
ModelColumnRecord	src/noterenamedialog.cpp	/^ModelColumnRecord::ModelColumnRecord()$/;"	f	class:gnote::ModelColumnRecord	signature:()
ModelColumnRecord	src/noterenamedialog.hpp	/^  ModelColumnRecord();$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:()
ModelColumnRecord	src/noterenamedialog.hpp	/^class ModelColumnRecord$/;"	c	namespace:gnote	inherits:Gtk::TreeModelColumnRecord
ModelFiller	src/noterenamedialog.cpp	/^  ModelFiller(const Glib::RefPtr<Gtk::ListStore> & list_store);$/;"	p	class:gnote::ModelFiller	file:	access:public	signature:(const Glib::RefPtr<Gtk::ListStore> & list_store)
ModelFiller	src/noterenamedialog.cpp	/^ModelFiller::ModelFiller($/;"	f	class:gnote::ModelFiller	signature:( const Glib::RefPtr<Gtk::ListStore> & list_store)
ModelFiller	src/noterenamedialog.cpp	/^class ModelFiller$/;"	c	namespace:gnote	file:	inherits:std::unary_function
ModuleManager	src/sharp/modulemanager.hpp	/^class ModuleManager $/;"	c	namespace:sharp
ModuleMap	src/sharp/modulemanager.hpp	/^typedef std::map<std::string, DynamicModule*> ModuleMap;$/;"	t	namespace:sharp
MouseHandWatcher	src/watchers.hpp	/^    MouseHandWatcher()$/;"	f	class:gnote::MouseHandWatcher	access:protected	signature:()
MouseHandWatcher	src/watchers.hpp	/^  class MouseHandWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
NDEBUG	src/debug.cpp	49;"	d	file:
NDEBUG	src/debug.cpp	55;"	d	file:
NM	Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	data/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	data/appdata/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	data/icons/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	help/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libtomboy/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/backlinks/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/bugzilla/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/exporttogtg/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/exporttohtml/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/filesystemsyncservice/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/fixedwidth/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/inserttimestamp/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/notedirectorywatcher/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/noteoftheday/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/printnotes/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/readonly/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/replacetitle/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/specialnotes/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/statistics/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/stickynoteimport/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/tableofcontents/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/todo/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/tomboyimport/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/underline/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/addins/webdavsyncservice/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	src/dbus/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	Makefile	/^NMEDIT = $/;"	m
NMEDIT	data/Makefile	/^NMEDIT = $/;"	m
NMEDIT	data/appdata/Makefile	/^NMEDIT = $/;"	m
NMEDIT	data/icons/Makefile	/^NMEDIT = $/;"	m
NMEDIT	help/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libtomboy/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/backlinks/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/bugzilla/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/exporttogtg/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/exporttohtml/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/filesystemsyncservice/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/fixedwidth/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/inserttimestamp/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/notedirectorywatcher/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/noteoftheday/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/printnotes/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/readonly/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/replacetitle/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/specialnotes/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/statistics/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/stickynoteimport/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/tableofcontents/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/todo/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/tomboyimport/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/underline/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/addins/webdavsyncservice/Makefile	/^NMEDIT = $/;"	m
NMEDIT	src/dbus/Makefile	/^NMEDIT = $/;"	m
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	data/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	data/appdata/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	data/icons/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	help/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libtomboy/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/backlinks/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/bugzilla/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/exporttogtg/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/exporttohtml/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/filesystemsyncservice/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/fixedwidth/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/inserttimestamp/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/notedirectorywatcher/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/noteoftheday/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/printnotes/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/readonly/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/replacetitle/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/specialnotes/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/statistics/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/stickynoteimport/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/tableofcontents/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/todo/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/tomboyimport/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/underline/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/addins/webdavsyncservice/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	src/dbus/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	data/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	data/appdata/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	data/icons/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	help/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libtomboy/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/backlinks/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/bugzilla/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/exporttogtg/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/exporttohtml/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/filesystemsyncservice/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/fixedwidth/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/inserttimestamp/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/notedirectorywatcher/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/noteoftheday/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/printnotes/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/readonly/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/replacetitle/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/specialnotes/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/statistics/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/stickynoteimport/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/tableofcontents/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/todo/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/tomboyimport/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/underline/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/addins/webdavsyncservice/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	src/dbus/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTE	src/iconmanager.cpp	/^const char *IconManager::NOTE = "note";$/;"	m	class:gnote::IconManager	file:
NOTE	src/iconmanager.hpp	/^  static const char *NOTE;$/;"	m	class:gnote::IconManager	access:public
NOTEBOOK	src/iconmanager.cpp	/^const char *IconManager::NOTEBOOK = "notebook";$/;"	m	class:gnote::IconManager	file:
NOTEBOOK	src/iconmanager.hpp	/^  static const char *NOTEBOOK;$/;"	m	class:gnote::IconManager	access:public
NOTEBOOK_NEW	src/iconmanager.cpp	/^const char *IconManager::NOTEBOOK_NEW = "notebook-new";$/;"	m	class:gnote::IconManager	file:
NOTEBOOK_NEW	src/iconmanager.hpp	/^  static const char *NOTEBOOK_NEW;$/;"	m	class:gnote::IconManager	access:public
NOTEBOOK_TAG_PREFIX	src/notebooks/notebook.cpp	/^  const char * Notebook::NOTEBOOK_TAG_PREFIX = "notebook:";$/;"	m	class:gnote::notebooks::Notebook	file:
NOTEBOOK_TAG_PREFIX	src/notebooks/notebook.hpp	/^  static const char * NOTEBOOK_TAG_PREFIX;$/;"	m	class:gnote::notebooks::Notebook	access:public
NOTE_NEW	src/iconmanager.cpp	/^const char *IconManager::NOTE_NEW = "note-new";$/;"	m	class:gnote::IconManager	file:
NOTE_NEW	src/iconmanager.hpp	/^  static const char *NOTE_NEW;$/;"	m	class:gnote::IconManager	access:public
NOTE_RENAME_ALWAYS_REMOVE_LINKS	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_REMOVE_LINKS = 1,$/;"	e	enum:gnote::NoteRenameBehavior
NOTE_RENAME_ALWAYS_RENAME_LINKS	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_RENAME_LINKS = 2$/;"	e	enum:gnote::NoteRenameBehavior
NOTE_RENAME_ALWAYS_SHOW_DIALOG	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_SHOW_DIALOG = 0,$/;"	e	enum:gnote::NoteRenameBehavior
NOTE_RENAME_BEHAVIOR	src/preferences.cpp	/^  const char * Preferences::NOTE_RENAME_BEHAVIOR = "note-rename-behavior";$/;"	m	class:gnote::Preferences	file:
NOTE_RENAME_BEHAVIOR	src/preferences.hpp	/^    static const char *NOTE_RENAME_BEHAVIOR;$/;"	m	class:gnote::Preferences	access:public
NO_CHANGE	src/tag.hpp	/^    NO_CHANGE,$/;"	e	enum:gnote::ChangeType
NO_CONFIGURED_SYNC_SERVICE	src/synchronization/syncutils.hpp	/^    NO_CONFIGURED_SYNC_SERVICE,$/;"	e	enum:gnote::sync::SyncState
NO_FLAG	src/notetag.hpp	/^    NO_FLAG       = 0,$/;"	e	enum:gnote::NoteTag::TagFlags
NO_SAVE	src/notetag.hpp	/^  NO_SAVE,$/;"	e	enum:gnote::TagSaveType
NROFF	data/Makefile	/^NROFF = nroff$/;"	m
NULL	data/icons/Makefile	/^NULL = $/;"	m
NUM_INDENT_BULLETS	src/notebuffer.cpp	50;"	d	file:
NewBulletHandler	src/notebuffer.hpp	/^  typedef sigc::signal<void, int, int, Pango::Direction> NewBulletHandler;$/;"	t	class:gnote::NoteBuffer	access:public
NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction()$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:()
NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label, const Glib::ustring & tooltip)
NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id, const Glib::ustring & label, const Glib::ustring & tooltip)
NonModifyingAction	src/notewindow.hpp	/^    NonModifyingAction();$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:()
NonModifyingAction	src/notewindow.hpp	/^    NonModifyingAction(const Glib::ustring & name, const Glib::ustring & icon_name,$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
NonModifyingAction	src/notewindow.hpp	/^    explicit NonModifyingAction(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(),$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(), const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
NonModifyingAction	src/notewindow.hpp	/^  class NonModifyingAction$/;"	c	class:gnote::NoteWindow	inherits:Gtk::Action,NonModifyingNoteAction	access:public
NonModifyingNoteAction	src/notewindow.hpp	/^  class NonModifyingNoteAction$/;"	c	class:gnote::NoteWindow	access:public
None	src/addins/tableofcontents/tableofcontents.hpp	/^    None           \/\/  Heading::None$/;"	e	enum:tableofcontents::Heading::Type
Note	src/note.cpp	/^  Note::Note(NoteData * _data, const Glib::ustring & filepath, NoteManager & _manager)$/;"	f	class:gnote::Note	signature:(NoteData * _data, const Glib::ustring & filepath, NoteManager & _manager)
Note	src/note.hpp	/^  Note(NoteData * data, const Glib::ustring & filepath, NoteManager & manager);$/;"	p	class:gnote::Note	access:private	signature:(NoteData * data, const Glib::ustring & filepath, NoteManager & manager)
Note	src/note.hpp	/^class Note $/;"	c	namespace:gnote	inherits:NoteBase
Note	src/test/testnote.cpp	/^Note::Note(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager_)$/;"	f	class:test::Note	signature:(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager_)
Note	src/test/testnote.hpp	/^  Note(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager);$/;"	p	class:test::Note	access:public	signature:(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager)
Note	src/test/testnote.hpp	/^class Note$/;"	c	namespace:test	inherits:gnote::NoteBase
NoteActionOrder	src/iactionmanager.hpp	/^enum NoteActionOrder {$/;"	g	namespace:gnote
NoteAdded	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteAdded(const std::string & uri)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri)
NoteAdded	src/dbus/remotecontrol-glue.hpp	/^  void NoteAdded(const std::string & );$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string & )
NoteAdded	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteAdded(const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&)
NoteAddin	src/noteaddin.hpp	/^class NoteAddin$/;"	c	namespace:gnote	inherits:AbstractAddin
NoteAddinMap	src/addinmanager.hpp	/^  typedef std::map<Note::Ptr, IdAddinMap> NoteAddinMap;$/;"	t	class:gnote::AddinManager	access:private
NoteArchiver	src/notebase.hpp	/^class NoteArchiver$/;"	c	namespace:gnote	inherits:base::Singleton
NoteBase	src/notebase.cpp	/^NoteBase::NoteBase(NoteData *, const Glib::ustring & filepath, NoteManagerBase & _manager)$/;"	f	class:gnote::NoteBase	signature:(NoteData *, const Glib::ustring & filepath, NoteManagerBase & _manager)
NoteBase	src/notebase.hpp	/^  NoteBase(NoteData *_data, const Glib::ustring & filepath, NoteManagerBase & manager);$/;"	p	class:gnote::NoteBase	access:public	signature:(NoteData *_data, const Glib::ustring & filepath, NoteManagerBase & manager)
NoteBase	src/notebase.hpp	/^class NoteBase$/;"	c	namespace:gnote	inherits:enable_shared_from_this,sigc::trackable
NoteBuffer	src/notebuffer.cpp	/^  NoteBuffer::NoteBuffer(const NoteTagTable::Ptr & tags, Note & note_)$/;"	f	class:gnote::NoteBuffer	signature:(const NoteTagTable::Ptr & tags, Note & note_)
NoteBuffer	src/notebuffer.hpp	/^  NoteBuffer(const NoteTagTable::Ptr &, Note &);$/;"	p	class:gnote::NoteBuffer	access:protected	signature:(const NoteTagTable::Ptr &, Note &)
NoteBuffer	src/notebuffer.hpp	/^class NoteBuffer $/;"	c	namespace:gnote	inherits:Gtk::TextBuffer
NoteBufferArchiver	src/notebuffer.hpp	/^class NoteBufferArchiver$/;"	c	namespace:gnote
NoteChangedSlot	src/notemanager.hpp	/^    typedef sigc::slot<void, const Note::Ptr &> NoteChangedSlot;$/;"	t	class:gnote::NoteManager	access:public
NoteData	src/note.cpp	/^  NoteData::NoteData(const std::string & _uri)$/;"	f	class:gnote::NoteData	signature:(const std::string & _uri)
NoteData	src/notebase.hpp	/^  NoteData(const std::string & _uri);$/;"	p	class:gnote::NoteData	access:public	signature:(const std::string & _uri)
NoteData	src/notebase.hpp	/^class NoteData$/;"	c	namespace:gnote
NoteDataBufferSynchronizer	src/note.hpp	/^  NoteDataBufferSynchronizer(NoteData * _data)$/;"	f	class:gnote::NoteDataBufferSynchronizer	access:public	signature:(NoteData * _data)
NoteDataBufferSynchronizer	src/note.hpp	/^class NoteDataBufferSynchronizer$/;"	c	namespace:gnote	inherits:NoteDataBufferSynchronizerBase
NoteDataBufferSynchronizerBase	src/notebase.hpp	/^  NoteDataBufferSynchronizerBase(NoteData *_data)$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:(NoteData *_data)
NoteDataBufferSynchronizerBase	src/notebase.hpp	/^class NoteDataBufferSynchronizerBase$/;"	c	namespace:gnote
NoteDeleted	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteDeleted(const std::string & uri, const std::string & title)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri, const std::string & title)
NoteDeleted	src/dbus/remotecontrol-glue.hpp	/^  void NoteDeleted(const std::string &, const std::string &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string &, const std::string &)
NoteDeleted	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteDeleted(const std::string&, const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&, const std::string&)
NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^NoteDirectoryWatcherApplicationAddin::NoteDirectoryWatcherApplicationAddin()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  NoteDirectoryWatcherApplicationAddin();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:()
NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^class NoteDirectoryWatcherApplicationAddin$/;"	c	namespace:notedirectorywatcher	inherits:gnote::ApplicationAddin
NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^NoteDirectoryWatcherModule::NoteDirectoryWatcherModule()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherModule	signature:()
NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  NoteDirectoryWatcherModule();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherModule	access:public	signature:()
NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^class NoteDirectoryWatcherModule$/;"	c	namespace:notedirectorywatcher	inherits:sharp::DynamicModule
NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^NoteDirectoryWatcherPreferences::NoteDirectoryWatcherPreferences(gnote::NoteManager &)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	signature:(gnote::NoteManager &)
NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  NoteDirectoryWatcherPreferences(gnote::NoteManager &);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:public	signature:(gnote::NoteManager &)
NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^class NoteDirectoryWatcherPreferences$/;"	c	namespace:notedirectorywatcher	inherits:Gtk::Grid
NoteDirectoryWatcherPreferencesFactory	src/addins/notedirectorywatcher/notedirectorywatcherpreferencesfactory.hpp	/^class NoteDirectoryWatcherPreferencesFactory$/;"	c	namespace:notedirectorywatcher	inherits:gnote::AddinPreferenceFactory
NoteEditor	src/noteeditor.cpp	/^  NoteEditor::NoteEditor(const Glib::RefPtr<Gtk::TextBuffer> & buffer)$/;"	f	class:gnote::NoteEditor	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
NoteEditor	src/noteeditor.hpp	/^  NoteEditor(const Glib::RefPtr<Gtk::TextBuffer> & buffer);$/;"	p	class:gnote::NoteEditor	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
NoteEditor	src/noteeditor.hpp	/^class NoteEditor$/;"	c	namespace:gnote	inherits:Gtk::TextView
NoteExists	src/dbus/remotecontrol-glue.hpp	/^  virtual bool NoteExists(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
NoteExists	src/dbus/remotecontrol.cpp	/^bool RemoteControl::NoteExists(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
NoteExists_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::NoteExists_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
NoteExists_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase NoteExists_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
NoteFileChangeRecord	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^struct NoteFileChangeRecord$/;"	s	namespace:notedirectorywatcher
NoteFindHandler	src/notewindow.cpp	/^  NoteFindHandler::NoteFindHandler(Note & note)$/;"	f	class:gnote::NoteFindHandler	signature:(Note & note)
NoteFindHandler	src/notewindow.hpp	/^  NoteFindHandler(Note & );$/;"	p	class:gnote::NoteFindHandler	access:public	signature:(Note & )
NoteFindHandler	src/notewindow.hpp	/^class NoteFindHandler$/;"	c	namespace:gnote
NoteLinkWatcher	src/watchers.hpp	/^  class NoteLinkWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
NoteManager	src/notemanager.cpp	/^  NoteManager::NoteManager(const Glib::ustring & directory)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & directory)
NoteManager	src/notemanager.hpp	/^    NoteManager(const Glib::ustring &);$/;"	p	class:gnote::NoteManager	access:public	signature:(const Glib::ustring &)
NoteManager	src/notemanager.hpp	/^  class NoteManager $/;"	c	namespace:gnote	inherits:NoteManagerBase
NoteManager	src/test/testnotemanager.cpp	/^NoteManager::NoteManager(const Glib::ustring & notesdir)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & notesdir)
NoteManager	src/test/testnotemanager.hpp	/^  explicit NoteManager(const Glib::ustring & notes_dir);$/;"	p	class:test::NoteManager	access:public	signature:(const Glib::ustring & notes_dir)
NoteManager	src/test/testnotemanager.hpp	/^class NoteManager$/;"	c	namespace:test	inherits:gnote::NoteManagerBase
NoteManagerBase	src/notemanagerbase.cpp	/^NoteManagerBase::NoteManagerBase(const Glib::ustring & directory)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & directory)
NoteManagerBase	src/notemanagerbase.hpp	/^  NoteManagerBase(const Glib::ustring & directory);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & directory)
NoteManagerBase	src/notemanagerbase.hpp	/^class NoteManagerBase$/;"	c	namespace:gnote
NoteMap	src/tag.hpp	/^    typedef std::map<std::string, NoteBase*> NoteMap;$/;"	t	class:gnote::Tag	access:private
NoteMenuItem	src/tray.cpp	/^  NoteMenuItem::NoteMenuItem(const Note::Ptr & note, bool show_pin)$/;"	f	class:gnote::NoteMenuItem	signature:(const Note::Ptr & note, bool show_pin)
NoteMenuItem	src/tray.hpp	/^  NoteMenuItem(const Note::Ptr & note, bool show_pin);$/;"	p	class:gnote::NoteMenuItem	access:public	signature:(const Note::Ptr & note, bool show_pin)
NoteMenuItem	src/tray.hpp	/^class NoteMenuItem $/;"	c	namespace:gnote	inherits:Gtk::ImageMenuItem
NoteNameResolver	src/addins/exporttohtml/notenameresolver.hpp	/^  NoteNameResolver(const gnote::NoteManagerBase &, const gnote::NoteBase::Ptr &)$/;"	f	class:exporttohtml::NoteNameResolver	access:public	signature:(const gnote::NoteManagerBase &, const gnote::NoteBase::Ptr &)
NoteNameResolver	src/addins/exporttohtml/notenameresolver.hpp	/^class NoteNameResolver$/;"	c	namespace:exporttohtml	inherits:sharp::XmlResolver
NoteOfTheDay	src/addins/noteoftheday/noteoftheday.hpp	/^class NoteOfTheDay$/;"	c	namespace:noteoftheday
NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayApplicationAddin::NoteOfTheDayApplicationAddin()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  NoteOfTheDayApplicationAddin();$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private	signature:()
NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^class NoteOfTheDayApplicationAddin$/;"	c	namespace:noteoftheday	inherits:gnote::ApplicationAddin
NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayModule::NoteOfTheDayModule()$/;"	f	class:noteoftheday::NoteOfTheDayModule	signature:()
NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  NoteOfTheDayModule();$/;"	p	class:noteoftheday::NoteOfTheDayModule	access:public	signature:()
NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^class NoteOfTheDayModule$/;"	c	namespace:noteoftheday	inherits:sharp::DynamicModule
NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^NoteOfTheDayPreferences::NoteOfTheDayPreferences(gnote::NoteManager & manager)$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:(gnote::NoteManager & manager)
NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  NoteOfTheDayPreferences(gnote::NoteManager &);$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:public	signature:(gnote::NoteManager &)
NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^class NoteOfTheDayPreferences$/;"	c	namespace:noteoftheday	inherits:Gtk::Grid
NoteOfTheDayPreferencesFactory	src/addins/noteoftheday/noteofthedaypreferencesfactory.hpp	/^class NoteOfTheDayPreferencesFactory$/;"	c	namespace:noteoftheday	inherits:gnote::AddinPreferenceFactory
NoteRecentChanges	src/recentchanges.cpp	/^  NoteRecentChanges::NoteRecentChanges(NoteManager& m)$/;"	f	class:gnote::NoteRecentChanges	signature:(NoteManager& m)
NoteRecentChanges	src/recentchanges.hpp	/^  NoteRecentChanges(NoteManager& m);$/;"	p	class:gnote::NoteRecentChanges	access:public	signature:(NoteManager& m)
NoteRecentChanges	src/recentchanges.hpp	/^class NoteRecentChanges$/;"	c	namespace:gnote	inherits:MainWindow
NoteRenameBehavior	src/noterenamedialog.hpp	/^enum NoteRenameBehavior {$/;"	g	namespace:gnote
NoteRenameDialog	src/noterenamedialog.cpp	/^NoteRenameDialog::NoteRenameDialog(const NoteBase::List & notes,$/;"	f	class:gnote::NoteRenameDialog	signature:(const NoteBase::List & notes, const std::string & old_title, const NoteBase::Ptr & renamed_note)
NoteRenameDialog	src/noterenamedialog.hpp	/^  NoteRenameDialog(const NoteBase::List & notes,$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:(const NoteBase::List & notes, const std::string & old_title, const NoteBase::Ptr & renamed_note)
NoteRenameDialog	src/noterenamedialog.hpp	/^class NoteRenameDialog$/;"	c	namespace:gnote	inherits:Gtk::Dialog
NoteRenameWatcher	src/watchers.hpp	/^    NoteRenameWatcher()$/;"	f	class:gnote::NoteRenameWatcher	access:protected	signature:()
NoteRenameWatcher	src/watchers.hpp	/^  class NoteRenameWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
NoteSaved	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteSaved(const std::string & uri)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri)
NoteSaved	src/dbus/remotecontrol-glue.hpp	/^  void NoteSaved(const std::string &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string &)
NoteSaved	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteSaved(const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&)
NoteSpellChecker	src/watchers.hpp	/^    NoteSpellChecker()$/;"	f	class:gnote::NoteSpellChecker	access:protected	signature:()
NoteSpellChecker	src/watchers.hpp	/^  class NoteSpellChecker $/;"	c	namespace:gnote	inherits:NoteAddin
NoteSyncType	src/synchronization/syncutils.hpp	/^  enum NoteSyncType {$/;"	g	namespace:gnote::sync
NoteTag	src/notetag.cpp	/^  NoteTag::NoteTag()$/;"	f	class:gnote::NoteTag	signature:()
NoteTag	src/notetag.cpp	/^  NoteTag::NoteTag(const std::string & tag_name, int flags) throw(sharp::Exception)$/;"	f	class:gnote::NoteTag	signature:(const std::string & tag_name, int flags)
NoteTag	src/notetag.hpp	/^  NoteTag();$/;"	p	class:gnote::NoteTag	access:protected	signature:()
NoteTag	src/notetag.hpp	/^  NoteTag(const std::string & tag_name, int flags = 0) throw(sharp::Exception);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const std::string & tag_name, int flags = 0)
NoteTag	src/notetag.hpp	/^class NoteTag$/;"	c	namespace:gnote	inherits:Gtk::TextTag
NoteTagTable	src/notetag.hpp	/^  NoteTagTable()$/;"	f	class:gnote::NoteTagTable	access:protected	signature:()
NoteTagTable	src/notetag.hpp	/^class NoteTagTable$/;"	c	namespace:gnote	inherits:Gtk::TextTagTable
NoteTagsWatcher	src/watchers.hpp	/^  class NoteTagsWatcher $/;"	c	namespace:gnote	inherits:NoteAddin
NoteTextMenu	src/notewindow.cpp	/^  NoteTextMenu::NoteTextMenu(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager & undo_manager)$/;"	f	class:gnote::NoteTextMenu	signature:(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager & undo_manager)
NoteTextMenu	src/notewindow.hpp	/^  NoteTextMenu(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager& undo_manager);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager& undo_manager)
NoteTextMenu	src/notewindow.hpp	/^class NoteTextMenu$/;"	c	namespace:gnote	inherits:Gtk::Menu
NoteUpdate	src/synchronization/syncutils.cpp	/^  NoteUpdate::NoteUpdate(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)
NoteUpdate	src/synchronization/syncutils.hpp	/^    NoteUpdate(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision);$/;"	p	class:gnote::sync::NoteUpdate	access:public	signature:(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)
NoteUpdate	src/synchronization/syncutils.hpp	/^  class NoteUpdate$/;"	c	namespace:gnote::sync
NoteUrlWatcher	src/watchers.cpp	/^  NoteUrlWatcher::NoteUrlWatcher()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
NoteUrlWatcher	src/watchers.hpp	/^    NoteUrlWatcher();$/;"	p	class:gnote::NoteUrlWatcher	access:protected	signature:()
NoteUrlWatcher	src/watchers.hpp	/^  class NoteUrlWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
NoteWikiWatcher	src/watchers.hpp	/^    NoteWikiWatcher()$/;"	f	class:gnote::NoteWikiWatcher	access:protected	signature:()
NoteWikiWatcher	src/watchers.hpp	/^  class NoteWikiWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
NoteWindow	src/notewindow.cpp	/^  NoteWindow::NoteWindow(Note & note)$/;"	f	class:gnote::NoteWindow	signature:(Note & note)
NoteWindow	src/notewindow.hpp	/^  NoteWindow(Note &);$/;"	p	class:gnote::NoteWindow	access:public	signature:(Note &)
NoteWindow	src/notewindow.hpp	/^class NoteWindow $/;"	c	namespace:gnote	inherits:Gtk::Grid,EmbeddableWidget,SearchableItem,HasEmbeddableToolbar,HasActions
Notebook	src/notebooks/notebook.cpp	/^  Notebook::Notebook(NoteManager & manager, const Tag::Ptr & notebookTag)$/;"	f	class:gnote::notebooks::Notebook	signature:(NoteManager & manager, const Tag::Ptr & notebookTag)
Notebook	src/notebooks/notebook.cpp	/^  Notebook::Notebook(NoteManager & manager, const std::string & name, bool is_special)$/;"	f	class:gnote::notebooks::Notebook	signature:(NoteManager & manager, const std::string & name, bool is_special)
Notebook	src/notebooks/notebook.hpp	/^  Notebook(NoteManager &, const Tag::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(NoteManager &, const Tag::Ptr &)
Notebook	src/notebooks/notebook.hpp	/^  Notebook(NoteManager &, const std::string &, bool is_special = false);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(NoteManager &, const std::string &, bool is_special = false)
Notebook	src/notebooks/notebook.hpp	/^  Notebook(const Notebook &);$/;"	p	class:gnote::notebooks::Notebook	access:private	signature:(const Notebook &)
Notebook	src/notebooks/notebook.hpp	/^class Notebook $/;"	c	namespace:gnote::notebooks	inherits:enable_shared_from_this
NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.cpp	/^    NotebookApplicationAddin::NotebookApplicationAddin()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.hpp	/^      NotebookApplicationAddin();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:protected	signature:()
NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.hpp	/^    class NotebookApplicationAddin$/;"	c	namespace:gnote::notebooks	inherits:ApplicationAddin
NotebookEventHandler	src/notebooks/notebookmanager.hpp	/^  typedef sigc::signal<void, const Note &, const Notebook::Ptr &> NotebookEventHandler;$/;"	t	class:gnote::notebooks::NotebookManager	access:public
NotebookManager	src/notebooks/notebookmanager.cpp	/^    NotebookManager::NotebookManager(NoteManager & manager)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(NoteManager & manager)
NotebookManager	src/notebooks/notebookmanager.hpp	/^  NotebookManager(NoteManager &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(NoteManager &)
NotebookManager	src/notebooks/notebookmanager.hpp	/^class NotebookManager$/;"	c	namespace:gnote::notebooks	inherits:base::Singleton
NotebookMenuItem	src/notebooks/notebookmenuitem.cpp	/^    NotebookMenuItem::NotebookMenuItem(Gtk::RadioButtonGroup & group, $/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(Gtk::RadioButtonGroup & group, const Note::Ptr & note, const Notebook::Ptr & notebook)
NotebookMenuItem	src/notebooks/notebookmenuitem.hpp	/^      NotebookMenuItem(Gtk::RadioButtonGroup & group, const Note::Ptr &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(Gtk::RadioButtonGroup & group, const Note::Ptr &, const Notebook::Ptr &)
NotebookMenuItem	src/notebooks/notebookmenuitem.hpp	/^    class NotebookMenuItem$/;"	c	namespace:gnote::notebooks	inherits:Gtk::RadioMenuItem
NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.cpp	/^    NotebookNewNoteMenuItem::NotebookNewNoteMenuItem(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const Notebook::Ptr & notebook)
NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.hpp	/^  NotebookNewNoteMenuItem(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const Notebook::Ptr &)
NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.hpp	/^class NotebookNewNoteMenuItem$/;"	c	namespace:gnote::notebooks	inherits:Gtk::ImageMenuItem
NotebookNoteAddin	src/notebooks/notebooknoteaddin.cpp	/^  NotebookNoteAddin::NotebookNoteAddin()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
NotebookNoteAddin	src/notebooks/notebooknoteaddin.hpp	/^    NotebookNoteAddin();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:protected	signature:()
NotebookNoteAddin	src/notebooks/notebooknoteaddin.hpp	/^  class NotebookNoteAddin$/;"	c	namespace:gnote::notebooks	inherits:NoteAddin
NotebooksTreeView	src/notebooks/notebookstreeview.cpp	/^    NotebooksTreeView::NotebooksTreeView(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)
NotebooksTreeView	src/notebooks/notebookstreeview.hpp	/^    NotebooksTreeView(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model);$/;"	p	class:gnote::notebooks::NotebooksTreeView	access:public	signature:(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)
NotebooksTreeView	src/notebooks/notebookstreeview.hpp	/^  class NotebooksTreeView$/;"	c	namespace:gnote::notebooks	inherits:Gtk::TreeView
OBJDUMP	Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	data/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	data/appdata/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	data/icons/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	help/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libtomboy/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/backlinks/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/bugzilla/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/exporttogtg/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/exporttohtml/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/filesystemsyncservice/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/fixedwidth/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/inserttimestamp/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/notedirectorywatcher/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/noteoftheday/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/printnotes/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/readonly/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/replacetitle/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/specialnotes/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/statistics/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/stickynoteimport/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/tableofcontents/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/todo/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/tomboyimport/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/underline/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/addins/webdavsyncservice/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	src/dbus/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	data/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	data/appdata/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	data/icons/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	help/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libtomboy/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/backlinks/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/bugzilla/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/exporttogtg/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/exporttohtml/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/filesystemsyncservice/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/fixedwidth/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/inserttimestamp/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/notedirectorywatcher/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/noteoftheday/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/printnotes/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/readonly/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/replacetitle/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/specialnotes/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/statistics/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/stickynoteimport/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/tableofcontents/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/todo/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/tomboyimport/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/underline/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/addins/webdavsyncservice/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	src/dbus/Makefile	/^OBJEXT = o$/;"	m
OPEN_NOTES_IN_NEW_WINDOW	src/preferences.cpp	/^  const char * Preferences::OPEN_NOTES_IN_NEW_WINDOW = "open-notes-in-new-window";$/;"	m	class:gnote::Preferences	file:
OPEN_NOTES_IN_NEW_WINDOW	src/preferences.hpp	/^    static const char *OPEN_NOTES_IN_NEW_WINDOW;$/;"	m	class:gnote::Preferences	access:public
OTHER_DATA_CHANGED	src/tag.hpp	/^    OTHER_DATA_CHANGED$/;"	e	enum:gnote::ChangeType
OTOOL	Makefile	/^OTOOL = $/;"	m
OTOOL	data/Makefile	/^OTOOL = $/;"	m
OTOOL	data/appdata/Makefile	/^OTOOL = $/;"	m
OTOOL	data/icons/Makefile	/^OTOOL = $/;"	m
OTOOL	help/Makefile	/^OTOOL = $/;"	m
OTOOL	libtomboy/Makefile	/^OTOOL = $/;"	m
OTOOL	src/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/backlinks/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/bugzilla/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/exporttogtg/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/exporttohtml/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/filesystemsyncservice/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/fixedwidth/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/inserttimestamp/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/notedirectorywatcher/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/noteoftheday/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/printnotes/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/readonly/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/replacetitle/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/specialnotes/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/statistics/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/stickynoteimport/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/tableofcontents/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/todo/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/tomboyimport/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/underline/Makefile	/^OTOOL = $/;"	m
OTOOL	src/addins/webdavsyncservice/Makefile	/^OTOOL = $/;"	m
OTOOL	src/dbus/Makefile	/^OTOOL = $/;"	m
OTOOL64	Makefile	/^OTOOL64 = $/;"	m
OTOOL64	data/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	data/appdata/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	data/icons/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	help/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libtomboy/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/backlinks/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/bugzilla/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/exporttogtg/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/exporttohtml/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/filesystemsyncservice/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/fixedwidth/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/inserttimestamp/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/notedirectorywatcher/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/noteoftheday/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/printnotes/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/readonly/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/replacetitle/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/specialnotes/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/statistics/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/stickynoteimport/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/tableofcontents/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/todo/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/tomboyimport/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/underline/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/addins/webdavsyncservice/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	src/dbus/Makefile	/^OTOOL64 = $/;"	m
OVERWRITE_EXISTING	src/synchronization/syncutils.hpp	/^    OVERWRITE_EXISTING,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
PACKAGE	Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	config.h	99;"	d
PACKAGE	data/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	data/appdata/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	data/icons/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	help/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	libtomboy/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	po/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/backlinks/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/bugzilla/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/exporttogtg/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/exporttohtml/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/filesystemsyncservice/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/fixedwidth/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/inserttimestamp/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/notedirectorywatcher/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/noteoftheday/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/printnotes/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/readonly/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/replacetitle/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/specialnotes/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/statistics/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/stickynoteimport/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/tableofcontents/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/todo/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/tomboyimport/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/underline/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/addins/webdavsyncservice/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE	src/dbus/Makefile	/^PACKAGE = gnote$/;"	m
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	config.h	102;"	d
PACKAGE_BUGREPORT	data/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	data/appdata/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	data/icons/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	help/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	libtomboy/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/backlinks/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/bugzilla/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/exporttogtg/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/exporttohtml/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/fixedwidth/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/inserttimestamp/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/noteoftheday/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/printnotes/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/readonly/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/replacetitle/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/specialnotes/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/statistics/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/stickynoteimport/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/tableofcontents/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/todo/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/tomboyimport/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/underline/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/addins/webdavsyncservice/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	src/dbus/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	config.h	105;"	d
PACKAGE_NAME	data/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	data/appdata/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	data/icons/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	help/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	libtomboy/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/backlinks/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/bugzilla/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/exporttogtg/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/exporttohtml/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/fixedwidth/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/inserttimestamp/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/noteoftheday/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/printnotes/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/readonly/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/replacetitle/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/specialnotes/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/statistics/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/stickynoteimport/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/tableofcontents/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/todo/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/tomboyimport/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/underline/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/addins/webdavsyncservice/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_NAME	src/dbus/Makefile	/^PACKAGE_NAME = gnote$/;"	m
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	config.h	108;"	d
PACKAGE_STRING	data/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	data/appdata/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	data/icons/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	help/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	libtomboy/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/backlinks/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/bugzilla/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/exporttogtg/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/exporttohtml/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/fixedwidth/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/inserttimestamp/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/noteoftheday/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/printnotes/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/readonly/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/replacetitle/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/specialnotes/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/statistics/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/stickynoteimport/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/tableofcontents/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/todo/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/tomboyimport/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/underline/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/addins/webdavsyncservice/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_STRING	src/dbus/Makefile	/^PACKAGE_STRING = gnote 3.15.0$/;"	m
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	config.h	111;"	d
PACKAGE_TARNAME	data/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	data/appdata/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	data/icons/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	help/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	libtomboy/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/backlinks/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/bugzilla/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/exporttogtg/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/exporttohtml/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/fixedwidth/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/inserttimestamp/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/noteoftheday/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/printnotes/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/readonly/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/replacetitle/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/specialnotes/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/statistics/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/stickynoteimport/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/tableofcontents/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/todo/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/tomboyimport/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/underline/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/addins/webdavsyncservice/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_TARNAME	src/dbus/Makefile	/^PACKAGE_TARNAME = gnote$/;"	m
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	114;"	d
PACKAGE_URL	data/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	data/appdata/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	data/icons/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	help/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	libtomboy/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/backlinks/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/bugzilla/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/exporttogtg/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/exporttohtml/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/fixedwidth/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/inserttimestamp/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/noteoftheday/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/printnotes/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/readonly/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/replacetitle/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/specialnotes/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/statistics/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/stickynoteimport/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/tableofcontents/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/todo/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/tomboyimport/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/underline/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/addins/webdavsyncservice/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	src/dbus/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	config.h	117;"	d
PACKAGE_VERSION	data/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	data/appdata/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	data/icons/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	help/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	libtomboy/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/backlinks/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/bugzilla/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/exporttogtg/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/exporttohtml/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/filesystemsyncservice/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/fixedwidth/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/inserttimestamp/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/notedirectorywatcher/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/noteoftheday/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/printnotes/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/readonly/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/replacetitle/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/specialnotes/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/statistics/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/stickynoteimport/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/tableofcontents/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/todo/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/tomboyimport/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/underline/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/addins/webdavsyncservice/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PACKAGE_VERSION	src/dbus/Makefile	/^PACKAGE_VERSION = 3.15.0$/;"	m
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	data/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	data/appdata/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	data/icons/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	help/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libtomboy/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/backlinks/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/bugzilla/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/exporttogtg/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/exporttohtml/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/filesystemsyncservice/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/fixedwidth/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/inserttimestamp/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/notedirectorywatcher/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/noteoftheday/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/printnotes/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/readonly/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/replacetitle/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/specialnotes/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/statistics/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/stickynoteimport/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/tableofcontents/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/todo/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/tomboyimport/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/underline/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/addins/webdavsyncservice/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	src/dbus/Makefile	/^PATH_SEPARATOR = :$/;"	m
PIN_ACTIVE	src/iconmanager.cpp	/^const char *IconManager::PIN_ACTIVE = "pin-active";$/;"	m	class:gnote::IconManager	file:
PIN_ACTIVE	src/iconmanager.hpp	/^  static const char *PIN_ACTIVE;$/;"	m	class:gnote::IconManager	access:public
PIN_DOWN	src/iconmanager.cpp	/^const char *IconManager::PIN_DOWN = "pin-down";$/;"	m	class:gnote::IconManager	file:
PIN_DOWN	src/iconmanager.hpp	/^  static const char *PIN_DOWN;$/;"	m	class:gnote::IconManager	access:public
PIN_UP	src/iconmanager.cpp	/^const char *IconManager::PIN_UP = "pin-up";$/;"	m	class:gnote::IconManager	file:
PIN_UP	src/iconmanager.hpp	/^  static const char *PIN_UP;$/;"	m	class:gnote::IconManager	access:public
PKG_CONFIG	Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	data/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	data/appdata/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	data/icons/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	help/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	libtomboy/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/backlinks/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/bugzilla/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/exporttogtg/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/exporttohtml/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/filesystemsyncservice/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/fixedwidth/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/inserttimestamp/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/notedirectorywatcher/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/noteoftheday/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/printnotes/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/readonly/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/replacetitle/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/specialnotes/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/statistics/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/stickynoteimport/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/tableofcontents/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/todo/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/tomboyimport/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/underline/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/addins/webdavsyncservice/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG	src/dbus/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	data/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	data/appdata/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	data/icons/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	help/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	libtomboy/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/backlinks/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/bugzilla/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/exporttogtg/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/exporttohtml/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/filesystemsyncservice/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/fixedwidth/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/inserttimestamp/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/notedirectorywatcher/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/noteoftheday/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/printnotes/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/readonly/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/replacetitle/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/specialnotes/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/statistics/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/stickynoteimport/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/tableofcontents/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/todo/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/tomboyimport/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/underline/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/addins/webdavsyncservice/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_LIBDIR	src/dbus/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	data/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	data/appdata/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	data/icons/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	help/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	libtomboy/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/backlinks/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/bugzilla/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/exporttogtg/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/exporttohtml/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/filesystemsyncservice/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/fixedwidth/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/inserttimestamp/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/notedirectorywatcher/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/noteoftheday/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/printnotes/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/readonly/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/replacetitle/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/specialnotes/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/statistics/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/stickynoteimport/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/tableofcontents/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/todo/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/tomboyimport/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/underline/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/addins/webdavsyncservice/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PKG_CONFIG_PATH	src/dbus/Makefile	/^PKG_CONFIG_PATH = $/;"	m
POFILES	Makefile	/^POFILES = $/;"	m
POFILES	data/Makefile	/^POFILES = $/;"	m
POFILES	data/appdata/Makefile	/^POFILES = $/;"	m
POFILES	data/icons/Makefile	/^POFILES = $/;"	m
POFILES	help/Makefile	/^POFILES = $/;"	m
POFILES	libtomboy/Makefile	/^POFILES = $/;"	m
POFILES	po/Makefile	/^POFILES=$(shell LINGUAS="$(PO_LINGUAS)"; for lang in $$LINGUAS; do printf "$$lang.po "; done)$/;"	m
POFILES	src/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/backlinks/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/bugzilla/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/exporttogtg/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/exporttohtml/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/filesystemsyncservice/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/fixedwidth/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/inserttimestamp/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/notedirectorywatcher/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/noteoftheday/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/printnotes/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/readonly/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/replacetitle/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/specialnotes/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/statistics/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/stickynoteimport/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/tableofcontents/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/todo/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/tomboyimport/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/underline/Makefile	/^POFILES = $/;"	m
POFILES	src/addins/webdavsyncservice/Makefile	/^POFILES = $/;"	m
POFILES	src/dbus/Makefile	/^POFILES = $/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	data/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	data/appdata/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	data/icons/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	help/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libtomboy/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/backlinks/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/bugzilla/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/exporttogtg/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/exporttohtml/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/filesystemsyncservice/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/fixedwidth/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/inserttimestamp/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/notedirectorywatcher/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/noteoftheday/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/printnotes/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/readonly/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/replacetitle/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/specialnotes/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/statistics/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/stickynoteimport/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/tableofcontents/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/todo/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/tomboyimport/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/underline/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/addins/webdavsyncservice/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	src/dbus/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	data/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	data/appdata/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	data/icons/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	help/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libtomboy/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/backlinks/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/bugzilla/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/exporttogtg/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/exporttohtml/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/filesystemsyncservice/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/fixedwidth/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/inserttimestamp/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/notedirectorywatcher/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/noteoftheday/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/printnotes/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/readonly/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/replacetitle/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/specialnotes/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/statistics/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/stickynoteimport/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/tableofcontents/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/todo/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/tomboyimport/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/underline/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/addins/webdavsyncservice/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	src/dbus/Makefile	/^POST_UNINSTALL = :$/;"	m
POSUB	Makefile	/^POSUB = po$/;"	m
POSUB	data/Makefile	/^POSUB = po$/;"	m
POSUB	data/appdata/Makefile	/^POSUB = po$/;"	m
POSUB	data/icons/Makefile	/^POSUB = po$/;"	m
POSUB	help/Makefile	/^POSUB = po$/;"	m
POSUB	libtomboy/Makefile	/^POSUB = po$/;"	m
POSUB	src/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/backlinks/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/bugzilla/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/exporttogtg/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/exporttohtml/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/filesystemsyncservice/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/fixedwidth/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/inserttimestamp/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/notedirectorywatcher/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/noteoftheday/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/printnotes/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/readonly/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/replacetitle/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/specialnotes/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/statistics/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/stickynoteimport/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/tableofcontents/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/todo/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/tomboyimport/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/underline/Makefile	/^POSUB = po$/;"	m
POSUB	src/addins/webdavsyncservice/Makefile	/^POSUB = po$/;"	m
POSUB	src/dbus/Makefile	/^POSUB = po$/;"	m
POTFILES	po/Makefile	/^POTFILES = \\$/;"	m
PO_IN_DATADIR_FALSE	Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	data/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	data/appdata/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	data/icons/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	help/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	libtomboy/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/backlinks/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/bugzilla/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/exporttogtg/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/exporttohtml/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/filesystemsyncservice/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/fixedwidth/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/inserttimestamp/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/notedirectorywatcher/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/noteoftheday/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/printnotes/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/readonly/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/replacetitle/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/specialnotes/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/statistics/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/stickynoteimport/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/tableofcontents/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/todo/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/tomboyimport/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/underline/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/addins/webdavsyncservice/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_FALSE	src/dbus/Makefile	/^PO_IN_DATADIR_FALSE = $/;"	m
PO_IN_DATADIR_TRUE	Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	data/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	data/appdata/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	data/icons/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	help/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	libtomboy/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/backlinks/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/bugzilla/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/exporttogtg/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/exporttohtml/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/filesystemsyncservice/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/fixedwidth/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/inserttimestamp/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/notedirectorywatcher/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/noteoftheday/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/printnotes/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/readonly/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/replacetitle/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/specialnotes/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/statistics/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/stickynoteimport/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/tableofcontents/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/todo/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/tomboyimport/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/underline/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/addins/webdavsyncservice/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_IN_DATADIR_TRUE	src/dbus/Makefile	/^PO_IN_DATADIR_TRUE = $/;"	m
PO_LINGUAS	po/Makefile	/^PO_LINGUAS=$(shell if test -r $(srcdir)\/LINGUAS; then grep -v "^\\#" $(srcdir)\/LINGUAS; else echo "$(ALL_LINGUAS)"; fi)$/;"	m
PREFS_FILE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * PREFS_FILE = "stickynoteimport.ini";$/;"	m	namespace:stickynote	file:
PREPARE_DOWNLOAD	src/synchronization/syncutils.hpp	/^    PREPARE_DOWNLOAD,$/;"	e	enum:gnote::sync::SyncState
PREPARE_UPLOAD	src/synchronization/syncutils.hpp	/^    PREPARE_UPLOAD,$/;"	e	enum:gnote::sync::SyncState
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	data/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	data/appdata/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	data/icons/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	help/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libtomboy/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/backlinks/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/bugzilla/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/exporttogtg/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/exporttohtml/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/filesystemsyncservice/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/fixedwidth/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/inserttimestamp/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/notedirectorywatcher/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/noteoftheday/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/printnotes/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/readonly/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/replacetitle/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/specialnotes/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/statistics/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/stickynoteimport/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/tableofcontents/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/todo/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/tomboyimport/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/underline/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/addins/webdavsyncservice/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	src/dbus/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	data/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	data/appdata/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	data/icons/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	help/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libtomboy/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/backlinks/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/bugzilla/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/exporttogtg/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/exporttohtml/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/filesystemsyncservice/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/fixedwidth/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/inserttimestamp/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/notedirectorywatcher/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/noteoftheday/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/printnotes/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/readonly/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/replacetitle/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/specialnotes/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/statistics/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/stickynoteimport/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/tableofcontents/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/todo/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/tomboyimport/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/underline/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/addins/webdavsyncservice/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	src/dbus/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRINT_ORDER	src/iactionmanager.hpp	/^  PRINT_ORDER = 400,$/;"	e	enum:gnote::NoteActionOrder
PROGRAMS	src/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PageBreak()$/;"	f	class:printnotes::PageBreak	access:public	signature:()
PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PageBreak(int paragraph, int line)$/;"	f	class:printnotes::PageBreak	access:public	signature:(int paragraph, int line)
PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PageBreak$/;"	c	namespace:printnotes
PinnedNotesNotebook	src/notebooks/specialnotebooks.cpp	/^PinnedNotesNotebook::PinnedNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(NoteManager & manager)
PinnedNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  PinnedNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::PinnedNotesNotebook	access:public	signature:(NoteManager &)
PinnedNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class PinnedNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
PreferenceTabAddin	src/preferencetabaddin.hpp	/^  class PreferenceTabAddin $/;"	c	namespace:gnote	inherits:AbstractAddin
Preferences	src/preferences.cpp	/^  Preferences::Preferences()$/;"	f	class:gnote::Preferences	signature:()
Preferences	src/preferences.hpp	/^    Preferences();$/;"	p	class:gnote::Preferences	access:public	signature:()
Preferences	src/preferences.hpp	/^    Preferences(const Preferences &); \/\/ non implemented$/;"	p	class:gnote::Preferences	access:private	signature:(const Preferences &)
Preferences	src/preferences.hpp	/^  class Preferences $/;"	c	namespace:gnote	inherits:base::Singleton
PreferencesDialog	src/preferencesdialog.cpp	/^  PreferencesDialog::PreferencesDialog(NoteManager & note_manager)$/;"	f	class:gnote::PreferencesDialog	signature:(NoteManager & note_manager)
PreferencesDialog	src/preferencesdialog.hpp	/^  explicit PreferencesDialog(NoteManager & note_manager);$/;"	p	class:gnote::PreferencesDialog	access:public	signature:(NoteManager & note_manager)
PreferencesDialog	src/preferencesdialog.hpp	/^class PreferencesDialog$/;"	c	namespace:gnote	inherits:Gtk::Dialog
PrefsKeybinder	src/prefskeybinder.cpp	/^  PrefsKeybinder::PrefsKeybinder(IKeybinder & keybinder)$/;"	f	class:gnote::PrefsKeybinder	signature:(IKeybinder & keybinder)
PrefsKeybinder	src/prefskeybinder.hpp	/^  PrefsKeybinder(IKeybinder &);$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:(IKeybinder &)
PrefsKeybinder	src/prefskeybinder.hpp	/^class PrefsKeybinder : public sigc::trackable$/;"	c	namespace:gnote	inherits:sigc::trackable
PrintNotesAction	src/addins/printnotes/printnotesnoteaddin.cpp	/^      PrintNotesAction(gnote::NoteWindow *note_window)$/;"	f	class:printnotes::__anon13::PrintNotesAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
PrintNotesAction	src/addins/printnotes/printnotesnoteaddin.cpp	/^    class PrintNotesAction$/;"	c	namespace:printnotes::__anon13	file:	inherits:gnote::NoteWindow::NonModifyingAction
PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesModule::PrintNotesModule()$/;"	f	class:printnotes::PrintNotesModule	signature:()
PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PrintNotesModule();$/;"	p	class:printnotes::PrintNotesModule	access:public	signature:()
PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PrintNotesModule$/;"	c	namespace:printnotes	inherits:sharp::DynamicModule
PrintNotesNoteAddin	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PrintNotesNoteAddin$/;"	c	namespace:printnotes	inherits:gnote::NoteAddin
Process	src/sharp/process.cpp	/^Process::Process()$/;"	f	class:sharp::Process	signature:()
Process	src/sharp/process.hpp	/^  Process();$/;"	p	class:sharp::Process	access:public	signature:()
Process	src/sharp/process.hpp	/^class Process$/;"	c	namespace:sharp
PropertyEditor	src/sharp/propertyeditor.cpp	/^  PropertyEditor::PropertyEditor(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)$/;"	f	class:sharp::PropertyEditor	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)
PropertyEditor	src/sharp/propertyeditor.hpp	/^    PropertyEditor(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry);$/;"	p	class:sharp::PropertyEditor	access:public	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)
PropertyEditor	src/sharp/propertyeditor.hpp	/^  class PropertyEditor$/;"	c	namespace:sharp	inherits:PropertyEditorBase
PropertyEditorBase	src/sharp/propertyeditor.cpp	/^  PropertyEditorBase::PropertyEditorBase(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)$/;"	f	class:sharp::PropertyEditorBase	signature:(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)
PropertyEditorBase	src/sharp/propertyeditor.hpp	/^    PropertyEditorBase(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w);$/;"	p	class:sharp::PropertyEditorBase	access:protected	signature:(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)
PropertyEditorBase	src/sharp/propertyeditor.hpp	/^  class PropertyEditorBase$/;"	c	namespace:sharp
PropertyEditorBool	src/sharp/propertyeditor.cpp	/^  PropertyEditorBool::PropertyEditorBool(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)$/;"	f	class:sharp::PropertyEditorBool	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)
PropertyEditorBool	src/sharp/propertyeditor.hpp	/^    PropertyEditorBool(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button);$/;"	p	class:sharp::PropertyEditorBool	access:public	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)
PropertyEditorBool	src/sharp/propertyeditor.hpp	/^  class PropertyEditorBool$/;"	c	namespace:sharp	inherits:PropertyEditorBase
Ptr	src/addins/bugzilla/bugzillalink.hpp	/^  typedef Glib::RefPtr<BugzillaLink> Ptr;$/;"	t	class:bugzilla::BugzillaLink	access:public
Ptr	src/addins/readonly/readonlynoteaddin.cpp	/^    typedef Glib::RefPtr<ReadOnlyAction> Ptr;$/;"	t	class:__anon12::ReadOnlyAction	file:	access:public
Ptr	src/addins/statistics/statisticswidget.cpp	/^  typedef Glib::RefPtr<StatisticsModel> Ptr;$/;"	t	class:statistics::StatisticsModel	file:	access:public
Ptr	src/note.hpp	/^  typedef shared_ptr<Note> Ptr;$/;"	t	class:gnote::Note	access:public
Ptr	src/notebase.hpp	/^  typedef shared_ptr<NoteBase> Ptr;$/;"	t	class:gnote::NoteBase	access:public
Ptr	src/notebooks/notebook.hpp	/^  typedef shared_ptr<Notebook> Ptr;$/;"	t	class:gnote::notebooks::Notebook	access:public
Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<ActiveNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::ActiveNotesNotebook	access:public
Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<AllNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::AllNotesNotebook	access:public
Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<PinnedNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::PinnedNotesNotebook	access:public
Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<SpecialNotebook> Ptr;$/;"	t	class:gnote::notebooks::SpecialNotebook	access:public
Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<UnfiledNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::UnfiledNotesNotebook	access:public
Ptr	src/notebuffer.hpp	/^  typedef Glib::RefPtr<NoteBuffer> Ptr;$/;"	t	class:gnote::NoteBuffer	access:public
Ptr	src/noteeditor.hpp	/^  typedef Glib::RefPtr<NoteEditor> Ptr;$/;"	t	class:gnote::NoteEditor	access:public
Ptr	src/notemanager.hpp	/^    typedef shared_ptr<NoteManager> Ptr;$/;"	t	class:gnote::NoteManager	access:public
Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<DepthNoteTag> Ptr;$/;"	t	class:gnote::DepthNoteTag	access:public
Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<DynamicNoteTag> Ptr;$/;"	t	class:gnote::DynamicNoteTag	access:public
Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<NoteTag> Ptr;$/;"	t	class:gnote::NoteTag	access:public
Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<NoteTagTable> Ptr;$/;"	t	class:gnote::NoteTagTable	access:public
Ptr	src/sharp/addinstreemodel.hpp	/^  typedef Glib::RefPtr<AddinsTreeModel> Ptr;$/;"	t	class:sharp::AddinsTreeModel	access:public
Ptr	src/synchronization/isyncmanager.hpp	/^  typedef shared_ptr<SyncClient> Ptr;$/;"	t	class:gnote::sync::SyncClient	access:public
Ptr	src/synchronization/isyncmanager.hpp	/^  typedef shared_ptr<SyncServer> Ptr;$/;"	t	class:gnote::sync::SyncServer	access:public
Ptr	src/synchronization/syncdialog.hpp	/^    typedef shared_ptr<SyncDialog> Ptr;$/;"	t	class:gnote::sync::SyncDialog	access:public
Ptr	src/synchronization/syncui.hpp	/^    typedef shared_ptr<SyncUI> Ptr;$/;"	t	class:gnote::sync::SyncUI	access:public
Ptr	src/tag.hpp	/^    typedef shared_ptr<Tag> Ptr;$/;"	t	class:gnote::Tag	access:public
Ptr	src/test/testsyncclient.hpp	/^  typedef shared_ptr<SyncClient> Ptr;$/;"	t	class:test::SyncClient	access:public
Ptr	src/tray.hpp	/^  typedef shared_ptr<Tray> Ptr;$/;"	t	class:gnote::Tray	access:public
Ptr	src/triehit.hpp	/^  typedef shared_ptr<TrieHit> Ptr;$/;"	t	class:gnote::TrieHit	access:public
Ptr	src/undo.hpp	/^  typedef Glib::RefPtr<ChopBuffer> Ptr;$/;"	t	class:gnote::ChopBuffer	access:public
Ptr	src/utils.hpp	/^      typedef Glib::RefPtr<CheckAction> Ptr;$/;"	t	class:gnote::utils::CheckAction	access:public
RANLIB	Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	data/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	data/appdata/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	data/icons/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	help/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libtomboy/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/backlinks/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/bugzilla/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/exporttogtg/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/exporttohtml/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/filesystemsyncservice/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/fixedwidth/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/inserttimestamp/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/notedirectorywatcher/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/noteoftheday/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/printnotes/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/readonly/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/replacetitle/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/specialnotes/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/statistics/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/stickynoteimport/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/tableofcontents/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/todo/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/tomboyimport/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/underline/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/addins/webdavsyncservice/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	src/dbus/Makefile	/^RANLIB = ranlib$/;"	m
READ_BUFFER_COUNT	src/sharp/streamreader.cpp	35;"	d	file:
READ_ONLY_ORDER	src/iactionmanager.hpp	/^  READ_ONLY_ORDER = 700,$/;"	e	enum:gnote::NoteActionOrder
RECHECK_LOGS	src/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	data/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	src/addins/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	data/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	src/addins/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REGISTER_APP_ADDIN	src/addinmanager.cpp	57;"	d	file:
REGISTER_BUILTIN_NOTE_ADDIN	src/addinmanager.cpp	52;"	d	file:
RENAME_EXISTING_AND_UPDATE	src/synchronization/syncutils.hpp	/^    RENAME_EXISTING_AND_UPDATE$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
RENAME_EXISTING_NO_UPDATE	src/synchronization/syncutils.hpp	/^    RENAME_EXISTING_NO_UPDATE,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
REPLACE_TITLE_ORDER	src/iactionmanager.hpp	/^  REPLACE_TITLE_ORDER = 500,$/;"	e	enum:gnote::NoteActionOrder
ReadOnlyAction	src/addins/readonly/readonlynoteaddin.cpp	/^    ReadOnlyAction()$/;"	f	class:__anon12::ReadOnlyAction	file:	access:private	signature:()
ReadOnlyAction	src/addins/readonly/readonlynoteaddin.cpp	/^  class ReadOnlyAction$/;"	c	namespace:__anon12	file:	inherits:gnote::utils::CheckAction,gnote::NoteWindow::NonModifyingNoteAction
ReadOnlyModule	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyModule::ReadOnlyModule()$/;"	f	class:readonly::ReadOnlyModule	signature:()
ReadOnlyModule	src/addins/readonly/readonlynoteaddin.hpp	/^  ReadOnlyModule();$/;"	p	class:readonly::ReadOnlyModule	access:public	signature:()
ReadOnlyModule	src/addins/readonly/readonlynoteaddin.hpp	/^class ReadOnlyModule$/;"	c	namespace:readonly	inherits:sharp::DynamicModule
ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyNoteAddin::ReadOnlyNoteAddin()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^  ReadOnlyNoteAddin();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:private	signature:()
ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^class ReadOnlyNoteAddin$/;"	c	namespace:readonly	inherits:gnote::NoteAddin
RecentNotesColumnTypes	src/searchnoteswidget.hpp	/^    RecentNotesColumnTypes()$/;"	f	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public	signature:()
RecentNotesColumnTypes	src/searchnoteswidget.hpp	/^  class RecentNotesColumnTypes$/;"	c	class:gnote::SearchNotesWidget	inherits:Gtk::TreeModelColumnRecord	access:private
RecentSearchColumnTypes	src/searchnoteswidget.hpp	/^    RecentSearchColumnTypes()$/;"	f	class:gnote::SearchNotesWidget::RecentSearchColumnTypes	access:public	signature:()
RecentSearchColumnTypes	src/searchnoteswidget.hpp	/^  class RecentSearchColumnTypes$/;"	c	class:gnote::SearchNotesWidget	inherits:Gtk::TreeModelColumnRecord	access:private
RecentTreeView	src/recenttreeview.hpp	/^  RecentTreeView()$/;"	f	class:gnote::RecentTreeView	access:public	signature:()
RecentTreeView	src/recenttreeview.hpp	/^class RecentTreeView$/;"	c	namespace:gnote	inherits:Gtk::TreeView
RemoteControl	src/dbus/remotecontrol.cpp	/^  RemoteControl::RemoteControl(const Glib::RefPtr<Gio::DBus::Connection> & cnx, NoteManager& manager,$/;"	f	class:gnote::RemoteControl	signature:(const Glib::RefPtr<Gio::DBus::Connection> & cnx, NoteManager& manager, const char * path, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl	src/dbus/remotecontrol.hpp	/^  RemoteControl(const Glib::RefPtr<Gio::DBus::Connection> &, gnote::NoteManager&, const char *, const char *,$/;"	p	class:gnote::RemoteControl	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, gnote::NoteManager&, const char *, const char *, const Glib::RefPtr<Gio::DBus::InterfaceInfo> &)
RemoteControl	src/dbus/remotecontrol.hpp	/^class RemoteControl$/;"	c	namespace:gnote	inherits:IRemoteControl
RemoteControlClient	src/dbus/remotecontrolclient.cpp	/^  RemoteControlClient::RemoteControlClient(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	f	class:gnote::RemoteControlClient	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path, const char *name, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControlClient	src/dbus/remotecontrolclient.hpp	/^  RemoteControlClient(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path,$/;"	p	class:gnote::RemoteControlClient	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path, const char *name, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControlClient	src/dbus/remotecontrolclient.hpp	/^class RemoteControlClient$/;"	c	namespace:gnote	inherits:org::gnome::Gnote::RemoteControl_proxy
RemoteControlProxy	src/remotecontrolproxy.hpp	/^class RemoteControlProxy $/;"	c	namespace:gnote
RemoteControl_adaptor	src/dbus/remotecontrol-glue.cpp	/^RemoteControl_adaptor::RemoteControl_adaptor(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_adaptor	src/dbus/remotecontrol-glue.hpp	/^  RemoteControl_adaptor(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_adaptor	src/dbus/remotecontrol-glue.hpp	/^class RemoteControl_adaptor$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::InterfaceVTable
RemoteControl_adaptor::AddTagToNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::AddTagToNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::CreateNamedNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::CreateNamedNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::CreateNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::CreateNote_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
RemoteControl_adaptor::DeleteNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DeleteNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::DisplayNoteWithSearch_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplayNoteWithSearch_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::DisplayNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplayNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::DisplaySearchWithText_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplaySearchWithText_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::DisplaySearch_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::DisplaySearch_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
RemoteControl_adaptor::FindNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::FindNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::FindStartHereNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::FindStartHereNote_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
RemoteControl_adaptor::GetAllNotesWithTag_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetAllNotesWithTag_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteChangeDate_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteChangeDate_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteCompleteXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteContentsXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteContentsXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteContents_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteContents_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteCreateDate_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteCreateDate_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetNoteTitle_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetNoteTitle_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::GetTagsForNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::GetTagsForNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::HideNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::HideNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::ListAllNotes_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::ListAllNotes_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::NoteAdded	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteAdded(const std::string & uri)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri)
RemoteControl_adaptor::NoteDeleted	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteDeleted(const std::string & uri, const std::string & title)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri, const std::string & title)
RemoteControl_adaptor::NoteExists_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::NoteExists_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::NoteSaved	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::NoteSaved(const std::string & uri)$/;"	f	class:RemoteControl_adaptor	signature:(const std::string & uri)
RemoteControl_adaptor::RemoteControl_adaptor	src/dbus/remotecontrol-glue.cpp	/^RemoteControl_adaptor::RemoteControl_adaptor(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_adaptor::RemoveTagFromNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::RemoveTagFromNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::SearchNotes_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SearchNotes_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::SetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteCompleteXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::SetNoteContentsXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteContentsXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::SetNoteContents_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteContents_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::Version_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::Version_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
RemoteControl_adaptor::emit_signal	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::emit_signal(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)
RemoteControl_adaptor::on_method_call	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::on_method_call(const Glib::RefPtr<Gio::DBus::Connection> &,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
RemoteControl_adaptor::stub_bool_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_bool_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, bool_string_func func)
RemoteControl_adaptor::stub_bool_string_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_bool_string_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, bool_string_string_func func)
RemoteControl_adaptor::stub_int_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_int_string(const Glib::VariantContainerBase & parameters, int_string_func func)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, int_string_func func)
RemoteControl_adaptor::stub_string_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_string_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, string_string_func func)
RemoteControl_adaptor::stub_vectorstring_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, vectorstring_string_func func)
RemoteControl_adaptor::stub_vectorstring_string_bool	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_string_bool(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, vectorstring_string_bool_func func)
RemoteControl_adaptor::stub_vectorstring_void	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_void(const Glib::VariantContainerBase &,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &, vectorstring_void_func func)
RemoteControl_adaptor::stub_void_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_void_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, void_string_func func)
RemoteControl_proxy	src/dbus/remotecontrol-client-glue.cpp	/^RemoteControl_proxy::RemoteControl_proxy(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	f	class:RemoteControl_proxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char * name, const char * p, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_proxy	src/dbus/remotecontrol-client-glue.hpp	/^  RemoteControl_proxy(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char * name, const char * p, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_proxy	src/dbus/remotecontrol-client-glue.hpp	/^class RemoteControl_proxy$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::Proxy
RemoteControl_proxy::CreateNamedNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::CreateNamedNote(const std::string & linked_title)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & linked_title)
RemoteControl_proxy::CreateNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::CreateNote()$/;"	f	class:RemoteControl_proxy	signature:()
RemoteControl_proxy::DisplayNote	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::DisplayNote(const std::string & uri)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri)
RemoteControl_proxy::DisplayNoteWithSearch	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::DisplayNoteWithSearch(const std::string & uri, const std::string & search)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri, const std::string & search)
RemoteControl_proxy::DisplaySearch	src/dbus/remotecontrol-client-glue.cpp	/^void RemoteControl_proxy::DisplaySearch()$/;"	f	class:RemoteControl_proxy	signature:()
RemoteControl_proxy::DisplaySearchWithText	src/dbus/remotecontrol-client-glue.cpp	/^void RemoteControl_proxy::DisplaySearchWithText(const std::string & search_text)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & search_text)
RemoteControl_proxy::FindNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::FindNote(const std::string & linked_title)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & linked_title)
RemoteControl_proxy::FindStartHereNote	src/dbus/remotecontrol-client-glue.cpp	/^std::string RemoteControl_proxy::FindStartHereNote()$/;"	f	class:RemoteControl_proxy	signature:()
RemoteControl_proxy::RemoteControl_proxy	src/dbus/remotecontrol-client-glue.cpp	/^RemoteControl_proxy::RemoteControl_proxy(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	f	class:RemoteControl_proxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char * name, const char * p, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
RemoteControl_proxy::SetNoteCompleteXml	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::SetNoteCompleteXml(const std::string & uri, const std::string & xml_contents)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri, const std::string & xml_contents)
RemoteControl_proxy::call_remote	src/dbus/remotecontrol-client-glue.cpp	/^Glib::VariantContainerBase RemoteControl_proxy::call_remote(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_proxy	signature:(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)
RemoveTagFromNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool RemoveTagFromNote(const std::string& uri, const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& tag_name)
RemoveTagFromNote	src/dbus/remotecontrol.cpp	/^bool RemoteControl::RemoveTagFromNote(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& tag_name)
RemoveTagFromNote_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::RemoveTagFromNote_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
RemoveTagFromNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase RemoveTagFromNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
RenamedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr&, const std::string& > RenamedHandler;$/;"	t	class:gnote::NoteBase	access:public
ReplaceTitleAction	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      ReplaceTitleAction(gnote::NoteWindow *note_window)$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
ReplaceTitleAction	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^    class ReplaceTitleAction$/;"	c	namespace:replacetitle::__anon16	file:	inherits:Gtk::Action
ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^ReplaceTitleModule::ReplaceTitleModule()$/;"	f	class:replacetitle::ReplaceTitleModule	signature:()
ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  ReplaceTitleModule();$/;"	p	class:replacetitle::ReplaceTitleModule	access:public	signature:()
ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^class ReplaceTitleModule$/;"	c	namespace:replacetitle	inherits:sharp::DynamicModule
ReplaceTitleNoteAddin	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^class ReplaceTitleNoteAddin$/;"	c	namespace:replacetitle	inherits:gnote::NoteAddin
Results	src/search.hpp	/^  typedef std::multimap<int,Note::Ptr> Results;$/;"	t	class:gnote::Search	access:public
ResultsPtr	src/search.hpp	/^  typedef shared_ptr<Results> ResultsPtr;$/;"	t	class:gnote::Search	access:public
Ring	src/gnome_keyring/ring.hpp	/^class Ring$/;"	c	namespace:gnome::keyring
SCHEMA_DESKTOP_GNOME_INTERFACE	src/preferences.cpp	/^  const char * Preferences::SCHEMA_DESKTOP_GNOME_INTERFACE = "org.gnome.desktop.interface";$/;"	m	class:gnote::Preferences	file:
SCHEMA_DESKTOP_GNOME_INTERFACE	src/preferences.hpp	/^    static const char *SCHEMA_DESKTOP_GNOME_INTERFACE;$/;"	m	class:gnote::Preferences	access:public
SCHEMA_EXPORTHTML	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * SCHEMA_EXPORTHTML = "org.gnome.gnote.export-html";$/;"	m	namespace:exporttohtml	file:
SCHEMA_GNOTE	src/preferences.cpp	/^  const char * Preferences::SCHEMA_GNOTE = "org.gnome.gnote";$/;"	m	class:gnote::Preferences	file:
SCHEMA_GNOTE	src/preferences.hpp	/^    static const char *SCHEMA_GNOTE;$/;"	m	class:gnote::Preferences	access:public
SCHEMA_INSERT_TIMESTAMP	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  const char * SCHEMA_INSERT_TIMESTAMP = "org.gnome.gnote.insert-timestamp";$/;"	m	namespace:inserttimestamp	file:
SCHEMA_KEYBINDINGS	src/preferences.cpp	/^  const char * Preferences::SCHEMA_KEYBINDINGS = "org.gnome.gnote.global-keybindings";$/;"	m	class:gnote::Preferences	file:
SCHEMA_KEYBINDINGS	src/preferences.hpp	/^    static const char *SCHEMA_KEYBINDINGS;$/;"	m	class:gnote::Preferences	access:public
SCHEMA_NOTE_DIRECTORY_WATCHER	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^const char *SCHEMA_NOTE_DIRECTORY_WATCHER = "org.gnome.gnote.note-directory-watcher";$/;"	m	namespace:notedirectorywatcher	file:
SCHEMA_SYNC	src/preferences.cpp	/^  const char * Preferences::SCHEMA_SYNC = "org.gnome.gnote.sync";$/;"	m	class:gnote::Preferences	file:
SCHEMA_SYNC	src/preferences.hpp	/^    static const char *SCHEMA_SYNC;$/;"	m	class:gnote::Preferences	access:public
SCHEMA_SYNC_WDFS	src/preferences.cpp	/^  const char * Preferences::SCHEMA_SYNC_WDFS = "org.gnome.gnote.sync.wdfs";$/;"	m	class:gnote::Preferences	file:
SCHEMA_SYNC_WDFS	src/preferences.hpp	/^    static const char *SCHEMA_SYNC_WDFS;$/;"	m	class:gnote::Preferences	access:public
SEARCH_SORTING	src/preferences.cpp	/^  const char * Preferences::SEARCH_SORTING = "search-sorting";$/;"	m	class:gnote::Preferences	file:
SEARCH_SORTING	src/preferences.hpp	/^    static const char *SEARCH_SORTING;$/;"	m	class:gnote::Preferences	access:public
SEARCH_WINDOW_HEIGHT	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_HEIGHT = "search-window-height";$/;"	m	class:gnote::Preferences	file:
SEARCH_WINDOW_HEIGHT	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_HEIGHT;$/;"	m	class:gnote::Preferences	access:public
SEARCH_WINDOW_SPLITTER_POS	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_SPLITTER_POS = "search-window-splitter-pos";$/;"	m	class:gnote::Preferences	file:
SEARCH_WINDOW_SPLITTER_POS	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_SPLITTER_POS;$/;"	m	class:gnote::Preferences	access:public
SEARCH_WINDOW_WIDTH	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_WIDTH = "search-window-width";$/;"	m	class:gnote::Preferences	file:
SEARCH_WINDOW_WIDTH	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_WIDTH;$/;"	m	class:gnote::Preferences	access:public
SEC_PER_DAY	src/sharp/datetime.cpp	39;"	d	file:
SEC_PER_HOUR	src/sharp/datetime.cpp	38;"	d	file:
SEC_PER_MINUTE	src/sharp/datetime.cpp	37;"	d	file:
SED	Makefile	/^SED = \/bin\/sed$/;"	m
SED	data/Makefile	/^SED = \/bin\/sed$/;"	m
SED	data/appdata/Makefile	/^SED = \/bin\/sed$/;"	m
SED	data/icons/Makefile	/^SED = \/bin\/sed$/;"	m
SED	help/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libtomboy/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/backlinks/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/bugzilla/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/exporttogtg/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/exporttohtml/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/filesystemsyncservice/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/fixedwidth/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/inserttimestamp/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/notedirectorywatcher/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/noteoftheday/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/printnotes/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/readonly/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/replacetitle/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/specialnotes/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/statistics/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/stickynoteimport/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/tableofcontents/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/todo/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/tomboyimport/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/underline/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/addins/webdavsyncservice/Makefile	/^SED = \/bin\/sed$/;"	m
SED	src/dbus/Makefile	/^SED = \/bin\/sed$/;"	m
SETUP_NOTE_ADDIN	src/addinmanager.cpp	61;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	data/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	data/appdata/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	data/icons/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	help/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libtomboy/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/backlinks/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/bugzilla/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/exporttogtg/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/exporttohtml/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/filesystemsyncservice/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/fixedwidth/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/inserttimestamp/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/notedirectorywatcher/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/noteoftheday/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/printnotes/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/readonly/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/replacetitle/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/specialnotes/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/statistics/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/stickynoteimport/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/tableofcontents/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/todo/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/tomboyimport/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/underline/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/addins/webdavsyncservice/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	src/dbus/Makefile	/^SET_MAKE = $/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	data/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	data/appdata/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	data/icons/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	help/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	libtomboy/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	po/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/backlinks/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/bugzilla/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/exporttogtg/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/exporttohtml/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/filesystemsyncservice/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/fixedwidth/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/inserttimestamp/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/notedirectorywatcher/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/noteoftheday/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/printnotes/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/readonly/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/replacetitle/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/specialnotes/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/statistics/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/stickynoteimport/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/tableofcontents/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/todo/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/tomboyimport/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/underline/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/addins/webdavsyncservice/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	src/dbus/Makefile	/^SHELL = \/bin\/sh$/;"	m
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	data/Makefile	/^SOURCES =$/;"	m
SOURCES	data/appdata/Makefile	/^SOURCES =$/;"	m
SOURCES	data/icons/Makefile	/^SOURCES =$/;"	m
SOURCES	help/Makefile	/^SOURCES =$/;"	m
SOURCES	libtomboy/Makefile	/^SOURCES = $(libtomboy_la_SOURCES)$/;"	m
SOURCES	src/Makefile	/^SOURCES = $(libgnote_la_SOURCES) $(dttest_SOURCES) \\$/;"	m
SOURCES	src/addins/Makefile	/^SOURCES =$/;"	m
SOURCES	src/addins/backlinks/Makefile	/^SOURCES = $(backlinks_la_SOURCES)$/;"	m
SOURCES	src/addins/bugzilla/Makefile	/^SOURCES = $(bugzilla_la_SOURCES)$/;"	m
SOURCES	src/addins/exporttogtg/Makefile	/^SOURCES = $(exporttogtg_la_SOURCES)$/;"	m
SOURCES	src/addins/exporttohtml/Makefile	/^SOURCES = $(exporttohtml_la_SOURCES)$/;"	m
SOURCES	src/addins/filesystemsyncservice/Makefile	/^SOURCES = $(filesystemsyncservice_la_SOURCES)$/;"	m
SOURCES	src/addins/fixedwidth/Makefile	/^SOURCES = $(fixedwidth_la_SOURCES)$/;"	m
SOURCES	src/addins/inserttimestamp/Makefile	/^SOURCES = $(inserttimestamp_la_SOURCES)$/;"	m
SOURCES	src/addins/notedirectorywatcher/Makefile	/^SOURCES = $(notedirectorywatcher_la_SOURCES)$/;"	m
SOURCES	src/addins/noteoftheday/Makefile	/^SOURCES = $(noteoftheday_la_SOURCES)$/;"	m
SOURCES	src/addins/printnotes/Makefile	/^SOURCES = $(printnotes_la_SOURCES)$/;"	m
SOURCES	src/addins/readonly/Makefile	/^SOURCES = $(readonly_la_SOURCES)$/;"	m
SOURCES	src/addins/replacetitle/Makefile	/^SOURCES = $(replacetitle_la_SOURCES)$/;"	m
SOURCES	src/addins/specialnotes/Makefile	/^SOURCES = $(specialnotes_la_SOURCES)$/;"	m
SOURCES	src/addins/statistics/Makefile	/^SOURCES = $(statistics_la_SOURCES)$/;"	m
SOURCES	src/addins/stickynoteimport/Makefile	/^SOURCES = $(stickynoteimport_la_SOURCES)$/;"	m
SOURCES	src/addins/tableofcontents/Makefile	/^SOURCES = $(tableofcontents_la_SOURCES)$/;"	m
SOURCES	src/addins/todo/Makefile	/^SOURCES = $(todo_la_SOURCES)$/;"	m
SOURCES	src/addins/tomboyimport/Makefile	/^SOURCES = $(tomboyimport_la_SOURCES)$/;"	m
SOURCES	src/addins/underline/Makefile	/^SOURCES = $(underline_la_SOURCES)$/;"	m
SOURCES	src/addins/webdavsyncservice/Makefile	/^SOURCES = $(webdavsyncservice_la_SOURCES)$/;"	m
SOURCES	src/dbus/Makefile	/^SOURCES =$/;"	m
SPECIAL_NOTES	src/iconmanager.cpp	/^const char *IconManager::SPECIAL_NOTES = "special-notes";$/;"	m	class:gnote::IconManager	file:
SPECIAL_NOTES	src/iconmanager.hpp	/^  static const char *SPECIAL_NOTES;$/;"	m	class:gnote::IconManager	access:public
START_NOTE_URI	src/preferences.cpp	/^  const char * Preferences::START_NOTE_URI = "start-note";$/;"	m	class:gnote::Preferences	file:
START_NOTE_URI	src/preferences.hpp	/^    static const char *START_NOTE_URI;$/;"	m	class:gnote::Preferences	access:public
STDC_HEADERS	config.h	120;"	d
STICKY_NOTE_QUERY	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * STICKY_NOTE_QUERY = "\/\/note";$/;"	m	namespace:stickynote	file:
STICKY_XML_REL_PATH	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * STICKY_XML_REL_PATH = "\/.gnome2\/stickynotes_applet";$/;"	m	namespace:stickynote	file:
STRING_TO_INT	src/base/macros.hpp	54;"	d
STRIP	Makefile	/^STRIP = strip$/;"	m
STRIP	data/Makefile	/^STRIP = strip$/;"	m
STRIP	data/appdata/Makefile	/^STRIP = strip$/;"	m
STRIP	data/icons/Makefile	/^STRIP = strip$/;"	m
STRIP	help/Makefile	/^STRIP = strip$/;"	m
STRIP	libtomboy/Makefile	/^STRIP = strip$/;"	m
STRIP	src/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/backlinks/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/bugzilla/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/exporttogtg/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/exporttohtml/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/filesystemsyncservice/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/fixedwidth/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/inserttimestamp/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/notedirectorywatcher/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/noteoftheday/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/printnotes/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/readonly/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/replacetitle/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/specialnotes/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/statistics/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/stickynoteimport/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/tableofcontents/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/todo/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/tomboyimport/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/underline/Makefile	/^STRIP = strip$/;"	m
STRIP	src/addins/webdavsyncservice/Makefile	/^STRIP = strip$/;"	m
STRIP	src/dbus/Makefile	/^STRIP = strip$/;"	m
STYLESHEET_NAME	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	46;"	d	file:
SUBDIRS	Makefile	/^SUBDIRS = data $(LIBTOMBOYDIR) src po help$/;"	m
SUBDIRS	data/Makefile	/^SUBDIRS = appdata icons$/;"	m
SUBDIRS	src/Makefile	/^SUBDIRS = addins dbus$/;"	m
SUBDIRS	src/addins/Makefile	/^SUBDIRS = backlinks \\$/;"	m
SUCCEEDED	src/synchronization/syncutils.hpp	/^    SUCCEEDED,$/;"	e	enum:gnote::sync::SyncState
SYNC_AUTOSYNC_TIMEOUT	src/preferences.cpp	/^  const char * Preferences::SYNC_AUTOSYNC_TIMEOUT = "autosync-timeout";$/;"	m	class:gnote::Preferences	file:
SYNC_AUTOSYNC_TIMEOUT	src/preferences.hpp	/^    static const char *SYNC_AUTOSYNC_TIMEOUT;$/;"	m	class:gnote::Preferences	access:public
SYNC_CLIENT_ID	src/preferences.cpp	/^  const char * Preferences::SYNC_CLIENT_ID = "sync-guid";$/;"	m	class:gnote::Preferences	file:
SYNC_CLIENT_ID	src/preferences.hpp	/^    static const char *SYNC_CLIENT_ID;$/;"	m	class:gnote::Preferences	access:public
SYNC_CONFIGURED_CONFLICT_BEHAVIOR	src/preferences.cpp	/^  const char * Preferences::SYNC_CONFIGURED_CONFLICT_BEHAVIOR = "sync-conflict-behavior";$/;"	m	class:gnote::Preferences	file:
SYNC_CONFIGURED_CONFLICT_BEHAVIOR	src/preferences.hpp	/^    static const char *SYNC_CONFIGURED_CONFLICT_BEHAVIOR;$/;"	m	class:gnote::Preferences	access:public
SYNC_FUSE_MOUNT_TIMEOUT	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_MOUNT_TIMEOUT = "sync-fuse-mount-timeout-ms";$/;"	m	class:gnote::Preferences	file:
SYNC_FUSE_MOUNT_TIMEOUT	src/preferences.hpp	/^    static const char *SYNC_FUSE_MOUNT_TIMEOUT;$/;"	m	class:gnote::Preferences	access:public
SYNC_FUSE_WDFS_ACCEPT_SSLCERT	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_ACCEPT_SSLCERT = "accept-sslcert";$/;"	m	class:gnote::Preferences	file:
SYNC_FUSE_WDFS_ACCEPT_SSLCERT	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_ACCEPT_SSLCERT;$/;"	m	class:gnote::Preferences	access:public
SYNC_FUSE_WDFS_URL	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_URL = "url";$/;"	m	class:gnote::Preferences	file:
SYNC_FUSE_WDFS_URL	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_URL;$/;"	m	class:gnote::Preferences	access:public
SYNC_FUSE_WDFS_USERNAME	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_USERNAME = "username";$/;"	m	class:gnote::Preferences	file:
SYNC_FUSE_WDFS_USERNAME	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_USERNAME;$/;"	m	class:gnote::Preferences	access:public
SYNC_LOCAL_PATH	src/preferences.cpp	/^  const char * Preferences::SYNC_LOCAL_PATH = "sync-local-path";$/;"	m	class:gnote::Preferences	file:
SYNC_LOCAL_PATH	src/preferences.hpp	/^    static const char *SYNC_LOCAL_PATH;$/;"	m	class:gnote::Preferences	access:public
SYNC_SELECTED_SERVICE_ADDIN	src/preferences.cpp	/^  const char * Preferences::SYNC_SELECTED_SERVICE_ADDIN = "sync-selected-service-addin";$/;"	m	class:gnote::Preferences	file:
SYNC_SELECTED_SERVICE_ADDIN	src/preferences.hpp	/^    static const char *SYNC_SELECTED_SERVICE_ADDIN;$/;"	m	class:gnote::Preferences	access:public
SYNC_SERVER_CREATION_FAILED	src/synchronization/syncutils.hpp	/^    SYNC_SERVER_CREATION_FAILED,$/;"	e	enum:gnote::sync::SyncState
SYSTEM_TAG_PREFIX	src/tag.cpp	/^  const char * Tag::SYSTEM_TAG_PREFIX = "system:";$/;"	m	class:gnote::Tag	file:
SYSTEM_TAG_PREFIX	src/tag.hpp	/^    static const char * SYSTEM_TAG_PREFIX;$/;"	m	class:gnote::Tag	access:public
SavedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr &> SavedHandler;$/;"	t	class:gnote::NoteBase	access:public
Search	src/search.cpp	/^  Search::Search(NoteManager & manager)$/;"	f	class:gnote::Search	signature:(NoteManager & manager)
Search	src/search.hpp	/^  Search(NoteManager &);$/;"	p	class:gnote::Search	access:public	signature:(NoteManager &)
Search	src/search.hpp	/^class Search $/;"	c	namespace:gnote
SearchNotes	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> SearchNotes(const std::string& query, const bool& case_sensitive) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& query, const bool& case_sensitive)
SearchNotes	src/dbus/remotecontrol.cpp	/^std::vector< std::string > RemoteControl::SearchNotes(const std::string& query,$/;"	f	class:gnote::RemoteControl	signature:(const std::string& query, const bool& case_sensitive)
SearchNotesWidget	src/searchnoteswidget.cpp	/^SearchNotesWidget::SearchNotesWidget(NoteManager & m)$/;"	f	class:gnote::SearchNotesWidget	signature:(NoteManager & m)
SearchNotesWidget	src/searchnoteswidget.hpp	/^  SearchNotesWidget(NoteManager & m);$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:(NoteManager & m)
SearchNotesWidget	src/searchnoteswidget.hpp	/^class SearchNotesWidget$/;"	c	namespace:gnote	inherits:Gtk::HPaned,EmbeddableWidget,SearchableItem,HasActions
SearchNotes_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SearchNotes_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
SearchNotes_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SearchNotes_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
SearchProvider	src/dbus/searchprovider.cpp	/^SearchProvider::SearchProvider(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & search_interface, gnote::NoteManager & manager)
SearchProvider	src/dbus/searchprovider.hpp	/^  SearchProvider(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & search_interface, gnote::NoteManager & manager)
SearchProvider	src/dbus/searchprovider.hpp	/^class SearchProvider$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::InterfaceVTable
SearchableItem	src/mainwindowembeds.hpp	/^class SearchableItem$/;"	c	namespace:gnote
SetNoteCompleteXml	src/dbus/remotecontrol-client-glue.cpp	/^bool RemoteControl_proxy::SetNoteCompleteXml(const std::string & uri, const std::string & xml_contents)$/;"	f	class:RemoteControl_proxy	signature:(const std::string & uri, const std::string & xml_contents)
SetNoteCompleteXml	src/dbus/remotecontrol-client-glue.hpp	/^  bool SetNoteCompleteXml(const std::string & uri, const std::string & xml_contents);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri, const std::string & xml_contents)
SetNoteCompleteXml	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteCompleteXml(const std::string& uri, const std::string& xml_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& xml_contents)
SetNoteCompleteXml	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteCompleteXml(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& xml_contents)
SetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteCompleteXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
SetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteCompleteXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
SetNoteContents	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteContents(const std::string& uri, const std::string& text_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& text_contents)
SetNoteContents	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteContents(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& text_contents)
SetNoteContentsXml	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteContentsXml(const std::string& uri, const std::string& xml_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& xml_contents)
SetNoteContentsXml	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteContentsXml(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& xml_contents)
SetNoteContentsXml_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteContentsXml_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
SetNoteContentsXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteContentsXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
SetNoteContents_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::SetNoteContents_stub(const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters)
SetNoteContents_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteContents_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
SilentUI	src/synchronization/silentui.cpp	/^  SilentUI::SilentUI(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SilentUI	signature:(NoteManagerBase & manager)
SilentUI	src/synchronization/silentui.hpp	/^    explicit SilentUI(NoteManagerBase &);$/;"	p	class:gnote::sync::SilentUI	access:private	signature:(NoteManagerBase &)
SilentUI	src/synchronization/silentui.hpp	/^  class SilentUI$/;"	c	namespace:gnote::sync	inherits:SyncUI
Singleton	src/base/singleton.hpp	/^    Singleton()$/;"	f	class:base::Singleton	access:protected	signature:()
Singleton	src/base/singleton.hpp	/^  class Singleton$/;"	c	namespace:base
SlotConnecting	src/synchronization/syncui.hpp	/^    typedef sigc::slot<void> SlotConnecting;$/;"	t	class:gnote::sync::SyncUI	access:public
SlotIdle	src/synchronization/syncui.hpp	/^    typedef sigc::slot<void> SlotIdle;$/;"	t	class:gnote::sync::SyncUI	access:public
SpecialNotebook	src/notebooks/specialnotebooks.hpp	/^  SpecialNotebook(NoteManager & m, const std::string &s)$/;"	f	class:gnote::notebooks::SpecialNotebook	access:protected	signature:(NoteManager & m, const std::string &s)
SpecialNotebook	src/notebooks/specialnotebooks.hpp	/^class SpecialNotebook$/;"	c	namespace:gnote::notebooks	inherits:Notebook
SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesApplicationAddin::SpecialNotesApplicationAddin()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  SpecialNotesApplicationAddin();$/;"	p	class:specialnotes::SpecialNotesApplicationAddin	access:private	signature:()
SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^class SpecialNotesApplicationAddin$/;"	c	namespace:specialnotes	inherits:gnote::ApplicationAddin
SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesModule::SpecialNotesModule()$/;"	f	class:specialnotes::SpecialNotesModule	signature:()
SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  SpecialNotesModule();$/;"	p	class:specialnotes::SpecialNotesModule	access:public	signature:()
SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^class SpecialNotesModule$/;"	c	namespace:specialnotes	inherits:sharp::DynamicModule
SpecialNotesNotebook	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^    SpecialNotesNotebook(gnote::NoteManager & nm)$/;"	f	class:__anon15::SpecialNotesNotebook	access:public	signature:(gnote::NoteManager & nm)
SpecialNotesNotebook	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^  class SpecialNotesNotebook$/;"	c	namespace:__anon15	file:	inherits:gnote::notebooks::SpecialNotebook
SplitterAction	src/undo.cpp	/^  SplitterAction::SplitterAction()$/;"	f	class:gnote::SplitterAction	signature:()
SplitterAction	src/undo.hpp	/^  SplitterAction();$/;"	p	class:gnote::SplitterAction	access:protected	signature:()
SplitterAction	src/undo.hpp	/^class SplitterAction$/;"	c	namespace:gnote	inherits:EditAction
StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.cpp	/^StatisticsApplicationAddin::StatisticsApplicationAddin()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsApplicationAddin();$/;"	p	class:statistics::StatisticsApplicationAddin	access:private	signature:()
StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.hpp	/^class StatisticsApplicationAddin$/;"	c	namespace:statistics	inherits:gnote::ApplicationAddin
StatisticsModel	src/addins/statistics/statisticswidget.cpp	/^  StatisticsModel(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(gnote::NoteManager & nm)
StatisticsModel	src/addins/statistics/statisticswidget.cpp	/^class StatisticsModel$/;"	c	namespace:statistics	file:	inherits:Gtk::TreeStore
StatisticsModule	src/addins/statistics/statisticsapplicationaddin.cpp	/^StatisticsModule::StatisticsModule()$/;"	f	class:statistics::StatisticsModule	signature:()
StatisticsModule	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsModule();$/;"	p	class:statistics::StatisticsModule	access:public	signature:()
StatisticsModule	src/addins/statistics/statisticsapplicationaddin.hpp	/^class StatisticsModule$/;"	c	namespace:statistics	inherits:sharp::DynamicModule
StatisticsRecord	src/addins/statistics/statisticswidget.cpp	/^    StatisticsRecord()$/;"	f	class:statistics::StatisticsModel::StatisticsRecord	access:public	signature:()
StatisticsRecord	src/addins/statistics/statisticswidget.cpp	/^  class StatisticsRecord$/;"	c	class:statistics::StatisticsModel	file:	inherits:Gtk::TreeModelColumnRecord	access:private
StatisticsWidget	src/addins/statistics/statisticswidget.cpp	/^StatisticsWidget::StatisticsWidget(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsWidget	signature:(gnote::NoteManager & nm)
StatisticsWidget	src/addins/statistics/statisticswidget.hpp	/^  StatisticsWidget(gnote::NoteManager & nm);$/;"	p	class:statistics::StatisticsWidget	access:public	signature:(gnote::NoteManager & nm)
StatisticsWidget	src/addins/statistics/statisticswidget.hpp	/^class StatisticsWidget$/;"	c	namespace:statistics	inherits:Gtk::TreeView,gnote::EmbeddableWidget
StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^StickyNoteImportModule::StickyNoteImportModule()$/;"	f	class:stickynote::StickyNoteImportModule	signature:()
StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  StickyNoteImportModule();$/;"	p	class:stickynote::StickyNoteImportModule	access:public	signature:()
StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^class StickyNoteImportModule$/;"	c	namespace:stickynote	inherits:sharp::DynamicModule
StickyNoteImportNoteAddin	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  StickyNoteImportNoteAddin()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	access:public	signature:()
StickyNoteImportNoteAddin	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^class StickyNoteImportNoteAddin$/;"	c	namespace:stickynote	inherits:gnote::ImportAddin
StreamReader	src/sharp/streamreader.cpp	/^StreamReader::StreamReader()$/;"	f	class:sharp::StreamReader	signature:()
StreamReader	src/sharp/streamreader.hpp	/^  StreamReader();$/;"	p	class:sharp::StreamReader	access:public	signature:()
StreamReader	src/sharp/streamreader.hpp	/^class StreamReader$/;"	c	namespace:sharp
StreamWriter	src/sharp/streamwriter.cpp	/^StreamWriter::StreamWriter()$/;"	f	class:sharp::StreamWriter	signature:()
StreamWriter	src/sharp/streamwriter.hpp	/^  StreamWriter();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
StreamWriter	src/sharp/streamwriter.hpp	/^class StreamWriter$/;"	c	namespace:sharp
SyncClient	src/synchronization/isyncmanager.hpp	/^class SyncClient$/;"	c	namespace:gnote::sync
SyncClient	src/test/testsyncclient.cpp	/^SyncClient::SyncClient(gnote::NoteManagerBase & \/*manager*\/)$/;"	f	class:test::SyncClient	signature:(gnote::NoteManagerBase & )
SyncClient	src/test/testsyncclient.hpp	/^  SyncClient(gnote::NoteManagerBase & manager);$/;"	p	class:test::SyncClient	access:public	signature:(gnote::NoteManagerBase & manager)
SyncClient	src/test/testsyncclient.hpp	/^class SyncClient$/;"	c	namespace:test	inherits:gnote::sync::GnoteSyncClient
SyncDialog	src/synchronization/syncdialog.cpp	/^SyncDialog::SyncDialog(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncDialog	signature:(NoteManagerBase & manager)
SyncDialog	src/synchronization/syncdialog.hpp	/^    explicit SyncDialog(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(NoteManagerBase &)
SyncDialog	src/synchronization/syncdialog.hpp	/^  class SyncDialog$/;"	c	namespace:gnote::sync	inherits:Gtk::Dialog,SyncUI
SyncLockInfo	src/synchronization/isyncmanager.cpp	/^SyncLockInfo::SyncLockInfo()$/;"	f	class:gnote::sync::SyncLockInfo	signature:()
SyncLockInfo	src/synchronization/isyncmanager.hpp	/^  SyncLockInfo();$/;"	p	class:gnote::sync::SyncLockInfo	access:public	signature:()
SyncLockInfo	src/synchronization/isyncmanager.hpp	/^class SyncLockInfo$/;"	c	namespace:gnote::sync
SyncManager	src/synchronization/syncmanager.cpp	/^  SyncManager::SyncManager(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & m)
SyncManager	src/synchronization/syncmanager.hpp	/^    SyncManager(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:public	signature:(NoteManagerBase &)
SyncManager	src/synchronization/syncmanager.hpp	/^  class SyncManager$/;"	c	namespace:gnote::sync	inherits:ISyncManager
SyncServer	src/synchronization/isyncmanager.hpp	/^class SyncServer$/;"	c	namespace:gnote::sync
SyncServiceAddin	src/synchronization/syncserviceaddin.hpp	/^  class SyncServiceAddin$/;"	c	namespace:gnote::sync	inherits:AbstractAddin
SyncState	src/synchronization/syncutils.hpp	/^  enum SyncState {$/;"	g	namespace:gnote::sync
SyncStoreModel	src/preferencesdialog.hpp	/^    SyncStoreModel()$/;"	f	class:gnote::PreferencesDialog::SyncStoreModel	access:public	signature:()
SyncStoreModel	src/preferencesdialog.hpp	/^  class SyncStoreModel$/;"	c	class:gnote::PreferencesDialog	inherits:Gtk::TreeModelColumnRecord	access:private
SyncTitleConflictDialog	src/synchronization/syncdialog.cpp	/^  SyncTitleConflictDialog(const Note::Ptr & existingNote, const std::list<std::string> & noteUpdateTitles)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const Note::Ptr & existingNote, const std::list<std::string> & noteUpdateTitles)
SyncTitleConflictDialog	src/synchronization/syncdialog.cpp	/^class SyncTitleConflictDialog$/;"	c	namespace:gnote::sync::__anon19	file:	inherits:Gtk::Dialog
SyncTitleConflictResolution	src/synchronization/syncutils.hpp	/^  enum SyncTitleConflictResolution {$/;"	g	namespace:gnote::sync
SyncUI	src/synchronization/syncui.cpp	/^  SyncUI::SyncUI(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncUI	signature:(NoteManagerBase & manager)
SyncUI	src/synchronization/syncui.hpp	/^    explicit SyncUI(NoteManagerBase & manager);$/;"	p	class:gnote::sync::SyncUI	access:protected	signature:(NoteManagerBase & manager)
SyncUI	src/synchronization/syncui.hpp	/^  class SyncUI$/;"	c	namespace:gnote::sync	inherits:enable_shared_from_this
SyncUtils	src/synchronization/syncutils.hpp	/^  class SyncUtils$/;"	c	namespace:gnote::sync	inherits:base::Singleton
TABLE_OF_CONTENTS_ORDER	src/iactionmanager.hpp	/^  TABLE_OF_CONTENTS_ORDER = 600,$/;"	e	enum:gnote::NoteActionOrder
TAG_NAME	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  const char * BugzillaNoteAddin::TAG_NAME = "link:bugzilla";$/;"	m	class:bugzilla::BugzillaNoteAddin	file:
TAG_NAME	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static const char * TAG_NAME;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:private
TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG = "template:save-selection";$/;"	m	class:gnote::ITagManager	file:
TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG = "template:save-size";$/;"	m	class:gnote::ITagManager	file:
TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG = "template:save-title";$/;"	m	class:gnote::ITagManager	file:
TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
TEMPLATE_NOTE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SYSTEM_TAG = "template";$/;"	m	class:gnote::ITagManager	file:
TEMPLATE_NOTE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
TESTS	src/Makefile	/^TESTS = trietest$(EXEEXT) stringtest$(EXEEXT) notetest$(EXEEXT) \\$/;"	m
TEST_EXTENSIONS	src/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_LOGS	src/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOG_COMPILE	src/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_DRIVER	src/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/test-driver$/;"	m
TEST_MANIFEST	src/test/gnotesyncclienttest.cpp	/^const char *TEST_MANIFEST =$/;"	v
TEST_SUITE_LOG	src/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TO_STRING	src/base/macros.hpp	53;"	d
TRACE	libtomboy/tomboykeybinder.c	38;"	d	file:
TRACE	libtomboy/tomboykeybinder.c	40;"	d	file:
TRACE	libtomboy/tomboyutil.c	39;"	d	file:
TRACE	libtomboy/tomboyutil.c	41;"	d	file:
TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.cpp	/^TableofcontentsAction::TableofcontentsAction(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:tableofcontents::TableofcontentsAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  TableofcontentsAction(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.hpp	/^class TableofcontentsAction$/;"	c	namespace:tableofcontents	inherits:Gtk::Action
TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.cpp	/^TableofcontentsMenuItem::TableofcontentsMenuItem ($/;"	f	class:tableofcontents::TableofcontentsMenuItem	signature:( const gnote::Note::Ptr & note, const std::string & heading, Heading::Type heading_level, int heading_position)
TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  TableofcontentsMenuItem ( const gnote::Note::Ptr & note,$/;"	p	class:tableofcontents::TableofcontentsMenuItem	access:public	signature:( const gnote::Note::Ptr & note, const std::string & heading, Heading::Type heading_level, int heading_position )
TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^class TableofcontentsMenuItem : public Gtk::ImageMenuItem$/;"	c	namespace:tableofcontents	inherits:Gtk::ImageMenuItem
TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^TableofcontentsModule::TableofcontentsModule()$/;"	f	class:tableofcontents::TableofcontentsModule	signature:()
TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  TableofcontentsModule();$/;"	p	class:tableofcontents::TableofcontentsModule	access:public	signature:()
TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^class TableofcontentsModule : public sharp::DynamicModule$/;"	c	namespace:tableofcontents	inherits:sharp::DynamicModule
TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^TableofcontentsNoteAddin::TableofcontentsNoteAddin()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  TableofcontentsNoteAddin();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:public	signature:()
TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^class TableofcontentsNoteAddin : public gnote::NoteAddin$/;"	c	namespace:tableofcontents	inherits:gnote::NoteAddin
Tag	src/tag.cpp	/^  Tag::Tag(const std::string & _name)$/;"	f	class:gnote::Tag	signature:(const std::string & _name)
Tag	src/tag.hpp	/^    Tag(const std::string & name);$/;"	p	class:gnote::Tag	access:public	signature:(const std::string & name)
Tag	src/tag.hpp	/^  class Tag $/;"	c	namespace:gnote
TagActivatedHandler	src/notetag.hpp	/^                       const Gtk::TextIter &, const Gtk::TextIter &> TagActivatedHandler;$/;"	t	class:gnote::NoteTag	access:public
TagAddedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase&, const Tag::Ptr&> TagAddedHandler;$/;"	t	class:gnote::NoteBase	access:public
TagApplyAction	src/undo.cpp	/^  TagApplyAction::TagApplyAction(const Glib::RefPtr<Gtk::TextTag> & tag, $/;"	f	class:gnote::TagApplyAction	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
TagApplyAction	src/undo.hpp	/^  TagApplyAction(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::TagApplyAction	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end)
TagApplyAction	src/undo.hpp	/^class TagApplyAction$/;"	c	namespace:gnote	inherits:EditAction
TagData	src/undo.hpp	/^  struct TagData {$/;"	s	class:gnote::SplitterAction	access:public
TagFlags	src/notetag.hpp	/^  enum TagFlags {$/;"	g	class:gnote::NoteTag	access:public
TagManager	src/tagmanager.cpp	/^  TagManager::TagManager()$/;"	f	class:gnote::TagManager	signature:()
TagManager	src/tagmanager.hpp	/^  TagManager();$/;"	p	class:gnote::TagManager	access:public	signature:()
TagManager	src/tagmanager.hpp	/^class TagManager$/;"	c	namespace:gnote	inherits:ITagManager
TagManager	src/test/testtagmanager.hpp	/^class TagManager$/;"	c	namespace:test	inherits:gnote::ITagManager
TagMap	src/notebase.hpp	/^  typedef std::map<std::string, Tag::Ptr> TagMap;$/;"	t	class:gnote::NoteData	access:public
TagMap	src/tagmanager.hpp	/^  typedef std::map<std::string, Gtk::TreeIter> TagMap;$/;"	t	class:gnote::TagManager	access:private
TagRemoveAction	src/undo.cpp	/^  TagRemoveAction::TagRemoveAction(const Glib::RefPtr<Gtk::TextTag> & tag, $/;"	f	class:gnote::TagRemoveAction	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
TagRemoveAction	src/undo.hpp	/^  TagRemoveAction(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::TagRemoveAction	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end)
TagRemoveAction	src/undo.hpp	/^class TagRemoveAction$/;"	c	namespace:gnote	inherits:EditAction
TagRemovedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr&, const std::string&> TagRemovedHandler;  $/;"	t	class:gnote::NoteBase	access:public
TagRemovingHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase&, const Tag &> TagRemovingHandler;  $/;"	t	class:gnote::NoteBase	access:public
TagSaveType	src/notetag.hpp	/^enum TagSaveType {$/;"	g	namespace:gnote
TagStart	src/notebuffer.cpp	/^    TagStart()$/;"	f	struct:gnote::TagStart	access:public	signature:()
TagStart	src/notebuffer.cpp	/^  struct TagStart $/;"	s	namespace:gnote	file:
TestApp	tools/DBusClientTest.py	/^class TestApp(object):$/;"	c	inherits:object
TextRange	src/utils.cpp	/^    TextRange::TextRange()$/;"	f	class:gnote::utils::TextRange	signature:()
TextRange	src/utils.cpp	/^    TextRange::TextRange(const Gtk::TextIter & _start,$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & _start, const Gtk::TextIter & _end)
TextRange	src/utils.hpp	/^      TextRange();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
TextRange	src/utils.hpp	/^      TextRange(const Gtk::TextIter & start,$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
TextRange	src/utils.hpp	/^    class TextRange$/;"	c	namespace:gnote::utils
TextTagEnumerator	src/utils.cpp	/^    TextTagEnumerator::TextTagEnumerator(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::utils::TextTagEnumerator	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Glib::RefPtr<Gtk::TextTag> & tag)
TextTagEnumerator	src/utils.hpp	/^      TextTagEnumerator(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	p	class:gnote::utils::TextTagEnumerator	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Glib::RefPtr<Gtk::TextTag> & tag)
TextTagEnumerator	src/utils.hpp	/^    class TextTagEnumerator$/;"	c	namespace:gnote::utils
TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int d, int hrs, int mins, int secs)$/;"	f	class:sharp::TimeSpan	signature:(int d, int hrs, int mins, int secs)
TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int d, int hrs, int mins, int secs, int usecs)$/;"	f	class:sharp::TimeSpan	signature:(int d, int hrs, int mins, int secs, int usecs)
TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int hrs, int mins, int secs)$/;"	f	class:sharp::TimeSpan	signature:(int hrs, int mins, int secs)
TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int days, int hrs, int mins, int secs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int days, int hrs, int mins, int secs)
TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int days, int hrs, int mins, int secs, int usecs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int days, int hrs, int mins, int secs, int usecs)
TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int hrs, int mins, int secs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int hrs, int mins, int secs)
TimeSpan	src/sharp/timespan.hpp	/^  class TimeSpan$/;"	c	namespace:sharp
Title	src/addins/tableofcontents/tableofcontents.hpp	/^    Title,         \/\/  Heading::Title    == Note title$/;"	e	enum:tableofcontents::Heading::Type
Todo	src/addins/todo/todonoteaddin.hpp	/^class Todo$/;"	c	namespace:todo	inherits:gnote::NoteAddin
TodoModule	src/addins/todo/todonoteaddin.cpp	/^TodoModule::TodoModule()$/;"	f	class:todo::TodoModule	signature:()
TodoModule	src/addins/todo/todonoteaddin.hpp	/^  TodoModule();$/;"	p	class:todo::TodoModule	access:public	signature:()
TodoModule	src/addins/todo/todonoteaddin.hpp	/^class TodoModule$/;"	c	namespace:todo	inherits:sharp::DynamicModule
TomboyBindkeyHandler	libtomboy/tomboykeybinder.h	/^typedef void (* TomboyBindkeyHandler) (char *keystring, gpointer user_data);$/;"	t
TomboyImportAddin	src/addins/tomboyimport/tomboyimportaddin.hpp	/^class TomboyImportAddin$/;"	c	namespace:tomboyimport	inherits:gnote::ImportAddin
TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.cpp	/^TomboyImportModule::TomboyImportModule()$/;"	f	class:tomboyimport::TomboyImportModule	signature:()
TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  TomboyImportModule();$/;"	p	class:tomboyimport::TomboyImportModule	access:public	signature:()
TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.hpp	/^class TomboyImportModule$/;"	c	namespace:tomboyimport	inherits:sharp::DynamicModule
ToolItemMap	src/noteaddin.hpp	/^  typedef std::map<Gtk::ToolItem*, int> ToolItemMap;$/;"	t	class:gnote::NoteAddin	access:private
ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Image& image, $/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Image& image, const Glib::ustring & label, Gtk::Menu * menu)
ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, $/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, const Glib::ustring & label, Gtk::Menu * menu)
ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Widget & widget, Gtk::Menu *menu)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Widget & widget, Gtk::Menu *menu)
ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Image& image, $/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Image& image, const Glib::ustring & label, Gtk::Menu * menu)
ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Toolbar& toolbar, $/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, const Glib::ustring & label, Gtk::Menu * menu)
ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Widget & widget, Gtk::Menu *menu);$/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Widget & widget, Gtk::Menu *menu)
ToolMenuButton	src/utils.hpp	/^    class ToolMenuButton$/;"	c	namespace:gnote::utils	inherits:Gtk::ToggleToolButton
Tray	src/tray.cpp	/^  Tray::Tray(NoteManager & manager, IGnoteTray & trayicon)$/;"	f	class:gnote::Tray	signature:(NoteManager & manager, IGnoteTray & trayicon)
Tray	src/tray.cpp	/^  Tray::Tray(NoteManager & manager, IGnoteTray & trayicon, IKeybinder & keybinder)$/;"	f	class:gnote::Tray	signature:(NoteManager & manager, IGnoteTray & trayicon, IKeybinder & keybinder)
Tray	src/tray.hpp	/^  Tray(NoteManager &, IGnoteTray &);$/;"	p	class:gnote::Tray	access:public	signature:(NoteManager &, IGnoteTray &)
Tray	src/tray.hpp	/^  Tray(NoteManager &, IGnoteTray &, IKeybinder &);$/;"	p	class:gnote::Tray	access:public	signature:(NoteManager &, IGnoteTray &, IKeybinder &)
Tray	src/tray.hpp	/^class Tray$/;"	c	namespace:gnote
TrayIcon	src/tray.cpp	/^  TrayIcon::TrayIcon(IKeybinder & keybinder, NoteManager & manager)$/;"	f	class:gnote::TrayIcon	signature:(IKeybinder & keybinder, NoteManager & manager)
TrayIcon	src/tray.hpp	/^  TrayIcon(IKeybinder & keybinder, NoteManager & manager);$/;"	p	class:gnote::TrayIcon	access:public	signature:(IKeybinder & keybinder, NoteManager & manager)
TrayIcon	src/tray.hpp	/^class TrayIcon$/;"	c	namespace:gnote	inherits:Gtk::StatusIcon,IGnoteTray
TreeViewModel	src/synchronization/syncdialog.cpp	/^  TreeViewModel()$/;"	f	class:gnote::sync::__anon19::TreeViewModel	access:public	signature:()
TreeViewModel	src/synchronization/syncdialog.cpp	/^class TreeViewModel$/;"	c	namespace:gnote::sync::__anon19	file:	inherits:Gtk::TreeModelColumnRecord
TrieController	src/notemanagerbase.cpp	/^  TrieController(NoteManagerBase &);$/;"	p	class:gnote::TrieController	file:	access:public	signature:(NoteManagerBase &)
TrieController	src/notemanagerbase.cpp	/^TrieController::TrieController(NoteManagerBase & manager)$/;"	f	class:gnote::TrieController	signature:(NoteManagerBase & manager)
TrieController	src/notemanagerbase.cpp	/^class TrieController$/;"	c	namespace:gnote	file:
TrieHit	src/triehit.hpp	/^  TrieHit(int s, int e, const Glib::ustring & k, const value_t & v)$/;"	f	class:gnote::TrieHit	access:public	signature:(int s, int e, const Glib::ustring & k, const value_t & v)
TrieHit	src/triehit.hpp	/^class TrieHit$/;"	c	namespace:gnote
TrieState	src/trie.hpp	/^    TrieState(gunichar v, int d, const TrieStatePtr & s)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(gunichar v, int d, const TrieStatePtr & s)
TrieState	src/trie.hpp	/^  class TrieState$/;"	c	class:gnote::TrieTree	access:private
TrieStateList	src/trie.hpp	/^  typedef std::list<TrieStatePtr> TrieStateList;$/;"	t	class:gnote::TrieTree	access:private
TrieStatePtr	src/trie.hpp	/^  typedef shared_ptr<TrieState> TrieStatePtr;$/;"	t	class:gnote::TrieTree	access:private
TrieStateQueue	src/trie.hpp	/^  typedef std::queue<TrieStatePtr> TrieStateQueue;$/;"	t	class:gnote::TrieTree	access:private
TrieTree	src/trie.hpp	/^  TrieTree(bool case_sensitive)$/;"	f	class:gnote::TrieTree	access:public	signature:(bool case_sensitive)
TrieTree	src/trie.hpp	/^class TrieTree$/;"	c	namespace:gnote
Type	src/addins/tableofcontents/tableofcontents.hpp	/^  enum Type {      \/\/  Heading::Type     (can be used as a type)$/;"	g	namespace:tableofcontents::Heading
UPLOADING	src/synchronization/syncutils.hpp	/^    UPLOADING,$/;"	e	enum:gnote::sync::SyncState
UPLOAD_MODIFIED	src/synchronization/syncutils.hpp	/^    UPLOAD_MODIFIED,$/;"	e	enum:gnote::sync::NoteSyncType
UPLOAD_NEW	src/synchronization/syncutils.hpp	/^    UPLOAD_NEW,$/;"	e	enum:gnote::sync::NoteSyncType
URI_ATTRIBUTE_NAME	src/addins/bugzilla/bugzillalink.cpp	31;"	d	file:
URL_REGEX	src/watchers.cpp	/^  const char * NoteUrlWatcher::URL_REGEX = "((\\\\b((news|http|https|ftp|file|irc):\/\/|mailto:|(www|ftp)\\\\.|\\\\S*@\\\\S*\\\\.)|(?<=^|\\\\s)\/\\\\S+\/|(?<=^|\\\\s)~\/\\\\S+)\\\\S*\\\\b\/?)";$/;"	m	class:gnote::NoteUrlWatcher	file:
URL_REGEX	src/watchers.hpp	/^    static const char * URL_REGEX;$/;"	m	class:gnote::NoteUrlWatcher	access:private
USER_CANCELLED	src/synchronization/syncutils.hpp	/^    USER_CANCELLED$/;"	e	enum:gnote::sync::SyncState
USER_LINGUAS	po/Makefile	/^USER_LINGUAS=$(shell if test -n "$(LINGUAS)"; then LLINGUAS="$(LINGUAS)"; ALINGUAS="$(ALL_LINGUAS)"; for lang in $$LLINGUAS; do if test -n "`grep \\^$$lang$$ $(srcdir)\/LINGUAS 2>\/dev\/null`" -o -n "`echo $$ALINGUAS|tr ' ' '\\n'|grep \\^$$lang$$`"; then printf "$$lang "; fi; done; fi)$/;"	m
USE_LINGUAS	po/Makefile	/^USE_LINGUAS=$(shell if test -n "$(USER_LINGUAS)" -o -n "$(LINGUAS)"; then LLINGUAS="$(USER_LINGUAS)"; else if test -n "$(PO_LINGUAS)"; then LLINGUAS="$(PO_LINGUAS)"; else LLINGUAS="$(ALL_LINGUAS)"; fi; fi; for lang in $$LLINGUAS; do printf "$$lang "; done)$/;"	m
USE_NLS	Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	data/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	data/appdata/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	data/icons/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	help/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	libtomboy/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/backlinks/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/bugzilla/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/exporttogtg/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/exporttohtml/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/filesystemsyncservice/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/fixedwidth/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/inserttimestamp/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/notedirectorywatcher/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/noteoftheday/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/printnotes/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/readonly/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/replacetitle/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/specialnotes/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/statistics/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/stickynoteimport/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/tableofcontents/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/todo/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/tomboyimport/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/underline/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/addins/webdavsyncservice/Makefile	/^USE_NLS = yes$/;"	m
USE_NLS	src/dbus/Makefile	/^USE_NLS = yes$/;"	m
USE_STATUS_ICON	src/preferences.cpp	/^  const char * Preferences::USE_STATUS_ICON = "use-status-icon";$/;"	m	class:gnote::Preferences	file:
USE_STATUS_ICON	src/preferences.hpp	/^    static const char *USE_STATUS_ICON;$/;"	m	class:gnote::Preferences	access:public
UUID_CFLAGS	Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	data/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	data/appdata/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	data/icons/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	help/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	libtomboy/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/backlinks/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/bugzilla/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/exporttogtg/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/exporttohtml/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/fixedwidth/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/inserttimestamp/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/noteoftheday/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/printnotes/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/readonly/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/replacetitle/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/specialnotes/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/statistics/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/stickynoteimport/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/tableofcontents/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/todo/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/tomboyimport/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/underline/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/addins/webdavsyncservice/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_CFLAGS	src/dbus/Makefile	/^UUID_CFLAGS = -I\/usr\/include\/uuid $/;"	m
UUID_LIBS	Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	data/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	data/appdata/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	data/icons/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	help/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	libtomboy/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/backlinks/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/bugzilla/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/exporttogtg/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/exporttohtml/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/filesystemsyncservice/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/fixedwidth/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/inserttimestamp/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/notedirectorywatcher/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/noteoftheday/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/printnotes/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/readonly/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/replacetitle/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/specialnotes/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/statistics/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/stickynoteimport/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/tableofcontents/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/todo/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/tomboyimport/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/underline/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/addins/webdavsyncservice/Makefile	/^UUID_LIBS = -luuid $/;"	m
UUID_LIBS	src/dbus/Makefile	/^UUID_LIBS = -luuid $/;"	m
UnderlineMenuItem	src/addins/underline/underlinemenuitem.cpp	/^  UnderlineMenuItem::UnderlineMenuItem(gnote::NoteAddin *addin)$/;"	f	class:underline::UnderlineMenuItem	signature:(gnote::NoteAddin *addin)
UnderlineMenuItem	src/addins/underline/underlinemenuitem.hpp	/^  UnderlineMenuItem(gnote::NoteAddin *);$/;"	p	class:underline::UnderlineMenuItem	access:public	signature:(gnote::NoteAddin *)
UnderlineMenuItem	src/addins/underline/underlinemenuitem.hpp	/^class UnderlineMenuItem$/;"	c	namespace:underline	inherits:Gtk::CheckMenuItem
UnderlineModule	src/addins/underline/underlinenoteaddin.cpp	/^  UnderlineModule::UnderlineModule()$/;"	f	class:underline::UnderlineModule	signature:()
UnderlineModule	src/addins/underline/underlinenoteaddin.hpp	/^    UnderlineModule();$/;"	p	class:underline::UnderlineModule	access:public	signature:()
UnderlineModule	src/addins/underline/underlinenoteaddin.hpp	/^  class UnderlineModule$/;"	c	namespace:underline	inherits:sharp::DynamicModule
UnderlineNoteAddin	src/addins/underline/underlinenoteaddin.hpp	/^  class UnderlineNoteAddin$/;"	c	namespace:underline	inherits:gnote::NoteAddin
UnderlineTag	src/addins/underline/underlinetag.hpp	/^  UnderlineTag()$/;"	f	class:underline::UnderlineTag	access:public	signature:()
UnderlineTag	src/addins/underline/underlinetag.hpp	/^class UnderlineTag$/;"	c	namespace:underline	inherits:gnote::NoteTag
UndoManager	src/undo.cpp	/^  UndoManager::UndoManager(NoteBuffer * buffer)$/;"	f	class:gnote::UndoManager	signature:(NoteBuffer * buffer)
UndoManager	src/undo.hpp	/^  UndoManager(NoteBuffer * buffer);$/;"	p	class:gnote::UndoManager	access:public	signature:(NoteBuffer * buffer)
UndoManager	src/undo.hpp	/^class UndoManager$/;"	c	namespace:gnote	inherits:boost::noncopyable
UnfiledNotesNotebook	src/notebooks/specialnotebooks.cpp	/^UnfiledNotesNotebook::UnfiledNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(NoteManager & manager)
UnfiledNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  UnfiledNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::UnfiledNotesNotebook	access:public	signature:(NoteManager &)
UnfiledNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class UnfiledNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
Uri	src/sharp/uri.hpp	/^    Uri(const std::string & u)$/;"	f	class:sharp::Uri	access:public	signature:(const std::string & u)
Uri	src/sharp/uri.hpp	/^  class Uri$/;"	c	namespace:sharp
UriList	src/utils.cpp	/^    UriList::UriList(const Gtk::SelectionData & selection)$/;"	f	class:gnote::utils::UriList	signature:(const Gtk::SelectionData & selection)
UriList	src/utils.cpp	/^    UriList::UriList(const std::string & data)$/;"	f	class:gnote::utils::UriList	signature:(const std::string & data)
UriList	src/utils.hpp	/^      UriList(const Gtk::SelectionData & selection);$/;"	p	class:gnote::utils::UriList	access:public	signature:(const Gtk::SelectionData & selection)
UriList	src/utils.hpp	/^      UriList(const std::string & data);$/;"	p	class:gnote::utils::UriList	access:public	signature:(const std::string & data)
UriList	src/utils.hpp	/^    class UriList$/;"	c	namespace:gnote::utils	inherits:std::list
VERSION	Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	config.h	145;"	d
VERSION	data/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	data/appdata/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	data/icons/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	help/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	libtomboy/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	po/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/backlinks/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/bugzilla/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/exporttogtg/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/exporttohtml/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/filesystemsyncservice/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/fixedwidth/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/inserttimestamp/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/notedirectorywatcher/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/noteoftheday/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/printnotes/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/readonly/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/replacetitle/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/specialnotes/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/statistics/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/stickynoteimport/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/tableofcontents/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/todo/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/tomboyimport/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/underline/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/addins/webdavsyncservice/Makefile	/^VERSION = 3.15.0$/;"	m
VERSION	src/dbus/Makefile	/^VERSION = 3.15.0$/;"	m
Version	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string Version() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
Version	src/dbus/remotecontrol.cpp	/^std::string RemoteControl::Version()$/;"	f	class:gnote::RemoteControl	signature:()
Version_stub	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::Version_stub(const Glib::VariantContainerBase &)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &)
Version_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase Version_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
WIKIWORD_REGEX	src/watchers.cpp	/^  const char * NoteWikiWatcher::WIKIWORD_REGEX = "\\\\b((\\\\p{Lu}+[\\\\p{Ll}0-9]+){2}([\\\\p{Lu}\\\\p{Ll}0-9])*)\\\\b";$/;"	m	class:gnote::NoteWikiWatcher	file:
WIKIWORD_REGEX	src/watchers.hpp	/^    static const char * WIKIWORD_REGEX;$/;"	m	class:gnote::NoteWikiWatcher	access:private
WeakPtr	src/note.hpp	/^  typedef weak_ptr<Note> WeakPtr;$/;"	t	class:gnote::Note	access:public
WeakPtr	src/notebase.hpp	/^  typedef weak_ptr<NoteBase> WeakPtr;$/;"	t	class:gnote::NoteBase	access:public
WebDavSyncServiceAddin	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^class WebDavSyncServiceAddin$/;"	c	namespace:webdavsyncserviceaddin	inherits:gnote::sync::FuseSyncServiceAddin
WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^WebDavSyncServiceModule::WebDavSyncServiceModule()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceModule	signature:()
WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  WebDavSyncServiceModule();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceModule	access:public	signature:()
WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^class WebDavSyncServiceModule$/;"	c	namespace:webdavsyncserviceaddin	inherits:sharp::DynamicModule
WidgetInsertData	src/notebuffer.hpp	/^  struct WidgetInsertData$/;"	s	class:gnote::NoteBuffer	access:private
XGETTEXT	Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	data/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	data/appdata/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	data/icons/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	help/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	libtomboy/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	po/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/backlinks/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/bugzilla/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/exporttogtg/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/exporttohtml/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/filesystemsyncservice/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/fixedwidth/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/inserttimestamp/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/notedirectorywatcher/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/noteoftheday/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/printnotes/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/readonly/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/replacetitle/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/specialnotes/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/statistics/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/stickynoteimport/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/tableofcontents/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/todo/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/tomboyimport/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/underline/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/addins/webdavsyncservice/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XGETTEXT	src/dbus/Makefile	/^XGETTEXT = \/usr\/bin\/xgettext$/;"	m
XKeybinder	src/xkeybinder.cpp	/^  XKeybinder::XKeybinder()$/;"	f	class:gnote::XKeybinder	signature:()
XKeybinder	src/xkeybinder.hpp	/^  XKeybinder();$/;"	p	class:gnote::XKeybinder	access:public	signature:()
XKeybinder	src/xkeybinder.hpp	/^class XKeybinder$/;"	c	namespace:gnote	inherits:IKeybinder
XMLLINT	Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	data/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	data/appdata/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	data/icons/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	help/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	libtomboy/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/backlinks/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/bugzilla/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/exporttogtg/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/exporttohtml/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/filesystemsyncservice/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/fixedwidth/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/inserttimestamp/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/notedirectorywatcher/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/noteoftheday/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/printnotes/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/readonly/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/replacetitle/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/specialnotes/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/statistics/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/stickynoteimport/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/tableofcontents/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/todo/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/tomboyimport/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/underline/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/addins/webdavsyncservice/Makefile	/^XMLLINT = xmllint$/;"	m
XMLLINT	src/dbus/Makefile	/^XMLLINT = xmllint$/;"	m
X_CFLAGS	Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	data/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	data/appdata/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	data/icons/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	help/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	libtomboy/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/backlinks/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/bugzilla/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/exporttogtg/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/exporttohtml/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/filesystemsyncservice/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/fixedwidth/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/inserttimestamp/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/notedirectorywatcher/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/noteoftheday/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/printnotes/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/readonly/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/replacetitle/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/specialnotes/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/statistics/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/stickynoteimport/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/tableofcontents/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/todo/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/tomboyimport/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/underline/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/addins/webdavsyncservice/Makefile	/^X_CFLAGS = $/;"	m
X_CFLAGS	src/dbus/Makefile	/^X_CFLAGS = $/;"	m
X_LIBS	Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	data/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	data/appdata/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	data/icons/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	help/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	libtomboy/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/backlinks/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/bugzilla/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/exporttogtg/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/exporttohtml/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/filesystemsyncservice/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/fixedwidth/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/inserttimestamp/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/notedirectorywatcher/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/noteoftheday/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/printnotes/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/readonly/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/replacetitle/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/specialnotes/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/statistics/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/stickynoteimport/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/tableofcontents/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/todo/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/tomboyimport/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/underline/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/addins/webdavsyncservice/Makefile	/^X_LIBS = -lX11 $/;"	m
X_LIBS	src/dbus/Makefile	/^X_LIBS = -lX11 $/;"	m
XmlConvert	src/sharp/xmlconvert.hpp	/^  class XmlConvert$/;"	c	namespace:sharp
XmlDecoder	src/utils.hpp	/^    class XmlDecoder$/;"	c	namespace:gnote::utils
XmlEncoder	src/utils.hpp	/^    class XmlEncoder$/;"	c	namespace:gnote::utils
XmlNodeSet	src/sharp/xml.hpp	/^  typedef std::vector<xmlNodePtr> XmlNodeSet;$/;"	t	namespace:sharp
XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::XmlReader()$/;"	f	class:sharp::XmlReader	signature:()
XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::XmlReader(const std::string & filename)$/;"	f	class:sharp::XmlReader	signature:(const std::string & filename)
XmlReader	src/sharp/xmlreader.hpp	/^  XmlReader();$/;"	p	class:sharp::XmlReader	access:public	signature:()
XmlReader	src/sharp/xmlreader.hpp	/^  XmlReader(const std::string & filename);$/;"	p	class:sharp::XmlReader	access:public	signature:(const std::string & filename)
XmlReader	src/sharp/xmlreader.hpp	/^class XmlReader$/;"	c	namespace:sharp	inherits:boost::noncopyable
XmlResolver	src/sharp/xmlresolver.hpp	/^class XmlResolver$/;"	c	namespace:sharp
XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter()$/;"	f	class:sharp::XmlWriter	signature:()
XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter(const std::string & filename)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & filename)
XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter(xmlDocPtr doc)$/;"	f	class:sharp::XmlWriter	signature:(xmlDocPtr doc)
XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter(const std::string & filename);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & filename)
XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter(xmlDocPtr doc);$/;"	p	class:sharp::XmlWriter	access:public	signature:(xmlDocPtr doc)
XmlWriter	src/sharp/xmlwriter.hpp	/^  class XmlWriter$/;"	c	namespace:sharp	inherits:boost::noncopyable
XslTransform	src/sharp/xsltransform.cpp	/^XslTransform:: XslTransform()$/;"	f	class:sharp::XslTransform	signature:()
XslTransform	src/sharp/xsltransform.hpp	/^  XslTransform();$/;"	p	class:sharp::XslTransform	access:public	signature:()
XslTransform	src/sharp/xsltransform.hpp	/^class XslTransform$/;"	c	namespace:sharp
XsltArgumentList	src/sharp/xsltargumentlist.hpp	/^class XsltArgumentList$/;"	c	namespace:sharp
YELP_LC_DIST	Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	data/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	data/appdata/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	data/icons/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	help/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	libtomboy/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/backlinks/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/bugzilla/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/exporttogtg/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/exporttohtml/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/filesystemsyncservice/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/fixedwidth/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/inserttimestamp/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/notedirectorywatcher/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/noteoftheday/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/printnotes/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/readonly/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/replacetitle/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/specialnotes/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/statistics/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/stickynoteimport/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/tableofcontents/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/todo/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/tomboyimport/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/underline/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/addins/webdavsyncservice/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_DIST	src/dbus/Makefile	/^YELP_LC_DIST = true$/;"	m
YELP_LC_MEDIA_LINKS	Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	data/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	data/appdata/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	data/icons/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	help/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	libtomboy/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/backlinks/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/bugzilla/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/exporttogtg/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/exporttohtml/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/filesystemsyncservice/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/fixedwidth/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/inserttimestamp/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/notedirectorywatcher/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/noteoftheday/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/printnotes/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/readonly/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/replacetitle/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/specialnotes/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/statistics/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/stickynoteimport/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/tableofcontents/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/todo/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/tomboyimport/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/underline/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/addins/webdavsyncservice/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
YELP_LC_MEDIA_LINKS	src/dbus/Makefile	/^YELP_LC_MEDIA_LINKS = true$/;"	m
_ADDININFO_HPP_	src/addininfo.hpp	21;"	d
_ADDINS_NOTE_DIRECTORY_WATCHER_PREFERENCES_	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	22;"	d
_ADDINS_NOTE_DIRECTORY_WATCHER_PREFERENCES_FACTORY_	src/addins/notedirectorywatcher/notedirectorywatcherpreferencesfactory.hpp	22;"	d
_ALL_SOURCE	config.h	124;"	d
_BUGZILLA_NOTE_ADDIN_HPP__	src/addins/bugzilla/bugzillanoteaddin.hpp	25;"	d
_Binding	libtomboy/tomboykeybinder.c	/^typedef struct _Binding {$/;"	s	file:
_Binding::handler	libtomboy/tomboykeybinder.c	/^	TomboyBindkeyHandler  handler;$/;"	m	struct:_Binding	file:	access:public
_Binding::keycode	libtomboy/tomboykeybinder.c	/^	uint                  keycode;$/;"	m	struct:_Binding	file:	access:public
_Binding::keystring	libtomboy/tomboykeybinder.c	/^	char                 *keystring;$/;"	m	struct:_Binding	file:	access:public
_Binding::modifiers	libtomboy/tomboykeybinder.c	/^	uint                  modifiers;$/;"	m	struct:_Binding	file:	access:public
_Binding::user_data	libtomboy/tomboykeybinder.c	/^	gpointer              user_data;$/;"	m	struct:_Binding	file:	access:public
_DBUS_SEARCHPROVIDER_HPP_	src/dbus/searchprovider.hpp	22;"	d
_EXPORTTOGTG_ADDIN_HPP_	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	26;"	d
_EXPORTTOHTML_ADDIN_HPP_	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	27;"	d
_FILESYSTEM_SYNC_SERVICE_ADDIN_	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	22;"	d
_GNOME_KEYRING_KEYRINGEXCEPTION_HPP_	src/gnome_keyring/keyringexception.hpp	22;"	d
_GNOME_KEYRING_RING_HPP_	src/gnome_keyring/ring.hpp	22;"	d
_GNOTE_HPP_	src/gnote.hpp	25;"	d
_GNOTE_UTILS_HPP__	src/utils.hpp	24;"	d
_GNU_SOURCE	config.h	128;"	d
_HELP_C_EXTRA	help/Makefile	/^_HELP_C_EXTRA = $(foreach f,$(HELP_EXTRA),C\/$(f))$/;"	m
_HELP_C_FILES	help/Makefile	/^_HELP_C_FILES = $(foreach f,$(HELP_FILES),C\/$(f))$/;"	m
_HELP_C_MEDIA	help/Makefile	/^_HELP_C_MEDIA = $(foreach f,$(HELP_MEDIA),C\/$(f))$/;"	m
_HELP_DEFAULT_V	help/Makefile	/^_HELP_DEFAULT_V = $(if $(AM_DEFAULT_VERBOSITY),$(AM_DEFAULT_VERBOSITY),1)$/;"	m
_HELP_LC_FILES	help/Makefile	/^_HELP_LC_FILES = $(foreach lc,$(_HELP_LINGUAS),$(foreach f,$(HELP_FILES),$(lc)\/$(f)))$/;"	m
_HELP_LC_STAMPS	help/Makefile	/^_HELP_LC_STAMPS = $(foreach lc,$(_HELP_LINGUAS),$(lc)\/$(lc).stamp)$/;"	m
_HELP_LC_VERBOSE	help/Makefile	/^_HELP_LC_VERBOSE = $(_HELP_LC_VERBOSE_$(_HELP_V))$/;"	m
_HELP_LC_VERBOSE_	help/Makefile	/^_HELP_LC_VERBOSE_ = $(_HELP_LC_VERBOSE_$(_HELP_DEFAULT_V))$/;"	m
_HELP_LC_VERBOSE_0	help/Makefile	/^_HELP_LC_VERBOSE_0 = @echo "  GEN    "$(dir $@);$/;"	m
_HELP_LINGUAS	help/Makefile	/^_HELP_LINGUAS = $(if $(filter environment,$(origin LINGUAS)),$(filter $(LINGUAS),$(HELP_LINGUAS)),$(HELP_LINGUAS))$/;"	m
_HELP_MOFILES	help/Makefile	/^_HELP_MOFILES = $(patsubst %.po,%.mo,$(_HELP_POFILES))$/;"	m
_HELP_POFILES	help/Makefile	/^_HELP_POFILES = $(if $(HELP_ID),$(foreach lc,$(_HELP_LINGUAS),$(lc)\/$(lc).po))$/;"	m
_HELP_POTFILE	help/Makefile	/^_HELP_POTFILE = $(if $(HELP_POT),$(HELP_POT),$(if $(HELP_ID),$(HELP_ID).pot))$/;"	m
_HELP_V	help/Makefile	/^_HELP_V = $(if $(V),$(V),$(_HELP_DEFAULT_V))$/;"	m
_IACTIONMANAGER_HPP_	src/iactionmanager.hpp	22;"	d
_IGNOTE_HPP_	src/ignote.hpp	21;"	d
_INSERTTIMESTAMP_PREFERENCES_FACTORY_HPP__	src/addins/inserttimestamp/inserttimestamppreferencesfactory.hpp	21;"	d
_ITAGMANAGER_HPP_	src/itagmanager.hpp	21;"	d
_MAINWINDOWEMBEDS_HPP_	src/mainwindowembeds.hpp	22;"	d
_MAINWINDOW_HPP_	src/mainwindow.hpp	22;"	d
_NOTEBASE_HPP_	src/notebase.hpp	23;"	d
_NOTEBOOKS_TREEVIEW_HPP_	src/notebooks/notebookstreeview.hpp	24;"	d
_NOTEBOOK_MANAGER_HPP__	src/notebooks/notebookmanager.hpp	25;"	d
_NOTEMANAGERBASE_HPP_	src/notemanagerbase.hpp	23;"	d
_NOTEMANAGER_HPP__	src/notemanager.hpp	24;"	d
_NOTEWINDOW_HPP__	src/notewindow.hpp	25;"	d
_NOTE_DIRECTORY_WATCHER_APPLICATION_ADDIN_	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	21;"	d
_POSIX_PTHREAD_SEMANTICS	config.h	132;"	d
_PREFERENCE_TAB_ADDIN_HPP_	src/preferencetabaddin.hpp	25;"	d
_PREFSKEYBINDER_HPP_	src/prefskeybinder.hpp	24;"	d
_PRINTF_FORMAT	src/base/macros.hpp	42;"	d
_PRINTF_FORMAT	src/base/macros.hpp	45;"	d
_REMOTECONTROL_PROXY_HPP_	src/remotecontrolproxy.hpp	23;"	d
_REPLACETITLE_ADDIN_HPP_	src/addins/replacetitle/replacetitlenoteaddin.hpp	22;"	d
_SAVENDEBUG	src/debug.cpp	48;"	d	file:
_SEARCHNOTESWIDGET_	src/searchnoteswidget.hpp	24;"	d
_SHARP_PROCESS_HPP_	src/sharp/process.hpp	22;"	d
_SHARP_TIMESPAN_HPP_	src/sharp/timespan.hpp	23;"	d
_SHARP_XML_RESOLVER_HPP__	src/sharp/xmlresolver.hpp	30;"	d
_STATISTICS_APPLICATION_ADDIN_	src/addins/statistics/statisticsapplicationaddin.hpp	21;"	d
_STATISTICS_WIDGET_HPP_	src/addins/statistics/statisticswidget.hpp	22;"	d
_SYNCHRONIZATION_FILESYSTEMSYNCSERVER_HPP_	src/synchronization/filesystemsyncserver.hpp	22;"	d
_SYNCHRONIZATION_FUSESYNCSERVICEADDIN_HPP_	src/synchronization/fusesyncserviceaddin.hpp	21;"	d
_SYNCHRONIZATION_GNOTESYNCCLIENT_HPP_	src/synchronization/gnotesyncclient.cpp	22;"	d	file:
_SYNCHRONIZATION_ISYNCMANAGER_HPP_	src/synchronization/isyncmanager.hpp	22;"	d
_SYNCHRONIZATION_SILENTUI_HPP_	src/synchronization/silentui.hpp	22;"	d
_SYNCHRONIZATION_SYNCDIALOG_HPP_	src/synchronization/syncdialog.hpp	22;"	d
_SYNCHRONIZATION_SYNCMANAGER_HPP_	src/synchronization/syncmanager.hpp	22;"	d
_SYNCHRONIZATION_SYNCSERVICEADDIN_HPP_	src/synchronization/syncserviceaddin.hpp	22;"	d
_SYNCHRONIZATION_SYNCUI_HPP_	src/synchronization/syncui.hpp	22;"	d
_SYNCHRONIZATION_SYNCUTILS_HPP_	src/synchronization/syncutils.hpp	22;"	d
_TANDEM_SOURCE	config.h	136;"	d
_TEST_SYNCCLIENT_HPP_	src/test/testsyncclient.hpp	22;"	d
_TODO_NOTE_ADDIN_	src/addins/todo/todonoteaddin.hpp	23;"	d
_TRAYICON_HPP_	src/tray.hpp	24;"	d
_WEV_DAV_SYNC_SERVICE_ADDIN_	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	22;"	d
__ABSTRACT_ADDIN_HPP_	src/abstractaddin.hpp	25;"	d
__ACTIONMANAGER_HPP_	src/actionmanager.hpp	22;"	d
__ADDINMANAGER_HPP__	src/addinmanager.hpp	24;"	d
__ADDIN_FIXEDWIDTHNOTEADDIN_H_	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	32;"	d
__ADDIN_FIXED_WIDTH_TAG_HPP_	src/addins/fixedwidth/fixedwidthtag.hpp	26;"	d
__ADDIN_PREFERENCE_FACTORY_HPP_	src/addinpreferencefactory.hpp	25;"	d
__ADDIN_UNDERLINENOTEADDIN_H_	src/addins/underline/underlinenoteaddin.hpp	28;"	d
__ADDIN_UNDERLINE_TAG_HPP_	src/addins/underline/underlinetag.hpp	26;"	d
__APPLICATION_ADDIN_HPP_	src/applicationaddin.hpp	24;"	d
__BACKLINKS_NOTEADDIN_HPP_	src/addins/backlinks/backlinksnoteaddin.hpp	22;"	d
__BACKLINK_MENU_ITEM_HPP_	src/addins/backlinks/backlinkmenuitem.hpp	23;"	d
__BASE_MACROS_	src/base/macros.hpp	30;"	d
__BASE_SINGLETON_HPP__	src/base/singleton.hpp	25;"	d
__BUGZILLA_INSERT_BUG_ACTION_HPP_	src/addins/bugzilla/insertbugaction.hpp	21;"	d
__BUGZILLA_LINK_HPP_	src/addins/bugzilla/bugzillalink.hpp	22;"	d
__BUGZILLA_PREFERENCES_FACTORY_HPP_	src/addins/bugzilla/bugzillapreferencesfactory.hpp	25;"	d
__BUGZILLA_PREFERENCES_HPP_	src/addins/bugzilla/bugzillapreferences.hpp	24;"	d
__CONTRAST_H_	src/contrast.hpp	28;"	d
__EGG_ACCELERATORS_H__	libtomboy/eggaccelerators.h	21;"	d
__EXPORT_TO_HTML_DIALOG_HPP_	src/addins/exporttohtml/exporttohtmldialog.hpp	22;"	d
__EXTENSIONS__	config.h	140;"	d
__FIXED_WIDTH_MENUITEM_HPP_	src/addins/fixedwidth/fixedwidthmenuitem.hpp	24;"	d
__GNOTE_REMOTECONTROLCLIENT_HPP_	src/dbus/remotecontrolclient.hpp	23;"	d
__GNOTE_REMOTECONTROL_HPP_	src/dbus/remotecontrol.hpp	22;"	d
__IMPORT_ADDIN_HPP__	src/importaddin.hpp	24;"	d
__INSERTIMESTAMP_NOTEADDIN_HPP_	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	26;"	d
__INSERTTIMESTAMP_PREFERENCES_HPP_	src/addins/inserttimestamp/inserttimestamppreferences.hpp	23;"	d
__IREMOTE_CONTROL_HPP_	src/dbus/iremotecontrol.hpp	22;"	d
__KEYBINDER_HPP_	src/keybinder.hpp	25;"	d
__NOTEBOOKS_NOTEBOOK_HPP_	src/notebooks/notebook.hpp	24;"	d
__NOTEBOOKS_NOTEBOOK_NOTE_ADDIN_HPP__	src/notebooks/notebooknoteaddin.hpp	25;"	d
__NOTEBOOKS_SPECIALNOTEBOOKS_HPP_	src/notebooks/specialnotebooks.hpp	24;"	d
__NOTEBOOK_APPLICATION_ADDIN_HPP__	src/notebooks/notebookapplicationaddin.hpp	24;"	d
__NOTEBOOK_CREATENOTEBOOKDIALOG_HPP_	src/notebooks/createnotebookdialog.hpp	24;"	d
__NOTEBOOK_MENUITEM_HPP__	src/notebooks/notebookmenuitem.hpp	24;"	d
__NOTEBOOK_NEW_NOTEMNUITEM_HPP__	src/notebooks/notebooknewnotemenuitem.hpp	24;"	d
__NOTE_ADDIN_HPP_	src/noteaddin.hpp	25;"	d
__NOTE_BUFFER_HPP_	src/notebuffer.hpp	25;"	d
__NOTE_EDITOR_HPP_	src/noteeditor.hpp	25;"	d
__NOTE_HPP_	src/note.hpp	25;"	d
__NOTE_OF_THE_DAY_APPLICATION_ADDIN_HPP_	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	22;"	d
__NOTE_OF_THE_DAY_FACTORY_HPP_	src/addins/noteoftheday/noteofthedaypreferencesfactory.hpp	21;"	d
__NOTE_OF_THE_DAY_HPP_	src/addins/noteoftheday/noteoftheday.hpp	22;"	d
__NOTE_OF_THE_DAY_PREFERENCES_HPP_	src/addins/noteoftheday/noteofthedaypreferences.hpp	22;"	d
__NOTE_RECENT_CHANGES_HPP_	src/recentchanges.hpp	25;"	d
__NOTE_RENAME_DIALOG_HPP_	src/noterenamedialog.hpp	22;"	d
__NOTE_TAG_HPP_	src/notetag.hpp	24;"	d
__PREFERENCES_DIALOG_HPP_	src/preferencesdialog.hpp	25;"	d
__PREFERENCES_HPP_	src/preferences.hpp	25;"	d
__PRINTNOTES_NOTEADDIN_HPP_	src/addins/printnotes/printnotesnoteaddin.hpp	27;"	d
__PROPERTYEDITOR_HPP_	src/sharp/propertyeditor.hpp	31;"	d
__READ_ONLY_NOTE_ADDIN_HPP_	src/addins/readonly/readonlynoteaddin.hpp	22;"	d
__RECENTTREEVIEW_HPP_	src/recenttreeview.hpp	25;"	d
__SEARCH_HPP_	src/search.hpp	24;"	d
__SHARP_ADDINSTREEMODEL_HPP_	src/sharp/addinstreemodel.hpp	30;"	d
__SHARP_DATETIME_HPP_	src/sharp/xmlconvert.hpp	29;"	d
__SHARP_DATETIME_HPP__	src/sharp/datetime.hpp	30;"	d
__SHARP_DIRECTORY_HPP_	src/sharp/directory.hpp	30;"	d
__SHARP_DYNAMICMODULE_HPP_	src/sharp/dynamicmodule.hpp	30;"	d
__SHARP_EXCEPTION_HPP_	src/sharp/exception.hpp	30;"	d
__SHARP_FILEINFO_HPP_	src/sharp/fileinfo.hpp	28;"	d
__SHARP_FILES_HPP_	src/sharp/files.hpp	26;"	d
__SHARP_MAP_HPP_	src/sharp/map.hpp	28;"	d
__SHARP_MODULEMANAGER_HPP_	src/sharp/modulemanager.hpp	29;"	d
__SHARP_MODULE_FACTORY_HPP__	src/sharp/modulefactory.hpp	29;"	d
__SHARP_STREAMREADER_HPP_	src/sharp/streamreader.hpp	28;"	d
__SHARP_STREAMWRITER_HPP_	src/sharp/streamwriter.hpp	29;"	d
__SHARP_STRING_HPP_	src/sharp/string.hpp	29;"	d
__SHARP_URI_HPP_	src/sharp/uri.hpp	29;"	d
__SHARP_UUID_HPP_	src/sharp/uuid.hpp	29;"	d
__SHARP_XMLREADER_HPP_	src/sharp/xmlreader.hpp	29;"	d
__SHARP_XMLWRITER_HPP_	src/sharp/xmlwriter.hpp	30;"	d
__SHARP_XML_HPP_	src/sharp/xml.hpp	30;"	d
__SHARP_XSLTARGUMENTLIST_HPP_	src/sharp/xsltargumentlist.hpp	30;"	d
__SHARP_XSLTRANSFORM_HPP_	src/sharp/xsltransform.hpp	30;"	d
__SPECIAL_NOTES_APPLICATION_ADDIN_HPP_	src/addins/specialnotes/specialnotesapplicationaddin.hpp	21;"	d
__STICKYNOTE_IMPORT_NOTE_ADDIN_HPP_	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	22;"	d
__TABLEOFCONTENT_ACTION_HPP_	src/addins/tableofcontents/tableofcontentsaction.hpp	23;"	d
__TABLEOFCONTENT_HPP_	src/addins/tableofcontents/tableofcontents.hpp	31;"	d
__TABLEOFCONTENT_MENU_ITEM_HPP_	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	25;"	d
__TABLEOFCONTENT_NOTEADDIN_HPP_	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	25;"	d
__TAG_HPP_	src/tag.hpp	25;"	d
__TAG_MANAGER_HPP_	src/tagmanager.hpp	25;"	d
__TOMBOY_IMPORT_ADDIN_HPP_	src/addins/tomboyimport/tomboyimportaddin.hpp	24;"	d
__TOMBOY_KEY_BINDER_H__	libtomboy/tomboykeybinder.h	24;"	d
__TOMBOY_UTIL_H__	libtomboy/tomboyutil.h	24;"	d
__TRIEHIT_HPP_	src/triehit.hpp	23;"	d
__TRIE_HPP_	src/trie.hpp	23;"	d
__UNDERLINE_MENUITEM_HPP_	src/addins/underline/underlinemenuitem.hpp	24;"	d
__UNDO_HPP_	src/undo.hpp	24;"	d
__UTILS_DEBUG_H__	src/debug.hpp	22;"	d
__WATCHERS_HPP_	src/watchers.hpp	25;"	d
__XKEYBINDER_HPP_	src/xkeybinder.hpp	24;"	d
__anon12::ReadOnlyAction	src/addins/readonly/readonlynoteaddin.cpp	/^  class ReadOnlyAction$/;"	c	namespace:__anon12	file:	inherits:gnote::utils::CheckAction,gnote::NoteWindow::NonModifyingNoteAction
__anon12::ReadOnlyAction::Ptr	src/addins/readonly/readonlynoteaddin.cpp	/^    typedef Glib::RefPtr<ReadOnlyAction> Ptr;$/;"	t	class:__anon12::ReadOnlyAction	file:	access:public
__anon12::ReadOnlyAction::ReadOnlyAction	src/addins/readonly/readonlynoteaddin.cpp	/^    ReadOnlyAction()$/;"	f	class:__anon12::ReadOnlyAction	file:	access:private	signature:()
__anon12::ReadOnlyAction::create	src/addins/readonly/readonlynoteaddin.cpp	/^    static Ptr create()$/;"	f	class:__anon12::ReadOnlyAction	access:public	signature:()
__anon15::SpecialNotesNotebook	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^  class SpecialNotesNotebook$/;"	c	namespace:__anon15	file:	inherits:gnote::notebooks::SpecialNotebook
__anon15::SpecialNotesNotebook::SpecialNotesNotebook	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^    SpecialNotesNotebook(gnote::NoteManager & nm)$/;"	f	class:__anon15::SpecialNotesNotebook	access:public	signature:(gnote::NoteManager & nm)
__anon17::GTG_INTERFACE	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^const char *GTG_INTERFACE =$/;"	m	namespace:__anon17	file:
__anon18::str_to_int	src/synchronization/filesystemsyncserver.cpp	/^int str_to_int(const std::string & s)$/;"	f	namespace:__anon18	signature:(const std::string & s)
__anon3::mapping	libtomboy/eggaccelerators.c	/^  EggVirtualModifierType mapping[EGG_MODMAP_ENTRY_LAST];$/;"	m	struct:__anon3	file:	access:public
__anon5::make_write_failure_msg	src/sharp/xmlwriter.cpp	/^  std::string make_write_failure_msg(const std::string & caller, const std::string & fail_func)$/;"	f	namespace:__anon5	signature:(const std::string & caller, const std::string & fail_func)
__anon6::load_interface_from_file	src/remotecontrolproxy.cpp	/^  void load_interface_from_file(const char *filename, const char *interface_name,$/;"	f	namespace:__anon6	signature:(const char *filename, const char *interface_name, Glib::RefPtr<Gio::DBus::InterfaceInfo> & interface)
__init__	tools/DBusClientTest.py	/^    def __init__(self):$/;"	m	class:TestApp	access:public
_common_init	src/notemanager.cpp	/^  void NoteManager::_common_init(const Glib::ustring & directory, const Glib::ustring & backup_directory)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & directory, const Glib::ustring & backup_directory)
_common_init	src/notemanagerbase.cpp	/^void NoteManagerBase::_common_init(const Glib::ustring & \/*directory*\/, const Glib::ustring & backup_directory)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & , const Glib::ustring & backup_directory)
_common_init	src/notemanagerbase.hpp	/^  virtual void _common_init(const Glib::ustring & directory, const Glib::ustring & backup);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & directory, const Glib::ustring & backup)
_common_init	src/utils.cpp	/^    void ToolMenuButton::_common_init()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
_common_init	src/utils.cpp	/^    void ToolMenuButton::_common_init(Gtk::Image& image, const Glib::ustring & label)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Image& image, const Glib::ustring & label)
_common_init	src/utils.hpp	/^      void _common_init();$/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:()
_common_init	src/utils.hpp	/^      void _common_init(Gtk::Image& image, const Glib::ustring & l);$/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:(Gtk::Image& image, const Glib::ustring & l)
_init	src/synchronization/syncmanager.cpp	/^  void SyncManager::_init(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & manager)
_init	src/synchronization/syncmanager.hpp	/^    void _init(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(NoteManagerBase &)
_init_common_tags	src/notetag.cpp	/^  void NoteTagTable::_init_common_tags()$/;"	f	class:gnote::NoteTagTable	signature:()
_init_common_tags	src/notetag.hpp	/^  void _init_common_tags();$/;"	p	class:gnote::NoteTagTable	access:private	signature:()
_init_static	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::_init_static()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
_init_static	src/addins/bugzilla/bugzillapreferences.hpp	/^  void _init_static();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
_init_static	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::_init_static()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
_init_static	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static void _init_static();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
_init_static	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::_init_static()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
_init_static	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static void _init_static();$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:()
_init_static	src/watchers.cpp	/^  void MouseHandWatcher::_init_static()$/;"	f	class:gnote::MouseHandWatcher	signature:()
_init_static	src/watchers.hpp	/^    void _init_static();$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:()
_is_scheme	src/sharp/uri.cpp	/^  bool Uri::_is_scheme(const std::string & scheme) const$/;"	f	class:sharp::Uri	signature:(const std::string & scheme) const
_is_scheme	src/sharp/uri.hpp	/^    bool _is_scheme(const std::string & scheme) const;$/;"	p	class:sharp::Uri	access:private	signature:(const std::string & scheme) const
_obj	src/synchronization/syncmanager.hpp	/^    static SyncManager & _obj()$/;"	f	class:gnote::sync::SyncManager	access:private	signature:()
_print	src/debug.cpp	/^  static void _print(const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(const char *prefix, const char *fmt, const char* func, ...)
_print	src/debug.cpp	/^  static void _print(const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(const char *prefix, const char *fmt, const char* func, ...)
_read	src/notebase.cpp	/^void NoteArchiver::_read(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)
_read	src/notebase.hpp	/^  void _read(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version);$/;"	p	class:gnote::NoteArchiver	access:protected	signature:(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)
_remaining_hours	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
_remaining_hours	src/sharp/timespan.hpp	/^    double _remaining_hours() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_remaining_minutes	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
_remaining_minutes	src/sharp/timespan.hpp	/^    double _remaining_minutes() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_remaining_seconds	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
_remaining_seconds	src/sharp/timespan.hpp	/^    double _remaining_seconds() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_to_string	src/sharp/datetime.cpp	/^  std::string DateTime::_to_string(const char * format, struct tm * t) const$/;"	f	class:sharp::DateTime	signature:(const char * format, struct tm * t) const
_to_string	src/sharp/datetime.hpp	/^  std::string _to_string(const char * format, struct tm *) const;$/;"	p	class:sharp::DateTime	access:private	signature:(const char * format, struct tm *) const
_total_hours	src/sharp/timespan.cpp	/^  int TimeSpan::_total_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
_total_hours	src/sharp/timespan.hpp	/^    int _total_hours() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_total_minutes	src/sharp/timespan.cpp	/^  int TimeSpan::_total_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
_total_minutes	src/sharp/timespan.hpp	/^    int _total_minutes() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_total_seconds	src/sharp/timespan.cpp	/^  int TimeSpan::_total_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
_total_seconds	src/sharp/timespan.hpp	/^    int _total_seconds() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
_vfprint	src/debug.cpp	/^  static void _vfprint(FILE *file, const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(FILE *file, const char *prefix, const char *fmt, const char* func, va_list marker)
_vfprint	src/debug.cpp	/^  static void _vfprint(FILE *file, const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(FILE *file, const char *prefix, const char *fmt, const char* func, va_list marker)
_vprint	src/debug.cpp	/^  static void _vprint(const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(const char *prefix, const char *fmt, const char* func, va_list marker)
_vprint	src/debug.cpp	/^  static void _vprint(const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(const char *prefix, const char *fmt, const char* func, va_list marker)
abs_builddir	Makefile	/^abs_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_builddir	data/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/data$/;"	m
abs_builddir	data/appdata/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/data\/appdata$/;"	m
abs_builddir	data/icons/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/data\/icons$/;"	m
abs_builddir	help/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/help$/;"	m
abs_builddir	libtomboy/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/libtomboy$/;"	m
abs_builddir	src/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src$/;"	m
abs_builddir	src/addins/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins$/;"	m
abs_builddir	src/addins/backlinks/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/backlinks$/;"	m
abs_builddir	src/addins/bugzilla/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/bugzilla$/;"	m
abs_builddir	src/addins/exporttogtg/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/exporttogtg$/;"	m
abs_builddir	src/addins/exporttohtml/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/exporttohtml$/;"	m
abs_builddir	src/addins/filesystemsyncservice/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/filesystemsyncservice$/;"	m
abs_builddir	src/addins/fixedwidth/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/fixedwidth$/;"	m
abs_builddir	src/addins/inserttimestamp/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/inserttimestamp$/;"	m
abs_builddir	src/addins/notedirectorywatcher/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/notedirectorywatcher$/;"	m
abs_builddir	src/addins/noteoftheday/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/noteoftheday$/;"	m
abs_builddir	src/addins/printnotes/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/printnotes$/;"	m
abs_builddir	src/addins/readonly/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/readonly$/;"	m
abs_builddir	src/addins/replacetitle/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/replacetitle$/;"	m
abs_builddir	src/addins/specialnotes/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/specialnotes$/;"	m
abs_builddir	src/addins/statistics/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/statistics$/;"	m
abs_builddir	src/addins/stickynoteimport/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/stickynoteimport$/;"	m
abs_builddir	src/addins/tableofcontents/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/tableofcontents$/;"	m
abs_builddir	src/addins/todo/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/todo$/;"	m
abs_builddir	src/addins/tomboyimport/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/tomboyimport$/;"	m
abs_builddir	src/addins/underline/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/underline$/;"	m
abs_builddir	src/addins/webdavsyncservice/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/addins\/webdavsyncservice$/;"	m
abs_builddir	src/dbus/Makefile	/^abs_builddir = \/development\/gitarchives\/gnote\/src\/dbus$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_srcdir	data/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/data$/;"	m
abs_srcdir	data/appdata/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/data\/appdata$/;"	m
abs_srcdir	data/icons/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/data\/icons$/;"	m
abs_srcdir	help/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/help$/;"	m
abs_srcdir	libtomboy/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/libtomboy$/;"	m
abs_srcdir	src/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src$/;"	m
abs_srcdir	src/addins/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins$/;"	m
abs_srcdir	src/addins/backlinks/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/backlinks$/;"	m
abs_srcdir	src/addins/bugzilla/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/bugzilla$/;"	m
abs_srcdir	src/addins/exporttogtg/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/exporttogtg$/;"	m
abs_srcdir	src/addins/exporttohtml/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/exporttohtml$/;"	m
abs_srcdir	src/addins/filesystemsyncservice/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/filesystemsyncservice$/;"	m
abs_srcdir	src/addins/fixedwidth/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/fixedwidth$/;"	m
abs_srcdir	src/addins/inserttimestamp/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/inserttimestamp$/;"	m
abs_srcdir	src/addins/notedirectorywatcher/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/notedirectorywatcher$/;"	m
abs_srcdir	src/addins/noteoftheday/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/noteoftheday$/;"	m
abs_srcdir	src/addins/printnotes/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/printnotes$/;"	m
abs_srcdir	src/addins/readonly/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/readonly$/;"	m
abs_srcdir	src/addins/replacetitle/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/replacetitle$/;"	m
abs_srcdir	src/addins/specialnotes/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/specialnotes$/;"	m
abs_srcdir	src/addins/statistics/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/statistics$/;"	m
abs_srcdir	src/addins/stickynoteimport/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/stickynoteimport$/;"	m
abs_srcdir	src/addins/tableofcontents/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/tableofcontents$/;"	m
abs_srcdir	src/addins/todo/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/todo$/;"	m
abs_srcdir	src/addins/tomboyimport/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/tomboyimport$/;"	m
abs_srcdir	src/addins/underline/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/underline$/;"	m
abs_srcdir	src/addins/webdavsyncservice/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/addins\/webdavsyncservice$/;"	m
abs_srcdir	src/dbus/Makefile	/^abs_srcdir = \/development\/gitarchives\/gnote\/src\/dbus$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	data/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	data/appdata/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	data/icons/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	help/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	libtomboy/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/backlinks/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/bugzilla/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/exporttogtg/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/exporttohtml/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/filesystemsyncservice/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/fixedwidth/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/inserttimestamp/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/notedirectorywatcher/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/noteoftheday/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/printnotes/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/readonly/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/replacetitle/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/specialnotes/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/statistics/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/stickynoteimport/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/tableofcontents/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/todo/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/tomboyimport/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/underline/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/addins/webdavsyncservice/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_builddir	src/dbus/Makefile	/^abs_top_builddir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	data/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	data/appdata/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	data/icons/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	help/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	libtomboy/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/backlinks/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/bugzilla/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/exporttogtg/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/exporttohtml/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/filesystemsyncservice/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/fixedwidth/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/inserttimestamp/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/notedirectorywatcher/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/noteoftheday/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/printnotes/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/readonly/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/replacetitle/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/specialnotes/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/statistics/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/stickynoteimport/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/tableofcontents/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/todo/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/tomboyimport/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/underline/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/addins/webdavsyncservice/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
abs_top_srcdir	src/dbus/Makefile	/^abs_top_srcdir = \/development\/gitarchives\/gnote$/;"	m
ac_ct_AR	Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	data/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	data/appdata/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	data/icons/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	help/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libtomboy/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/backlinks/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/bugzilla/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/exporttogtg/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/exporttohtml/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/filesystemsyncservice/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/fixedwidth/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/inserttimestamp/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/notedirectorywatcher/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/noteoftheday/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/printnotes/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/readonly/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/replacetitle/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/specialnotes/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/statistics/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/stickynoteimport/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/tableofcontents/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/todo/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/tomboyimport/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/underline/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/addins/webdavsyncservice/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	src/dbus/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	data/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	data/appdata/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	data/icons/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	help/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libtomboy/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/backlinks/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/bugzilla/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/exporttogtg/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/exporttohtml/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/filesystemsyncservice/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/fixedwidth/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/inserttimestamp/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/notedirectorywatcher/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/noteoftheday/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/printnotes/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/readonly/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/replacetitle/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/specialnotes/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/statistics/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/stickynoteimport/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/tableofcontents/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/todo/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/tomboyimport/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/underline/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/addins/webdavsyncservice/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	src/dbus/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	data/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	data/appdata/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	data/icons/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	help/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	libtomboy/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/backlinks/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/bugzilla/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/exporttogtg/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/exporttohtml/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/filesystemsyncservice/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/fixedwidth/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/inserttimestamp/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/notedirectorywatcher/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/noteoftheday/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/printnotes/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/readonly/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/replacetitle/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/specialnotes/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/statistics/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/stickynoteimport/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/tableofcontents/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/todo/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/tomboyimport/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/underline/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/addins/webdavsyncservice/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	src/dbus/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	data/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	data/appdata/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	data/icons/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	help/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libtomboy/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/backlinks/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/bugzilla/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/exporttogtg/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/exporttohtml/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/filesystemsyncservice/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/fixedwidth/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/inserttimestamp/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/notedirectorywatcher/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/noteoftheday/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/printnotes/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/readonly/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/replacetitle/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/specialnotes/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/statistics/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/stickynoteimport/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/tableofcontents/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/todo/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/tomboyimport/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/underline/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/addins/webdavsyncservice/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	src/dbus/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
accept_ssl_cert	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::accept_ssl_cert()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
accept_ssl_cert	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool accept_ssl_cert();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:()
action_def	src/actionmanager.hpp	/^    std::string action_def;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
active	src/addins/statistics/statisticswidget.cpp	/^  void active(bool is_active)$/;"	f	class:statistics::StatisticsModel	access:public	signature:(bool is_active)
active_notes_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr & active_notes_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
add	src/sharp/dynamicmodule.cpp	/^  void DynamicModule::add(const char * iface, IfaceFactoryBase* mod)$/;"	f	class:sharp::DynamicModule	signature:(const char * iface, IfaceFactoryBase* mod)
add	src/sharp/dynamicmodule.hpp	/^  void add(const char * iface, IfaceFactoryBase*);$/;"	p	class:sharp::DynamicModule	access:protected	signature:(const char * iface, IfaceFactoryBase*)
add_accel_group	src/notewindow.cpp	/^  void NoteWindow::add_accel_group(Gtk::Window & window)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Window & window)
add_accel_group	src/notewindow.hpp	/^  void add_accel_group(Gtk::Window &);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Window &)
add_accelerator	src/tray.cpp	/^  void KeybindingToAccel::add_accelerator(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)$/;"	f	class:gnote::KeybindingToAccel	signature:(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)
add_accelerator	src/tray.hpp	/^  static void add_accelerator(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key);$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)
add_accelerator	src/utils.cpp	/^    void GlobalKeybinder::add_accelerator(const sigc::slot<void> & handler, guint key, $/;"	f	class:gnote::utils::GlobalKeybinder	signature:(const sigc::slot<void> & handler, guint key, Gdk::ModifierType modifiers, Gtk::AccelFlags flags)
add_accelerator	src/utils.hpp	/^      void add_accelerator(const sigc::slot<void> & , guint, Gdk::ModifierType, $/;"	p	class:gnote::utils::GlobalKeybinder	access:public	signature:(const sigc::slot<void> & , guint, Gdk::ModifierType, Gtk::AccelFlags)
add_app_action	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::SimpleAction> ActionManager::add_app_action(const std::string & name)$/;"	f	class:gnote::ActionManager	signature:(const std::string & name)
add_app_action	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> add_app_action(const std::string & name) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name)
add_app_actions	src/gnote.cpp	/^  void Gnote::add_app_actions(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)$/;"	f	class:gnote::Gnote	signature:(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)
add_app_actions	src/gnote.hpp	/^  void add_app_actions(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions);$/;"	p	class:gnote::Gnote	access:private	signature:(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)
add_app_menu_item	src/actionmanager.cpp	/^  void ActionManager::add_app_menu_item(int section, int order, const std::string & label,$/;"	f	class:gnote::ActionManager	signature:(int section, int order, const std::string & label, const std::string & action_def)
add_app_menu_item	src/iactionmanager.hpp	/^  virtual void add_app_menu_item(int section, int order, const std::string & label,$/;"	p	class:gnote::IActionManager	access:public	signature:(int section, int order, const std::string & label, const std::string & action_def)
add_button	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::Button *add_button;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button (Gtk::Button *button, Gtk::ResponseType resp, bool is_default)$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Button *button, Gtk::ResponseType resp, bool is_default)
add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button (const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, $/;"	f	class:gnote::utils::HIGMessageDialog	signature:(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, const Glib::ustring & label_text, Gtk::ResponseType resp, bool is_default)
add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button(const Gtk::BuiltinStockID& stock_id, $/;"	f	class:gnote::utils::HIGMessageDialog	signature:(const Gtk::BuiltinStockID& stock_id, Gtk::ResponseType resp, bool is_default)
add_button	src/utils.hpp	/^      void add_button(Gtk::Button *button, Gtk::ResponseType response, bool is_default);$/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Button *button, Gtk::ResponseType response, bool is_default)
add_button	src/utils.hpp	/^      void add_button(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, const Glib::ustring & label_text, Gtk::ResponseType response, bool is_default)
add_button	src/utils.hpp	/^      void add_button(const Gtk::BuiltinStockID& stock_id, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(const Gtk::BuiltinStockID& stock_id, Gtk::ResponseType response, bool is_default)
add_child_widget	src/note.cpp	/^  void Note::add_child_widget(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor, Gtk::Widget * widget)
add_child_widget	src/note.hpp	/^  void add_child_widget(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor,$/;"	p	class:gnote::Note	access:public	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor, Gtk::Widget * widget)
add_chop	src/undo.cpp	/^  utils::TextRange ChopBuffer::add_chop(const Gtk::TextIter & start_iter, $/;"	f	class:gnote::ChopBuffer	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter)
add_chop	src/undo.hpp	/^  utils::TextRange add_chop(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter);$/;"	p	class:gnote::ChopBuffer	access:public	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter)
add_clicked	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::add_clicked()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
add_clicked	src/addins/bugzilla/bugzillapreferences.hpp	/^  void add_clicked();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
add_days	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_days(int days)$/;"	f	class:sharp::DateTime	signature:(int days)
add_days	src/sharp/datetime.hpp	/^  DateTime & add_days(int days);$/;"	p	class:sharp::DateTime	access:public	signature:(int days)
add_guard	src/sharp/propertyeditor.hpp	/^    void add_guard(Gtk::Widget* w)$/;"	f	class:sharp::PropertyEditorBool	access:public	signature:(Gtk::Widget* w)
add_hours	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_hours(int hours)$/;"	f	class:sharp::DateTime	signature:(int hours)
add_hours	src/sharp/datetime.hpp	/^  DateTime & add_hours(int hours);$/;"	p	class:sharp::DateTime	access:public	signature:(int hours)
add_keyword	src/trie.hpp	/^  void add_keyword(const Glib::ustring & keyword, const value_t & pattern_id)$/;"	f	class:gnote::TrieTree	access:public	signature:(const Glib::ustring & keyword, const value_t & pattern_id)
add_main_window_action	src/actionmanager.cpp	/^  void ActionManager::add_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	f	class:gnote::ActionManager	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const Glib::RefPtr<Gtk::Action> & action, int order)
add_main_window_action	src/actionmanager.hpp	/^  void add_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const Glib::RefPtr<Gtk::Action> & action, int order)
add_main_window_search_action	src/actionmanager.cpp	/^  void ActionManager::add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::ActionManager	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
add_main_window_search_action	src/iactionmanager.hpp	/^  virtual void add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
add_matches_column	src/searchnoteswidget.cpp	/^void SearchNotesWidget::add_matches_column()$/;"	f	class:gnote::SearchNotesWidget	signature:()
add_matches_column	src/searchnoteswidget.hpp	/^  void add_matches_column();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
add_menu_items	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::add_menu_items(Gtk::Menu * menu,   $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(Gtk::Menu * menu, std::list<Gtk::MenuItem*> & menu_items)
add_menu_items	src/notebooks/notebookapplicationaddin.hpp	/^      void add_menu_items(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items)
add_module_addins	src/addinmanager.cpp	/^  void AddinManager::add_module_addins(const std::string & mod_id, sharp::DynamicModule * dmod)$/;"	f	class:gnote::AddinManager	signature:(const std::string & mod_id, sharp::DynamicModule * dmod)
add_module_addins	src/addinmanager.hpp	/^  void add_module_addins(const std::string & mod_id, sharp::DynamicModule * dmod);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & mod_id, sharp::DynamicModule * dmod)
add_new_line	src/notebuffer.cpp	/^  bool NoteBuffer::add_new_line(bool soft_break)$/;"	f	class:gnote::NoteBuffer	signature:(bool soft_break)
add_new_line	src/notebuffer.hpp	/^  bool add_new_line(bool soft_break);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(bool soft_break)
add_note	src/notebooks/notebook.cpp	/^  bool Notebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note)
add_note	src/notebooks/notebook.hpp	/^  virtual bool add_note(const Note::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const Note::Ptr &)
add_note	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const Note::Ptr & note)
add_note	src/notebooks/specialnotebooks.cpp	/^bool AllNotesNotebook::add_note(const Note::Ptr &)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(const Note::Ptr &)
add_note	src/notebooks/specialnotebooks.cpp	/^bool PinnedNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(const Note::Ptr & note)
add_note	src/notebooks/specialnotebooks.cpp	/^bool UnfiledNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(const Note::Ptr & note)
add_note	src/notemanagerbase.cpp	/^  void add_note(const NoteBase::Ptr & note);$/;"	p	class:gnote::TrieController	file:	access:public	signature:(const NoteBase::Ptr & note)
add_note	src/notemanagerbase.cpp	/^void NoteManagerBase::add_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
add_note	src/notemanagerbase.cpp	/^void TrieController::add_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr & note)
add_note	src/notemanagerbase.hpp	/^  void add_note(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr &)
add_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::add_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
add_note	src/searchnoteswidget.hpp	/^  void add_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
add_note	src/tag.cpp	/^  void Tag::add_note(NoteBase & note)$/;"	f	class:gnote::Tag	signature:(NoteBase & note)
add_note	src/tag.hpp	/^    void add_note(NoteBase & );$/;"	p	class:gnote::Tag	access:public	signature:(NoteBase & )
add_note_action	src/noteaddin.cpp	/^  void NoteAddin::add_note_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::NoteAddin	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
add_note_action	src/noteaddin.hpp	/^  void add_note_action(const Glib::RefPtr<Gtk::Action> & action, int order);$/;"	p	class:gnote::NoteAddin	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
add_note_addin_info	src/addinmanager.cpp	/^  void AddinManager::add_note_addin_info(const std::string & id,$/;"	f	class:gnote::AddinManager	signature:(const std::string & id, const sharp::DynamicModule * dmod)
add_note_addin_info	src/addinmanager.hpp	/^  void add_note_addin_info(const std::string & id, const sharp::DynamicModule * dmod);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id, const sharp::DynamicModule * dmod)
add_notebook	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::add_notebook(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook)
add_notebook	src/notebooks/notebookmanager.hpp	/^  bool add_notebook(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &)
add_or_update_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::add_or_update_note(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
add_or_update_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void add_or_update_note(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
add_param	src/sharp/xsltargumentlist.cpp	/^void XsltArgumentList::add_param(const char* name, const char * \/*uri*\/, bool value)$/;"	f	class:sharp::XsltArgumentList	signature:(const char* name, const char * , bool value)
add_param	src/sharp/xsltargumentlist.cpp	/^void XsltArgumentList::add_param(const char* name, const char * \/*uri*\/, const std::string & value)$/;"	f	class:sharp::XsltArgumentList	signature:(const char* name, const char * , const std::string & value)
add_param	src/sharp/xsltargumentlist.hpp	/^  void add_param(const char* name, const char *uri, bool);$/;"	p	class:sharp::XsltArgumentList	access:public	signature:(const char* name, const char *uri, bool)
add_param	src/sharp/xsltargumentlist.hpp	/^  void add_param(const char* name, const char *uri, const std::string &);$/;"	p	class:sharp::XsltArgumentList	access:public	signature:(const char* name, const char *uri, const std::string &)
add_recently_changed_notes	src/tray.cpp	/^  void Tray::add_recently_changed_notes()$/;"	f	class:gnote::Tray	signature:()
add_recently_changed_notes	src/tray.hpp	/^  void add_recently_changed_notes();$/;"	p	class:gnote::Tray	access:public	signature:()
add_row	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::add_row(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)
add_row	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  void add_row(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)
add_seconds	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_seconds(int seconds)$/;"	f	class:sharp::DateTime	signature:(int seconds)
add_seconds	src/sharp/datetime.hpp	/^  DateTime & add_seconds(int seconds);$/;"	p	class:sharp::DateTime	access:public	signature:(int seconds)
add_split_tag	src/undo.cpp	/^  void SplitterAction::add_split_tag(const Gtk::TextIter & start, $/;"	f	class:gnote::SplitterAction	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end, const Glib::RefPtr<Gtk::TextTag> tag)
add_split_tag	src/undo.hpp	/^  void add_split_tag(const Gtk::TextIter &, const Gtk::TextIter &, $/;"	p	class:gnote::SplitterAction	access:public	signature:(const Gtk::TextIter &, const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextTag> tag)
add_tab	src/notebuffer.cpp	/^  bool NoteBuffer::add_tab()$/;"	f	class:gnote::NoteBuffer	signature:()
add_tab	src/notebuffer.hpp	/^  bool add_tab();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
add_tag	src/notebase.cpp	/^void NoteBase::add_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag)
add_tag	src/notebase.hpp	/^  void add_tag(const Tag::Ptr &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &)
add_text_menu_item	src/noteaddin.cpp	/^  void NoteAddin::add_text_menu_item (Gtk::MenuItem * item)$/;"	f	class:gnote::NoteAddin	signature:(Gtk::MenuItem * item)
add_text_menu_item	src/noteaddin.hpp	/^  void add_text_menu_item (Gtk::MenuItem * item);$/;"	p	class:gnote::NoteAddin	access:public	signature:(Gtk::MenuItem * item)
add_tool_item	src/noteaddin.cpp	/^  void NoteAddin::add_tool_item (Gtk::ToolItem *item, int position)$/;"	f	class:gnote::NoteAddin	signature:(Gtk::ToolItem *item, int position)
add_tool_item	src/noteaddin.hpp	/^  void add_tool_item (Gtk::ToolItem *item, int position);$/;"	p	class:gnote::NoteAddin	access:public	signature:(Gtk::ToolItem *item, int position)
add_tray_menu_item	src/actionmanager.cpp	/^  void ActionManager::add_tray_menu_item(Gtk::MenuItem & item)$/;"	f	class:gnote::ActionManager	signature:(Gtk::MenuItem & item)
add_tray_menu_item	src/iactionmanager.hpp	/^  virtual void add_tray_menu_item(Gtk::MenuItem & item) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(Gtk::MenuItem & item)
add_undo_action	src/undo.cpp	/^  void UndoManager::add_undo_action(EditAction * action)$/;"	f	class:gnote::UndoManager	signature:(EditAction * action)
add_undo_action	src/undo.hpp	/^  void add_undo_action(EditAction * action);$/;"	p	class:gnote::UndoManager	access:public	signature:(EditAction * action)
add_update_item	src/synchronization/syncdialog.cpp	/^void SyncDialog::add_update_item(const std::string & title, std::string & status)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & title, std::string & status)
add_update_item	src/synchronization/syncdialog.hpp	/^    void add_update_item(const std::string & title, std::string & status);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string & title, std::string & status)
add_widget_action	src/notewindow.cpp	/^  void NoteWindow::add_widget_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::NoteWindow	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
add_widget_action	src/notewindow.hpp	/^  void add_widget_action(const Glib::RefPtr<Gtk::Action> & action, int order);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
addin	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<const sharp::DynamicModule *> addin;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
addin_info_button	src/preferencesdialog.hpp	/^  Gtk::Button *addin_info_button;$/;"	m	class:gnote::PreferencesDialog	access:private
addin_info_dialog_deleted	src/preferencesdialog.cpp	/^  bool PreferencesDialog::addin_info_dialog_deleted(GdkEventAny*, $/;"	f	class:gnote::PreferencesDialog	signature:(GdkEventAny*, Gtk::Dialog* dialog)
addin_info_dialog_deleted	src/preferencesdialog.hpp	/^  bool addin_info_dialog_deleted(GdkEventAny*, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(GdkEventAny*, Gtk::Dialog*)
addin_info_dialog_response	src/preferencesdialog.cpp	/^  void PreferencesDialog::addin_info_dialog_response(int, Gtk::Dialog* dlg)$/;"	f	class:gnote::PreferencesDialog	signature:(int, Gtk::Dialog* dlg)
addin_info_dialog_response	src/preferencesdialog.hpp	/^  void addin_info_dialog_response(int, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(int, Gtk::Dialog*)
addin_info_dialogs	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::Dialog* > addin_info_dialogs;$/;"	m	class:gnote::PreferencesDialog	access:private
addin_module	src/addininfo.hpp	/^  const std::string & addin_module() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
addin_module	src/addininfo.hpp	/^  void addin_module(const std::string & module)$/;"	f	class:gnote::AddinInfo	access:public	signature:(const std::string & module)
addin_pref_dialog_deleted	src/preferencesdialog.cpp	/^  bool PreferencesDialog::addin_pref_dialog_deleted(GdkEventAny*, $/;"	f	class:gnote::PreferencesDialog	signature:(GdkEventAny*, Gtk::Dialog* dialog)
addin_pref_dialog_deleted	src/preferencesdialog.hpp	/^  bool addin_pref_dialog_deleted(GdkEventAny*, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(GdkEventAny*, Gtk::Dialog*)
addin_pref_dialog_response	src/preferencesdialog.cpp	/^  void PreferencesDialog::addin_pref_dialog_response(int, Gtk::Dialog* dialog)$/;"	f	class:gnote::PreferencesDialog	signature:(int, Gtk::Dialog* dialog)
addin_pref_dialog_response	src/preferencesdialog.hpp	/^  void addin_pref_dialog_response(int, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(int, Gtk::Dialog*)
addin_prefs_button	src/preferencesdialog.hpp	/^  Gtk::Button *addin_prefs_button;$/;"	m	class:gnote::PreferencesDialog	access:private
addin_prefs_dialogs	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::Dialog* > addin_prefs_dialogs;$/;"	m	class:gnote::PreferencesDialog	access:private
adding	src/notebuffer.hpp	/^    bool adding;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
addins_DATA	src/addins/backlinks/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/bugzilla/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/exporttogtg/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/exporttohtml/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/filesystemsyncservice/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/fixedwidth/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/inserttimestamp/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/notedirectorywatcher/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/noteoftheday/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/printnotes/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/readonly/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/replacetitle/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/specialnotes/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/statistics/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/stickynoteimport/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/tableofcontents/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/todo/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/tomboyimport/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/underline/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_DATA	src/addins/webdavsyncservice/Makefile	/^addins_DATA = $(desktop_files)$/;"	m
addins_LTLIBRARIES	src/addins/backlinks/Makefile	/^addins_LTLIBRARIES = backlinks.la$/;"	m
addins_LTLIBRARIES	src/addins/bugzilla/Makefile	/^addins_LTLIBRARIES = bugzilla.la$/;"	m
addins_LTLIBRARIES	src/addins/exporttogtg/Makefile	/^addins_LTLIBRARIES = exporttogtg.la$/;"	m
addins_LTLIBRARIES	src/addins/exporttohtml/Makefile	/^addins_LTLIBRARIES = exporttohtml.la$/;"	m
addins_LTLIBRARIES	src/addins/filesystemsyncservice/Makefile	/^addins_LTLIBRARIES = filesystemsyncservice.la$/;"	m
addins_LTLIBRARIES	src/addins/fixedwidth/Makefile	/^addins_LTLIBRARIES = fixedwidth.la$/;"	m
addins_LTLIBRARIES	src/addins/inserttimestamp/Makefile	/^addins_LTLIBRARIES = inserttimestamp.la$/;"	m
addins_LTLIBRARIES	src/addins/notedirectorywatcher/Makefile	/^addins_LTLIBRARIES = notedirectorywatcher.la$/;"	m
addins_LTLIBRARIES	src/addins/noteoftheday/Makefile	/^addins_LTLIBRARIES = noteoftheday.la$/;"	m
addins_LTLIBRARIES	src/addins/printnotes/Makefile	/^addins_LTLIBRARIES = printnotes.la$/;"	m
addins_LTLIBRARIES	src/addins/readonly/Makefile	/^addins_LTLIBRARIES = readonly.la$/;"	m
addins_LTLIBRARIES	src/addins/replacetitle/Makefile	/^addins_LTLIBRARIES = replacetitle.la$/;"	m
addins_LTLIBRARIES	src/addins/specialnotes/Makefile	/^addins_LTLIBRARIES = specialnotes.la$/;"	m
addins_LTLIBRARIES	src/addins/statistics/Makefile	/^addins_LTLIBRARIES = statistics.la$/;"	m
addins_LTLIBRARIES	src/addins/stickynoteimport/Makefile	/^addins_LTLIBRARIES = stickynoteimport.la$/;"	m
addins_LTLIBRARIES	src/addins/tableofcontents/Makefile	/^addins_LTLIBRARIES = tableofcontents.la$/;"	m
addins_LTLIBRARIES	src/addins/todo/Makefile	/^addins_LTLIBRARIES = todo.la$/;"	m
addins_LTLIBRARIES	src/addins/tomboyimport/Makefile	/^addins_LTLIBRARIES = tomboyimport.la$/;"	m
addins_LTLIBRARIES	src/addins/underline/Makefile	/^addins_LTLIBRARIES = underline.la$/;"	m
addins_LTLIBRARIES	src/addins/webdavsyncservice/Makefile	/^addins_LTLIBRARIES = webdavsyncservice.la$/;"	m
addinsdir	src/addins/backlinks/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/bugzilla/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/exporttogtg/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/exporttohtml/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/filesystemsyncservice/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/fixedwidth/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/inserttimestamp/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/notedirectorywatcher/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/noteoftheday/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/printnotes/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/readonly/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/replacetitle/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/specialnotes/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/statistics/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/stickynoteimport/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/tableofcontents/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/todo/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/tomboyimport/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/underline/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
addinsdir	src/addins/webdavsyncservice/Makefile	/^addinsdir = $(ADDINSDIR)$/;"	m
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
all_tags	src/itagmanager.hpp	/^  virtual void all_tags(std::list<Tag::Ptr> &) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(std::list<Tag::Ptr> &) const
all_tags	src/tagmanager.cpp	/^  void TagManager::all_tags(std::list<Tag::Ptr> & tags) const$/;"	f	class:gnote::TagManager	signature:(std::list<Tag::Ptr> & tags) const
all_tags	src/test/testtagmanager.cpp	/^void TagManager::all_tags(std::list<gnote::Tag::Ptr> & list) const$/;"	f	class:test::TagManager	signature:(std::list<gnote::Tag::Ptr> & list) const
alwaysDoThisCheck	src/synchronization/syncdialog.cpp	/^  Gtk::CheckButton *alwaysDoThisCheck;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
always_perform_this_action	src/synchronization/syncdialog.cpp	/^  bool always_perform_this_action() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	libtomboy/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_1	src/Makefile	/^am__DEPENDENCIES_1 = $(LIBTOMBOY_LIBS)$/;"	m
am__DEPENDENCIES_2	src/Makefile	/^am__DEPENDENCIES_2 = libgnote.la $(am__DEPENDENCIES_1)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	data/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	data/appdata/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	data/icons/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	help/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	libtomboy/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/backlinks/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/bugzilla/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/exporttogtg/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/exporttohtml/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/filesystemsyncservice/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/fixedwidth/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/inserttimestamp/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/notedirectorywatcher/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/noteoftheday/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/printnotes/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/readonly/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/replacetitle/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/specialnotes/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/statistics/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/stickynoteimport/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/tableofcontents/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/todo/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/tomboyimport/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/underline/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/addins/webdavsyncservice/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__aclocal_m4_deps	src/dbus/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_cxx_compile_stdcxx_11.m4 \\$/;"	m
am__base_list	data/Makefile	/^am__base_list = \\$/;"	m
am__base_list	data/appdata/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/backlinks/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/bugzilla/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/exporttogtg/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/exporttohtml/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/filesystemsyncservice/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/fixedwidth/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/inserttimestamp/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/notedirectorywatcher/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/noteoftheday/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/printnotes/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/readonly/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/replacetitle/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/specialnotes/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/statistics/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/stickynoteimport/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/tableofcontents/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/todo/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/tomboyimport/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/underline/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/addins/webdavsyncservice/Makefile	/^am__base_list = \\$/;"	m
am__base_list	src/dbus/Makefile	/^am__base_list = \\$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	data/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	data/appdata/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	data/icons/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	help/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libtomboy/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/backlinks/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/bugzilla/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/exporttogtg/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/exporttohtml/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/filesystemsyncservice/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/fixedwidth/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/inserttimestamp/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/notedirectorywatcher/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/noteoftheday/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/printnotes/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/readonly/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/replacetitle/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/specialnotes/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/statistics/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/stickynoteimport/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/tableofcontents/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/todo/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/tomboyimport/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/underline/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/addins/webdavsyncservice/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	src/dbus/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	data/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	data/appdata/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	data/icons/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	help/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libtomboy/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/backlinks/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/bugzilla/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/exporttogtg/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/exporttohtml/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/filesystemsyncservice/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/fixedwidth/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/inserttimestamp/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/notedirectorywatcher/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/noteoftheday/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/printnotes/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/readonly/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/replacetitle/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/specialnotes/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/statistics/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/stickynoteimport/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/tableofcontents/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/todo/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/tomboyimport/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/underline/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/addins/webdavsyncservice/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	src/dbus/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__check_pre	src/Makefile	/^am__check_pre = \\$/;"	m
am__common_driver_flags	src/Makefile	/^am__common_driver_flags = \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	data/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	data/appdata/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	data/icons/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	help/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libtomboy/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/backlinks/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/bugzilla/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/exporttogtg/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/exporttohtml/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/filesystemsyncservice/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/fixedwidth/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/inserttimestamp/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/notedirectorywatcher/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/noteoftheday/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/printnotes/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/readonly/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/replacetitle/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/specialnotes/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/statistics/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/stickynoteimport/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/tableofcontents/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/todo/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/tomboyimport/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/underline/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/addins/webdavsyncservice/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	src/dbus/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__copy_in_global_log_rx	src/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__create_global_log	src/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	data/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libtomboy/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/backlinks/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/bugzilla/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/exporttogtg/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/exporttohtml/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/filesystemsyncservice/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/fixedwidth/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/inserttimestamp/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/notedirectorywatcher/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/noteoftheday/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/printnotes/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/readonly/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/replacetitle/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/specialnotes/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/statistics/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/stickynoteimport/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/tableofcontents/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/todo/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/tomboyimport/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/underline/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	src/addins/webdavsyncservice/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	libtomboy/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/backlinks/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/bugzilla/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/exporttogtg/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/exporttohtml/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/filesystemsyncservice/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/fixedwidth/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/inserttimestamp/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/notedirectorywatcher/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/noteoftheday/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/printnotes/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/readonly/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/replacetitle/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/specialnotes/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/statistics/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/stickynoteimport/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/tableofcontents/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/todo/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/tomboyimport/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/underline/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	src/addins/webdavsyncservice/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__global_test_result_rx	src/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__gnote_SOURCES_DIST	src/Makefile	/^am__gnote_SOURCES_DIST = sharp\/addinstreemodel.hpp \\$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	data/Makefile	/^am__include = include$/;"	m
am__include	data/appdata/Makefile	/^am__include = include$/;"	m
am__include	data/icons/Makefile	/^am__include = include$/;"	m
am__include	help/Makefile	/^am__include = include$/;"	m
am__include	libtomboy/Makefile	/^am__include = include$/;"	m
am__include	src/Makefile	/^am__include = include$/;"	m
am__include	src/addins/Makefile	/^am__include = include$/;"	m
am__include	src/addins/backlinks/Makefile	/^am__include = include$/;"	m
am__include	src/addins/bugzilla/Makefile	/^am__include = include$/;"	m
am__include	src/addins/exporttogtg/Makefile	/^am__include = include$/;"	m
am__include	src/addins/exporttohtml/Makefile	/^am__include = include$/;"	m
am__include	src/addins/filesystemsyncservice/Makefile	/^am__include = include$/;"	m
am__include	src/addins/fixedwidth/Makefile	/^am__include = include$/;"	m
am__include	src/addins/inserttimestamp/Makefile	/^am__include = include$/;"	m
am__include	src/addins/notedirectorywatcher/Makefile	/^am__include = include$/;"	m
am__include	src/addins/noteoftheday/Makefile	/^am__include = include$/;"	m
am__include	src/addins/printnotes/Makefile	/^am__include = include$/;"	m
am__include	src/addins/readonly/Makefile	/^am__include = include$/;"	m
am__include	src/addins/replacetitle/Makefile	/^am__include = include$/;"	m
am__include	src/addins/specialnotes/Makefile	/^am__include = include$/;"	m
am__include	src/addins/statistics/Makefile	/^am__include = include$/;"	m
am__include	src/addins/stickynoteimport/Makefile	/^am__include = include$/;"	m
am__include	src/addins/tableofcontents/Makefile	/^am__include = include$/;"	m
am__include	src/addins/todo/Makefile	/^am__include = include$/;"	m
am__include	src/addins/tomboyimport/Makefile	/^am__include = include$/;"	m
am__include	src/addins/underline/Makefile	/^am__include = include$/;"	m
am__include	src/addins/webdavsyncservice/Makefile	/^am__include = include$/;"	m
am__include	src/dbus/Makefile	/^am__include = include$/;"	m
am__install_max	data/Makefile	/^am__install_max = 40$/;"	m
am__install_max	data/appdata/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/backlinks/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/bugzilla/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/exporttogtg/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/exporttohtml/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/filesystemsyncservice/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/fixedwidth/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/inserttimestamp/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/notedirectorywatcher/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/noteoftheday/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/printnotes/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/readonly/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/replacetitle/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/specialnotes/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/statistics/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/stickynoteimport/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/tableofcontents/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/todo/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/tomboyimport/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/underline/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/addins/webdavsyncservice/Makefile	/^am__install_max = 40$/;"	m
am__install_max	src/dbus/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	data/Makefile	/^am__installdirs = "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(dbusservicedir)" \\$/;"	m
am__installdirs	data/appdata/Makefile	/^am__installdirs = "$(DESTDIR)$(appdatadir)"$/;"	m
am__installdirs	src/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	src/addins/backlinks/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/bugzilla/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)" \\$/;"	m
am__installdirs	src/addins/exporttogtg/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/exporttohtml/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)" \\$/;"	m
am__installdirs	src/addins/filesystemsyncservice/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/fixedwidth/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/inserttimestamp/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/notedirectorywatcher/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/noteoftheday/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/printnotes/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/readonly/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/replacetitle/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/specialnotes/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/statistics/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/stickynoteimport/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/tableofcontents/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/todo/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/tomboyimport/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/underline/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/addins/webdavsyncservice/Makefile	/^am__installdirs = "$(DESTDIR)$(addinsdir)" "$(DESTDIR)$(addinsdir)"$/;"	m
am__installdirs	src/dbus/Makefile	/^am__installdirs = "$(DESTDIR)$(introspectdir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	data/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	data/appdata/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	data/icons/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	help/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	libtomboy/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/backlinks/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/bugzilla/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/exporttogtg/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/exporttohtml/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/filesystemsyncservice/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/fixedwidth/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/inserttimestamp/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/notedirectorywatcher/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/noteoftheday/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/printnotes/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/readonly/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/replacetitle/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/specialnotes/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/statistics/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/stickynoteimport/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/tableofcontents/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/todo/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/tomboyimport/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/underline/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/addins/webdavsyncservice/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__is_gnu_make	src/dbus/Makefile	/^am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	data/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	data/appdata/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	data/icons/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	help/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libtomboy/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/backlinks/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/bugzilla/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/exporttogtg/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/exporttohtml/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/filesystemsyncservice/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/fixedwidth/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/inserttimestamp/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/notedirectorywatcher/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/noteoftheday/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/printnotes/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/readonly/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/replacetitle/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/specialnotes/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/statistics/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/stickynoteimport/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/tableofcontents/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/todo/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/tomboyimport/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/underline/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/addins/webdavsyncservice/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	src/dbus/Makefile	/^am__leading_dot = .$/;"	m
am__list_recheck_tests	src/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	data/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	data/appdata/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	data/icons/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	help/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libtomboy/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/backlinks/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/bugzilla/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/exporttogtg/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/exporttohtml/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/filesystemsyncservice/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/fixedwidth/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/inserttimestamp/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/notedirectorywatcher/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/noteoftheday/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/printnotes/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/readonly/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/replacetitle/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/specialnotes/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/statistics/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/stickynoteimport/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/tableofcontents/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/todo/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/tomboyimport/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/underline/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/addins/webdavsyncservice/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	src/dbus/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	data/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	data/appdata/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	data/icons/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	help/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libtomboy/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/backlinks/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/bugzilla/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/exporttogtg/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/exporttohtml/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/filesystemsyncservice/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/fixedwidth/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/inserttimestamp/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/notedirectorywatcher/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/noteoftheday/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/printnotes/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/readonly/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/replacetitle/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/specialnotes/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/statistics/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/stickynoteimport/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/tableofcontents/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/todo/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/tomboyimport/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/underline/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/addins/webdavsyncservice/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	src/dbus/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	data/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	data/appdata/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	data/icons/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	help/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libtomboy/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/backlinks/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/bugzilla/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/exporttogtg/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/exporttohtml/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/filesystemsyncservice/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/fixedwidth/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/inserttimestamp/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/notedirectorywatcher/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/noteoftheday/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/printnotes/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/readonly/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/replacetitle/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/specialnotes/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/statistics/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/stickynoteimport/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/tableofcontents/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/todo/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/tomboyimport/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/underline/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/addins/webdavsyncservice/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	src/dbus/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	libtomboy/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/backlinks/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/bugzilla/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/exporttogtg/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/exporttohtml/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/filesystemsyncservice/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/fixedwidth/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/inserttimestamp/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/notedirectorywatcher/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/noteoftheday/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/printnotes/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/readonly/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/replacetitle/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/specialnotes/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/statistics/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/stickynoteimport/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/tableofcontents/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/todo/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/tomboyimport/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/underline/Makefile	/^am__mv = mv -f$/;"	m
am__mv	src/addins/webdavsyncservice/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_list	data/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	data/appdata/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/backlinks/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/bugzilla/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/exporttogtg/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/exporttohtml/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/filesystemsyncservice/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/fixedwidth/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/inserttimestamp/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/notedirectorywatcher/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/noteoftheday/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/printnotes/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/readonly/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/replacetitle/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/specialnotes/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/statistics/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/stickynoteimport/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/tableofcontents/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/todo/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/tomboyimport/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/underline/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/addins/webdavsyncservice/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	src/dbus/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	data/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	data/appdata/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/backlinks/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/bugzilla/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/exporttogtg/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/exporttohtml/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/filesystemsyncservice/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/fixedwidth/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/inserttimestamp/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/notedirectorywatcher/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/noteoftheday/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/printnotes/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/readonly/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/replacetitle/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/specialnotes/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/statistics/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/stickynoteimport/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/tableofcontents/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/todo/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/tomboyimport/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/underline/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/addins/webdavsyncservice/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	src/dbus/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	data/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	data/appdata/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/backlinks/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/bugzilla/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/exporttogtg/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/exporttohtml/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/filesystemsyncservice/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/fixedwidth/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/inserttimestamp/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/notedirectorywatcher/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/noteoftheday/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/printnotes/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/readonly/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/replacetitle/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/specialnotes/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/statistics/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/stickynoteimport/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/tableofcontents/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/todo/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/tomboyimport/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/underline/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/addins/webdavsyncservice/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	src/dbus/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__objects_1	src/Makefile	/^am__objects_1 = remotecontrolproxy.$(OBJEXT) remotecontrol.$(OBJEXT) \\$/;"	m
am__objects_2	src/Makefile	/^am__objects_2 = prefskeybinder.$(OBJEXT) \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	data/Makefile	/^am__quote = $/;"	m
am__quote	data/appdata/Makefile	/^am__quote = $/;"	m
am__quote	data/icons/Makefile	/^am__quote = $/;"	m
am__quote	help/Makefile	/^am__quote = $/;"	m
am__quote	libtomboy/Makefile	/^am__quote = $/;"	m
am__quote	src/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/backlinks/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/bugzilla/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/exporttogtg/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/exporttohtml/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/filesystemsyncservice/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/fixedwidth/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/inserttimestamp/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/notedirectorywatcher/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/noteoftheday/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/printnotes/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/readonly/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/replacetitle/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/specialnotes/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/statistics/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/stickynoteimport/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/tableofcontents/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/todo/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/tomboyimport/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/underline/Makefile	/^am__quote = $/;"	m
am__quote	src/addins/webdavsyncservice/Makefile	/^am__quote = $/;"	m
am__quote	src/dbus/Makefile	/^am__quote = $/;"	m
am__recheck_rx	src/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	data/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	src/addins/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__relativize	data/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/Makefile	/^am__relativize = \\$/;"	m
am__relativize	src/addins/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__rst_title	src/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__set_TESTS_bases	src/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_b	src/Makefile	/^am__set_b = \\$/;"	m
am__sh_e_setup	src/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__strip_dir	data/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	data/appdata/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/backlinks/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/bugzilla/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/exporttogtg/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/exporttohtml/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/filesystemsyncservice/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/fixedwidth/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/inserttimestamp/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/notedirectorywatcher/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/noteoftheday/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/printnotes/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/readonly/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/replacetitle/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/specialnotes/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/statistics/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/stickynoteimport/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/tableofcontents/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/todo/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/tomboyimport/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/underline/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/addins/webdavsyncservice/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	src/dbus/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	data/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	data/appdata/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	data/icons/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	help/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libtomboy/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/backlinks/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/bugzilla/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/exporttogtg/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/exporttohtml/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/filesystemsyncservice/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/fixedwidth/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/inserttimestamp/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/notedirectorywatcher/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/noteoftheday/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/printnotes/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/readonly/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/replacetitle/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/specialnotes/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/statistics/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/stickynoteimport/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/tableofcontents/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/todo/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/tomboyimport/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/underline/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/addins/webdavsyncservice/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	src/dbus/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	data/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	data/appdata/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	data/icons/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	help/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	libtomboy/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/backlinks/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/bugzilla/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/exporttogtg/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/exporttohtml/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/filesystemsyncservice/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/fixedwidth/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/inserttimestamp/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/notedirectorywatcher/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/noteoftheday/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/printnotes/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/readonly/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/replacetitle/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/specialnotes/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/statistics/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/stickynoteimport/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/tableofcontents/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/todo/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/tomboyimport/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/underline/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/addins/webdavsyncservice/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	src/dbus/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__test_logs1	src/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs2	src/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__tty_colors	src/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	src/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	data/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	data/appdata/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/backlinks/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/bugzilla/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/exporttogtg/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/exporttohtml/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/filesystemsyncservice/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/fixedwidth/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/inserttimestamp/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/notedirectorywatcher/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/noteoftheday/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/printnotes/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/readonly/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/replacetitle/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/specialnotes/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/statistics/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/stickynoteimport/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/tableofcontents/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/todo/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/tomboyimport/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/underline/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/addins/webdavsyncservice/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	src/dbus/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	data/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libtomboy/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/backlinks/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/bugzilla/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/exporttogtg/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/exporttohtml/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/filesystemsyncservice/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/fixedwidth/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/inserttimestamp/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/notedirectorywatcher/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/noteoftheday/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/printnotes/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/readonly/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/replacetitle/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/specialnotes/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/statistics/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/stickynoteimport/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/tableofcontents/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/todo/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/tomboyimport/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/underline/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	src/addins/webdavsyncservice/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	data/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	data/appdata/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	data/icons/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	help/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	libtomboy/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/backlinks/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/bugzilla/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/exporttogtg/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/exporttohtml/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/filesystemsyncservice/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/fixedwidth/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/inserttimestamp/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/notedirectorywatcher/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/noteoftheday/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/printnotes/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/readonly/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/replacetitle/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/specialnotes/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/statistics/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/stickynoteimport/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/tableofcontents/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/todo/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/tomboyimport/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/underline/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/addins/webdavsyncservice/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	src/dbus/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCLD_	libtomboy/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/backlinks/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/bugzilla/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/exporttogtg/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/exporttohtml/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/filesystemsyncservice/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/fixedwidth/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/inserttimestamp/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/notedirectorywatcher/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/noteoftheday/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/printnotes/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/readonly/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/replacetitle/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/specialnotes/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/statistics/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/stickynoteimport/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/tableofcontents/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/todo/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/tomboyimport/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/underline/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	src/addins/webdavsyncservice/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	libtomboy/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/backlinks/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/bugzilla/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/exporttogtg/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/exporttohtml/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/filesystemsyncservice/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/fixedwidth/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/inserttimestamp/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/notedirectorywatcher/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/noteoftheday/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/printnotes/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/readonly/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/replacetitle/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/specialnotes/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/statistics/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/stickynoteimport/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/tableofcontents/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/todo/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/tomboyimport/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/underline/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	src/addins/webdavsyncservice/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	libtomboy/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/backlinks/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/bugzilla/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/exporttogtg/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/exporttohtml/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/filesystemsyncservice/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/fixedwidth/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/inserttimestamp/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/notedirectorywatcher/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/noteoftheday/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/printnotes/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/readonly/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/replacetitle/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/specialnotes/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/statistics/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/stickynoteimport/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/tableofcontents/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/todo/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/tomboyimport/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/underline/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	src/addins/webdavsyncservice/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	libtomboy/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/backlinks/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/bugzilla/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/exporttogtg/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/exporttohtml/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/filesystemsyncservice/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/fixedwidth/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/inserttimestamp/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/notedirectorywatcher/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/noteoftheday/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/printnotes/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/readonly/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/replacetitle/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/specialnotes/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/statistics/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/stickynoteimport/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/tableofcontents/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/todo/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/tomboyimport/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/underline/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	src/addins/webdavsyncservice/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	libtomboy/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/backlinks/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/bugzilla/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/exporttogtg/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/exporttohtml/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/filesystemsyncservice/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/fixedwidth/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/inserttimestamp/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/notedirectorywatcher/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/noteoftheday/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/printnotes/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/readonly/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/replacetitle/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/specialnotes/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/statistics/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/stickynoteimport/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/tableofcontents/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/todo/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/tomboyimport/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/underline/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	src/addins/webdavsyncservice/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	libtomboy/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/backlinks/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/bugzilla/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/exporttogtg/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/exporttohtml/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/filesystemsyncservice/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/fixedwidth/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/inserttimestamp/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/notedirectorywatcher/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/noteoftheday/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/printnotes/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/readonly/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/replacetitle/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/specialnotes/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/statistics/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/stickynoteimport/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/tableofcontents/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/todo/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/tomboyimport/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/underline/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	src/addins/webdavsyncservice/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CXXLD_	src/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/backlinks/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/bugzilla/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/exporttogtg/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/exporttohtml/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/filesystemsyncservice/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/fixedwidth/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/inserttimestamp/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/notedirectorywatcher/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/noteoftheday/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/printnotes/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/readonly/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/replacetitle/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/specialnotes/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/statistics/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/stickynoteimport/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/tableofcontents/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/todo/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/tomboyimport/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/underline/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	src/addins/webdavsyncservice/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	src/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/backlinks/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/bugzilla/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/exporttogtg/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/exporttohtml/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/filesystemsyncservice/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/fixedwidth/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/inserttimestamp/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/notedirectorywatcher/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/noteoftheday/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/printnotes/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/readonly/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/replacetitle/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/specialnotes/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/statistics/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/stickynoteimport/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/tableofcontents/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/todo/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/tomboyimport/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/underline/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	src/addins/webdavsyncservice/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	src/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/backlinks/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/bugzilla/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/exporttogtg/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/exporttohtml/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/filesystemsyncservice/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/fixedwidth/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/inserttimestamp/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/notedirectorywatcher/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/noteoftheday/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/printnotes/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/readonly/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/replacetitle/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/specialnotes/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/statistics/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/stickynoteimport/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/tableofcontents/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/todo/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/tomboyimport/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/underline/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	src/addins/webdavsyncservice/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	src/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/backlinks/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/bugzilla/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/exporttogtg/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/exporttohtml/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/filesystemsyncservice/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/fixedwidth/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/inserttimestamp/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/notedirectorywatcher/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/noteoftheday/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/printnotes/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/readonly/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/replacetitle/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/specialnotes/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/statistics/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/stickynoteimport/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/tableofcontents/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/todo/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/tomboyimport/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/underline/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	src/addins/webdavsyncservice/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	src/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/backlinks/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/bugzilla/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/exporttogtg/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/exporttohtml/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/filesystemsyncservice/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/fixedwidth/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/inserttimestamp/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/notedirectorywatcher/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/noteoftheday/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/printnotes/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/readonly/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/replacetitle/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/specialnotes/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/statistics/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/stickynoteimport/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/tableofcontents/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/todo/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/tomboyimport/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/underline/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	src/addins/webdavsyncservice/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	src/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/backlinks/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/bugzilla/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/exporttogtg/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/exporttohtml/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/filesystemsyncservice/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/fixedwidth/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/inserttimestamp/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/notedirectorywatcher/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/noteoftheday/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/printnotes/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/readonly/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/replacetitle/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/specialnotes/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/statistics/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/stickynoteimport/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/tableofcontents/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/todo/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/tomboyimport/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/underline/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	src/addins/webdavsyncservice/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	data/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	data/appdata/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	data/icons/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	help/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libtomboy/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/backlinks/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/bugzilla/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/exporttogtg/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/exporttohtml/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/filesystemsyncservice/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/fixedwidth/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/inserttimestamp/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/notedirectorywatcher/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/noteoftheday/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/printnotes/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/readonly/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/replacetitle/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/specialnotes/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/statistics/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/stickynoteimport/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/tableofcontents/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/todo/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/tomboyimport/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/underline/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/addins/webdavsyncservice/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	src/dbus/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	data/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	data/appdata/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	data/icons/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	help/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libtomboy/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/backlinks/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/bugzilla/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/exporttogtg/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/exporttohtml/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/filesystemsyncservice/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/fixedwidth/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/inserttimestamp/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/notedirectorywatcher/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/noteoftheday/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/printnotes/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/readonly/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/replacetitle/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/specialnotes/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/statistics/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/stickynoteimport/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/tableofcontents/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/todo/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/tomboyimport/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/underline/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/addins/webdavsyncservice/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	src/dbus/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	data/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	data/appdata/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	data/icons/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	help/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libtomboy/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/backlinks/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/bugzilla/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/exporttogtg/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/exporttohtml/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/filesystemsyncservice/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/fixedwidth/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/inserttimestamp/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/notedirectorywatcher/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/noteoftheday/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/printnotes/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/readonly/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/replacetitle/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/specialnotes/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/statistics/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/stickynoteimport/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/tableofcontents/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/todo/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/tomboyimport/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/underline/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/addins/webdavsyncservice/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	src/dbus/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	data/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	data/appdata/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	data/icons/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	help/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libtomboy/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/backlinks/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/bugzilla/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/exporttogtg/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/exporttohtml/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/filesystemsyncservice/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/fixedwidth/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/inserttimestamp/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/notedirectorywatcher/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/noteoftheday/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/printnotes/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/readonly/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/replacetitle/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/specialnotes/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/statistics/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/stickynoteimport/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/tableofcontents/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/todo/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/tomboyimport/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/underline/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/addins/webdavsyncservice/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	src/dbus/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	data/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	data/appdata/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	data/icons/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	help/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libtomboy/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/backlinks/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/bugzilla/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/exporttogtg/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/exporttohtml/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/filesystemsyncservice/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/fixedwidth/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/inserttimestamp/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/notedirectorywatcher/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/noteoftheday/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/printnotes/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/readonly/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/replacetitle/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/specialnotes/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/statistics/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/stickynoteimport/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/tableofcontents/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/todo/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/tomboyimport/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/underline/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/addins/webdavsyncservice/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	src/dbus/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	data/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	data/appdata/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	data/icons/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	help/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libtomboy/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/backlinks/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/bugzilla/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/exporttogtg/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/exporttohtml/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/filesystemsyncservice/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/fixedwidth/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/inserttimestamp/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/notedirectorywatcher/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/noteoftheday/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/printnotes/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/readonly/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/replacetitle/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/specialnotes/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/statistics/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/stickynoteimport/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/tableofcontents/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/todo/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/tomboyimport/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/underline/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/addins/webdavsyncservice/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	src/dbus/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	data/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	data/appdata/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	data/icons/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	help/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libtomboy/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/backlinks/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/bugzilla/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/exporttogtg/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/exporttohtml/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/filesystemsyncservice/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/fixedwidth/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/inserttimestamp/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/notedirectorywatcher/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/noteoftheday/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/printnotes/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/readonly/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/replacetitle/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/specialnotes/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/statistics/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/stickynoteimport/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/tableofcontents/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/todo/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/tomboyimport/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/underline/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/addins/webdavsyncservice/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	src/dbus/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	data/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	data/appdata/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	data/icons/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	help/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libtomboy/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/backlinks/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/bugzilla/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/exporttogtg/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/exporttohtml/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/filesystemsyncservice/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/fixedwidth/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/inserttimestamp/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/notedirectorywatcher/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/noteoftheday/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/printnotes/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/readonly/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/replacetitle/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/specialnotes/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/statistics/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/stickynoteimport/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/tableofcontents/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/todo/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/tomboyimport/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/underline/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/addins/webdavsyncservice/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	src/dbus/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	data/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	data/appdata/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	data/icons/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	help/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libtomboy/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/backlinks/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/bugzilla/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/exporttogtg/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/exporttohtml/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/filesystemsyncservice/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/fixedwidth/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/inserttimestamp/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/notedirectorywatcher/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/noteoftheday/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/printnotes/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/readonly/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/replacetitle/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/specialnotes/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/statistics/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/stickynoteimport/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/tableofcontents/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/todo/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/tomboyimport/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/underline/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/addins/webdavsyncservice/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	src/dbus/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	libtomboy/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/backlinks/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/bugzilla/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/exporttogtg/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/exporttohtml/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/filesystemsyncservice/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/fixedwidth/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/inserttimestamp/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/notedirectorywatcher/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/noteoftheday/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/printnotes/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/readonly/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/replacetitle/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/specialnotes/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/statistics/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/stickynoteimport/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/tableofcontents/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/todo/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/tomboyimport/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/underline/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	src/addins/webdavsyncservice/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	libtomboy/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/backlinks/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/bugzilla/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/exporttogtg/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/exporttohtml/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/filesystemsyncservice/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/fixedwidth/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/inserttimestamp/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/notedirectorywatcher/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/noteoftheday/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/printnotes/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/readonly/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/replacetitle/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/specialnotes/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/statistics/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/stickynoteimport/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/tableofcontents/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/todo/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/tomboyimport/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/underline/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	src/addins/webdavsyncservice/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	libtomboy/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/backlinks/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/bugzilla/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/exporttogtg/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/exporttohtml/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/filesystemsyncservice/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/fixedwidth/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/inserttimestamp/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/notedirectorywatcher/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/noteoftheday/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/printnotes/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/readonly/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/replacetitle/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/specialnotes/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/statistics/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/stickynoteimport/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/tableofcontents/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/todo/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/tomboyimport/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/underline/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	src/addins/webdavsyncservice/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	data/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	data/appdata/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/backlinks/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/bugzilla/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/exporttogtg/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/exporttohtml/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/filesystemsyncservice/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/fixedwidth/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/inserttimestamp/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/notedirectorywatcher/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/noteoftheday/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/printnotes/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/readonly/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/replacetitle/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/specialnotes/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/statistics/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/stickynoteimport/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/tableofcontents/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/todo/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/tomboyimport/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/underline/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/addins/webdavsyncservice/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	src/dbus/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	data/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	data/appdata/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/backlinks/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/bugzilla/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/exporttogtg/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/exporttohtml/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/filesystemsyncservice/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/fixedwidth/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/inserttimestamp/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/notedirectorywatcher/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/noteoftheday/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/printnotes/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/readonly/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/replacetitle/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/specialnotes/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/statistics/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/stickynoteimport/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/tableofcontents/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/todo/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/tomboyimport/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/underline/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/addins/webdavsyncservice/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	src/dbus/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_backlinks_la_OBJECTS	src/addins/backlinks/Makefile	/^am_backlinks_la_OBJECTS = backlinksnoteaddin.lo backlinkmenuitem.lo$/;"	m
am_bugzilla_la_OBJECTS	src/addins/bugzilla/Makefile	/^am_bugzilla_la_OBJECTS = bugzillanoteaddin.lo insertbugaction.lo \\$/;"	m
am_dttest_OBJECTS	src/Makefile	/^am_dttest_OBJECTS = dttest.$(OBJEXT)$/;"	m
am_exporttogtg_la_OBJECTS	src/addins/exporttogtg/Makefile	/^am_exporttogtg_la_OBJECTS = exporttogtgnoteaddin.lo$/;"	m
am_exporttohtml_la_OBJECTS	src/addins/exporttohtml/Makefile	/^am_exporttohtml_la_OBJECTS = exporttohtmlnoteaddin.lo \\$/;"	m
am_fileinfotest_OBJECTS	src/Makefile	/^am_fileinfotest_OBJECTS = fileinfotest.$(OBJEXT)$/;"	m
am_filestest_OBJECTS	src/Makefile	/^am_filestest_OBJECTS = filestest.$(OBJEXT)$/;"	m
am_filesystemsyncservice_la_OBJECTS	src/addins/filesystemsyncservice/Makefile	/^am_filesystemsyncservice_la_OBJECTS = filesystemsyncserviceaddin.lo$/;"	m
am_fixedwidth_la_OBJECTS	src/addins/fixedwidth/Makefile	/^am_fixedwidth_la_OBJECTS = fixedwidthnoteaddin.lo \\$/;"	m
am_gnote_OBJECTS	src/Makefile	/^am_gnote_OBJECTS = addinstreemodel.$(OBJEXT) actionmanager.$(OBJEXT) \\$/;"	m
am_gnotesyncclienttest_OBJECTS	src/Makefile	/^am_gnotesyncclienttest_OBJECTS = gnotesyncclienttest.$(OBJEXT) \\$/;"	m
am_inserttimestamp_la_OBJECTS	src/addins/inserttimestamp/Makefile	/^am_inserttimestamp_la_OBJECTS = inserttimestampnoteaddin.lo \\$/;"	m
am_libgnote_la_OBJECTS	src/Makefile	/^am_libgnote_la_OBJECTS = ring.lo datetime.lo dynamicmodule.lo \\$/;"	m
am_libtomboy_la_OBJECTS	libtomboy/Makefile	/^am_libtomboy_la_OBJECTS = libtomboy_la-tomboykeybinder.lo \\$/;"	m
am_notedirectorywatcher_la_OBJECTS	src/addins/notedirectorywatcher/Makefile	/^am_notedirectorywatcher_la_OBJECTS =  \\$/;"	m
am_notemanagertest_OBJECTS	src/Makefile	/^am_notemanagertest_OBJECTS = notemanagertest.$(OBJEXT) \\$/;"	m
am_noteoftheday_la_OBJECTS	src/addins/noteoftheday/Makefile	/^am_noteoftheday_la_OBJECTS = noteoftheday.lo \\$/;"	m
am_notetest_OBJECTS	src/Makefile	/^am_notetest_OBJECTS = notetest.$(OBJEXT)$/;"	m
am_printnotes_la_OBJECTS	src/addins/printnotes/Makefile	/^am_printnotes_la_OBJECTS = printnotesnoteaddin.lo$/;"	m
am_readonly_la_OBJECTS	src/addins/readonly/Makefile	/^am_readonly_la_OBJECTS = readonlynoteaddin.lo$/;"	m
am_replacetitle_la_OBJECTS	src/addins/replacetitle/Makefile	/^am_replacetitle_la_OBJECTS = replacetitlenoteaddin.lo$/;"	m
am_specialnotes_la_OBJECTS	src/addins/specialnotes/Makefile	/^am_specialnotes_la_OBJECTS = specialnotesapplicationaddin.lo$/;"	m
am_statistics_la_OBJECTS	src/addins/statistics/Makefile	/^am_statistics_la_OBJECTS = statisticsapplicationaddin.lo \\$/;"	m
am_stickynoteimport_la_OBJECTS	src/addins/stickynoteimport/Makefile	/^am_stickynoteimport_la_OBJECTS = stickynoteimportnoteaddin.lo$/;"	m
am_stringtest_OBJECTS	src/Makefile	/^am_stringtest_OBJECTS = stringtest.$(OBJEXT)$/;"	m
am_tableofcontents_la_OBJECTS	src/addins/tableofcontents/Makefile	/^am_tableofcontents_la_OBJECTS = tableofcontentsnoteaddin.lo \\$/;"	m
am_todo_la_OBJECTS	src/addins/todo/Makefile	/^am_todo_la_OBJECTS = todonoteaddin.lo$/;"	m
am_tomboyimport_la_OBJECTS	src/addins/tomboyimport/Makefile	/^am_tomboyimport_la_OBJECTS = tomboyimportaddin.lo$/;"	m
am_trietest_OBJECTS	src/Makefile	/^am_trietest_OBJECTS = trietest.$(OBJEXT)$/;"	m
am_underline_la_OBJECTS	src/addins/underline/Makefile	/^am_underline_la_OBJECTS = underlinenoteaddin.lo underlinemenuitem.lo$/;"	m
am_uritest_OBJECTS	src/Makefile	/^am_uritest_OBJECTS = uritest.$(OBJEXT)$/;"	m
am_webdavsyncservice_la_OBJECTS	src/addins/webdavsyncservice/Makefile	/^am_webdavsyncservice_la_OBJECTS = webdavsyncserviceaddin.lo$/;"	m
am_xmlreadertest_OBJECTS	src/Makefile	/^am_xmlreadertest_OBJECTS = xmlreadertest.$(OBJEXT)$/;"	m
anchor	src/note.hpp	/^    Glib::RefPtr<Gtk::TextChildAnchor> anchor;$/;"	m	struct:gnote::Note::ChildWidgetData	access:public
app_data_files	data/appdata/Makefile	/^app_data_files = $(app_data_in_files:.xml.in=.xml)$/;"	m
app_data_in_files	data/appdata/Makefile	/^app_data_in_files = gnote.appdata.xml.in$/;"	m
appdata_DATA	data/appdata/Makefile	/^appdata_DATA = $(app_data_files)$/;"	m
appdatadir	data/appdata/Makefile	/^appdatadir = $(datadir)\/appdata$/;"	m
append	src/sharp/addinstreemodel.cpp	/^  Gtk::TreeIter AddinsTreeModel::append(const gnote::AddinInfo & module_info,$/;"	f	class:sharp::AddinsTreeModel	signature:(const gnote::AddinInfo & module_info, const sharp::DynamicModule *module)
append	src/sharp/addinstreemodel.hpp	/^  Gtk::TreeIter append(const gnote::AddinInfo &, const sharp::DynamicModule *);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const gnote::AddinInfo &, const sharp::DynamicModule *)
apply_split_tag	src/undo.cpp	/^  void SplitterAction::apply_split_tag(Gtk::TextBuffer * buffer)$/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextBuffer * buffer)
apply_split_tag	src/undo.hpp	/^  void apply_split_tag(Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:protected	signature:(Gtk::TextBuffer *)
apply_url_to_block	src/watchers.cpp	/^  void NoteUrlWatcher::apply_url_to_block (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(Gtk::TextIter start, Gtk::TextIter end)
apply_url_to_block	src/watchers.hpp	/^    void apply_url_to_block (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
apply_wikiword_to_block	src/watchers.cpp	/^  void NoteWikiWatcher::apply_wikiword_to_block (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:gnote::NoteWikiWatcher	signature:(Gtk::TextIter start, Gtk::TextIter end)
apply_wikiword_to_block	src/watchers.hpp	/^    void apply_wikiword_to_block (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
are_settings_valid	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::are_settings_valid()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
are_settings_valid	src/synchronization/syncserviceaddin.hpp	/^    virtual bool are_settings_valid()$/;"	f	class:gnote::sync::SyncServiceAddin	access:public	signature:()
arguments	src/sharp/process.hpp	/^  std::vector<std::string> arguments() const$/;"	f	class:sharp::Process	access:public	signature:() const
arguments	src/sharp/process.hpp	/^  void arguments(const std::vector<std::string> & args)$/;"	f	class:sharp::Process	access:public	signature:(const std::vector<std::string> & args)
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
associated_server_id	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::associated_server_id(const std::string & server_id)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & server_id)
associated_server_id	src/synchronization/isyncmanager.hpp	/^  virtual std::string associated_server_id() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
associated_server_id	src/synchronization/isyncmanager.hpp	/^  virtual void associated_server_id(const std::string &) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const std::string &)
attach	src/watchers.cpp	/^  void NoteSpellChecker::attach ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
attach	src/watchers.hpp	/^    void attach();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
attach_checker	src/watchers.cpp	/^  void NoteSpellChecker::attach_checker()$/;"	f	class:gnote::NoteSpellChecker	signature:()
attach_checker	src/watchers.hpp	/^    void attach_checker();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
attributes	src/addininfo.hpp	/^  const std::map<Glib::ustring, Glib::ustring> & attributes()$/;"	f	class:gnote::AddinInfo	access:public	signature:()
augment_selection	src/notebuffer.cpp	/^  void NoteBuffer::augment_selection(Gtk::TextIter & start, Gtk::TextIter & end_iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start, Gtk::TextIter & end_iter)
augment_selection	src/notebuffer.hpp	/^  void augment_selection(Gtk::TextIter &, Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(Gtk::TextIter &, Gtk::TextIter &)
authors	src/addininfo.hpp	/^  const std::string & authors() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
background	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::background()$/;"	f	class:statistics::StatisticsWidget	signature:()
background	src/gnote.hpp	/^  bool        background()$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:()
background	src/mainwindowembeds.cpp	/^void EmbeddableWidget::background()$/;"	f	class:gnote::EmbeddableWidget	signature:()
background	src/mainwindowembeds.hpp	/^  virtual void background();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
background	src/notewindow.cpp	/^  void NoteWindow::background()$/;"	f	class:gnote::NoteWindow	signature:()
background	src/searchnoteswidget.cpp	/^void SearchNotesWidget::background()$/;"	f	class:gnote::SearchNotesWidget	signature:()
background_embedded	src/mainwindowembeds.hpp	/^  virtual void background_embedded(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
background_embedded	src/recentchanges.cpp	/^  void NoteRecentChanges::background_embedded(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
background_sync_checker	src/synchronization/syncmanager.cpp	/^  void SyncManager::background_sync_checker()$/;"	f	class:gnote::sync::SyncManager	signature:()
background_sync_checker	src/synchronization/syncmanager.hpp	/^    void background_sync_checker();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
backlinks	src/addins/backlinks/backlinkmenuitem.cpp	/^namespace backlinks {$/;"	n	file:
backlinks	src/addins/backlinks/backlinkmenuitem.hpp	/^namespace backlinks {$/;"	n
backlinks	src/addins/backlinks/backlinksnoteaddin.cpp	/^namespace backlinks {$/;"	n	file:
backlinks	src/addins/backlinks/backlinksnoteaddin.hpp	/^namespace backlinks {$/;"	n
backlinks::BacklinkAction	src/addins/backlinks/backlinkmenuitem.hpp	/^class BacklinkAction$/;"	c	namespace:backlinks	inherits:gnote::NoteWindow::NonModifyingAction
backlinks::BacklinkAction::BacklinkAction	src/addins/backlinks/backlinkmenuitem.cpp	/^BacklinkAction::BacklinkAction(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:backlinks::BacklinkAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
backlinks::BacklinkAction::BacklinkAction	src/addins/backlinks/backlinkmenuitem.hpp	/^  BacklinkAction(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:backlinks::BacklinkAction	access:private	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
backlinks::BacklinkAction::create	src/addins/backlinks/backlinkmenuitem.cpp	/^Glib::RefPtr<Gtk::Action> BacklinkAction::create(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:backlinks::BacklinkAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
backlinks::BacklinkAction::create	src/addins/backlinks/backlinkmenuitem.hpp	/^  static Glib::RefPtr<Gtk::Action> create(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:backlinks::BacklinkAction	access:public	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
backlinks::BacklinkAction::create_menu_item_vfunc	src/addins/backlinks/backlinkmenuitem.cpp	/^Gtk::Widget *BacklinkAction::create_menu_item_vfunc()$/;"	f	class:backlinks::BacklinkAction	signature:()
backlinks::BacklinkAction::m_menu	src/addins/backlinks/backlinkmenuitem.hpp	/^  Gtk::Menu *m_menu;$/;"	m	class:backlinks::BacklinkAction	access:private
backlinks::BacklinkAction::m_submenu_built	src/addins/backlinks/backlinkmenuitem.hpp	/^  bool m_submenu_built;$/;"	m	class:backlinks::BacklinkAction	access:private
backlinks::BacklinkAction::m_update_menu_slot	src/addins/backlinks/backlinkmenuitem.hpp	/^  sigc::slot<void, Gtk::Menu*> m_update_menu_slot;$/;"	m	class:backlinks::BacklinkAction	access:private
backlinks::BacklinkAction::on_activate	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::on_activate()$/;"	f	class:backlinks::BacklinkAction	signature:()
backlinks::BacklinkAction::on_menu_hidden	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::on_menu_hidden()$/;"	f	class:backlinks::BacklinkAction	signature:()
backlinks::BacklinkAction::on_menu_hidden	src/addins/backlinks/backlinkmenuitem.hpp	/^  void on_menu_hidden();$/;"	p	class:backlinks::BacklinkAction	access:private	signature:()
backlinks::BacklinkAction::override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:backlinks::BacklinkAction	access:public
backlinks::BacklinkAction::override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:backlinks::BacklinkAction	access:protected
backlinks::BacklinkAction::update_menu	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::update_menu()$/;"	f	class:backlinks::BacklinkAction	signature:()
backlinks::BacklinkAction::update_menu	src/addins/backlinks/backlinkmenuitem.hpp	/^  void update_menu();$/;"	p	class:backlinks::BacklinkAction	access:private	signature:()
backlinks::BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.hpp	/^class BacklinkMenuItem$/;"	c	namespace:backlinks	inherits:Gtk::ImageMenuItem
backlinks::BacklinkMenuItem::BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.cpp	/^BacklinkMenuItem::BacklinkMenuItem(const gnote::NoteBase::Ptr & note,$/;"	f	class:backlinks::BacklinkMenuItem	signature:(const gnote::NoteBase::Ptr & note, const std::string & title_search)
backlinks::BacklinkMenuItem::BacklinkMenuItem	src/addins/backlinks/backlinkmenuitem.hpp	/^  BacklinkMenuItem(const gnote::NoteBase::Ptr &, const std::string &);$/;"	p	class:backlinks::BacklinkMenuItem	access:public	signature:(const gnote::NoteBase::Ptr &, const std::string &)
backlinks::BacklinkMenuItem::get_note	src/addins/backlinks/backlinkmenuitem.hpp	/^  gnote::NoteBase::Ptr get_note()$/;"	f	class:backlinks::BacklinkMenuItem	access:public	signature:()
backlinks::BacklinkMenuItem::get_note_icon	src/addins/backlinks/backlinkmenuitem.cpp	/^Glib::RefPtr<Gdk::Pixbuf> BacklinkMenuItem::get_note_icon()$/;"	f	class:backlinks::BacklinkMenuItem	signature:()
backlinks::BacklinkMenuItem::get_note_icon	src/addins/backlinks/backlinkmenuitem.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_note_icon();$/;"	p	class:backlinks::BacklinkMenuItem	access:private	signature:()
backlinks::BacklinkMenuItem::m_note	src/addins/backlinks/backlinkmenuitem.hpp	/^  gnote::NoteBase::Ptr   m_note;$/;"	m	class:backlinks::BacklinkMenuItem	access:private
backlinks::BacklinkMenuItem::m_title_search	src/addins/backlinks/backlinkmenuitem.hpp	/^  std::string m_title_search;$/;"	m	class:backlinks::BacklinkMenuItem	access:private
backlinks::BacklinkMenuItem::on_activate	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkMenuItem::on_activate()$/;"	f	class:backlinks::BacklinkMenuItem	signature:()
backlinks::BacklinkMenuItem::override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:backlinks::BacklinkMenuItem	access:protected
backlinks::BacklinksModule	src/addins/backlinks/backlinksnoteaddin.hpp	/^class BacklinksModule$/;"	c	namespace:backlinks	inherits:sharp::DynamicModule
backlinks::BacklinksModule::BacklinksModule	src/addins/backlinks/backlinksnoteaddin.cpp	/^BacklinksModule::BacklinksModule()$/;"	f	class:backlinks::BacklinksModule	signature:()
backlinks::BacklinksModule::BacklinksModule	src/addins/backlinks/backlinksnoteaddin.hpp	/^  BacklinksModule();$/;"	p	class:backlinks::BacklinksModule	access:public	signature:()
backlinks::BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.hpp	/^class BacklinksNoteAddin$/;"	c	namespace:backlinks	inherits:gnote::NoteAddin
backlinks::BacklinksNoteAddin::BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.cpp	/^BacklinksNoteAddin::BacklinksNoteAddin()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
backlinks::BacklinksNoteAddin::BacklinksNoteAddin	src/addins/backlinks/backlinksnoteaddin.hpp	/^  BacklinksNoteAddin();$/;"	p	class:backlinks::BacklinksNoteAddin	access:public	signature:()
backlinks::BacklinksNoteAddin::check_note_has_match	src/addins/backlinks/backlinksnoteaddin.cpp	/^bool BacklinksNoteAddin::check_note_has_match(const gnote::Note::Ptr & note, $/;"	f	class:backlinks::BacklinksNoteAddin	signature:(const gnote::Note::Ptr & note, const std::string & encoded_title)
backlinks::BacklinksNoteAddin::check_note_has_match	src/addins/backlinks/backlinksnoteaddin.hpp	/^  bool check_note_has_match(const gnote::Note::Ptr &, const std::string &);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(const gnote::Note::Ptr &, const std::string &)
backlinks::BacklinksNoteAddin::create	src/addins/backlinks/backlinksnoteaddin.hpp	/^  static BacklinksNoteAddin *create()$/;"	f	class:backlinks::BacklinksNoteAddin	access:public	signature:()
backlinks::BacklinksNoteAddin::get_backlink_menu_items	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::get_backlink_menu_items(std::list<BacklinkMenuItem*> & items)$/;"	f	class:backlinks::BacklinksNoteAddin	signature:(std::list<BacklinkMenuItem*> & items)
backlinks::BacklinksNoteAddin::get_backlink_menu_items	src/addins/backlinks/backlinksnoteaddin.hpp	/^  void get_backlink_menu_items(std::list<BacklinkMenuItem*> & items);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(std::list<BacklinkMenuItem*> & items)
backlinks::BacklinksNoteAddin::initialize	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::initialize ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
backlinks::BacklinksNoteAddin::on_note_opened	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::on_note_opened ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
backlinks::BacklinksNoteAddin::override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
backlinks::BacklinksNoteAddin::override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
backlinks::BacklinksNoteAddin::override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
backlinks::BacklinksNoteAddin::shutdown	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::shutdown ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
backlinks::BacklinksNoteAddin::update_menu	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::update_menu(Gtk::Menu *menu)$/;"	f	class:backlinks::BacklinksNoteAddin	signature:(Gtk::Menu *menu)
backlinks::BacklinksNoteAddin::update_menu	src/addins/backlinks/backlinksnoteaddin.hpp	/^  void update_menu(Gtk::Menu *menu);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(Gtk::Menu *menu)
backlinks::DECLARE_MODULE	src/addins/backlinks/backlinksnoteaddin.hpp	/^DECLARE_MODULE(BacklinksModule);$/;"	p	namespace:backlinks	signature:(BacklinksModule)
backlinks_la_LIBADD	src/addins/backlinks/Makefile	/^backlinks_la_LIBADD =$/;"	m
backlinks_la_OBJECTS	src/addins/backlinks/Makefile	/^backlinks_la_OBJECTS = $(am_backlinks_la_OBJECTS)$/;"	m
backlinks_la_SOURCES	src/addins/backlinks/Makefile	/^backlinks_la_SOURCES = backlinksnoteaddin.hpp backlinksnoteaddin.cpp \\$/;"	m
backspace_key_handler	src/notebuffer.cpp	/^  bool NoteBuffer::backspace_key_handler()$/;"	f	class:gnote::NoteBuffer	signature:()
backspace_key_handler	src/notebuffer.hpp	/^  bool backspace_key_handler();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
base	src/base/singleton.hpp	/^namespace base {$/;"	n
base::Singleton	src/base/singleton.hpp	/^  class Singleton$/;"	c	namespace:base
base::Singleton::Singleton	src/base/singleton.hpp	/^    Singleton()$/;"	f	class:base::Singleton	access:protected	signature:()
base::Singleton::obj	src/base/singleton.hpp	/^    static T & obj()$/;"	f	class:base::Singleton	access:public	signature:()
base::Singleton::obj	src/base/singleton.hpp	/^    static T & obj(T * inst)$/;"	f	class:base::Singleton	access:private	signature:(T * inst)
basically_equal_to	src/synchronization/syncutils.cpp	/^  bool NoteUpdate::basically_equal_to(const Note::Ptr & existing_note)$/;"	f	class:gnote::sync::NoteUpdate	signature:(const Note::Ptr & existing_note)
basically_equal_to	src/synchronization/syncutils.hpp	/^    bool basically_equal_to(const Note::Ptr & existing_note);$/;"	p	class:gnote::sync::NoteUpdate	access:public	signature:(const Note::Ptr & existing_note)
begin	src/sharp/xsltargumentlist.hpp	/^  const_iterator begin() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
begin_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::begin_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
begin_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool begin_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
bin_PROGRAMS	src/Makefile	/^bin_PROGRAMS = gnote$(EXEEXT)$/;"	m
bind	src/keybinder.hpp	/^  virtual void bind(const std::string & keystring, const sigc::slot<void> & handler) = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & keystring, const sigc::slot<void> & handler)
bind	src/prefskeybinder.cpp	/^  void PrefsKeybinder::bind(const std::string & pref_path, const std::string & default_binding, $/;"	f	class:gnote::PrefsKeybinder	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler)
bind	src/prefskeybinder.hpp	/^  void bind(const std::string & pref_path, const std::string & default_binding, $/;"	p	class:gnote::PrefsKeybinder	access:public	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler)
bind	src/xkeybinder.cpp	/^  void XKeybinder::bind(const std::string & keystring, const sigc::slot<void> & handler)$/;"	f	class:gnote::XKeybinder	signature:(const std::string & keystring, const sigc::slot<void> & handler)
bindings	libtomboy/tomboykeybinder.c	/^static GSList *bindings = NULL;$/;"	v	file:
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	data/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	data/appdata/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	data/icons/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	help/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libtomboy/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/backlinks/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/bugzilla/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/exporttogtg/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/exporttohtml/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/filesystemsyncservice/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/fixedwidth/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/inserttimestamp/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/notedirectorywatcher/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/noteoftheday/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/printnotes/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/readonly/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/replacetitle/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/specialnotes/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/statistics/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/stickynoteimport/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/tableofcontents/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/todo/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/tomboyimport/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/underline/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/addins/webdavsyncservice/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	src/dbus/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bool_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef bool (RemoteControl_adaptor::*bool_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
bool_string_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef bool (RemoteControl_adaptor::*bool_string_string_func)(const std::string &, const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
buffer	src/note.hpp	/^  const Glib::RefPtr<NoteBuffer> & buffer() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	access:public	signature:() const
buffer	src/notebuffer.hpp	/^    Glib::RefPtr<Gtk::TextBuffer> buffer;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
buffer	src/notewindow.hpp	/^    Glib::RefPtr<NoteBuffer>     buffer;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
buffer	src/utils.hpp	/^      const Glib::RefPtr<Gtk::TextBuffer> & buffer() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
buffer_changed	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_changed()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
buffer_changed	src/note.hpp	/^  void buffer_changed();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
buffer_tag_applied	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_tag_applied(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
buffer_tag_applied	src/note.hpp	/^  void buffer_tag_applied(const Glib::RefPtr<Gtk::TextBuffer::Tag> &,$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> &, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
buffer_tag_removed	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_tag_removed(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
buffer_tag_removed	src/note.hpp	/^  void buffer_tag_removed(const Glib::RefPtr<Gtk::TextBuffer::Tag> &,$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> &, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
bugzilla	src/addins/bugzilla/bugzillalink.cpp	/^namespace bugzilla {$/;"	n	file:
bugzilla	src/addins/bugzilla/bugzillalink.hpp	/^namespace bugzilla {$/;"	n
bugzilla	src/addins/bugzilla/bugzillanoteaddin.cpp	/^namespace bugzilla {$/;"	n	file:
bugzilla	src/addins/bugzilla/bugzillanoteaddin.hpp	/^namespace bugzilla {$/;"	n
bugzilla	src/addins/bugzilla/bugzillapreferences.cpp	/^namespace bugzilla {$/;"	n	file:
bugzilla	src/addins/bugzilla/bugzillapreferences.hpp	/^namespace bugzilla {$/;"	n
bugzilla	src/addins/bugzilla/bugzillapreferencesfactory.hpp	/^namespace bugzilla {$/;"	n
bugzilla	src/addins/bugzilla/insertbugaction.cpp	/^namespace bugzilla {$/;"	n	file:
bugzilla	src/addins/bugzilla/insertbugaction.hpp	/^namespace bugzilla {$/;"	n
bugzilla::BugzillaLink	src/addins/bugzilla/bugzillalink.hpp	/^class BugzillaLink$/;"	c	namespace:bugzilla	inherits:gnote::DynamicNoteTag
bugzilla::BugzillaLink::BugzillaLink	src/addins/bugzilla/bugzillalink.cpp	/^  BugzillaLink::BugzillaLink()$/;"	f	class:bugzilla::BugzillaLink	signature:()
bugzilla::BugzillaLink::BugzillaLink	src/addins/bugzilla/bugzillalink.hpp	/^  BugzillaLink();$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:()
bugzilla::BugzillaLink::Ptr	src/addins/bugzilla/bugzillalink.hpp	/^  typedef Glib::RefPtr<BugzillaLink> Ptr;$/;"	t	class:bugzilla::BugzillaLink	access:public
bugzilla::BugzillaLink::create	src/addins/bugzilla/bugzillalink.hpp	/^  static gnote::DynamicNoteTag::Ptr create()$/;"	f	class:bugzilla::BugzillaLink	access:public	signature:()
bugzilla::BugzillaLink::get_bug_url	src/addins/bugzilla/bugzillalink.cpp	/^  std::string BugzillaLink::get_bug_url() const$/;"	f	class:bugzilla::BugzillaLink	signature:() const
bugzilla::BugzillaLink::get_bug_url	src/addins/bugzilla/bugzillalink.hpp	/^  std::string get_bug_url() const;$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:() const
bugzilla::BugzillaLink::initialize	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::initialize(const std::string & element_name)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & element_name)
bugzilla::BugzillaLink::make_image	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::make_image()$/;"	f	class:bugzilla::BugzillaLink	signature:()
bugzilla::BugzillaLink::make_image	src/addins/bugzilla/bugzillalink.hpp	/^  void make_image();$/;"	p	class:bugzilla::BugzillaLink	access:private	signature:()
bugzilla::BugzillaLink::on_activate	src/addins/bugzilla/bugzillalink.cpp	/^  bool BugzillaLink::on_activate(const gnote::NoteEditor & , $/;"	f	class:bugzilla::BugzillaLink	signature:(const gnote::NoteEditor & , const Gtk::TextIter & , const Gtk::TextIter & )
bugzilla::BugzillaLink::on_attribute_read	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::on_attribute_read(const std::string & attributeName)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & attributeName)
bugzilla::BugzillaLink::override	src/addins/bugzilla/bugzillalink.hpp	/^                           const Gtk::TextIter &) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
bugzilla::BugzillaLink::override	src/addins/bugzilla/bugzillalink.hpp	/^  virtual void initialize(const std::string & element_name) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
bugzilla::BugzillaLink::override	src/addins/bugzilla/bugzillalink.hpp	/^  virtual void on_attribute_read(const std::string &) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
bugzilla::BugzillaLink::set_bug_url	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::set_bug_url(const std::string & value)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & value)
bugzilla::BugzillaLink::set_bug_url	src/addins/bugzilla/bugzillalink.hpp	/^  void set_bug_url(const std::string & );$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:(const std::string & )
bugzilla::BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.hpp	/^class BugzillaModule$/;"	c	namespace:bugzilla	inherits:sharp::DynamicModule
bugzilla::BugzillaModule::BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  BugzillaModule::BugzillaModule()$/;"	f	class:bugzilla::BugzillaModule	signature:()
bugzilla::BugzillaModule::BugzillaModule	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  BugzillaModule();$/;"	p	class:bugzilla::BugzillaModule	access:public	signature:()
bugzilla::BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.hpp	/^class BugzillaNoteAddin$/;"	c	namespace:bugzilla	inherits:gnote::NoteAddin
bugzilla::BugzillaNoteAddin::BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  BugzillaNoteAddin::BugzillaNoteAddin()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
bugzilla::BugzillaNoteAddin::BugzillaNoteAddin	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  BugzillaNoteAddin();$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:()
bugzilla::BugzillaNoteAddin::TAG_NAME	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  const char * BugzillaNoteAddin::TAG_NAME = "link:bugzilla";$/;"	m	class:bugzilla::BugzillaNoteAddin	file:
bugzilla::BugzillaNoteAddin::TAG_NAME	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static const char * TAG_NAME;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:private
bugzilla::BugzillaNoteAddin::create	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static BugzillaNoteAddin* create()$/;"	f	class:bugzilla::BugzillaNoteAddin	access:public	signature:()
bugzilla::BugzillaNoteAddin::drop_uri_list	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::drop_uri_list(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, $/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint time)
bugzilla::BugzillaNoteAddin::drop_uri_list	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void drop_uri_list(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, $/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint time)
bugzilla::BugzillaNoteAddin::images_dir	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  std::string BugzillaNoteAddin::images_dir()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
bugzilla::BugzillaNoteAddin::images_dir	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static std::string images_dir();$/;"	p	class:bugzilla::BugzillaNoteAddin	access:public	signature:()
bugzilla::BugzillaNoteAddin::initialize	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::initialize()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
bugzilla::BugzillaNoteAddin::insert_bug	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  bool BugzillaNoteAddin::insert_bug(int x, int y, const std::string & uri, int id)$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(int x, int y, const std::string & uri, int id)
bugzilla::BugzillaNoteAddin::insert_bug	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  bool insert_bug (int x, int y, const std::string & uri, int id);$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(int x, int y, const std::string & uri, int id)
bugzilla::BugzillaNoteAddin::migrate_images	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::migrate_images($/;"	f	class:bugzilla::BugzillaNoteAddin	signature:( const std::string & old_images_dir)
bugzilla::BugzillaNoteAddin::migrate_images	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void migrate_images(const std::string & old_images_dir);$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const std::string & old_images_dir)
bugzilla::BugzillaNoteAddin::on_drag_data_received	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>& context, $/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint, guint time)
bugzilla::BugzillaNoteAddin::on_drag_data_received	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>&, int, int, const Gtk::SelectionData &,$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const Glib::RefPtr<Gdk::DragContext>&, int, int, const Gtk::SelectionData &, guint, guint)
bugzilla::BugzillaNoteAddin::on_note_opened	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::on_note_opened()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
bugzilla::BugzillaNoteAddin::override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
bugzilla::BugzillaNoteAddin::override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
bugzilla::BugzillaNoteAddin::override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
bugzilla::BugzillaNoteAddin::shutdown	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::shutdown()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
bugzilla::BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.hpp	/^class BugzillaPreferences$/;"	c	namespace:bugzilla	inherits:Gtk::Grid
bugzilla::BugzillaPreferences::BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.cpp	/^  BugzillaPreferences::BugzillaPreferences(gnote::NoteManager &)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(gnote::NoteManager &)
bugzilla::BugzillaPreferences::BugzillaPreferences	src/addins/bugzilla/bugzillapreferences.hpp	/^  BugzillaPreferences(gnote::NoteManager &);$/;"	p	class:bugzilla::BugzillaPreferences	access:public	signature:(gnote::NoteManager &)
bugzilla::BugzillaPreferences::Columns	src/addins/bugzilla/bugzillapreferences.hpp	/^  class Columns$/;"	c	class:bugzilla::BugzillaPreferences	inherits:Gtk::TreeModelColumnRecord	access:private
bugzilla::BugzillaPreferences::Columns::Columns	src/addins/bugzilla/bugzillapreferences.hpp	/^    Columns()$/;"	f	class:bugzilla::BugzillaPreferences::Columns	access:public	signature:()
bugzilla::BugzillaPreferences::Columns::file_path	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<std::string>                file_path;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
bugzilla::BugzillaPreferences::Columns::host	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<std::string>                host;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
bugzilla::BugzillaPreferences::Columns::icon	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
bugzilla::BugzillaPreferences::_init_static	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::_init_static()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::_init_static	src/addins/bugzilla/bugzillapreferences.hpp	/^  void _init_static();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
bugzilla::BugzillaPreferences::add_button	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::Button *add_button;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::add_clicked	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::add_clicked()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::add_clicked	src/addins/bugzilla/bugzillapreferences.hpp	/^  void add_clicked();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
bugzilla::BugzillaPreferences::copy_to_bugzilla_icons_dir	src/addins/bugzilla/bugzillapreferences.cpp	/^  bool BugzillaPreferences::copy_to_bugzilla_icons_dir(const std::string & file_path,$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const std::string & file_path, const std::string & host, std::string & err_msg)
bugzilla::BugzillaPreferences::copy_to_bugzilla_icons_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^	bool copy_to_bugzilla_icons_dir(const std::string & file_path,$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const std::string & file_path, const std::string & host, std::string & err_msg)
bugzilla::BugzillaPreferences::icon_store	src/addins/bugzilla/bugzillapreferences.hpp	/^  Glib::RefPtr<Gtk::ListStore> icon_store;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::icon_tree	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::TreeView *icon_tree;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::last_opened_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^  std::string last_opened_dir;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::m_columns	src/addins/bugzilla/bugzillapreferences.hpp	/^  Columns        m_columns;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::on_realize	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::on_realize()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::override	src/addins/bugzilla/bugzillapreferences.hpp	/^  virtual void on_realize() override;$/;"	m	class:bugzilla::BugzillaPreferences	access:protected
bugzilla::BugzillaPreferences::parse_host	src/addins/bugzilla/bugzillapreferences.cpp	/^  std::string BugzillaPreferences::parse_host(const sharp::FileInfo & file_info)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const sharp::FileInfo & file_info)
bugzilla::BugzillaPreferences::parse_host	src/addins/bugzilla/bugzillapreferences.hpp	/^  std::string parse_host(const sharp::FileInfo &);$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const sharp::FileInfo &)
bugzilla::BugzillaPreferences::remove_button	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::Button *remove_button;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::remove_clicked	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::remove_clicked()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::remove_clicked	src/addins/bugzilla/bugzillapreferences.hpp	/^  void remove_clicked();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
bugzilla::BugzillaPreferences::resize_if_needed	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::resize_if_needed(const std::string & p)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const std::string & p)
bugzilla::BugzillaPreferences::resize_if_needed	src/addins/bugzilla/bugzillapreferences.hpp	/^  void resize_if_needed(const std::string & path);$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const std::string & path)
bugzilla::BugzillaPreferences::s_image_dir	src/addins/bugzilla/bugzillapreferences.cpp	/^  std::string BugzillaPreferences::s_image_dir;$/;"	m	class:bugzilla::BugzillaPreferences	file:
bugzilla::BugzillaPreferences::s_image_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^  static std::string s_image_dir;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::s_static_inited	src/addins/bugzilla/bugzillapreferences.cpp	/^  bool BugzillaPreferences::s_static_inited = false;;$/;"	m	class:bugzilla::BugzillaPreferences	file:
bugzilla::BugzillaPreferences::s_static_inited	src/addins/bugzilla/bugzillapreferences.hpp	/^  static bool        s_static_inited;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
bugzilla::BugzillaPreferences::selection_changed	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::selection_changed()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::selection_changed	src/addins/bugzilla/bugzillapreferences.hpp	/^  void selection_changed();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
bugzilla::BugzillaPreferences::update_icon_store	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::update_icon_store()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
bugzilla::BugzillaPreferences::update_icon_store	src/addins/bugzilla/bugzillapreferences.hpp	/^  void update_icon_store();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
bugzilla::BugzillaPreferencesFactory	src/addins/bugzilla/bugzillapreferencesfactory.hpp	/^class BugzillaPreferencesFactory$/;"	c	namespace:bugzilla	inherits:gnote::AddinPreferenceFactory
bugzilla::DECLARE_MODULE	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  DECLARE_MODULE(BugzillaModule);$/;"	p	namespace:bugzilla	file:	signature:(BugzillaModule)
bugzilla::InsertBugAction	src/addins/bugzilla/insertbugaction.hpp	/^class InsertBugAction$/;"	c	namespace:bugzilla	inherits:gnote::SplitterAction
bugzilla::InsertBugAction::InsertBugAction	src/addins/bugzilla/insertbugaction.cpp	/^  InsertBugAction::InsertBugAction(const Gtk::TextIter & start, const std::string & id,$/;"	f	class:bugzilla::InsertBugAction	signature:(const Gtk::TextIter & start, const std::string & id, const BugzillaLink::Ptr & tag)
bugzilla::InsertBugAction::InsertBugAction	src/addins/bugzilla/insertbugaction.hpp	/^  InsertBugAction(const Gtk::TextIter & start, const std::string & id,$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(const Gtk::TextIter & start, const std::string & id, const BugzillaLink::Ptr & tag)
bugzilla::InsertBugAction::can_merge	src/addins/bugzilla/insertbugaction.cpp	/^  bool InsertBugAction::can_merge (const EditAction * action) const$/;"	f	class:bugzilla::InsertBugAction	signature:(const EditAction * action) const
bugzilla::InsertBugAction::can_merge	src/addins/bugzilla/insertbugaction.hpp	/^  bool can_merge (const EditAction * action) const;$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(const EditAction * action) const
bugzilla::InsertBugAction::destroy	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::destroy ()$/;"	f	class:bugzilla::InsertBugAction	signature:()
bugzilla::InsertBugAction::destroy	src/addins/bugzilla/insertbugaction.hpp	/^  void destroy ();$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:()
bugzilla::InsertBugAction::m_id	src/addins/bugzilla/insertbugaction.hpp	/^  std::string       m_id;$/;"	m	class:bugzilla::InsertBugAction	access:private
bugzilla::InsertBugAction::m_offset	src/addins/bugzilla/insertbugaction.hpp	/^  int               m_offset;$/;"	m	class:bugzilla::InsertBugAction	access:private
bugzilla::InsertBugAction::m_tag	src/addins/bugzilla/insertbugaction.hpp	/^  BugzillaLink::Ptr m_tag;$/;"	m	class:bugzilla::InsertBugAction	access:private
bugzilla::InsertBugAction::merge	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::merge (EditAction * action)$/;"	f	class:bugzilla::InsertBugAction	signature:(EditAction * action)
bugzilla::InsertBugAction::merge	src/addins/bugzilla/insertbugaction.hpp	/^  void merge (EditAction * action);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(EditAction * action)
bugzilla::InsertBugAction::redo	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:bugzilla::InsertBugAction	signature:(Gtk::TextBuffer * buffer)
bugzilla::InsertBugAction::redo	src/addins/bugzilla/insertbugaction.hpp	/^  void redo (Gtk::TextBuffer * buffer);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(Gtk::TextBuffer * buffer)
bugzilla::InsertBugAction::undo	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:bugzilla::InsertBugAction	signature:(Gtk::TextBuffer * buffer)
bugzilla::InsertBugAction::undo	src/addins/bugzilla/insertbugaction.hpp	/^  void undo (Gtk::TextBuffer * buffer);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(Gtk::TextBuffer * buffer)
bugzilla::__anon11::sanitize_hostname	src/addins/bugzilla/bugzillapreferences.cpp	/^    bool sanitize_hostname(std::string & hostname)$/;"	f	namespace:bugzilla::__anon11	signature:(std::string & hostname)
bugzilla_la_LIBADD	src/addins/bugzilla/Makefile	/^bugzilla_la_LIBADD =$/;"	m
bugzilla_la_OBJECTS	src/addins/bugzilla/Makefile	/^bugzilla_la_OBJECTS = $(am_bugzilla_la_OBJECTS)$/;"	m
bugzilla_la_SOURCES	src/addins/bugzilla/Makefile	/^bugzilla_la_SOURCES = bugzillanoteaddin.hpp bugzillanoteaddin.cpp \\$/;"	m
build	Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	data/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	data/appdata/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	data/icons/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	help/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	libtomboy/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/backlinks/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/bugzilla/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/exporttogtg/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/exporttohtml/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/filesystemsyncservice/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/fixedwidth/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/inserttimestamp/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/notedirectorywatcher/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/noteoftheday/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/printnotes/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/readonly/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/replacetitle/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/specialnotes/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/statistics/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/stickynoteimport/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/tableofcontents/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/todo/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/tomboyimport/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/underline/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/addins/webdavsyncservice/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build	src/dbus/Makefile	/^build = i686-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	data/Makefile	/^build_alias = $/;"	m
build_alias	data/appdata/Makefile	/^build_alias = $/;"	m
build_alias	data/icons/Makefile	/^build_alias = $/;"	m
build_alias	help/Makefile	/^build_alias = $/;"	m
build_alias	libtomboy/Makefile	/^build_alias = $/;"	m
build_alias	src/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/backlinks/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/bugzilla/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/exporttogtg/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/exporttohtml/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/filesystemsyncservice/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/fixedwidth/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/inserttimestamp/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/notedirectorywatcher/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/noteoftheday/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/printnotes/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/readonly/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/replacetitle/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/specialnotes/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/statistics/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/stickynoteimport/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/tableofcontents/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/todo/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/tomboyimport/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/underline/Makefile	/^build_alias = $/;"	m
build_alias	src/addins/webdavsyncservice/Makefile	/^build_alias = $/;"	m
build_alias	src/dbus/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = i686$/;"	m
build_cpu	data/Makefile	/^build_cpu = i686$/;"	m
build_cpu	data/appdata/Makefile	/^build_cpu = i686$/;"	m
build_cpu	data/icons/Makefile	/^build_cpu = i686$/;"	m
build_cpu	help/Makefile	/^build_cpu = i686$/;"	m
build_cpu	libtomboy/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/backlinks/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/bugzilla/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/exporttogtg/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/exporttohtml/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/filesystemsyncservice/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/fixedwidth/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/inserttimestamp/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/notedirectorywatcher/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/noteoftheday/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/printnotes/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/readonly/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/replacetitle/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/specialnotes/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/statistics/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/stickynoteimport/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/tableofcontents/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/todo/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/tomboyimport/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/underline/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/addins/webdavsyncservice/Makefile	/^build_cpu = i686$/;"	m
build_cpu	src/dbus/Makefile	/^build_cpu = i686$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	data/Makefile	/^build_os = linux-gnu$/;"	m
build_os	data/appdata/Makefile	/^build_os = linux-gnu$/;"	m
build_os	data/icons/Makefile	/^build_os = linux-gnu$/;"	m
build_os	help/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libtomboy/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/backlinks/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/bugzilla/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/exporttogtg/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/exporttohtml/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/filesystemsyncservice/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/fixedwidth/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/inserttimestamp/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/notedirectorywatcher/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/noteoftheday/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/printnotes/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/readonly/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/replacetitle/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/specialnotes/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/statistics/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/stickynoteimport/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/tableofcontents/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/todo/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/tomboyimport/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/underline/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/addins/webdavsyncservice/Makefile	/^build_os = linux-gnu$/;"	m
build_os	src/dbus/Makefile	/^build_os = linux-gnu$/;"	m
build_stats	src/addins/statistics/statisticswidget.cpp	/^  void build_stats()$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:()
build_triplet	Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	data/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	data/appdata/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	data/icons/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	help/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	libtomboy/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/backlinks/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/bugzilla/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/exporttogtg/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/exporttohtml/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/filesystemsyncservice/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/fixedwidth/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/inserttimestamp/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/notedirectorywatcher/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/noteoftheday/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/printnotes/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/readonly/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/replacetitle/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/specialnotes/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/statistics/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/stickynoteimport/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/tableofcontents/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/todo/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/tomboyimport/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/underline/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/addins/webdavsyncservice/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_triplet	src/dbus/Makefile	/^build_triplet = i686-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
build_vendor	data/Makefile	/^build_vendor = pc$/;"	m
build_vendor	data/appdata/Makefile	/^build_vendor = pc$/;"	m
build_vendor	data/icons/Makefile	/^build_vendor = pc$/;"	m
build_vendor	help/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libtomboy/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/backlinks/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/bugzilla/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/exporttogtg/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/exporttohtml/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/filesystemsyncservice/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/fixedwidth/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/inserttimestamp/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/notedirectorywatcher/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/noteoftheday/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/printnotes/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/readonly/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/replacetitle/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/specialnotes/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/statistics/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/stickynoteimport/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/tableofcontents/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/todo/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/tomboyimport/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/underline/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/addins/webdavsyncservice/Makefile	/^build_vendor = pc$/;"	m
build_vendor	src/dbus/Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	data/Makefile	/^builddir = .$/;"	m
builddir	data/appdata/Makefile	/^builddir = .$/;"	m
builddir	data/icons/Makefile	/^builddir = .$/;"	m
builddir	help/Makefile	/^builddir = .$/;"	m
builddir	libtomboy/Makefile	/^builddir = .$/;"	m
builddir	src/Makefile	/^builddir = .$/;"	m
builddir	src/addins/Makefile	/^builddir = .$/;"	m
builddir	src/addins/backlinks/Makefile	/^builddir = .$/;"	m
builddir	src/addins/bugzilla/Makefile	/^builddir = .$/;"	m
builddir	src/addins/exporttogtg/Makefile	/^builddir = .$/;"	m
builddir	src/addins/exporttohtml/Makefile	/^builddir = .$/;"	m
builddir	src/addins/filesystemsyncservice/Makefile	/^builddir = .$/;"	m
builddir	src/addins/fixedwidth/Makefile	/^builddir = .$/;"	m
builddir	src/addins/inserttimestamp/Makefile	/^builddir = .$/;"	m
builddir	src/addins/notedirectorywatcher/Makefile	/^builddir = .$/;"	m
builddir	src/addins/noteoftheday/Makefile	/^builddir = .$/;"	m
builddir	src/addins/printnotes/Makefile	/^builddir = .$/;"	m
builddir	src/addins/readonly/Makefile	/^builddir = .$/;"	m
builddir	src/addins/replacetitle/Makefile	/^builddir = .$/;"	m
builddir	src/addins/specialnotes/Makefile	/^builddir = .$/;"	m
builddir	src/addins/statistics/Makefile	/^builddir = .$/;"	m
builddir	src/addins/stickynoteimport/Makefile	/^builddir = .$/;"	m
builddir	src/addins/tableofcontents/Makefile	/^builddir = .$/;"	m
builddir	src/addins/todo/Makefile	/^builddir = .$/;"	m
builddir	src/addins/tomboyimport/Makefile	/^builddir = .$/;"	m
builddir	src/addins/underline/Makefile	/^builddir = .$/;"	m
builddir	src/addins/webdavsyncservice/Makefile	/^builddir = .$/;"	m
builddir	src/dbus/Makefile	/^builddir = .$/;"	m
button_pressed	src/noteeditor.cpp	/^  bool NoteEditor::button_pressed (GdkEventButton * )$/;"	f	class:gnote::NoteEditor	signature:(GdkEventButton * )
button_pressed	src/noteeditor.hpp	/^  bool button_pressed (GdkEventButton * ev);$/;"	p	class:gnote::NoteEditor	access:private	signature:(GdkEventButton * ev)
cache_dir	src/ignote.cpp	/^std::string IGnote::cache_dir()$/;"	f	class:gnote::IGnote	signature:()
cache_dir	src/ignote.hpp	/^  static std::string cache_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
call_remote	src/dbus/remotecontrol-client-glue.cpp	/^Glib::VariantContainerBase RemoteControl_proxy::call_remote(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_proxy	signature:(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)
call_remote	src/dbus/remotecontrol-client-glue.hpp	/^  Glib::VariantContainerBase call_remote(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:private	signature:(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)
callback	src/utils.cpp	/^    bool InterruptableTimeout::callback(InterruptableTimeout* self)$/;"	f	class:gnote::utils::InterruptableTimeout	signature:(InterruptableTimeout* self)
callback	src/utils.hpp	/^      static bool callback(InterruptableTimeout*);$/;"	p	class:gnote::utils::InterruptableTimeout	access:private	signature:(InterruptableTimeout*)
can_activate	src/notetag.hpp	/^  bool can_activate() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
can_grow	src/notetag.hpp	/^  bool can_grow() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
can_make_bulleted_list	src/notebuffer.cpp	/^  bool NoteBuffer::can_make_bulleted_list()$/;"	f	class:gnote::NoteBuffer	signature:()
can_make_bulleted_list	src/notebuffer.hpp	/^  bool can_make_bulleted_list();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
can_merge	src/addins/bugzilla/insertbugaction.cpp	/^  bool InsertBugAction::can_merge (const EditAction * action) const$/;"	f	class:bugzilla::InsertBugAction	signature:(const EditAction * action) const
can_merge	src/addins/bugzilla/insertbugaction.hpp	/^  bool can_merge (const EditAction * action) const;$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(const EditAction * action) const
can_merge	src/undo.cpp	/^  bool ChangeDepthAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::ChangeDepthAction	signature:(const EditAction * ) const
can_merge	src/undo.cpp	/^  bool EraseAction::can_merge (const EditAction * action) const$/;"	f	class:gnote::EraseAction	signature:(const EditAction * action) const
can_merge	src/undo.cpp	/^  bool InsertAction::can_merge (const EditAction * action) const$/;"	f	class:gnote::InsertAction	signature:(const EditAction * action) const
can_merge	src/undo.cpp	/^  bool InsertBulletAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::InsertBulletAction	signature:(const EditAction * ) const
can_merge	src/undo.cpp	/^  bool TagApplyAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::TagApplyAction	signature:(const EditAction * ) const
can_merge	src/undo.cpp	/^  bool TagRemoveAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::TagRemoveAction	signature:(const EditAction * ) const
can_merge	src/undo.hpp	/^  virtual bool can_merge (const EditAction * action) const = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(const EditAction * action) const
can_serialize	src/notetag.hpp	/^  bool can_serialize() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
can_spell_check	src/notetag.hpp	/^  bool can_spell_check() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
can_split	src/notetag.hpp	/^  bool can_split() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
can_undo	src/notetag.hpp	/^  bool can_undo() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
cancel	src/utils.cpp	/^    void InterruptableTimeout::cancel()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
cancel	src/utils.hpp	/^      void cancel();$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:()
cancel_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::cancel_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
cancel_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool cancel_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
caps_lock_mask	libtomboy/tomboykeybinder.c	/^static guint num_lock_mask, caps_lock_mask, scroll_lock_mask;$/;"	v	file:
category	src/addininfo.hpp	/^  AddinCategory category() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
category	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<gnote::AddinCategory> category;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
change_bullet_direction	src/notebuffer.cpp	/^  void NoteBuffer::change_bullet_direction(Gtk::TextIter iter, Pango::Direction direction)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter, Pango::Direction direction)
change_bullet_direction	src/notebuffer.hpp	/^  void change_bullet_direction(Gtk::TextIter pos, Pango::Direction);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter pos, Pango::Direction)
change_cursor_depth	src/notebuffer.cpp	/^  void NoteBuffer::change_cursor_depth(bool increase)$/;"	f	class:gnote::NoteBuffer	signature:(bool increase)
change_cursor_depth	src/notebuffer.hpp	/^  void change_cursor_depth(bool increase);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(bool increase)
change_cursor_depth_directional	src/notebuffer.cpp	/^  void NoteBuffer::change_cursor_depth_directional(bool right)$/;"	f	class:gnote::NoteBuffer	signature:(bool right)
change_cursor_depth_directional	src/notebuffer.hpp	/^  void change_cursor_depth_directional(bool right);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(bool right)
change_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::change_date() const$/;"	f	class:gnote::NoteBase	signature:() const
change_date	src/notebase.hpp	/^  const sharp::DateTime & change_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
change_date	src/notebase.hpp	/^  const sharp::DateTime & change_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
change_date	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<std::string> change_date;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
change_depth_left_handler	src/notewindow.cpp	/^  void NoteWindow::change_depth_left_handler()$/;"	f	class:gnote::NoteWindow	signature:()
change_depth_left_handler	src/notewindow.hpp	/^  void change_depth_left_handler();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
change_depth_right_handler	src/notewindow.cpp	/^  void NoteWindow::change_depth_right_handler()$/;"	f	class:gnote::NoteWindow	signature:()
change_depth_right_handler	src/notewindow.hpp	/^  void change_depth_right_handler();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool changed;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
changed	src/watchers.cpp	/^  void NoteRenameWatcher::changed()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
changed	src/watchers.hpp	/^    void changed();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
check_PROGRAMS	src/Makefile	/^check_PROGRAMS = trietest$(EXEEXT) stringtest$(EXEEXT) \\$/;"	m
check_for_first_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void check_for_first_run(gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(gnote::NoteManager & manager)
check_new_day	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::check_new_day() const$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:() const
check_new_day	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  void check_new_day() const;$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private	signature:() const
check_note_has_match	src/addins/backlinks/backlinksnoteaddin.cpp	/^bool BacklinksNoteAddin::check_note_has_match(const gnote::Note::Ptr & note, $/;"	f	class:backlinks::BacklinksNoteAddin	signature:(const gnote::Note::Ptr & note, const std::string & encoded_title)
check_note_has_match	src/addins/backlinks/backlinksnoteaddin.hpp	/^  bool check_note_has_match(const gnote::Note::Ptr &, const std::string &);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(const gnote::Note::Ptr &, const std::string &)
check_note_has_match	src/search.cpp	/^  bool Search::check_note_has_match(const Note::Ptr & note, $/;"	f	class:gnote::Search	signature:(const Note::Ptr & note, const std::vector<std::string> & encoded_words, bool match_case)
check_note_has_match	src/search.hpp	/^  bool check_note_has_match(const Note::Ptr & note, const std::vector<std::string> & ,$/;"	p	class:gnote::Search	access:public	signature:(const Note::Ptr & note, const std::vector<std::string> & , bool match_case)
check_selection	src/notebuffer.cpp	/^  void NoteBuffer::check_selection()$/;"	f	class:gnote::NoteBuffer	signature:()
check_selection	src/notebuffer.hpp	/^  void check_selection();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
checked	src/utils.hpp	/^      bool checked() const$/;"	f	class:gnote::utils::CheckAction	access:public	signature:() const
checked	src/utils.hpp	/^      void checked(bool check)$/;"	f	class:gnote::utils::CheckAction	access:public	signature:(bool check)
cleanup_matches	src/notewindow.cpp	/^  void NoteFindHandler::cleanup_matches()$/;"	f	class:gnote::NoteFindHandler	signature:()
cleanup_matches	src/notewindow.hpp	/^  void cleanup_matches();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
cleanup_old	src/addins/noteoftheday/noteoftheday.cpp	/^void NoteOfTheDay::cleanup_old(gnote::NoteManager & manager)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(gnote::NoteManager & manager)
cleanup_old	src/addins/noteoftheday/noteoftheday.hpp	/^  static void cleanup_old(gnote::NoteManager & manager);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(gnote::NoteManager & manager)
cleanup_old_sync	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::cleanup_old_sync(const SyncLockInfo &)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const SyncLockInfo &)
cleanup_old_sync	src/synchronization/filesystemsyncserver.hpp	/^  void cleanup_old_sync(const SyncLockInfo & syncLockInfo);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const SyncLockInfo & syncLockInfo)
clear_action_stack	src/undo.cpp	/^  void UndoManager::clear_action_stack(std::stack<EditAction *> & stack)$/;"	f	class:gnote::UndoManager	signature:(std::stack<EditAction *> & stack)
clear_action_stack	src/undo.hpp	/^  void clear_action_stack(std::stack<EditAction *> &);$/;"	p	class:gnote::UndoManager	access:private	signature:(std::stack<EditAction *> &)
clear_password	src/gnome_keyring/ring.cpp	/^void Ring::clear_password(const std::map<std::string, std::string> & attributes)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & attributes)
clear_password	src/gnome_keyring/ring.hpp	/^  static void clear_password(const std::map<std::string, std::string> & attributes);$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::map<std::string, std::string> & attributes)
clear_undo_history	src/undo.cpp	/^  void UndoManager::clear_undo_history()$/;"	f	class:gnote::UndoManager	signature:()
clear_undo_history	src/undo.hpp	/^  void clear_undo_history();$/;"	p	class:gnote::UndoManager	access:public	signature:()
client_id	src/synchronization/isyncmanager.hpp	/^  std::string client_id;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
close	src/sharp/streamreader.cpp	/^void StreamReader::close()$/;"	f	class:sharp::StreamReader	signature:()
close	src/sharp/streamreader.hpp	/^  void close();$/;"	p	class:sharp::StreamReader	access:public	signature:()
close	src/sharp/streamwriter.cpp	/^void StreamWriter::close()$/;"	f	class:sharp::StreamWriter	signature:()
close	src/sharp/streamwriter.hpp	/^  void close();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
close	src/sharp/xmlreader.cpp	/^  void XmlReader::close()$/;"	f	class:sharp::XmlReader	signature:()
close	src/sharp/xmlreader.hpp	/^  void           close();$/;"	p	class:sharp::XmlReader	access:public	signature:()
close	src/sharp/xmlwriter.cpp	/^  int  XmlWriter::close()$/;"	f	class:sharp::XmlWriter	signature:()
close	src/sharp/xmlwriter.hpp	/^    int close();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
close_on_escape	src/mainwindow.hpp	/^  bool close_on_escape() const$/;"	f	class:gnote::MainWindow	access:public	signature:() const
close_on_escape	src/mainwindow.hpp	/^  void close_on_escape(bool close_win)$/;"	f	class:gnote::MainWindow	access:public	signature:(bool close_win)
close_window	src/mainwindow.hpp	/^  virtual void close_window() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
close_window	src/recentchanges.cpp	/^  void NoteRecentChanges::close_window()$/;"	f	class:gnote::NoteRecentChanges	signature:()
cm_to_pixel	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static int cm_to_pixel(double cm, double dpi)$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:(double cm, double dpi)
cmd_line	src/gnote.hpp	/^  GnoteCommandLine cmd_line;$/;"	m	class:gnote::Gnote	access:private
col1_data_func	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:statistics::StatisticsWidget	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
col1_data_func	src/addins/statistics/statisticswidget.hpp	/^  void col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:statistics::StatisticsWidget	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
col2_data_func	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:statistics::StatisticsWidget	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
col2_data_func	src/addins/statistics/statisticswidget.hpp	/^  void col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:statistics::StatisticsWidget	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
color_regions	src/contrast.cpp	/^static const float color_regions[][6] = {$/;"	v	file:
combo_box_text_data_func	src/preferencesdialog.cpp	/^  void PreferencesDialog::combo_box_text_data_func(const Gtk::TreeIter & iter)$/;"	f	class:gnote::PreferencesDialog	signature:(const Gtk::TreeIter & iter)
combo_box_text_data_func	src/preferencesdialog.hpp	/^  void combo_box_text_data_func(const Gtk::TreeIter & iter);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const Gtk::TreeIter & iter)
commit_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::commit_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
commit_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool commit_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
common_init	src/gnote.cpp	/^  void Gnote::common_init()$/;"	f	class:gnote::Gnote	signature:()
common_init	src/gnote.hpp	/^  void common_init();$/;"	p	class:gnote::Gnote	access:private	signature:()
common_paths	src/synchronization/syncutils.cpp	/^  const char *SyncUtils::common_paths[] = {"\/sbin", "\/bin", "\/usr\/bin"};$/;"	m	class:gnote::sync::SyncUtils	file:
common_paths	src/synchronization/syncutils.hpp	/^    static const char *common_paths[];$/;"	m	class:gnote::sync::SyncUtils	access:private
compare	src/sharp/datetime.cpp	/^  int DateTime::compare(const DateTime &a, const DateTime &b)$/;"	f	class:sharp::DateTime	signature:(const DateTime &a, const DateTime &b)
compare	src/sharp/datetime.hpp	/^  static int compare(const DateTime &, const DateTime &);$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime &, const DateTime &)
compare_dates	src/notemanagerbase.cpp	/^bool compare_dates(const NoteBase::Ptr & a, const NoteBase::Ptr & b)$/;"	f	namespace:gnote	signature:(const NoteBase::Ptr & a, const NoteBase::Ptr & b)
compare_dates	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_dates(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
compare_dates	src/searchnoteswidget.hpp	/^  int compare_dates(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
compare_notebooks_sort_func	src/notebooks/notebookmanager.cpp	/^    int NotebookManager::compare_notebooks_sort_func(const Gtk::TreeIter &a, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter &a, const Gtk::TreeIter &b)
compare_notebooks_sort_func	src/notebooks/notebookmanager.hpp	/^  static int compare_notebooks_sort_func(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
compare_search_hits	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_search_hits(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
compare_search_hits	src/searchnoteswidget.hpp	/^  int compare_search_hits(const Gtk::TreeIter & , const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter & , const Gtk::TreeIter &)
compare_tags	src/synchronization/syncutils.cpp	/^  bool NoteUpdate::compare_tags(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const
compare_tags	src/synchronization/syncutils.hpp	/^    bool compare_tags(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const;$/;"	p	class:gnote::sync::NoteUpdate	access:private	signature:(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const
compare_tags_sort_func	src/tagmanager.cpp	/^    int compare_tags_sort_func (const Gtk::TreeIter & a, $/;"	f	namespace:gnote::__anon4	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
compare_titles	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_titles(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
compare_titles	src/searchnoteswidget.hpp	/^  int compare_titles(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
compute_failure_graph	src/trie.hpp	/^  void compute_failure_graph()$/;"	f	class:gnote::TrieTree	access:public	signature:()
compute_footer_height	src/addins/printnotes/printnotesnoteaddin.cpp	/^  int PrintNotesNoteAddin::compute_footer_height(const Glib::RefPtr<Gtk::PrintContext> & context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
compute_footer_height	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int compute_footer_height(const Glib::RefPtr<Gtk::PrintContext> & context);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
conf_dir	src/ignote.cpp	/^std::string IGnote::conf_dir()$/;"	f	class:gnote::IGnote	signature:()
conf_dir	src/ignote.hpp	/^  static std::string conf_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
conflictRadioGroup	src/preferencesdialog.hpp	/^  Gtk::RadioButton::Group conflictRadioGroup;$/;"	m	class:gnote::PreferencesDialog	access:private
connect_system_signals	src/synchronization/syncmanager.cpp	/^  void SyncManager::connect_system_signals()$/;"	f	class:gnote::sync::SyncManager	signature:()
connect_system_signals	src/synchronization/syncmanager.hpp	/^    virtual void connect_system_signals();$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:()
const_iterator	src/sharp/xsltargumentlist.hpp	/^  typedef container_t::const_iterator const_iterator;$/;"	t	class:sharp::XsltArgumentList	access:public
container_t	src/sharp/xsltargumentlist.hpp	/^  typedef std::list<std::pair<std::string,std::string> > container_t;$/;"	t	class:sharp::XsltArgumentList	access:public
contains	src/mainwindowembeds.hpp	/^  virtual bool contains(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
contains	src/recentchanges.cpp	/^  bool NoteRecentChanges::contains(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
contains_note	src/notebooks/notebook.cpp	/^  bool Notebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note, bool include_system)
contains_note	src/notebooks/notebook.hpp	/^  virtual bool contains_note(const Note::Ptr & note, bool include_system = false);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const Note::Ptr & note, bool include_system = false)
contains_note	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
contains_note	src/notebooks/specialnotebooks.cpp	/^bool AllNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
contains_note	src/notebooks/specialnotebooks.cpp	/^bool PinnedNotesNotebook::contains_note(const Note::Ptr & note, bool)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(const Note::Ptr & note, bool)
contains_note	src/notebooks/specialnotebooks.cpp	/^bool UnfiledNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
contains_tag	src/notebase.cpp	/^bool NoteBase::contains_tag(const Tag::Ptr & tag) const$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag) const
contains_tag	src/notebase.hpp	/^  bool contains_tag(const Tag::Ptr &) const;$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &) const
contains_text	src/note.cpp	/^  bool Note::contains_text(const Glib::ustring & text)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & text)
contains_text	src/note.hpp	/^  bool contains_text(const Glib::ustring & text);$/;"	p	class:gnote::Note	access:private	signature:(const Glib::ustring & text)
contains_text	src/watchers.cpp	/^  bool NoteLinkWatcher::contains_text(const Glib::ustring & text)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::ustring & text)
contains_text	src/watchers.hpp	/^    bool contains_text(const Glib::ustring & text);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::ustring & text)
continueButton	src/synchronization/syncdialog.cpp	/^  Gtk::Button *continueButton;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
contrast_render_foreground_color	src/contrast.cpp	/^contrast_render_foreground_color(const Gdk::Color & background,$/;"	f	signature:(const Gdk::Color & background, ContrastPaletteColor color)
contrast_render_foreground_color	src/contrast.hpp	/^contrast_render_foreground_color(const Gdk::Color & background,$/;"	p	signature:(const Gdk::Color & background, ContrastPaletteColor color)
copy_link_activate	src/watchers.cpp	/^  void NoteUrlWatcher::copy_link_activate()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
copy_link_activate	src/watchers.hpp	/^    void copy_link_activate();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
copy_to_bugzilla_icons_dir	src/addins/bugzilla/bugzillapreferences.cpp	/^  bool BugzillaPreferences::copy_to_bugzilla_icons_dir(const std::string & file_path,$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const std::string & file_path, const std::string & host, std::string & err_msg)
copy_to_bugzilla_icons_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^	bool copy_to_bugzilla_icons_dir(const std::string & file_path,$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const std::string & file_path, const std::string & host, std::string & err_msg)
copyright	src/addininfo.hpp	/^  const std::string & copyright() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
crash	tools/DBusClientTest.py	/^def crash():$/;"	f	access:public
create	src/addinpreferencefactory.hpp	/^  static AddinPreferenceFactoryBase * create()$/;"	f	class:gnote::AddinPreferenceFactory	access:public	signature:()
create	src/addins/backlinks/backlinkmenuitem.cpp	/^Glib::RefPtr<Gtk::Action> BacklinkAction::create(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:backlinks::BacklinkAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
create	src/addins/backlinks/backlinkmenuitem.hpp	/^  static Glib::RefPtr<Gtk::Action> create(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:backlinks::BacklinkAction	access:public	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
create	src/addins/backlinks/backlinksnoteaddin.hpp	/^  static BacklinksNoteAddin *create()$/;"	f	class:backlinks::BacklinksNoteAddin	access:public	signature:()
create	src/addins/bugzilla/bugzillalink.hpp	/^  static gnote::DynamicNoteTag::Ptr create()$/;"	f	class:bugzilla::BugzillaLink	access:public	signature:()
create	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static BugzillaNoteAddin* create()$/;"	f	class:bugzilla::BugzillaNoteAddin	access:public	signature:()
create	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  static ExportToGTGNoteAddin *create()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	access:public	signature:()
create	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  static ExportToHtmlNoteAddin* create()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	access:public	signature:()
create	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  static FileSystemSyncServiceAddin *create()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public	signature:()
create	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    static FixedWidthNoteAddin* create()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	access:public	signature:()
create	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	access:public	signature:(gnote::NoteWindow *note_window)
create	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  static InsertTimestampNoteAddin* create()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	access:public	signature:()
create	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static NoteDirectoryWatcherApplicationAddin *create()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public	signature:()
create	src/addins/noteoftheday/noteoftheday.cpp	/^gnote::NoteBase::Ptr NoteOfTheDay::create(gnote::NoteManager & manager,$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(gnote::NoteManager & manager, const Glib::Date & date)
create	src/addins/noteoftheday/noteoftheday.hpp	/^  static gnote::NoteBase::Ptr create(gnote::NoteManager & manager,$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(gnote::NoteManager & manager, const Glib::Date & date)
create	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  static NoteOfTheDayApplicationAddin * create()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public	signature:()
create	src/addins/printnotes/printnotesnoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:printnotes::__anon13::PrintNotesAction	access:public	signature:(gnote::NoteWindow *note_window)
create	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static PrintNotesNoteAddin* create()$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:()
create	src/addins/readonly/readonlynoteaddin.cpp	/^    static Ptr create()$/;"	f	class:__anon12::ReadOnlyAction	access:public	signature:()
create	src/addins/readonly/readonlynoteaddin.hpp	/^  static ReadOnlyNoteAddin * create()$/;"	f	class:readonly::ReadOnlyNoteAddin	access:public	signature:()
create	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	access:public	signature:(gnote::NoteWindow *note_window)
create	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  static ReplaceTitleNoteAddin * create()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	access:public	signature:()
create	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  static SpecialNotesApplicationAddin *create()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	access:public	signature:()
create	src/addins/statistics/statisticsapplicationaddin.hpp	/^  static StatisticsApplicationAddin *create()$/;"	f	class:statistics::StatisticsApplicationAddin	access:public	signature:()
create	src/addins/statistics/statisticswidget.cpp	/^  static Ptr create(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsModel	access:public	signature:(gnote::NoteManager & nm)
create	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static StickyNoteImportNoteAddin * create()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	access:public	signature:()
create	src/addins/tableofcontents/tableofcontentsaction.cpp	/^Glib::RefPtr<Gtk::Action> TableofcontentsAction::create(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:tableofcontents::TableofcontentsAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
create	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  static Glib::RefPtr<Gtk::Action> create(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:tableofcontents::TableofcontentsAction	access:public	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
create	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  static TableofcontentsNoteAddin *create()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	access:public	signature:()
create	src/addins/todo/todonoteaddin.hpp	/^  static Todo* create()$/;"	f	class:todo::Todo	access:public	signature:()
create	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  static TomboyImportAddin * create()$/;"	f	class:tomboyimport::TomboyImportAddin	access:public	signature:()
create	src/addins/underline/underlinenoteaddin.hpp	/^    static UnderlineNoteAddin* create()$/;"	f	class:underline::UnderlineNoteAddin	access:public	signature:()
create	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^WebDavSyncServiceAddin * WebDavSyncServiceAddin::create()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
create	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static WebDavSyncServiceAddin * create();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public	signature:()
create	src/gnote.hpp	/^  static Glib::RefPtr<Gnote> create()$/;"	f	class:gnote::Gnote	access:public	signature:()
create	src/notebooks/notebookapplicationaddin.cpp	/^    ApplicationAddin * NotebookApplicationAddin::create()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
create	src/notebooks/notebookapplicationaddin.hpp	/^      static ApplicationAddin * create();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:public	signature:()
create	src/notebooks/notebooknoteaddin.cpp	/^  NoteAddin * NotebookNoteAddin::create()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
create	src/notebooks/notebooknoteaddin.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:public	signature:()
create	src/notebuffer.hpp	/^  static Ptr create(const NoteTagTable::Ptr & table, Note & note)$/;"	f	class:gnote::NoteBuffer	access:public	signature:(const NoteTagTable::Ptr & table, Note & note)
create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create()$/;"	f	class:gnote::NoteManagerBase	signature:()
create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create(const Glib::ustring & title)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title)
create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create(const Glib::ustring & title, const Glib::ustring & xml_content)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const Glib::ustring & xml_content)
create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create(const Glib::ustring & title);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title)
create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create(const Glib::ustring & title, const Glib::ustring & xml_content);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const Glib::ustring & xml_content)
create	src/notetag.hpp	/^  static Ptr create(const std::string & tag_name, int flags) throw(sharp::Exception)$/;"	f	class:gnote::NoteTag	access:public	signature:(const std::string & tag_name, int flags)
create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create()$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:()
create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(), const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
create	src/sharp/addinstreemodel.cpp	/^  AddinsTreeModel::Ptr AddinsTreeModel::create(Gtk::TreeView * treeview)$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::TreeView * treeview)
create	src/sharp/addinstreemodel.hpp	/^  static Ptr create(Gtk::TreeView * treeview);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(Gtk::TreeView * treeview)
create	src/synchronization/filesystemsyncserver.cpp	/^SyncServer::Ptr FileSystemSyncServer::create(const std::string & path)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & path)
create	src/synchronization/filesystemsyncserver.hpp	/^  static SyncServer::Ptr create(const std::string & path);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:public	signature:(const std::string & path)
create	src/synchronization/gnotesyncclient.cpp	/^  SyncClient::Ptr GnoteSyncClient::create(NoteManagerBase & manager)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(NoteManagerBase & manager)
create	src/synchronization/gnotesyncclient.hpp	/^    static SyncClient::Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:public	signature:(NoteManagerBase &)
create	src/synchronization/silentui.cpp	/^  SyncUI::Ptr SilentUI::create(NoteManagerBase & nm)$/;"	f	class:gnote::sync::SilentUI	signature:(NoteManagerBase & nm)
create	src/synchronization/silentui.hpp	/^    static SyncUI::Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::SilentUI	access:public	signature:(NoteManagerBase &)
create	src/synchronization/syncdialog.cpp	/^SyncDialog::Ptr SyncDialog::create(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncDialog	signature:(NoteManagerBase & m)
create	src/synchronization/syncdialog.hpp	/^    static Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(NoteManagerBase &)
create	src/utils.hpp	/^      static Ptr create(const Glib::ustring & name)$/;"	f	class:gnote::utils::CheckAction	access:public	signature:(const Glib::ustring & name)
create	src/watchers.cpp	/^  NoteAddin * MouseHandWatcher::create()$/;"	f	class:gnote::MouseHandWatcher	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteLinkWatcher::create()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteRenameWatcher::create() $/;"	f	class:gnote::NoteRenameWatcher	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteSpellChecker::create()$/;"	f	class:gnote::NoteSpellChecker	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteTagsWatcher::create()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteUrlWatcher::create()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
create	src/watchers.cpp	/^  NoteAddin * NoteWikiWatcher::create()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::MouseHandWatcher	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteLinkWatcher	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteSpellChecker	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteUrlWatcher	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteWikiWatcher	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::NoteRenameWatcher	access:public	signature:()
create	src/watchers.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::NoteTagsWatcher	access:public	signature:()
create_addin_manager	src/notemanager.cpp	/^  AddinManager *NoteManager::create_addin_manager()$/;"	f	class:gnote::NoteManager	signature:()
create_addin_manager	src/notemanager.hpp	/^    AddinManager *create_addin_manager();$/;"	p	class:gnote::NoteManager	access:private	signature:()
create_addin_preference_widget	src/addinmanager.cpp	/^  Gtk::Widget * AddinManager::create_addin_preference_widget(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
create_addin_preference_widget	src/addinmanager.hpp	/^  Gtk::Widget * create_addin_preference_widget(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
create_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::create_date() const$/;"	f	class:gnote::NoteBase	signature:() const
create_date	src/notebase.hpp	/^  const sharp::DateTime & create_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
create_date	src/notebase.hpp	/^  const sharp::DateTime & create_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
create_date	src/notebase.hpp	/^  sharp::DateTime & create_date()$/;"	f	class:gnote::NoteData	access:public	signature:()
create_directory	src/notemanagerbase.cpp	/^bool NoteManagerBase::create_directory(const Glib::ustring & directory) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & directory) const
create_directory	src/notemanagerbase.hpp	/^  bool create_directory(const Glib::ustring & directory) const;$/;"	p	class:gnote::NoteManagerBase	access:private	signature:(const Glib::ustring & directory) const
create_dynamic_tag	src/notetag.cpp	/^  DynamicNoteTag::Ptr NoteTagTable::create_dynamic_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name)
create_dynamic_tag	src/notetag.hpp	/^  DynamicNoteTag::Ptr create_dynamic_tag(const std::string & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string & )
create_existing_note	src/note.cpp	/^  Note::Ptr Note::create_existing_note(NoteData *data,$/;"	f	class:gnote::Note	signature:(NoteData *data, std::string filepath, NoteManager & manager)
create_existing_note	src/note.hpp	/^  static Note::Ptr create_existing_note(NoteData *data,$/;"	p	class:gnote::Note	access:public	signature:(NoteData *data, std::string filepath, NoteManager & manager)
create_layout_for_pagenumbers	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_pagenumbers(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages)
create_layout_for_pagenumbers	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_pagenumbers(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages)
create_layout_for_paragraph	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_paragraph(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, Gtk::TextIter p_start, Gtk::TextIter p_end, int & indentation)
create_layout_for_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_paragraph(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, Gtk::TextIter p_start, Gtk::TextIter p_end, int & indentation)
create_layout_for_timestamp	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_timestamp(const Glib::RefPtr<Gtk::PrintContext> & context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
create_layout_for_timestamp	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_timestamp(const Glib::RefPtr<Gtk::PrintContext> & context);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
create_manifest	src/test/gnotesyncclienttest.cpp	/^std::string create_manifest()$/;"	f	signature:()
create_menu_item_vfunc	src/addins/backlinks/backlinkmenuitem.cpp	/^Gtk::Widget *BacklinkAction::create_menu_item_vfunc()$/;"	f	class:backlinks::BacklinkAction	signature:()
create_menu_item_vfunc	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private	signature:()
create_menu_item_vfunc	src/addins/printnotes/printnotesnoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:printnotes::__anon13::PrintNotesAction	access:protected	signature:()
create_menu_item_vfunc	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	access:protected	signature:()
create_menu_item_vfunc	src/addins/tableofcontents/tableofcontentsaction.cpp	/^Gtk::Widget *TableofcontentsAction::create_menu_item_vfunc()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
create_menu_item_vfunc	src/utils.cpp	/^    Gtk::Widget *CheckAction::create_menu_item_vfunc()$/;"	f	class:gnote::utils::CheckAction	signature:()
create_new_note	src/note.cpp	/^  Note::Ptr Note::create_new_note(const Glib::ustring & title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & title, const Glib::ustring & filename, NoteManager & manager)
create_new_note	src/note.hpp	/^  static Note::Ptr create_new_note(const Glib::ustring & title,$/;"	p	class:gnote::Note	access:public	signature:(const Glib::ustring & title, const Glib::ustring & filename, NoteManager & manager)
create_new_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_new_note(Glib::ustring title, const std::string & guid)$/;"	f	class:gnote::NoteManager	signature:(Glib::ustring title, const std::string & guid)
create_new_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
create_new_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_new_note(Glib::ustring title, const std::string & guid)$/;"	f	class:gnote::NoteManagerBase	signature:(Glib::ustring title, const std::string & guid)
create_new_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
create_new_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_new_note(Glib::ustring title, const std::string & guid);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(Glib::ustring title, const std::string & guid)
create_new_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
create_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::create_note(const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteUpdate & noteUpdate)
create_note	src/synchronization/syncmanager.hpp	/^    void create_note(const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteUpdate & noteUpdate)
create_note	tools/SearchProviderTest.py	/^def create_note(rc, title, content):$/;"	f	access:public
create_note_from_sticky	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::create_note_from_sticky(const char * stickyTitle,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const char * stickyTitle, const char* content, gnote::NoteManager & manager)
create_note_from_sticky	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  bool create_note_from_sticky(const char * stickyTitle, const char* content,$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const char * stickyTitle, const char* content, gnote::NoteManager & manager)
create_note_from_template	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_note_from_template(const Glib::ustring & title,$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
create_note_from_template	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_note_from_template(const Glib::ustring & title, const NoteBase::Ptr & template_note)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note)
create_note_from_template	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_note_from_template(const Glib::ustring & title,$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
create_note_from_template	src/notemanagerbase.hpp	/^  NoteBase::Ptr create_note_from_template(const Glib::ustring & title, const NoteBase::Ptr & template_note);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note)
create_note_from_template	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_note_from_template(const Glib::ustring & title,$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
create_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::create_note_in_main_thread(const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteUpdate & noteUpdate)
create_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void create_note_in_main_thread(const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteUpdate & noteUpdate)
create_notebook_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::create_notebook_note()$/;"	f	class:gnote::notebooks::Notebook	signature:()
create_notebook_note	src/notebooks/notebook.hpp	/^  Note::Ptr create_notebook_note();$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:()
create_notes_dir	src/notemanagerbase.cpp	/^void NoteManagerBase::create_notes_dir() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
create_notes_dir	src/notemanagerbase.hpp	/^  void create_notes_dir() const;$/;"	p	class:gnote::NoteManagerBase	access:private	signature:() const
create_password	src/gnome_keyring/ring.cpp	/^void Ring::create_password(const std::string & keyring, const std::string & displayName,$/;"	f	class:gnome::keyring::Ring	signature:(const std::string & keyring, const std::string & displayName, const std::map<std::string, std::string> & attributes, const std::string & secret)
create_password	src/gnome_keyring/ring.hpp	/^  static void create_password(const std::string & keyring, const std::string & displayName,$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::string & keyring, const std::string & displayName, const std::map<std::string, std::string> & attributes, const std::string & secret)
create_preference_widget	src/addinpreferencefactory.hpp	/^  virtual Gtk::Widget * create_preference_widget(NoteManager & m) = 0;$/;"	p	class:gnote::AddinPreferenceFactoryBase	access:public	signature:(NoteManager & m)
create_preferences_control	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^Gtk::Widget *FileSystemSyncServiceAddin::create_preferences_control(EventHandler requiredPrefChanged)$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:(EventHandler requiredPrefChanged)
create_preferences_control	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^Gtk::Widget *WebDavSyncServiceAddin::create_preferences_control(EventHandler requiredPrefChanged)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(EventHandler requiredPrefChanged)
create_preferences_control	src/synchronization/syncserviceaddin.hpp	/^    virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:(EventHandler requiredPrefChanged)
create_start_notes	src/notemanager.cpp	/^  void NoteManager::create_start_notes ()$/;"	f	class:gnote::NoteManager	signature:()
create_start_notes	src/notemanager.hpp	/^    void create_start_notes();$/;"	p	class:gnote::NoteManager	access:private	signature:()
create_sync_server	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^gnote::sync::SyncServer::Ptr FileSystemSyncServiceAddin::create_sync_server()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
create_sync_server	src/synchronization/fusesyncserviceaddin.cpp	/^SyncServer::Ptr FuseSyncServiceAddin::create_sync_server()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
create_sync_server	src/synchronization/syncserviceaddin.hpp	/^    virtual SyncServer::Ptr create_sync_server() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
create_test_notes	tools/SearchProviderTest.py	/^def create_test_notes(rc, notes):$/;"	f	access:public
create_trie_controller	src/notemanagerbase.cpp	/^TrieController *NoteManagerBase::create_trie_controller()$/;"	f	class:gnote::NoteManagerBase	signature:()
create_trie_controller	src/notemanagerbase.hpp	/^  TrieController *create_trie_controller();$/;"	p	class:gnote::NoteManagerBase	access:private	signature:()
create_with_guid	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_with_guid(const Glib::ustring & title, const std::string & guid)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const std::string & guid)
create_with_guid	src/notemanagerbase.hpp	/^  NoteBase::Ptr create_with_guid(const Glib::ustring & title, const std::string & guid);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const std::string & guid)
current	src/utils.hpp	/^      const TextRange & current() const$/;"	f	class:gnote::utils::TextTagEnumerator	access:public	signature:() const
current_sync_lock	src/synchronization/filesystemsyncserver.cpp	/^SyncLockInfo FileSystemSyncServer::current_sync_lock()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
current_sync_lock	src/synchronization/isyncmanager.hpp	/^  virtual SyncLockInfo current_sync_lock() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
currently_embedded	src/recentchanges.cpp	/^  EmbeddableWidget *NoteRecentChanges::currently_embedded()$/;"	f	class:gnote::NoteRecentChanges	signature:()
currently_embedded	src/recentchanges.hpp	/^  EmbeddableWidget *currently_embedded();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
cursor_position	src/notebase.hpp	/^  int cursor_position() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
custom_entry	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::Entry                  *custom_entry;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
custom_radio	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::RadioButton *custom_radio;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
data	src/notebase.cpp	/^NoteData & NoteBase::data()$/;"	f	class:gnote::NoteBase	signature:()
data	src/notebase.cpp	/^const NoteData & NoteBase::data() const$/;"	f	class:gnote::NoteBase	signature:() const
data	src/notebase.hpp	/^  NoteData & data()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
data	src/notebase.hpp	/^  NoteData & data();$/;"	p	class:gnote::NoteBase	access:public	signature:()
data	src/notebase.hpp	/^  const NoteData & data() const$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:() const
data	src/notebase.hpp	/^  const NoteData & data() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
data_dir	src/ignote.cpp	/^std::string IGnote::data_dir()$/;"	f	class:gnote::IGnote	signature:()
data_dir	src/ignote.hpp	/^  static std::string data_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
data_synchronizer	src/notebase.hpp	/^  virtual NoteDataBufferSynchronizerBase & data_synchronizer() = 0;$/;"	p	class:gnote::NoteBase	access:protected	signature:()
data_synchronizer	src/notebase.hpp	/^  virtual const NoteDataBufferSynchronizerBase & data_synchronizer() const = 0;$/;"	p	class:gnote::NoteBase	access:protected	signature:() const
data_synchronizer	src/test/testnote.cpp	/^const gnote::NoteDataBufferSynchronizerBase & Note::data_synchronizer() const$/;"	f	class:test::Note	signature:() const
data_synchronizer	src/test/testnote.cpp	/^gnote::NoteDataBufferSynchronizerBase & Note::data_synchronizer()$/;"	f	class:test::Note	signature:()
data_synchronizer	src/test/testnote.hpp	/^  virtual const gnote::NoteDataBufferSynchronizerBase & data_synchronizer() const;$/;"	p	class:test::Note	access:protected	signature:() const
data_synchronizer	src/test/testnote.hpp	/^  virtual gnote::NoteDataBufferSynchronizerBase & data_synchronizer();$/;"	p	class:test::Note	access:protected	signature:()
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	data/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	data/appdata/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	data/icons/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	help/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libtomboy/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	po/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/backlinks/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/bugzilla/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/exporttogtg/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/exporttohtml/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/filesystemsyncservice/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/fixedwidth/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/inserttimestamp/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/notedirectorywatcher/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/noteoftheday/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/printnotes/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/readonly/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/replacetitle/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/specialnotes/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/statistics/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/stickynoteimport/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/tableofcontents/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/todo/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/tomboyimport/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/underline/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/addins/webdavsyncservice/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	src/dbus/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	data/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	data/appdata/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	data/icons/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	help/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libtomboy/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	po/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/backlinks/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/bugzilla/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/exporttogtg/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/exporttohtml/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/filesystemsyncservice/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/fixedwidth/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/inserttimestamp/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/notedirectorywatcher/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/noteoftheday/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/printnotes/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/readonly/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/replacetitle/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/specialnotes/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/statistics/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/stickynoteimport/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/tableofcontents/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/todo/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/tomboyimport/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/underline/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/addins/webdavsyncservice/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	src/dbus/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
day	src/sharp/datetime.cpp	/^  int DateTime::day() const$/;"	f	class:sharp::DateTime	signature:() const
day	src/sharp/datetime.hpp	/^  int day() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
day_of_year	src/sharp/datetime.cpp	/^  int DateTime::day_of_year() const$/;"	f	class:sharp::DateTime	signature:() const
day_of_year	src/sharp/datetime.hpp	/^  int day_of_year() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
days	src/sharp/timespan.hpp	/^    int days() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
dbg_assert	src/debug.cpp	/^  void dbg_assert(bool condvalue, const char* cond, const char* filen,$/;"	f	namespace:utils	signature:(bool condvalue, const char* cond, const char* filen, int linen, const char* reason)
dbg_assert	src/debug.hpp	/^  void dbg_assert(bool condvalue, const char* cond, const char* filen,$/;"	p	namespace:utils	signature:(bool condvalue, const char* cond, const char* filen, int linen, const char* reason)
dbg_print	src/debug.cpp	/^  void dbg_print(const char *DBG(fmt), const char* DBG(func), ...)$/;"	f	namespace:utils	signature:(const char *DBG(fmt), const char* DBG(func), ...)
dbusservice_DATA	data/Makefile	/^dbusservice_DATA = $(dbusservice_in_files:.service.in=.service)$/;"	m
dbusservice_in_files	data/Makefile	/^dbusservice_in_files = org.gnome.Gnote.service.in$/;"	m
dbusservicedir	data/Makefile	/^dbusservicedir = $(DBUS_SERVICE_DIR)$/;"	m
deactivate_menu	src/utils.cpp	/^      void deactivate_menu(Gtk::Menu *menu)$/;"	f	namespace:gnote::utils::__anon10	signature:(Gtk::Menu *menu)
decode	src/utils.cpp	/^    std::string XmlDecoder::decode(const std::string & source)$/;"	f	class:gnote::utils::XmlDecoder	signature:(const std::string & source)
decode	src/utils.hpp	/^      static std::string decode(const std::string & source);$/;"	p	class:gnote::utils::XmlDecoder	access:public	signature:(const std::string & source)
decrease_cursor_depth	src/notebuffer.hpp	/^  void decrease_cursor_depth()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
decrease_depth	src/notebuffer.cpp	/^  void NoteBuffer::decrease_depth(Gtk::TextIter & start)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start)
decrease_depth	src/notebuffer.hpp	/^  void decrease_depth(Gtk::TextIter & start);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & start)
decrease_font_clicked	src/notewindow.cpp	/^  void NoteTextMenu::decrease_font_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
decrease_font_clicked	src/notewindow.hpp	/^  void decrease_font_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
decrease_indent_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::decrease_indent_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
decrease_indent_clicked	src/notewindow.hpp	/^  void decrease_indent_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
default_enabled	src/addininfo.hpp	/^  bool default_enabled() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
default_keyring	src/gnome_keyring/ring.cpp	/^std::string Ring::default_keyring()$/;"	f	class:gnome::keyring::Ring	signature:()
default_keyring	src/gnome_keyring/ring.hpp	/^  static std::string default_keyring();$/;"	p	class:gnome::keyring::Ring	access:public	signature:()
default_margin	src/noteeditor.hpp	/^  static int default_margin()$/;"	f	class:gnote::NoteEditor	access:public	signature:()
default_note_manager	src/gnote.hpp	/^  NoteManager & default_note_manager()$/;"	f	class:gnote::Gnote	access:public	signature:()
deleteExistingRadio	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButton *deleteExistingRadio;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
delete_key_handler	src/notebuffer.cpp	/^  bool NoteBuffer::delete_key_handler()$/;"	f	class:gnote::NoteBuffer	signature:()
delete_key_handler	src/notebuffer.hpp	/^  bool delete_key_handler();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
delete_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::delete_note(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
delete_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void delete_note(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
delete_note	src/note.cpp	/^  void Note::delete_note()$/;"	f	class:gnote::Note	signature:()
delete_note	src/notebase.cpp	/^void NoteBase::delete_note()$/;"	f	class:gnote::NoteBase	signature:()
delete_note	src/notebase.hpp	/^  virtual void delete_note();$/;"	p	class:gnote::NoteBase	access:public	signature:()
delete_note	src/notemanagerbase.cpp	/^void NoteManagerBase::delete_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
delete_note	src/notemanagerbase.hpp	/^  void delete_note(const NoteBase::Ptr & note);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const NoteBase::Ptr & note)
delete_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::delete_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
delete_note	src/searchnoteswidget.hpp	/^  void delete_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
delete_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_note(const Note::Ptr & existingNote)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote)
delete_note	src/synchronization/syncmanager.hpp	/^    void delete_note(const Note::Ptr & existingNote);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote)
delete_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_note_in_main_thread(const Note::Ptr & existingNote)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote)
delete_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void delete_note_in_main_thread(const Note::Ptr & existingNote);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote)
delete_notebook	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::delete_notebook(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook)
delete_notebook	src/notebooks/notebookmanager.hpp	/^  void delete_notebook(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &)
delete_notes	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::delete_notes(const std::list<std::string> & deletedNoteUUIDs)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::list<std::string> & deletedNoteUUIDs)
delete_notes	src/synchronization/isyncmanager.hpp	/^  virtual void delete_notes(const std::list<std::string> & deletedNoteUUIDs) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(const std::list<std::string> & deletedNoteUUIDs)
delete_notes	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_notes(const SyncServer::Ptr & server)$/;"	f	class:gnote::sync::SyncManager	signature:(const SyncServer::Ptr & server)
delete_notes	src/synchronization/syncmanager.hpp	/^    void delete_notes(const SyncServer::Ptr & server);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const SyncServer::Ptr & server)
delete_selected_notes	src/searchnoteswidget.cpp	/^void SearchNotesWidget::delete_selected_notes()$/;"	f	class:gnote::SearchNotesWidget	signature:()
delete_selected_notes	src/searchnoteswidget.hpp	/^  void delete_selected_notes();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
delete_test_notes	tools/SearchProviderTest.py	/^def delete_test_notes(rc, notes):$/;"	f	access:public
deleted	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool deleted;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
deleted_note_titles	src/synchronization/isyncmanager.hpp	/^  virtual std::map<std::string, std::string> deleted_note_titles() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
depcomp	libtomboy/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/backlinks/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/bugzilla/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/exporttogtg/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/exporttohtml/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/filesystemsyncservice/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/fixedwidth/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/inserttimestamp/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/notedirectorywatcher/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/noteoftheday/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/printnotes/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/readonly/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/replacetitle/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/specialnotes/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/statistics/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/stickynoteimport/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/tableofcontents/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/todo/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/tomboyimport/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/underline/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	src/addins/webdavsyncservice/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depth	src/trie.hpp	/^    int depth() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
description	src/addininfo.hpp	/^  const std::string & description() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
deserialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & iter, const std::string & content)
deserialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, sharp::XmlReader & xml)
deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & iter, sharp::XmlReader & xml)
deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> &, const Gtk::TextIter & ,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> &, const Gtk::TextIter & , const std::string & )
deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> &buffer,$/;"	f	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> &buffer, const std::string & content)
desktop_DATA	data/Makefile	/^desktop_DATA = $(desktop_files)$/;"	m
desktop_files	data/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/backlinks/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/bugzilla/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/exporttogtg/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/exporttohtml/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/filesystemsyncservice/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/fixedwidth/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/inserttimestamp/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/notedirectorywatcher/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/noteoftheday/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/printnotes/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/readonly/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/replacetitle/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/specialnotes/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/statistics/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/stickynoteimport/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/tableofcontents/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/todo/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/tomboyimport/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/underline/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_files	src/addins/webdavsyncservice/Makefile	/^desktop_files = $(desktop_in_files:.desktop.in=.desktop)$/;"	m
desktop_in_files	data/Makefile	/^desktop_in_files = gnote.desktop.in$/;"	m
desktop_in_files	src/addins/backlinks/Makefile	/^desktop_in_files = backlinks.desktop.in$/;"	m
desktop_in_files	src/addins/bugzilla/Makefile	/^desktop_in_files = bugzilla.desktop.in$/;"	m
desktop_in_files	src/addins/exporttogtg/Makefile	/^desktop_in_files = exporttogtg.desktop.in$/;"	m
desktop_in_files	src/addins/exporttohtml/Makefile	/^desktop_in_files = exporttohtml.desktop.in$/;"	m
desktop_in_files	src/addins/filesystemsyncservice/Makefile	/^desktop_in_files = filesystemsyncservice.desktop.in$/;"	m
desktop_in_files	src/addins/fixedwidth/Makefile	/^desktop_in_files = fixedwidth.desktop.in$/;"	m
desktop_in_files	src/addins/inserttimestamp/Makefile	/^desktop_in_files = inserttimestamp.desktop.in$/;"	m
desktop_in_files	src/addins/notedirectorywatcher/Makefile	/^desktop_in_files = notedirectorywatcher.desktop.in$/;"	m
desktop_in_files	src/addins/noteoftheday/Makefile	/^desktop_in_files = noteoftheday.desktop.in$/;"	m
desktop_in_files	src/addins/printnotes/Makefile	/^desktop_in_files = printnotes.desktop.in$/;"	m
desktop_in_files	src/addins/readonly/Makefile	/^desktop_in_files = readonly.desktop.in$/;"	m
desktop_in_files	src/addins/replacetitle/Makefile	/^desktop_in_files = replacetitle.desktop.in$/;"	m
desktop_in_files	src/addins/specialnotes/Makefile	/^desktop_in_files = specialnotes.desktop.in$/;"	m
desktop_in_files	src/addins/statistics/Makefile	/^desktop_in_files = statistics.desktop.in$/;"	m
desktop_in_files	src/addins/stickynoteimport/Makefile	/^desktop_in_files = stickynoteimport.desktop.in$/;"	m
desktop_in_files	src/addins/tableofcontents/Makefile	/^desktop_in_files = tableofcontents.desktop.in$/;"	m
desktop_in_files	src/addins/todo/Makefile	/^desktop_in_files = todo.desktop.in$/;"	m
desktop_in_files	src/addins/tomboyimport/Makefile	/^desktop_in_files = tomboyimport.desktop.in$/;"	m
desktop_in_files	src/addins/underline/Makefile	/^desktop_in_files = underline.desktop.in$/;"	m
desktop_in_files	src/addins/webdavsyncservice/Makefile	/^desktop_in_files = webdavsyncservice.desktop.in$/;"	m
desktopdir	data/Makefile	/^desktopdir = $(datadir)\/applications$/;"	m
destroy	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::destroy ()$/;"	f	class:bugzilla::InsertBugAction	signature:()
destroy	src/addins/bugzilla/insertbugaction.hpp	/^  void destroy ();$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:()
destroy	src/undo.cpp	/^  void ChangeDepthAction::destroy ()$/;"	f	class:gnote::ChangeDepthAction	signature:()
destroy	src/undo.cpp	/^  void EraseAction::destroy ()$/;"	f	class:gnote::EraseAction	signature:()
destroy	src/undo.cpp	/^  void InsertAction::destroy ()$/;"	f	class:gnote::InsertAction	signature:()
destroy	src/undo.cpp	/^  void InsertBulletAction::destroy ()$/;"	f	class:gnote::InsertBulletAction	signature:()
destroy	src/undo.cpp	/^  void TagApplyAction::destroy ()$/;"	f	class:gnote::TagApplyAction	signature:()
destroy	src/undo.cpp	/^  void TagRemoveAction::destroy ()$/;"	f	class:gnote::TagRemoveAction	signature:()
destroy	src/undo.hpp	/^  virtual void destroy () = 0;$/;"	p	class:gnote::EditAction	access:public	signature:()
destroy	src/utils.cpp	/^    void TextRange::destroy()$/;"	f	class:gnote::utils::TextRange	signature:()
destroy	src/utils.hpp	/^      void destroy();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
destroy_notify	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBase::destroy_notify(gpointer data)$/;"	f	class:sharp::PropertyEditorBase	signature:(gpointer data)
destroy_notify	src/sharp/propertyeditor.hpp	/^    void static destroy_notify(gpointer data);$/;"	p	class:sharp::PropertyEditorBase	access:private	signature:(gpointer data)
detach	src/watchers.cpp	/^  void NoteSpellChecker::detach ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
detach	src/watchers.hpp	/^    void detach();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
detach_checker	src/watchers.cpp	/^  void NoteSpellChecker::detach_checker()$/;"	f	class:gnote::NoteSpellChecker	signature:()
detach_checker	src/watchers.hpp	/^    void detach_checker();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
directory_copy	src/sharp/directory.cpp	/^  void directory_copy(const Glib::RefPtr<Gio::File> & src,$/;"	f	namespace:sharp	signature:(const Glib::RefPtr<Gio::File> & src, const Glib::RefPtr<Gio::File> & dest)
directory_copy	src/sharp/directory.hpp	/^  void directory_copy(const Glib::RefPtr<Gio::File> & src,$/;"	p	namespace:sharp	signature:(const Glib::RefPtr<Gio::File> & src, const Glib::RefPtr<Gio::File> & dest)
directory_create	src/sharp/directory.cpp	/^  bool directory_create(const std::string & dir)$/;"	f	namespace:sharp	signature:(const std::string & dir)
directory_create	src/sharp/directory.hpp	/^  bool directory_create(const std::string & dir);$/;"	p	namespace:sharp	signature:(const std::string & dir)
directory_delete	src/sharp/directory.cpp	/^  bool directory_delete(const std::string & dir, bool recursive)$/;"	f	namespace:sharp	signature:(const std::string & dir, bool recursive)
directory_delete	src/sharp/directory.hpp	/^  bool directory_delete(const std::string & dir, bool recursive);$/;"	p	namespace:sharp	signature:(const std::string & dir, bool recursive)
directory_exists	src/sharp/directory.cpp	/^  bool directory_exists(const std::string & dir)$/;"	f	namespace:sharp	signature:(const std::string & dir)
directory_exists	src/sharp/directory.hpp	/^  bool directory_exists(const std::string & dir);$/;"	p	namespace:sharp	signature:(const std::string & dir)
directory_get_directories	src/sharp/directory.cpp	/^  void directory_get_directories(const std::string & dir,$/;"	f	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
directory_get_directories	src/sharp/directory.hpp	/^  void directory_get_directories(const std::string & dir,$/;"	p	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
directory_get_files	src/sharp/directory.cpp	/^  void directory_get_files(const std::string & dir, std::list<std::string>  & files)$/;"	f	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
directory_get_files	src/sharp/directory.hpp	/^  void directory_get_files(const std::string & dir, $/;"	p	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
directory_get_files_with_ext	src/sharp/directory.cpp	/^  void directory_get_files_with_ext(const std::string & dir, $/;"	f	namespace:sharp	signature:(const std::string & dir, const std::string & ext, std::list<std::string> & list)
directory_get_files_with_ext	src/sharp/directory.hpp	/^  void directory_get_files_with_ext(const std::string & dir, $/;"	p	namespace:sharp	signature:(const std::string & dir, const std::string & ext, std::list<std::string> & files)
disable_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *disable_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
display_note	src/gnote.cpp	/^  bool GnoteCommandLine::display_note(T & remote, std::string uri)$/;"	f	class:gnote::GnoteCommandLine	signature:(T & remote, std::string uri)
display_note	src/gnote.hpp	/^  bool        display_note(T & remote, std::string uri);$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:(T & remote, std::string uri)
dispose	src/abstractaddin.cpp	/^  void AbstractAddin::dispose()$/;"	f	class:gnote::AbstractAddin	signature:()
dispose	src/abstractaddin.cpp	/^  void AbstractAddin::dispose(bool )$/;"	f	class:gnote::AbstractAddin	signature:(bool )
dispose	src/abstractaddin.hpp	/^  virtual void dispose(bool disposing);$/;"	p	class:gnote::AbstractAddin	access:protected	signature:(bool disposing)
dispose	src/abstractaddin.hpp	/^  void dispose();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
dispose	src/noteaddin.cpp	/^  void NoteAddin::dispose(bool disposing)$/;"	f	class:gnote::NoteAddin	signature:(bool disposing)
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	po/Makefile	/^distdir = ..\/$(PACKAGE)-$(VERSION)\/$(subdir)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
doMessage	tools/DBusClientTest.py	/^    def doMessage(self, msg, uid):$/;"	m	class:TestApp	access:public
do_grab_key	libtomboy/tomboykeybinder.c	/^do_grab_key (Binding *binding)$/;"	f	file:	signature:(Binding *binding)
do_highlight	src/watchers.cpp	/^  void NoteLinkWatcher::do_highlight(const TrieHit<NoteBase::WeakPtr> & hit,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const TrieHit<NoteBase::WeakPtr> & hit, const Gtk::TextIter & start, const Gtk::TextIter &)
do_highlight	src/watchers.hpp	/^    void do_highlight(const TrieHit<NoteBase::WeakPtr> & , const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const TrieHit<NoteBase::WeakPtr> & , const Gtk::TextIter &,const Gtk::TextIter &)
do_ungrab_key	libtomboy/tomboykeybinder.c	/^do_ungrab_key (Binding *binding)$/;"	f	file:	signature:(Binding *binding)
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	data/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	data/appdata/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	data/icons/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	help/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libtomboy/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/backlinks/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/bugzilla/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/exporttogtg/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/exporttohtml/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/filesystemsyncservice/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/fixedwidth/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/inserttimestamp/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/notedirectorywatcher/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/noteoftheday/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/printnotes/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/readonly/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/replacetitle/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/specialnotes/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/statistics/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/stickynoteimport/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/tableofcontents/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/todo/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/tomboyimport/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/underline/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/addins/webdavsyncservice/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	src/dbus/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
drop_uri_list	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::drop_uri_list(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, $/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint time)
drop_uri_list	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void drop_uri_list(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, $/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint time)
dttest_DEPENDENCIES	src/Makefile	/^dttest_DEPENDENCIES = libgnote.la$/;"	m
dttest_LDADD	src/Makefile	/^dttest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
dttest_OBJECTS	src/Makefile	/^dttest_OBJECTS = $(am_dttest_OBJECTS)$/;"	m
dttest_SOURCES	src/Makefile	/^dttest_SOURCES = test\/dttest.cpp$/;"	m
duration	src/synchronization/isyncmanager.hpp	/^  sharp::TimeSpan duration;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	data/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	data/appdata/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	data/icons/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	help/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libtomboy/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/backlinks/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/bugzilla/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/exporttogtg/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/exporttohtml/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/filesystemsyncservice/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/fixedwidth/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/inserttimestamp/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/notedirectorywatcher/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/noteoftheday/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/printnotes/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/readonly/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/replacetitle/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/specialnotes/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/statistics/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/stickynoteimport/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/tableofcontents/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/todo/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/tomboyimport/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/underline/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/addins/webdavsyncservice/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	src/dbus/Makefile	/^dvidir = ${docdir}$/;"	m
editor	src/notewindow.hpp	/^  Gtk::TextView * editor() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
egg_accelerator_parse_virtual	libtomboy/eggaccelerators.c	/^egg_accelerator_parse_virtual (const gchar            *accelerator,$/;"	f	signature:(const gchar *accelerator, guint *accelerator_key, EggVirtualModifierType *accelerator_mods)
egg_accelerator_parse_virtual	libtomboy/eggaccelerators.h	/^gboolean egg_accelerator_parse_virtual        (const gchar            *accelerator,$/;"	p	signature:(const gchar *accelerator, guint *accelerator_key, EggVirtualModifierType *accelerator_mods)
egg_keymap_get_modmap	libtomboy/eggaccelerators.c	/^const EggModmap* egg_keymap_get_modmap (GdkKeymap *keymap);$/;"	p	file:	signature:(GdkKeymap *keymap)
egg_keymap_get_modmap	libtomboy/eggaccelerators.c	/^egg_keymap_get_modmap (GdkKeymap *keymap)$/;"	f	signature:(GdkKeymap *keymap)
egg_keymap_resolve_virtual_modifiers	libtomboy/eggaccelerators.c	/^egg_keymap_resolve_virtual_modifiers (GdkKeymap              *keymap,$/;"	f	signature:(GdkKeymap *keymap, EggVirtualModifierType virtual_mods, GdkModifierType *concrete_mods)
egg_keymap_resolve_virtual_modifiers	libtomboy/eggaccelerators.h	/^void     egg_keymap_resolve_virtual_modifiers (GdkKeymap              *keymap,$/;"	p	signature:(GdkKeymap *keymap, EggVirtualModifierType virtual_mods, GdkModifierType *concrete_mods)
egg_keymap_virtualize_modifiers	libtomboy/eggaccelerators.c	/^egg_keymap_virtualize_modifiers (GdkKeymap              *keymap,$/;"	f	signature:(GdkKeymap *keymap, GdkModifierType concrete_mods, EggVirtualModifierType *virtual_mods)
egg_keymap_virtualize_modifiers	libtomboy/eggaccelerators.h	/^void     egg_keymap_virtualize_modifiers      (GdkKeymap              *keymap,$/;"	p	signature:(GdkKeymap *keymap, GdkModifierType concrete_mods, EggVirtualModifierType *virtual_mods)
egg_virtual_accelerator_name	libtomboy/eggaccelerators.c	/^egg_virtual_accelerator_name (guint                  accelerator_key,$/;"	f	signature:(guint accelerator_key, EggVirtualModifierType accelerator_mods)
egg_virtual_accelerator_name	libtomboy/eggaccelerators.h	/^gchar* egg_virtual_accelerator_name (guint                  accelerator_key,$/;"	p	signature:(guint accelerator_key, EggVirtualModifierType accelerator_mods)
ellipsify	src/tray.cpp	/^  std::string NoteMenuItem::ellipsify (const std::string & str, size_t max)$/;"	f	class:gnote::NoteMenuItem	signature:(const std::string & str, size_t max)
ellipsify	src/tray.hpp	/^  static std::string ellipsify (const std::string & str, size_t max);$/;"	p	class:gnote::NoteMenuItem	access:private	signature:(const std::string & str, size_t max)
embed	src/mainwindowembeds.cpp	/^void EmbeddableWidget::embed(EmbeddableWidgetHost *h)$/;"	f	class:gnote::EmbeddableWidget	signature:(EmbeddableWidgetHost *h)
embed	src/mainwindowembeds.hpp	/^  virtual void embed(EmbeddableWidgetHost *h);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(EmbeddableWidgetHost *h)
embed_widget	src/mainwindowembeds.hpp	/^  virtual void embed_widget(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
embed_widget	src/recentchanges.cpp	/^  void NoteRecentChanges::embed_widget(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
embeddable_toolbar	src/mainwindowembeds.hpp	/^  virtual Gtk::Widget *embeddable_toolbar() = 0;$/;"	p	class:gnote::HasEmbeddableToolbar	access:public	signature:()
embeddable_toolbar	src/notewindow.cpp	/^  Gtk::Grid *NoteWindow::embeddable_toolbar()$/;"	f	class:gnote::NoteWindow	signature:()
emit_signal	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::emit_signal(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)
emit_signal	src/dbus/remotecontrol-glue.hpp	/^  void emit_signal(const Glib::ustring & name, const Glib::VariantContainerBase & parameters);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)
empty	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::empty()$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:()
empty	src/notebooks/specialnotebooks.hpp	/^  bool empty();$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:public	signature:()
enable_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::enable_addin(T *addin, bool enable)$/;"	f	class:gnote::PreferencesDialog	signature:(T *addin, bool enable)
enable_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::enable_addin(bool enable)$/;"	f	class:gnote::PreferencesDialog	signature:(bool enable)
enable_addin	src/preferencesdialog.hpp	/^  void enable_addin(T *addin, bool enable);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(T *addin, bool enable)
enable_addin	src/preferencesdialog.hpp	/^  void enable_addin(bool enable);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(bool enable)
enable_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *enable_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
enable_disable	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::enable_disable(bool enable)$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(bool enable)
enable_disable	src/prefskeybinder.hpp	/^  void enable_disable(bool enable);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(bool enable)
enable_fuse	src/synchronization/syncutils.cpp	/^  bool SyncUtils::enable_fuse()$/;"	f	class:gnote::sync::SyncUtils	signature:()
enable_fuse	src/synchronization/syncutils.hpp	/^    bool enable_fuse();$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:()
enable_keybindings_changed	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::enable_keybindings_changed(const Glib::ustring & key)$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(const Glib::ustring & key)
enable_keybindings_changed	src/prefskeybinder.hpp	/^  void enable_keybindings_changed(const Glib::ustring & key);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(const Glib::ustring & key)
enabled	src/note.cpp	/^  void Note::enabled(bool is_enabled)$/;"	f	class:gnote::Note	signature:(bool is_enabled)
enabled	src/notebase.cpp	/^void NoteBase::enabled(bool is_enabled)$/;"	f	class:gnote::NoteBase	signature:(bool is_enabled)
enabled	src/notebase.hpp	/^  bool enabled() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
enabled	src/notebase.hpp	/^  virtual void enabled(bool is_enabled);$/;"	p	class:gnote::NoteBase	access:public	signature:(bool is_enabled)
enabled	src/notewindow.cpp	/^  void NoteWindow::enabled(bool enable)$/;"	f	class:gnote::NoteWindow	signature:(bool enable)
enabled	src/notewindow.hpp	/^  bool enabled() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
enabled	src/notewindow.hpp	/^  void enabled(bool enable);$/;"	p	class:gnote::NoteWindow	access:public	signature:(bool enable)
enabled	src/sharp/dynamicmodule.cpp	/^  void DynamicModule::enabled(bool enable)$/;"	f	class:sharp::DynamicModule	signature:(bool enable)
enabled	src/sharp/dynamicmodule.hpp	/^  void enabled(bool enable=true);$/;"	p	class:sharp::DynamicModule	access:public	signature:(bool enable=true)
enabled	src/utils.cpp	/^    void GlobalKeybinder::enabled(bool enable)$/;"	f	class:gnote::utils::GlobalKeybinder	signature:(bool enable)
enabled	src/utils.hpp	/^      bool enabled() const$/;"	f	class:gnote::utils::GlobalKeybinder	access:public	signature:() const
enabled	src/utils.hpp	/^      void enabled(bool enable);$/;"	p	class:gnote::utils::GlobalKeybinder	access:public	signature:(bool enable)
encode	src/utils.cpp	/^    std::string XmlEncoder::encode(const std::string & source)$/;"	f	class:gnote::utils::XmlEncoder	signature:(const std::string & source)
encode	src/utils.hpp	/^      static std::string encode(const std::string & source);$/;"	p	class:gnote::utils::XmlEncoder	access:public	signature:(const std::string & source)
end	src/sharp/xsltargumentlist.hpp	/^  const_iterator end() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
end	src/triehit.hpp	/^  int end() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
end	src/undo.hpp	/^    int end;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
end	src/utils.cpp	/^    Gtk::TextIter TextRange::end() const$/;"	f	class:gnote::utils::TextRange	signature:() const
end	src/utils.hpp	/^      Gtk::TextIter end() const;$/;"	p	class:gnote::utils::TextRange	access:public	signature:() const
end_main	src/gnote.cpp	/^  void Gnote::end_main(bool bus_acquired, bool name_acquired)$/;"	f	class:gnote::Gnote	signature:(bool bus_acquired, bool name_acquired)
end_main	src/gnote.hpp	/^  void end_main(bool bus_aquired, bool name_acquired);$/;"	p	class:gnote::Gnote	access:private	signature:(bool bus_aquired, bool name_acquired)
end_mark	src/notewindow.hpp	/^    Glib::RefPtr<Gtk::TextMark>  end_mark;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
entry_changed_timeout	src/recentchanges.cpp	/^  void NoteRecentChanges::entry_changed_timeout()$/;"	f	class:gnote::NoteRecentChanges	signature:()
entry_changed_timeout	src/recentchanges.hpp	/^  void entry_changed_timeout();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
eof	src/sharp/process.cpp	/^bool Process::eof(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
eof	src/sharp/process.hpp	/^  bool eof(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
erase	src/utils.cpp	/^    void TextRange::erase()$/;"	f	class:gnote::utils::TextRange	signature:()
erase	src/utils.hpp	/^      void erase();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
erase_note_addin_info	src/addinmanager.cpp	/^  void AddinManager::erase_note_addin_info(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
erase_note_addin_info	src/addinmanager.hpp	/^  void erase_note_addin_info(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
err_print	src/debug.cpp	/^  void err_print(const char *fmt, const char* func, ...)$/;"	f	namespace:utils	signature:(const char *fmt, const char* func, ...)
error_handler	src/sharp/xmlreader.cpp	/^  void XmlReader::error_handler(void* arg, const char* msg, $/;"	f	class:sharp::XmlReader	signature:(void* arg, const char* msg, int , void* )
error_handler	src/sharp/xmlreader.hpp	/^  static void error_handler(void* arg, const char* msg, int severity, void* locator);$/;"	p	class:sharp::XmlReader	access:private	signature:(void* arg, const char* msg, int severity, void* locator)
escape_uri_string	src/sharp/uri.cpp	/^  std::string Uri::escape_uri_string(const std::string &s)$/;"	f	class:sharp::Uri	signature:(const std::string &s)
escape_uri_string	src/sharp/uri.hpp	/^    static std::string escape_uri_string(const std::string &);$/;"	p	class:sharp::Uri	access:public	signature:(const std::string &)
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	data/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	data/appdata/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	data/icons/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	help/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libtomboy/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	po/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/backlinks/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/bugzilla/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/exporttogtg/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/exporttohtml/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/filesystemsyncservice/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/fixedwidth/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/inserttimestamp/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/notedirectorywatcher/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/noteoftheday/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/printnotes/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/readonly/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/replacetitle/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/specialnotes/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/statistics/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/stickynoteimport/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/tableofcontents/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/todo/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/tomboyimport/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/underline/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/addins/webdavsyncservice/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	src/dbus/Makefile	/^exec_prefix = ${prefix}$/;"	m
execute	src/gnote.cpp	/^  int GnoteCommandLine::execute()$/;"	f	class:gnote::GnoteCommandLine	signature:()
execute	src/gnote.cpp	/^  void GnoteCommandLine::execute(T & remote)$/;"	f	class:gnote::GnoteCommandLine	signature:(T & remote)
execute	src/gnote.hpp	/^  int execute();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
execute	src/gnote.hpp	/^  void execute(T & remote);$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:(T & remote)
execv_error	src/sharp/process.cpp	/^const char *Process::execv_error(int error)$/;"	f	class:sharp::Process	signature:(int error)
execv_error	src/sharp/process.hpp	/^  static const char *execv_error(int error);$/;"	p	class:sharp::Process	access:private	signature:(int error)
exit_code	src/sharp/process.hpp	/^  int exit_code() const$/;"	f	class:sharp::Process	access:public	signature:() const
export_button_clicked	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::export_button_clicked()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
export_button_clicked	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  void export_button_clicked();$/;"	p	class:exporttogtg::ExportToGTGNoteAddin	access:private	signature:()
export_button_clicked	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::export_button_clicked()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
export_button_clicked	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  void export_button_clicked();$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:()
exporttogtg	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^namespace exporttogtg {$/;"	n	file:
exporttogtg	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^namespace exporttogtg {$/;"	n
exporttogtg::DECLARE_MODULE	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^DECLARE_MODULE(ExportToGTGModule);$/;"	p	namespace:exporttogtg	signature:(ExportToGTGModule)
exporttogtg::ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^class ExportToGTGModule$/;"	c	namespace:exporttogtg	inherits:sharp::DynamicModule
exporttogtg::ExportToGTGModule::ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^ExportToGTGModule::ExportToGTGModule()$/;"	f	class:exporttogtg::ExportToGTGModule	signature:()
exporttogtg::ExportToGTGModule::ExportToGTGModule	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  ExportToGTGModule();$/;"	p	class:exporttogtg::ExportToGTGModule	access:public	signature:()
exporttogtg::ExportToGTGNoteAddin	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^class ExportToGTGNoteAddin$/;"	c	namespace:exporttogtg	inherits:gnote::NoteAddin
exporttogtg::ExportToGTGNoteAddin::create	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  static ExportToGTGNoteAddin *create()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	access:public	signature:()
exporttogtg::ExportToGTGNoteAddin::export_button_clicked	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::export_button_clicked()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
exporttogtg::ExportToGTGNoteAddin::export_button_clicked	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  void export_button_clicked();$/;"	p	class:exporttogtg::ExportToGTGNoteAddin	access:private	signature:()
exporttogtg::ExportToGTGNoteAddin::initialize	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::initialize()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
exporttogtg::ExportToGTGNoteAddin::on_note_opened	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::on_note_opened()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
exporttogtg::ExportToGTGNoteAddin::override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
exporttogtg::ExportToGTGNoteAddin::override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
exporttogtg::ExportToGTGNoteAddin::override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
exporttogtg::ExportToGTGNoteAddin::s_gtg_interface	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> ExportToGTGNoteAddin::s_gtg_interface;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	file:
exporttogtg::ExportToGTGNoteAddin::s_gtg_interface	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_gtg_interface;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:private
exporttogtg::ExportToGTGNoteAddin::shutdown	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::shutdown()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
exporttogtg_la_LIBADD	src/addins/exporttogtg/Makefile	/^exporttogtg_la_LIBADD =$/;"	m
exporttogtg_la_OBJECTS	src/addins/exporttogtg/Makefile	/^exporttogtg_la_OBJECTS = $(am_exporttogtg_la_OBJECTS)$/;"	m
exporttogtg_la_SOURCES	src/addins/exporttogtg/Makefile	/^exporttogtg_la_SOURCES = \\$/;"	m
exporttohtml	src/addins/exporttohtml/exporttohtmldialog.cpp	/^namespace exporttohtml {$/;"	n	file:
exporttohtml	src/addins/exporttohtml/exporttohtmldialog.hpp	/^namespace exporttohtml {$/;"	n
exporttohtml	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^namespace exporttohtml {$/;"	n	file:
exporttohtml	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^namespace exporttohtml {$/;"	n
exporttohtml	src/addins/exporttohtml/notenameresolver.hpp	/^namespace exporttohtml {$/;"	n
exporttohtml::DECLARE_MODULE	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^DECLARE_MODULE(ExportToHtmlModule);$/;"	p	namespace:exporttohtml	signature:(ExportToHtmlModule)
exporttohtml::EXPORTHTML_EXPORT_LINKED	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_EXPORT_LINKED = "export-linked";$/;"	m	namespace:exporttohtml	file:
exporttohtml::EXPORTHTML_EXPORT_LINKED_ALL	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_EXPORT_LINKED_ALL = "export-linked-all";$/;"	m	namespace:exporttohtml	file:
exporttohtml::EXPORTHTML_LAST_DIRECTORY	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * EXPORTHTML_LAST_DIRECTORY = "last-directory";$/;"	m	namespace:exporttohtml	file:
exporttohtml::ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.hpp	/^class ExportToHtmlDialog$/;"	c	namespace:exporttohtml	inherits:Gtk::FileChooserDialog
exporttohtml::ExportToHtmlDialog::ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.cpp	/^ExportToHtmlDialog::ExportToHtmlDialog(const std::string & default_file)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(const std::string & default_file)
exporttohtml::ExportToHtmlDialog::ExportToHtmlDialog	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  ExportToHtmlDialog(const std::string &);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(const std::string &)
exporttohtml::ExportToHtmlDialog::get_export_linked	src/addins/exporttohtml/exporttohtmldialog.cpp	/^bool ExportToHtmlDialog::get_export_linked() const$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:() const
exporttohtml::ExportToHtmlDialog::get_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  bool get_export_linked() const;$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:() const
exporttohtml::ExportToHtmlDialog::get_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.cpp	/^bool ExportToHtmlDialog::get_export_linked_all() const$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:() const
exporttohtml::ExportToHtmlDialog::get_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  bool get_export_linked_all() const;$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:() const
exporttohtml::ExportToHtmlDialog::load_preferences	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::load_preferences(const std::string & default_file)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(const std::string & default_file)
exporttohtml::ExportToHtmlDialog::load_preferences	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void load_preferences(const std::string & );$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:private	signature:(const std::string & )
exporttohtml::ExportToHtmlDialog::m_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  Gtk::CheckButton m_export_linked;$/;"	m	class:exporttohtml::ExportToHtmlDialog	access:private
exporttohtml::ExportToHtmlDialog::m_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  Gtk::CheckButton m_export_linked_all;$/;"	m	class:exporttohtml::ExportToHtmlDialog	access:private
exporttohtml::ExportToHtmlDialog::on_export_linked_toggled	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::on_export_linked_toggled()$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:()
exporttohtml::ExportToHtmlDialog::on_export_linked_toggled	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void on_export_linked_toggled();$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:private	signature:()
exporttohtml::ExportToHtmlDialog::save_preferences	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::save_preferences()$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:()
exporttohtml::ExportToHtmlDialog::save_preferences	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void save_preferences();$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:()
exporttohtml::ExportToHtmlDialog::set_export_linked	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::set_export_linked(bool value)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(bool value)
exporttohtml::ExportToHtmlDialog::set_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void set_export_linked(bool);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(bool)
exporttohtml::ExportToHtmlDialog::set_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::set_export_linked_all(bool value)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(bool value)
exporttohtml::ExportToHtmlDialog::set_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void set_export_linked_all(bool);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(bool)
exporttohtml::ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^class ExportToHtmlModule$/;"	c	namespace:exporttohtml	inherits:sharp::DynamicModule
exporttohtml::ExportToHtmlModule::ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^ExportToHtmlModule::ExportToHtmlModule()$/;"	f	class:exporttohtml::ExportToHtmlModule	signature:()
exporttohtml::ExportToHtmlModule::ExportToHtmlModule	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  ExportToHtmlModule();$/;"	p	class:exporttohtml::ExportToHtmlModule	access:public	signature:()
exporttohtml::ExportToHtmlNoteAddin	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^class ExportToHtmlNoteAddin$/;"	c	namespace:exporttohtml	inherits:gnote::NoteAddin
exporttohtml::ExportToHtmlNoteAddin::create	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  static ExportToHtmlNoteAddin* create()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	access:public	signature:()
exporttohtml::ExportToHtmlNoteAddin::export_button_clicked	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::export_button_clicked()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
exporttohtml::ExportToHtmlNoteAddin::export_button_clicked	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  void export_button_clicked();$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:()
exporttohtml::ExportToHtmlNoteAddin::get_note_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^sharp::XslTransform & ExportToHtmlNoteAddin::get_note_xsl()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
exporttohtml::ExportToHtmlNoteAddin::get_note_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  sharp::XslTransform & get_note_xsl();$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:()
exporttohtml::ExportToHtmlNoteAddin::initialize	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::initialize()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
exporttohtml::ExportToHtmlNoteAddin::m_item	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  Gtk::ImageMenuItem * m_item;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:private
exporttohtml::ExportToHtmlNoteAddin::on_note_opened	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::on_note_opened()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
exporttohtml::ExportToHtmlNoteAddin::override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
exporttohtml::ExportToHtmlNoteAddin::override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
exporttohtml::ExportToHtmlNoteAddin::override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
exporttohtml::ExportToHtmlNoteAddin::s_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^sharp::XslTransform *ExportToHtmlNoteAddin::s_xsl = NULL;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	file:
exporttohtml::ExportToHtmlNoteAddin::s_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  static sharp::XslTransform *s_xsl;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:private
exporttohtml::ExportToHtmlNoteAddin::shutdown	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::shutdown()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
exporttohtml::ExportToHtmlNoteAddin::write_html_for_note	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::write_html_for_note (sharp::StreamWriter & writer, $/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:(sharp::StreamWriter & writer, const gnote::Note::Ptr & note, bool export_linked, bool export_linked_all)
exporttohtml::ExportToHtmlNoteAddin::write_html_for_note	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  void write_html_for_note (sharp::StreamWriter &, const gnote::Note::Ptr &, bool, bool);$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:(sharp::StreamWriter &, const gnote::Note::Ptr &, bool, bool)
exporttohtml::NoteNameResolver	src/addins/exporttohtml/notenameresolver.hpp	/^class NoteNameResolver$/;"	c	namespace:exporttohtml	inherits:sharp::XmlResolver
exporttohtml::NoteNameResolver::NoteNameResolver	src/addins/exporttohtml/notenameresolver.hpp	/^  NoteNameResolver(const gnote::NoteManagerBase &, const gnote::NoteBase::Ptr &)$/;"	f	class:exporttohtml::NoteNameResolver	access:public	signature:(const gnote::NoteManagerBase &, const gnote::NoteBase::Ptr &)
exporttohtml::SCHEMA_EXPORTHTML	src/addins/exporttohtml/exporttohtmldialog.cpp	/^const char * SCHEMA_EXPORTHTML = "org.gnome.gnote.export-html";$/;"	m	namespace:exporttohtml	file:
exporttohtml::to_lower	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^static void to_lower(xmlXPathParserContextPtr ctxt,$/;"	f	namespace:exporttohtml	signature:(xmlXPathParserContextPtr ctxt, int)
exporttohtml_la_DEPENDENCIES	src/addins/exporttohtml/Makefile	/^exporttohtml_la_DEPENDENCIES =$/;"	m
exporttohtml_la_LIBADD	src/addins/exporttohtml/Makefile	/^exporttohtml_la_LIBADD = -lxslt -lxml2 $/;"	m
exporttohtml_la_OBJECTS	src/addins/exporttohtml/Makefile	/^exporttohtml_la_OBJECTS = $(am_exporttohtml_la_OBJECTS)$/;"	m
exporttohtml_la_SOURCES	src/addins/exporttohtml/Makefile	/^exporttohtml_la_SOURCES = exporttohtmlnoteaddin.hpp exporttohtmlnoteaddin.cpp \\$/;"	m
fail_state	src/trie.hpp	/^    TrieStatePtr fail_state()$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:()
fail_state	src/trie.hpp	/^    void fail_state(const TrieStatePtr & s)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(const TrieStatePtr & s)
file	src/sharp/streamreader.hpp	/^  FILE * file()$/;"	f	class:sharp::StreamReader	access:public	signature:()
file	src/sharp/streamwriter.hpp	/^  FILE * file()$/;"	f	class:sharp::StreamWriter	access:public	signature:()
file_basename	src/sharp/files.cpp	/^  std::string file_basename(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
file_basename	src/sharp/files.hpp	/^  std::string file_basename(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
file_copy	src/sharp/files.cpp	/^  void file_copy(const std::string & source, const std::string & dest)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & dest)
file_copy	src/sharp/files.hpp	/^  void file_copy(const std::string & source, const std::string & dest);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & dest)
file_delete	src/sharp/files.cpp	/^  void file_delete(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
file_delete	src/sharp/files.hpp	/^  void file_delete(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
file_dirname	src/sharp/files.cpp	/^  std::string file_dirname(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
file_dirname	src/sharp/files.hpp	/^  std::string file_dirname(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
file_exists	src/sharp/files.cpp	/^  bool file_exists(const std::string & file)$/;"	f	namespace:sharp	signature:(const std::string & file)
file_exists	src/sharp/files.hpp	/^  bool file_exists(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
file_filename	src/sharp/files.cpp	/^  std::string file_filename(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
file_filename	src/sharp/files.hpp	/^  std::string file_filename(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
file_modification_time	src/sharp/fileinfo.cpp	/^  DateTime file_modification_time(const std::string &path)$/;"	f	namespace:sharp	signature:(const std::string &path)
file_modification_time	src/sharp/fileinfo.hpp	/^DateTime file_modification_time(const std::string &);$/;"	p	namespace:sharp	signature:(const std::string &)
file_move	src/sharp/files.cpp	/^  void file_move(const std::string & from, const std::string & to)$/;"	f	namespace:sharp	signature:(const std::string & from, const std::string & to)
file_move	src/sharp/files.hpp	/^  void file_move(const std::string & from, const std::string & to);$/;"	p	namespace:sharp	signature:(const std::string & from, const std::string & to)
file_name	src/sharp/process.hpp	/^  std::string file_name() const$/;"	f	class:sharp::Process	access:public	signature:() const
file_name	src/sharp/process.hpp	/^  void file_name(const std::string & fname)$/;"	f	class:sharp::Process	access:public	signature:(const std::string & fname)
file_path	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<std::string>                file_path;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
file_path	src/notebase.hpp	/^  const Glib::ustring & file_path() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
fileinfotest_DEPENDENCIES	src/Makefile	/^fileinfotest_DEPENDENCIES = libgnote.la$/;"	m
fileinfotest_LDADD	src/Makefile	/^fileinfotest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0  -lgiomm-2.4$/;"	m
fileinfotest_OBJECTS	src/Makefile	/^fileinfotest_OBJECTS = $(am_fileinfotest_OBJECTS)$/;"	m
fileinfotest_SOURCES	src/Makefile	/^fileinfotest_SOURCES = test\/fileinfotest.cpp$/;"	m
filestest_DEPENDENCIES	src/Makefile	/^filestest_DEPENDENCIES = libgnote.la$/;"	m
filestest_LDADD	src/Makefile	/^filestest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0  -lgiomm-2.4$/;"	m
filestest_OBJECTS	src/Makefile	/^filestest_OBJECTS = $(am_filestest_OBJECTS)$/;"	m
filestest_SOURCES	src/Makefile	/^filestest_SOURCES = test\/filestest.cpp$/;"	m
filesystemsyncservice	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^namespace filesystemsyncservice {$/;"	n	file:
filesystemsyncservice	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^namespace filesystemsyncservice {$/;"	n
filesystemsyncservice::FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^class FileSystemSyncServiceAddin$/;"	c	namespace:filesystemsyncservice	inherits:gnote::sync::SyncServiceAddin
filesystemsyncservice::FileSystemSyncServiceAddin::FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^FileSystemSyncServiceAddin::FileSystemSyncServiceAddin()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::FileSystemSyncServiceAddin	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  FileSystemSyncServiceAddin();$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::create	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  static FileSystemSyncServiceAddin *create()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::create_preferences_control	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^Gtk::Widget *FileSystemSyncServiceAddin::create_preferences_control(EventHandler requiredPrefChanged)$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:(EventHandler requiredPrefChanged)
filesystemsyncservice::FileSystemSyncServiceAddin::create_sync_server	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^gnote::sync::SyncServer::Ptr FileSystemSyncServiceAddin::create_sync_server()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::get_config_settings	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::get_config_settings(std::string & syncPath)$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:(std::string & syncPath)
filesystemsyncservice::FileSystemSyncServiceAddin::get_config_settings	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool get_config_settings(std::string & syncPath);$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private	signature:(std::string & syncPath)
filesystemsyncservice::FileSystemSyncServiceAddin::id	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^std::string FileSystemSyncServiceAddin::id()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::initialize	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::initialize()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::initialized	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::initialized()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::is_configured	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::is_configured()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::is_supported	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::is_supported()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::m_enabled	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool m_enabled;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
filesystemsyncservice::FileSystemSyncServiceAddin::m_initialized	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool m_initialized;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
filesystemsyncservice::FileSystemSyncServiceAddin::m_path	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  std::string m_path;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
filesystemsyncservice::FileSystemSyncServiceAddin::m_path_button	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  Gtk::FileChooserButton *m_path_button;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
filesystemsyncservice::FileSystemSyncServiceAddin::name	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^std::string FileSystemSyncServiceAddin::name()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool is_configured() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool is_supported() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool save_configuration() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual gnote::sync::SyncServer::Ptr create_sync_server() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual std::string id() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual std::string name() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void post_sync_cleanup() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void reset_configuration() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
filesystemsyncservice::FileSystemSyncServiceAddin::post_sync_cleanup	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::post_sync_cleanup()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::reset_configuration	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::reset_configuration()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::save_configuration	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::save_configuration()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceAddin::shutdown	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::shutdown()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
filesystemsyncservice::FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^class FileSystemSyncServiceModule$/;"	c	namespace:filesystemsyncservice	inherits:sharp::DynamicModule
filesystemsyncservice::FileSystemSyncServiceModule::FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^FileSystemSyncServiceModule::FileSystemSyncServiceModule()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceModule	signature:()
filesystemsyncservice::FileSystemSyncServiceModule::FileSystemSyncServiceModule	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  FileSystemSyncServiceModule();$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceModule	access:public	signature:()
filesystemsyncservice_la_LIBADD	src/addins/filesystemsyncservice/Makefile	/^filesystemsyncservice_la_LIBADD =$/;"	m
filesystemsyncservice_la_OBJECTS	src/addins/filesystemsyncservice/Makefile	/^filesystemsyncservice_la_OBJECTS =  \\$/;"	m
filesystemsyncservice_la_SOURCES	src/addins/filesystemsyncservice/Makefile	/^filesystemsyncservice_la_SOURCES = filesystemsyncserviceaddin.hpp filesystemsyncserviceaddin.cpp \\$/;"	m
fill	src/preferencesdialog.cpp	/^    void fill(Gtk::Label &);$/;"	p	class:gnote::AddinInfoDialog	file:	access:private	signature:(Gtk::Label &)
fill	src/preferencesdialog.cpp	/^  void AddinInfoDialog::fill(Gtk::Label & info_label)$/;"	f	class:gnote::AddinInfoDialog	signature:(Gtk::Label & info_label)
filter_by_search	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_by_search(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
filter_by_search	src/searchnoteswidget.hpp	/^  bool filter_by_search(const Note::Ptr &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr &)
filter_by_tag	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_by_tag(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
filter_by_tag	src/searchnoteswidget.hpp	/^  bool filter_by_tag(const Note::Ptr &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr &)
filter_func	libtomboy/tomboykeybinder.c	/^filter_func (GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)$/;"	f	file:	signature:(GdkXEvent *gdk_xevent, GdkEvent *event, gpointer data)
filter_notebooks	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::filter_notebooks(const Gtk::TreeIter & iter)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter & iter)
filter_notebooks	src/notebooks/notebookmanager.hpp	/^  static bool filter_notebooks(const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &)
filter_notebooks_to_display	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::filter_notebooks_to_display(const Gtk::TreeIter & iter)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter & iter)
filter_notebooks_to_display	src/notebooks/notebookmanager.hpp	/^  bool filter_notebooks_to_display(const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &)
filter_notes	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_notes(const Gtk::TreeIter & iter)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & iter)
filter_notes	src/searchnoteswidget.hpp	/^  bool filter_notes(const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &)
final	src/base/macros.hpp	50;"	d
find	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find(const Glib::ustring & linked_title) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & linked_title) const
find	src/notemanagerbase.hpp	/^  NoteBase::Ptr find(const Glib::ustring &) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring &) const
find_action_by_name	src/actionmanager.cpp	/^  Glib::RefPtr<Gtk::Action> ActionManager::find_action_by_name(const std::string & n) const$/;"	f	class:gnote::ActionManager	signature:(const std::string & n) const
find_action_by_name	src/actionmanager.hpp	/^  Glib::RefPtr<Gtk::Action> find_action_by_name(const std::string & n) const;$/;"	p	class:gnote::ActionManager	access:public	signature:(const std::string & n) const
find_by_uri	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find_by_uri(const std::string & uri) const$/;"	f	class:gnote::NoteManagerBase	signature:(const std::string & uri) const
find_by_uri	src/notemanagerbase.hpp	/^  NoteBase::Ptr find_by_uri(const std::string &) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const std::string &) const
find_depth_tag	src/notebuffer.cpp	/^  DepthNoteTag::Ptr NoteBuffer::find_depth_tag(Gtk::TextIter & iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter)
find_depth_tag	src/notebuffer.hpp	/^  DepthNoteTag::Ptr find_depth_tag(Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter &)
find_first_executable_in_path	src/synchronization/syncutils.cpp	/^  std::string SyncUtils::find_first_executable_in_path(const std::string & executableName)$/;"	f	class:gnote::sync::SyncUtils	signature:(const std::string & executableName)
find_first_executable_in_path	src/synchronization/syncutils.cpp	/^  std::string SyncUtils::find_first_executable_in_path(const std::vector<std::string> & executableNames)$/;"	f	class:gnote::sync::SyncUtils	signature:(const std::vector<std::string> & executableNames)
find_first_executable_in_path	src/synchronization/syncutils.hpp	/^    std::string find_first_executable_in_path(const std::string & executableName);$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:(const std::string & executableName)
find_first_executable_in_path	src/synchronization/syncutils.hpp	/^    std::string find_first_executable_in_path(const std::vector<std::string> & executableNames);$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:(const std::vector<std::string> & executableNames)
find_match_count_in_note	src/search.cpp	/^  int Search::find_match_count_in_note(Glib::ustring note_text,$/;"	f	class:gnote::Search	signature:(Glib::ustring note_text, const std::vector<std::string> & words, bool match_case)
find_match_count_in_note	src/search.hpp	/^  int find_match_count_in_note(Glib::ustring note_text, const std::vector<std::string> &,$/;"	p	class:gnote::Search	access:public	signature:(Glib::ustring note_text, const std::vector<std::string> &, bool match_case)
find_matches	src/trie.hpp	/^  typename TrieHit<value_t>::ListPtr find_matches (const Glib::ustring & haystack)$/;"	f	class:gnote::TrieTree	access:public	signature:(const Glib::ustring & haystack)
find_matches_in_buffer	src/notewindow.cpp	/^  void NoteFindHandler::find_matches_in_buffer(const Glib::RefPtr<NoteBuffer> & buffer, $/;"	f	class:gnote::NoteFindHandler	signature:(const Glib::RefPtr<NoteBuffer> & buffer, const std::vector<Glib::ustring> & words, std::list<NoteFindHandler::Match> & matches)
find_matches_in_buffer	src/notewindow.hpp	/^  void find_matches_in_buffer(const Glib::RefPtr<NoteBuffer> & buffer, $/;"	p	class:gnote::NoteFindHandler	access:private	signature:(const Glib::RefPtr<NoteBuffer> & buffer, const std::vector<Glib::ustring> & words, std::list<Match> & matches)
find_note_by_uuid	src/synchronization/syncmanager.cpp	/^  NoteBase::Ptr SyncManager::find_note_by_uuid(const std::string & uuid)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & uuid)
find_note_by_uuid	src/synchronization/syncmanager.hpp	/^    NoteBase::Ptr find_note_by_uuid(const std::string & uuid);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const std::string & uuid)
find_password	src/gnome_keyring/ring.cpp	/^std::string Ring::find_password(const std::map<std::string, std::string> & atts)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & atts)
find_password	src/gnome_keyring/ring.hpp	/^  static std::string find_password(const std::map<std::string, std::string> & atts);$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::map<std::string, std::string> & atts)
find_state_transition	src/trie.hpp	/^  static TrieStatePtr find_state_transition(const TrieStatePtr & state,$/;"	f	class:gnote::TrieTree	access:public	signature:(const TrieStatePtr & state, gunichar value)
find_template_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::find_template_note() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
find_template_note	src/notebooks/notebook.hpp	/^  Note::Ptr find_template_note() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
find_template_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find_template_note() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
find_template_note	src/notemanagerbase.hpp	/^  NoteBase::Ptr find_template_note() const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:() const
find_trie_matches	src/notemanagerbase.cpp	/^TrieHit<NoteBase::WeakPtr>::ListPtr NoteManagerBase::find_trie_matches(const Glib::ustring & match)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & match)
find_trie_matches	src/notemanagerbase.hpp	/^  TrieHit<NoteBase::WeakPtr>::ListPtr find_trie_matches(const Glib::ustring &);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring &)
first_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::first_run(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
first_run	src/addins/tomboyimport/tomboyimportaddin.cpp	/^bool TomboyImportAddin::first_run(gnote::NoteManager & manager)$/;"	f	class:tomboyimport::TomboyImportAddin	signature:(gnote::NoteManager & manager)
first_run	src/importaddin.hpp	/^  virtual bool first_run(NoteManager & manager) = 0;$/;"	p	class:gnote::ImportAddin	access:public	signature:(NoteManager & manager)
first_run	src/notemanagerbase.cpp	/^bool NoteManagerBase::first_run() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
first_run	src/notemanagerbase.hpp	/^  bool first_run() const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:() const
fixedwidth	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^namespace fixedwidth {$/;"	n	file:
fixedwidth	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^namespace fixedwidth {$/;"	n
fixedwidth	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^namespace fixedwidth {$/;"	n	file:
fixedwidth	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^namespace fixedwidth {$/;"	n
fixedwidth	src/addins/fixedwidth/fixedwidthtag.hpp	/^namespace fixedwidth {$/;"	n
fixedwidth::DECLARE_MODULE	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  DECLARE_MODULE(FixedWidthModule);$/;"	p	namespace:fixedwidth	signature:(FixedWidthModule)
fixedwidth::FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^class FixedWidthMenuItem$/;"	c	namespace:fixedwidth	inherits:Gtk::CheckMenuItem
fixedwidth::FixedWidthMenuItem::FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  FixedWidthMenuItem::FixedWidthMenuItem(gnote::NoteAddin *addin)$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:(gnote::NoteAddin *addin)
fixedwidth::FixedWidthMenuItem::FixedWidthMenuItem	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  FixedWidthMenuItem(gnote::NoteAddin *);$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:public	signature:(gnote::NoteAddin *)
fixedwidth::FixedWidthMenuItem::m_event_freeze	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  bool m_event_freeze;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:private
fixedwidth::FixedWidthMenuItem::m_note_addin	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  gnote::NoteAddin * m_note_addin;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:private
fixedwidth::FixedWidthMenuItem::menu_shown	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::menu_shown()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
fixedwidth::FixedWidthMenuItem::menu_shown	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void menu_shown();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
fixedwidth::FixedWidthMenuItem::on_activate	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_activate()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
fixedwidth::FixedWidthMenuItem::on_note_backgrounded	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_note_backgrounded()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
fixedwidth::FixedWidthMenuItem::on_note_backgrounded	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void on_note_backgrounded();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
fixedwidth::FixedWidthMenuItem::on_note_foregrounded	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_note_foregrounded()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
fixedwidth::FixedWidthMenuItem::on_note_foregrounded	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void on_note_foregrounded();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
fixedwidth::FixedWidthMenuItem::override	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:protected
fixedwidth::FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  class FixedWidthModule$/;"	c	namespace:fixedwidth	inherits:sharp::DynamicModule
fixedwidth::FixedWidthModule::FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  FixedWidthModule::FixedWidthModule()$/;"	f	class:fixedwidth::FixedWidthModule	signature:()
fixedwidth::FixedWidthModule::FixedWidthModule	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    FixedWidthModule();$/;"	p	class:fixedwidth::FixedWidthModule	access:public	signature:()
fixedwidth::FixedWidthNoteAddin	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^  class FixedWidthNoteAddin$/;"	c	namespace:fixedwidth	inherits:gnote::NoteAddin
fixedwidth::FixedWidthNoteAddin::create	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    static FixedWidthNoteAddin* create()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	access:public	signature:()
fixedwidth::FixedWidthNoteAddin::initialize	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::initialize ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
fixedwidth::FixedWidthNoteAddin::m_tag	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:private
fixedwidth::FixedWidthNoteAddin::on_note_opened	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::on_note_opened ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
fixedwidth::FixedWidthNoteAddin::override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
fixedwidth::FixedWidthNoteAddin::override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
fixedwidth::FixedWidthNoteAddin::override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
fixedwidth::FixedWidthNoteAddin::shutdown	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::shutdown ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
fixedwidth::FixedWidthTag	src/addins/fixedwidth/fixedwidthtag.hpp	/^class FixedWidthTag$/;"	c	namespace:fixedwidth	inherits:gnote::NoteTag
fixedwidth::FixedWidthTag::FixedWidthTag	src/addins/fixedwidth/fixedwidthtag.hpp	/^  FixedWidthTag()$/;"	f	class:fixedwidth::FixedWidthTag	access:public	signature:()
fixedwidth_la_LIBADD	src/addins/fixedwidth/Makefile	/^fixedwidth_la_LIBADD =$/;"	m
fixedwidth_la_OBJECTS	src/addins/fixedwidth/Makefile	/^fixedwidth_la_OBJECTS = $(am_fixedwidth_la_OBJECTS)$/;"	m
fixedwidth_la_SOURCES	src/addins/fixedwidth/Makefile	/^fixedwidth_la_SOURCES = fixedwidthnoteaddin.hpp fixedwidthnoteaddin.cpp \\$/;"	m
font_button	src/preferencesdialog.hpp	/^  Gtk::Button *font_button;$/;"	m	class:gnote::PreferencesDialog	access:private
font_face	src/preferencesdialog.hpp	/^  Gtk::Label  *font_face;$/;"	m	class:gnote::PreferencesDialog	access:private
font_size	src/preferencesdialog.hpp	/^  Gtk::Label  *font_size;$/;"	m	class:gnote::PreferencesDialog	access:private
font_size_activated	src/notewindow.cpp	/^  void NoteTextMenu::font_size_activated(Gtk::RadioMenuItem *item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::RadioMenuItem *item)
font_size_activated	src/notewindow.hpp	/^  void font_size_activated(Gtk::RadioMenuItem *item);$/;"	p	class:gnote::NoteTextMenu	access:private	signature:(Gtk::RadioMenuItem *item)
font_style_clicked	src/notewindow.cpp	/^  void NoteTextMenu::font_style_clicked(Gtk::CheckMenuItem * item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::CheckMenuItem * item)
font_style_clicked	src/notewindow.hpp	/^  void font_style_clicked(Gtk::CheckMenuItem * item);$/;"	p	class:gnote::NoteTextMenu	access:private	signature:(Gtk::CheckMenuItem * item)
foreground	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::foreground()$/;"	f	class:statistics::StatisticsWidget	signature:()
foreground	src/mainwindowembeds.cpp	/^void EmbeddableWidget::foreground()$/;"	f	class:gnote::EmbeddableWidget	signature:()
foreground	src/mainwindowembeds.hpp	/^  virtual void foreground();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
foreground	src/notewindow.cpp	/^  void NoteWindow::foreground()$/;"	f	class:gnote::NoteWindow	signature:()
foreground	src/searchnoteswidget.cpp	/^void SearchNotesWidget::foreground()$/;"	f	class:gnote::SearchNotesWidget	signature:()
foreground_embedded	src/mainwindowembeds.hpp	/^  virtual void foreground_embedded(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
foreground_embedded	src/recentchanges.cpp	/^  void NoteRecentChanges::foreground_embedded(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
format	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    Gtk::TreeModelColumn<std::string> format;$/;"	m	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public
formatted	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    Gtk::TreeModelColumn<std::string> formatted;$/;"	m	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public
freeze	tools/DBusClientTest.py	/^def freeze():$/;"	f	access:public
freeze_undo	src/undo.hpp	/^  void freeze_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
from_iso8601	src/sharp/datetime.cpp	/^  DateTime DateTime::from_iso8601(const std::string &iso8601)$/;"	f	class:sharp::DateTime	signature:(const std::string &iso8601)
from_iso8601	src/sharp/datetime.hpp	/^  static DateTime from_iso8601(const std::string &);$/;"	p	class:sharp::DateTime	access:public	signature:(const std::string &)
func_append	config.status	/^func_append ()\\$/;"	f
func_append	configure	/^func_append ()\\$/;"	f
func_append	libtool	/^func_append ()$/;"	f
func_append	ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	config.status	/^func_append_quoted ()\\$/;"	f
func_append_quoted	configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	libtool	/^func_append_quoted ()$/;"	f
func_append_quoted	ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	config.status	/^func_arith ()\\$/;"	f
func_arith	configure	/^func_arith ()\\$/;"	f
func_arith	libtool	/^func_arith ()$/;"	f
func_arith	ltmain.sh	/^func_arith ()$/;"	f
func_basename	config.status	/^func_basename ()\\$/;"	f
func_basename	configure	/^func_basename ()\\$/;"	f
func_basename	libtool	/^func_basename ()$/;"	f
func_basename	ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_config	libtool	/^func_config ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libtool	/^func_cygpath ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	config.status	/^func_dirname ()\\$/;"	f
func_dirname	configure	/^func_dirname ()\\$/;"	f
func_dirname	libtool	/^func_dirname ()$/;"	f
func_dirname	ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	config.status	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	libtool	/^func_dirname_and_basename ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	libtool	/^func_echo ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	libtool	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	libtool	/^func_error ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	libtool	/^func_exec_program ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	src/gnote	/^func_exec_program ()$/;"	f
func_exec_program_core	libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	src/gnote	/^func_exec_program_core ()$/;"	f
func_execute_cmds	libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	src/gnote	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	libtool	/^func_features ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	libtool	/^func_grep ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	libtool	/^func_help ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	config.status	/^func_len ()\\$/;"	f
func_len	configure	/^func_len ()\\$/;"	f
func_len	libtool	/^func_len ()$/;"	f
func_len	ltmain.sh	/^func_len ()$/;"	f
func_lo2o	config.status	/^func_lo2o ()\\$/;"	f
func_lo2o	configure	/^func_lo2o ()\\$/;"	f
func_lo2o	libtool	/^func_lo2o ()$/;"	f
func_lo2o	ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	src/gnote	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	libtool	/^func_mode_help ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	libtool	/^func_mode_install ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	libtool	/^func_mode_link ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	src/gnote	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	libtool	/^func_relative_path ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	libtool	/^func_show_eval ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	libtool	/^func_source ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	config.status	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	libtool	/^func_split_long_opt ()$/;"	f
func_split_long_opt	ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	config.status	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	libtool	/^func_split_short_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	config.status	/^func_stripname ()\\$/;"	f
func_stripname	configure	/^func_stripname ()\\$/;"	f
func_stripname	libtool	/^func_stripname ()$/;"	f
func_stripname	ltmain.sh	/^func_stripname ()$/;"	f
func_stripname_cnf	configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	libtool	/^func_usage ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	libtool	/^func_verbose ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	libtool	/^func_version ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	libtool	/^func_warning ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	config.status	/^func_xform ()\\$/;"	f
func_xform	configure	/^func_xform ()\\$/;"	f
func_xform	libtool	/^func_xform ()$/;"	f
func_xform	ltmain.sh	/^func_xform ()$/;"	f
fuse_mount_directory_error	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::fuse_mount_directory_error()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
fuse_mount_directory_error	src/synchronization/fusesyncserviceaddin.cpp	/^std::string FuseSyncServiceAddin::fuse_mount_directory_error()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
fuse_mount_directory_error	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_directory_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
fuse_mount_exe_name	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::fuse_mount_exe_name()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
fuse_mount_exe_name	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_exe_name() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
fuse_mount_timeout_error	src/synchronization/fusesyncserviceaddin.cpp	/^std::string FuseSyncServiceAddin::fuse_mount_timeout_error()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
fuse_mount_timeout_error	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_timeout_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
get_absolute_uri	src/sharp/uri.cpp	/^  std::string Uri::get_absolute_uri() const$/;"	f	class:sharp::Uri	signature:() const
get_absolute_uri	src/sharp/uri.hpp	/^    std::string get_absolute_uri() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
get_accel_group	src/notewindow.hpp	/^  const Glib::RefPtr<Gtk::AccelGroup> & get_accel_group()$/;"	f	class:gnote::NoteWindow	access:public	signature:()
get_accel_group	src/tray.cpp	/^  KeybindingToAccel::get_accel_group()$/;"	f	class:gnote::KeybindingToAccel	signature:()
get_accel_group	src/tray.hpp	/^  static Glib::RefPtr<Gtk::AccelGroup> get_accel_group();$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:()
get_accel_keys	src/keybinder.hpp	/^  virtual bool get_accel_keys(const std::string & prefs_path, guint & keyval, $/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & prefs_path, guint & keyval, Gdk::ModifierType & mods)
get_accel_keys	src/xkeybinder.cpp	/^  bool XKeybinder::get_accel_keys(const std::string & key, guint & keyval, $/;"	f	class:gnote::XKeybinder	signature:(const std::string & key, guint & keyval, Gdk::ModifierType & mods)
get_active_window	src/gnote.cpp	/^  MainWindow *Gnote::get_active_window()$/;"	f	class:gnote::Gnote	signature:()
get_active_window	src/gnote.hpp	/^  MainWindow *get_active_window();$/;"	p	class:gnote::Gnote	access:private	signature:()
get_addin_category_name	src/sharp/addinstreemodel.cpp	/^  std::string AddinsTreeModel::get_addin_category_name(gnote::AddinCategory category)$/;"	f	class:sharp::AddinsTreeModel	signature:(gnote::AddinCategory category)
get_addin_category_name	src/sharp/addinstreemodel.hpp	/^  static std::string get_addin_category_name(gnote::AddinCategory category);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(gnote::AddinCategory category)
get_addin_id	src/preferencesdialog.cpp	/^    const std::string & get_addin_id() const$/;"	f	class:gnote::AddinInfoDialog	access:public	signature:() const
get_addin_info	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_addin_info(const AbstractAddin & addin) const$/;"	f	class:gnote::AddinManager	signature:(const AbstractAddin & addin) const
get_addin_info	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_addin_info(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
get_addin_info	src/addinmanager.hpp	/^  AddinInfo get_addin_info(const AbstractAddin & addin) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const AbstractAddin & addin) const
get_addin_info	src/addinmanager.hpp	/^  AddinInfo get_addin_info(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
get_addin_infos	src/addinmanager.hpp	/^  const AddinInfoMap & get_addin_infos() const$/;"	f	class:gnote::AddinManager	access:public	signature:() const
get_addin_manager	src/notemanager.hpp	/^    AddinManager & get_addin_manager()$/;"	f	class:gnote::NoteManager	access:public	signature:()
get_all_note_uuids	src/synchronization/filesystemsyncserver.cpp	/^std::list<std::string> FileSystemSyncServer::get_all_note_uuids()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
get_all_note_uuids	src/synchronization/isyncmanager.hpp	/^  virtual std::list<std::string> get_all_note_uuids() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
get_app_action	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::SimpleAction> ActionManager::get_app_action(const std::string & name) const$/;"	f	class:gnote::ActionManager	signature:(const std::string & name) const
get_app_action	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> get_app_action(const std::string & name) const = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name) const
get_app_actions	src/actionmanager.hpp	/^  const std::vector<Glib::RefPtr<Gio::SimpleAction> > & get_app_actions() const$/;"	f	class:gnote::ActionManager	access:public	signature:() const
get_app_menu	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::Menu> ActionManager::get_app_menu() const$/;"	f	class:gnote::ActionManager	signature:() const
get_app_menu	src/actionmanager.hpp	/^  Glib::RefPtr<Gio::Menu> get_app_menu() const;$/;"	p	class:gnote::ActionManager	access:public	signature:() const
get_application_addin	src/addinmanager.cpp	/^  ApplicationAddin * AddinManager::get_application_addin($/;"	f	class:gnote::AddinManager	signature:( const std::string & id) const
get_application_addin	src/addinmanager.hpp	/^  ApplicationAddin *get_application_addin(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
get_attribute	src/addininfo.cpp	/^Glib::ustring AddinInfo::get_attribute(const Glib::ustring & att)$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & att)
get_attribute	src/addininfo.hpp	/^  Glib::ustring get_attribute(const Glib::ustring & att);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const Glib::ustring & att)
get_attribute	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_attribute(const char * name)$/;"	f	class:sharp::XmlReader	signature:(const char * name)
get_attribute	src/sharp/xmlreader.hpp	/^  std::string    get_attribute(const char *);$/;"	p	class:sharp::XmlReader	access:public	signature:(const char *)
get_attributes	src/notetag.hpp	/^  AttributeMap & get_attributes()$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:()
get_attributes	src/notetag.hpp	/^  const AttributeMap & get_attributes() const$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:() const
get_background	src/notetag.cpp	/^  Gdk::Color NoteTag::get_background() const$/;"	f	class:gnote::NoteTag	signature:() const
get_background	src/notetag.hpp	/^  Gdk::Color get_background() const;$/;"	p	class:gnote::NoteTag	access:private	signature:() const
get_backlink_menu_items	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::get_backlink_menu_items(std::list<BacklinkMenuItem*> & items)$/;"	f	class:backlinks::BacklinksNoteAddin	signature:(std::list<BacklinkMenuItem*> & items)
get_backlink_menu_items	src/addins/backlinks/backlinksnoteaddin.hpp	/^  void get_backlink_menu_items(std::list<BacklinkMenuItem*> & items);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(std::list<BacklinkMenuItem*> & items)
get_block_extents	src/notebuffer.cpp	/^  void NoteBuffer::get_block_extents(Gtk::TextIter & start, Gtk::TextIter & end_iter,$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start, Gtk::TextIter & end_iter, int threshold, const Glib::RefPtr<Gtk::TextTag> & avoid_tag)
get_block_extents	src/notebuffer.hpp	/^  static void get_block_extents(Gtk::TextIter &, Gtk::TextIter &,$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter &, Gtk::TextIter &, int threshold, const Glib::RefPtr<Gtk::TextTag> & avoid_tag)
get_broken_link_tag	src/notetag.hpp	/^  NoteTag::Ptr get_broken_link_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
get_buffer	src/note.cpp	/^  const Glib::RefPtr<NoteBuffer> & Note::get_buffer()$/;"	f	class:gnote::Note	signature:()
get_buffer	src/note.hpp	/^  const Glib::RefPtr<NoteBuffer> & get_buffer();$/;"	p	class:gnote::Note	access:public	signature:()
get_buffer	src/noteaddin.hpp	/^  const NoteBuffer::Ptr & get_buffer() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
get_bug_url	src/addins/bugzilla/bugzillalink.cpp	/^  std::string BugzillaLink::get_bug_url() const$/;"	f	class:bugzilla::BugzillaLink	signature:() const
get_bug_url	src/addins/bugzilla/bugzillalink.hpp	/^  std::string get_bug_url() const;$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:() const
get_can_redo	src/undo.hpp	/^  bool get_can_redo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
get_can_undo	src/undo.hpp	/^  bool get_can_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
get_change_type	src/notetag.cpp	/^  ChangeType NoteTagTable::get_change_type(const Glib::RefPtr<Gtk::TextTag> &tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> &tag)
get_change_type	src/notetag.hpp	/^  ChangeType get_change_type(const Glib::RefPtr<Gtk::TextTag> &tag);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &tag)
get_chop	src/undo.hpp	/^  const utils::TextRange & get_chop() const$/;"	f	class:gnote::SplitterAction	access:public	signature:() const
get_column_note	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<NoteBase::Ptr> & ModelColumnRecord::get_column_note()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_note	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<NoteBase::Ptr> & get_column_note() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_column_note_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_note_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_note_num	src/noterenamedialog.hpp	/^  gint get_column_note_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_column_selected	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<bool> & ModelColumnRecord::get_column_selected()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_selected	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<bool> & get_column_selected() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_column_selected_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_selected_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_selected_num	src/noterenamedialog.hpp	/^  gint get_column_selected_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_column_title	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<std::string> & ModelColumnRecord::get_column_title()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_title	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<std::string> & get_column_title() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_column_title_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_title_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
get_column_title_num	src/noterenamedialog.hpp	/^  gint get_column_title_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
get_complete_note_xml	src/notebase.cpp	/^Glib::ustring NoteBase::get_complete_note_xml()$/;"	f	class:gnote::NoteBase	signature:()
get_complete_note_xml	src/notebase.hpp	/^  Glib::ustring get_complete_note_xml();$/;"	p	class:gnote::NoteBase	access:public	signature:()
get_config_settings	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::get_config_settings(std::string & syncPath)$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:(std::string & syncPath)
get_config_settings	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool get_config_settings(std::string & syncPath);$/;"	p	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private	signature:(std::string & syncPath)
get_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::get_config_settings(std::string & url, std::string & username, std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(std::string & url, std::string & username, std::string & password)
get_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool get_config_settings(std::string & url, std::string & username, std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(std::string & url, std::string & username, std::string & password)
get_configured_sync_service	src/synchronization/syncmanager.cpp	/^  SyncServiceAddin *SyncManager::get_configured_sync_service()$/;"	f	class:gnote::sync::SyncManager	signature:()
get_configured_sync_service	src/synchronization/syncmanager.hpp	/^    virtual SyncServiceAddin *get_configured_sync_service();$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:()
get_content	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_content($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const Glib::Date & date, const gnote::NoteManager & manager)
get_content	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_content(const Glib::Date & date,$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const Glib::Date & date, const gnote::NoteManager & manager)
get_content_without_title	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_content_without_title($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const std::string & content)
get_content_without_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_content_without_title($/;"	p	class:noteoftheday::NoteOfTheDay	access:private	signature:( const std::string & content)
get_depth	src/notetag.hpp	/^  int get_depth() const$/;"	f	class:gnote::DepthNoteTag	access:public	signature:() const
get_depth_tag	src/notetag.cpp	/^  DepthNoteTag::Ptr NoteTagTable::get_depth_tag(int depth, Pango::Direction direction)$/;"	f	class:gnote::NoteTagTable	signature:(int depth, Pango::Direction direction)
get_depth_tag	src/notetag.hpp	/^  DepthNoteTag::Ptr get_depth_tag(int depth, Pango::Direction direction);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(int depth, Pango::Direction direction)
get_direction	src/notetag.hpp	/^  Pango::Direction get_direction() const$/;"	f	class:gnote::DepthNoteTag	access:public	signature:() const
get_display_name	src/tray.cpp	/^  std::string NoteMenuItem::get_display_name(const Note::Ptr & note)$/;"	f	class:gnote::NoteMenuItem	signature:(const Note::Ptr & note)
get_display_name	src/tray.hpp	/^  static std::string get_display_name(const Note::Ptr & n);$/;"	p	class:gnote::NoteMenuItem	access:private	signature:(const Note::Ptr & n)
get_dynamic_tag	src/notebuffer.cpp	/^  DynamicNoteTag::ConstPtr NoteBuffer::get_dynamic_tag (const std::string  & tag_name, $/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name, const Gtk::TextIter & iter)
get_dynamic_tag	src/notebuffer.hpp	/^  DynamicNoteTag::ConstPtr get_dynamic_tag(const std::string  & tag_name, const Gtk::TextIter & iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string & tag_name, const Gtk::TextIter & iter)
get_element_name	src/notetag.hpp	/^  const std::string & get_element_name() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
get_enable_auto_bulleted_lists	src/notebuffer.cpp	/^  bool NoteBuffer::get_enable_auto_bulleted_lists() const$/;"	f	class:gnote::NoteBuffer	signature:() const
get_enable_auto_bulleted_lists	src/notebuffer.hpp	/^  bool get_enable_auto_bulleted_lists() const;$/;"	p	class:gnote::NoteBuffer	access:public	signature:() const
get_enabled_addins	src/addinmanager.cpp	/^  void AddinManager::get_enabled_addins(std::list<std::string> & addins) const$/;"	f	class:gnote::AddinManager	signature:(std::list<std::string> & addins) const
get_enabled_addins	src/addinmanager.hpp	/^  void get_enabled_addins(std::list<std::string> & addins) const;$/;"	p	class:gnote::AddinManager	access:private	signature:(std::list<std::string> & addins) const
get_export_linked	src/addins/exporttohtml/exporttohtmldialog.cpp	/^bool ExportToHtmlDialog::get_export_linked() const$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:() const
get_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  bool get_export_linked() const;$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:() const
get_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.cpp	/^bool ExportToHtmlDialog::get_export_linked_all() const$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:() const
get_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  bool get_export_linked_all() const;$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:() const
get_extension	src/sharp/fileinfo.cpp	/^  std::string FileInfo::get_extension() const$/;"	f	class:sharp::FileInfo	signature:() const
get_extension	src/sharp/fileinfo.hpp	/^  std::string get_extension() const;$/;"	p	class:sharp::FileInfo	access:public	signature:() const
get_extents	src/notetag.cpp	/^  void NoteTag::get_extents(const Gtk::TextIter & iter, Gtk::TextIter & start,$/;"	f	class:gnote::NoteTag	signature:(const Gtk::TextIter & iter, Gtk::TextIter & start, Gtk::TextIter & end)
get_extents	src/notetag.hpp	/^  void get_extents(const Gtk::TextIter & iter, Gtk::TextIter & start,$/;"	p	class:gnote::NoteTag	access:public	signature:(const Gtk::TextIter & iter, Gtk::TextIter & start, Gtk::TextIter & end)
get_extra_widget	src/utils.hpp	/^      Gtk::Widget * get_extra_widget() const$/;"	f	class:gnote::utils::HIGMessageDialog	access:public	signature:() const
get_find_handler	src/notewindow.hpp	/^  NoteFindHandler & get_find_handler()$/;"	f	class:gnote::NoteWindow	access:public	signature:()
get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::vector<std::string> WebDavSyncServiceAddin::get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, bool fromStoredValues)
get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::vector<std::string> WebDavSyncServiceAddin::get_fuse_mount_exe_args(const std::string & mountPath, const std::string & url,$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, const std::string & url, const std::string & username, const std::string & password, bool acceptSsl)
get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, const std::string & url,$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(const std::string & mountPath, const std::string & url, const std::string & username, const std::string & password, bool acceptSsl)
get_fuse_mount_exe_args	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues) = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:(const std::string & mountPath, bool fromStoredValues)
get_fuse_mount_exe_args_for_display	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, bool fromStoredValues)
get_fuse_mount_exe_args_for_display	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues) = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:(const std::string & mountPath, bool fromStoredValues)
get_gnome_document_font_description	src/noteeditor.cpp	/^  Pango::FontDescription NoteEditor::get_gnome_document_font_description()$/;"	f	class:gnote::NoteEditor	signature:()
get_gnome_document_font_description	src/noteeditor.hpp	/^  Pango::FontDescription get_gnome_document_font_description();$/;"	p	class:gnote::NoteEditor	access:private	signature:()
get_hash_code	src/notebase.cpp	/^int NoteBase::get_hash_code() const$/;"	f	class:gnote::NoteBase	signature:() const
get_hash_code	src/notebase.hpp	/^  int get_hash_code() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
get_heading_level_for_range	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^Heading::Type TableofcontentsNoteAddin::get_heading_level_for_range (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::TextIter start, Gtk::TextIter end)
get_heading_level_for_range	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Heading::Type get_heading_level_for_range (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
get_host	src/sharp/uri.cpp	/^  std::string Uri::get_host() const$/;"	f	class:sharp::Uri	signature:() const
get_host	src/sharp/uri.hpp	/^    std::string get_host() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
get_host_window	src/noteaddin.cpp	/^  Gtk::Window *NoteAddin::get_host_window() const$/;"	f	class:gnote::NoteAddin	signature:() const
get_host_window	src/noteaddin.hpp	/^  Gtk::Window *get_host_window() const;$/;"	p	class:gnote::NoteAddin	access:public	signature:() const
get_icon	src/dbus/searchprovider.cpp	/^gchar *SearchProvider::get_icon()$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:()
get_icon	src/dbus/searchprovider.hpp	/^  gchar *get_icon();$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:()
get_icon	src/iconmanager.cpp	/^Glib::RefPtr<Gdk::Pixbuf> IconManager::get_icon(const std::string & name, int size)$/;"	f	class:gnote::IconManager	signature:(const std::string & name, int size)
get_icon	src/iconmanager.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> get_icon(const std::string &, int);$/;"	p	class:gnote::IconManager	access:public	signature:(const std::string &, int)
get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> ActiveNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:()
get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> AllNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:()
get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> PinnedNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:()
get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> UnfiledNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:()
get_icon	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() = 0;$/;"	p	class:gnote::notebooks::SpecialNotebook	access:public	signature:()
get_icon_pin_active	src/notewindow.cpp	/^  Glib::RefPtr<Gio::Icon> NoteWindow::get_icon_pin_active()$/;"	f	class:gnote::NoteWindow	signature:()
get_icon_pin_active	src/notewindow.hpp	/^  static Glib::RefPtr<Gio::Icon> get_icon_pin_active();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
get_icon_pin_down	src/notewindow.cpp	/^  Glib::RefPtr<Gio::Icon> NoteWindow::get_icon_pin_down()$/;"	f	class:gnote::NoteWindow	signature:()
get_icon_pin_down	src/notewindow.hpp	/^  static Glib::RefPtr<Gio::Icon> get_icon_pin_down();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
get_id	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^std::string NoteDirectoryWatcherApplicationAddin::get_id(const std::string & path)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & path)
get_id	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static std::string get_id(const std::string & path);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & path)
get_id_for_addin	src/addinmanager.cpp	/^  std::string get_id_for_addin(const AbstractAddin & addin, const std::map<std::string, AddinType*> & addins)$/;"	f	namespace:gnote::__anon21	signature:(const AbstractAddin & addin, const std::map<std::string, AddinType*> & addins)
get_image	src/notetag.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteTag::get_image() const$/;"	f	class:gnote::NoteTag	signature:() const
get_image	src/notetag.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_image() const;$/;"	p	class:gnote::NoteTag	access:public	signature:() const
get_import_addins	src/addinmanager.cpp	/^  void AddinManager::get_import_addins(std::list<ImportAddin*> & l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<ImportAddin*> & l) const
get_import_addins	src/addinmanager.hpp	/^  void get_import_addins(std::list<ImportAddin*> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<ImportAddin*> &) const
get_info_for_module	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_info_for_module(const std::string & module) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & module) const
get_info_for_module	src/addinmanager.hpp	/^  AddinInfo get_info_for_module(const std::string & module) const;$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & module) const
get_inner_content	src/synchronization/syncutils.cpp	/^  std::string NoteUpdate::get_inner_content(const std::string & full_content_element) const$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::string & full_content_element) const
get_inner_content	src/synchronization/syncutils.hpp	/^    std::string get_inner_content(const std::string & full_content_element) const;$/;"	p	class:gnote::sync::NoteUpdate	access:private	signature:(const std::string & full_content_element) const
get_instance	src/remotecontrolproxy.cpp	/^Glib::RefPtr<RemoteControlClient> RemoteControlProxy::get_instance()$/;"	f	class:gnote::RemoteControlProxy	signature:()
get_instance	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<RemoteControlClient> get_instance();$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:()
get_language	src/watchers.cpp	/^  std::string NoteSpellChecker::get_language()$/;"	f	class:gnote::NoteSpellChecker	signature:()
get_language	src/watchers.hpp	/^    std::string get_language();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
get_language_tag	src/watchers.cpp	/^  Tag::Ptr NoteSpellChecker::get_language_tag()$/;"	f	class:gnote::NoteSpellChecker	signature:()
get_language_tag	src/watchers.hpp	/^    Tag::Ptr get_language_tag();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
get_line	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int get_line() const$/;"	f	class:printnotes::PageBreak	access:public	signature:() const
get_link_tag	src/notetag.hpp	/^  NoteTag::Ptr get_link_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
get_local_paths	src/utils.cpp	/^    void UriList::get_local_paths(std::list<std::string> & paths) const$/;"	f	class:gnote::utils::UriList	signature:(std::list<std::string> & paths) const
get_local_paths	src/utils.hpp	/^      void get_local_paths(std::list<std::string> &) const;$/;"	p	class:gnote::utils::UriList	access:public	signature:(std::list<std::string> &) const
get_main_window	src/gnote.cpp	/^  MainWindow & Gnote::get_main_window()$/;"	f	class:gnote::Gnote	signature:()
get_main_window	src/ignote.hpp	/^  virtual MainWindow & get_main_window() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
get_main_window_actions	src/actionmanager.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > ActionManager::get_main_window_actions($/;"	f	class:gnote::ActionManager	signature:( std::map<int, Glib::RefPtr<Gtk::Action> > & actions)
get_main_window_actions	src/actionmanager.hpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_actions(std::map<int, Glib::RefPtr<Gtk::Action> > & actions);$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions)
get_main_window_search_actions	src/actionmanager.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > ActionManager::get_main_window_search_actions()$/;"	f	class:gnote::ActionManager	signature:()
get_main_window_search_actions	src/iactionmanager.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_search_actions() = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:()
get_menu_position	src/utils.cpp	/^      void get_menu_position (Gtk::Menu * menu,$/;"	f	namespace:gnote::utils::__anon10	signature:(Gtk::Menu * menu, int & x, int & y, bool & push_in)
get_module	src/addinmanager.cpp	/^  sharp::DynamicModule *AddinManager::get_module(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
get_module	src/addinmanager.hpp	/^  sharp::DynamicModule *get_module(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
get_module	src/sharp/addinstreemodel.cpp	/^  sharp::DynamicModule * AddinsTreeModel::get_module(const Gtk::TreeIter & iter)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter)
get_module	src/sharp/addinstreemodel.hpp	/^  sharp::DynamicModule * get_module(const Gtk::TreeIter &);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &)
get_module	src/sharp/modulemanager.cpp	/^  DynamicModule * ModuleManager::get_module(const std::string & module) const$/;"	f	class:sharp::ModuleManager	signature:(const std::string & module) const
get_module	src/sharp/modulemanager.hpp	/^  DynamicModule *get_module(const std::string & module) const;$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::string & module) const
get_module_id	src/sharp/addinstreemodel.cpp	/^  std::string AddinsTreeModel::get_module_id(const Gtk::TreeIter & iter)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter)
get_module_id	src/sharp/addinstreemodel.hpp	/^  std::string get_module_id(const Gtk::TreeIter &);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &)
get_modules	src/sharp/modulemanager.hpp	/^  const ModuleMap & get_modules() const$/;"	f	class:sharp::ModuleManager	access:public	signature:() const
get_name	src/addins/statistics/statisticswidget.cpp	/^std::string StatisticsWidget::get_name() const$/;"	f	class:statistics::StatisticsWidget	signature:() const
get_name	src/mainwindowembeds.hpp	/^  virtual std::string get_name() const = 0;$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:() const
get_name	src/notebooks/notebook.hpp	/^  std::string get_name() const$/;"	f	class:gnote::notebooks::Notebook	access:public	signature:() const
get_name	src/notewindow.cpp	/^  std::string NoteWindow::get_name() const$/;"	f	class:gnote::NoteWindow	signature:() const
get_name	src/searchnoteswidget.cpp	/^std::string SearchNotesWidget::get_name() const$/;"	f	class:gnote::SearchNotesWidget	signature:() const
get_name	src/sharp/fileinfo.cpp	/^  std::string FileInfo::get_name() const$/;"	f	class:sharp::FileInfo	signature:() const
get_name	src/sharp/fileinfo.hpp	/^  std::string get_name() const;$/;"	p	class:sharp::FileInfo	access:public	signature:() const
get_name	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_name()$/;"	f	class:sharp::XmlReader	signature:()
get_name	src/sharp/xmlreader.hpp	/^  std::string    get_name();$/;"	p	class:sharp::XmlReader	access:public	signature:()
get_node_type	src/sharp/xmlreader.cpp	/^  xmlReaderTypes XmlReader::get_node_type()$/;"	f	class:sharp::XmlReader	signature:()
get_node_type	src/sharp/xmlreader.hpp	/^  xmlReaderTypes get_node_type();$/;"	p	class:sharp::XmlReader	access:public	signature:()
get_normalized_name	src/notebooks/notebook.cpp	/^  std::string Notebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
get_normalized_name	src/notebooks/notebook.hpp	/^  virtual std::string get_normalized_name() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string ActiveNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:() const
get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string AllNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:() const
get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string PinnedNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:() const
get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string UnfiledNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:() const
get_note	src/addins/backlinks/backlinkmenuitem.hpp	/^  gnote::NoteBase::Ptr get_note()$/;"	f	class:backlinks::BacklinkMenuItem	access:public	signature:()
get_note	src/noteaddin.hpp	/^  const Note::Ptr & get_note() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
get_note	src/notebooks/notebookmenuitem.hpp	/^      const Note::Ptr & get_note() const$/;"	f	class:gnote::notebooks::NotebookMenuItem	access:public	signature:() const
get_note	src/searchnoteswidget.cpp	/^Note::Ptr SearchNotesWidget::get_note(const Gtk::TreePath & p)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath & p)
get_note	src/searchnoteswidget.hpp	/^  Note::Ptr get_note(const Gtk::TreePath & p);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath & p)
get_note_by_date	src/addins/noteoftheday/noteoftheday.cpp	/^gnote::NoteBase::Ptr NoteOfTheDay::get_note_by_date($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( gnote::NoteManager & manager, const Glib::Date & date)
get_note_by_date	src/addins/noteoftheday/noteoftheday.hpp	/^  static gnote::NoteBase::Ptr get_note_by_date($/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:( gnote::NoteManager & manager, const Glib::Date & date)
get_note_icon	src/addins/backlinks/backlinkmenuitem.cpp	/^Glib::RefPtr<Gdk::Pixbuf> BacklinkMenuItem::get_note_icon()$/;"	f	class:backlinks::BacklinkMenuItem	signature:()
get_note_icon	src/addins/backlinks/backlinkmenuitem.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_note_icon();$/;"	p	class:backlinks::BacklinkMenuItem	access:private	signature:()
get_note_icon	src/searchnoteswidget.cpp	/^Glib::RefPtr<Gdk::Pixbuf> SearchNotesWidget::get_note_icon()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_note_icon	src/searchnoteswidget.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_note_icon();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
get_note_list_context_menu	src/searchnoteswidget.cpp	/^Gtk::Menu *SearchNotesWidget::get_note_list_context_menu()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_note_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *get_note_list_context_menu();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
get_note_path	src/gnote.cpp	/^  std::string Gnote::get_note_path(const std::string & override_path)$/;"	f	class:gnote::Gnote	signature:(const std::string & override_path)
get_note_path	src/gnote.hpp	/^  std::string get_note_path(const std::string & override_path);$/;"	p	class:gnote::Gnote	access:private	signature:(const std::string & override_path)
get_note_template_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::get_note_template_content(const Glib::ustring & title)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title)
get_note_template_content	src/notemanagerbase.hpp	/^  static Glib::ustring get_note_template_content(const Glib::ustring & title);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title)
get_note_updates_since	src/synchronization/filesystemsyncserver.cpp	/^std::map<std::string, NoteUpdate> FileSystemSyncServer::get_note_updates_since(int revision)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int revision)
get_note_updates_since	src/synchronization/isyncmanager.hpp	/^  virtual std::map<std::string, NoteUpdate> get_note_updates_since(int revision) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(int revision)
get_note_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^sharp::XslTransform & ExportToHtmlNoteAddin::get_note_xsl()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
get_note_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  sharp::XslTransform & get_note_xsl();$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:()
get_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook(const std::string & notebookName) const$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName) const
get_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook(const std::string & notebookName) const;$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string & notebookName) const
get_notebook	src/notebooks/notebookmenuitem.hpp	/^      const Notebook::Ptr & get_notebook() const$/;"	f	class:gnote::notebooks::NotebookMenuItem	access:public	signature:() const
get_notebook	src/notebooks/notebooknewnotemenuitem.hpp	/^  Notebook::Ptr get_notebook() const$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:() const
get_notebook_from_note	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook_from_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const NoteBase::Ptr & note)
get_notebook_from_note	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook_from_note(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const NoteBase::Ptr &)
get_notebook_from_tag	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook_from_tag(const Tag::Ptr &tag)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Tag::Ptr &tag)
get_notebook_from_tag	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook_from_tag(const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Tag::Ptr &)
get_notebook_iter	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::get_notebook_iter(const Notebook::Ptr & notebook, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook, Gtk::TreeIter & iter)
get_notebook_iter	src/notebooks/notebookmanager.hpp	/^  bool get_notebook_iter(const Notebook::Ptr &, Gtk::TreeIter & );$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &, Gtk::TreeIter & )
get_notebook_list_context_menu	src/searchnoteswidget.cpp	/^Gtk::Menu *SearchNotesWidget::get_notebook_list_context_menu()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_notebook_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *get_notebook_list_context_menu();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
get_notebook_menu_items	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::get_notebook_menu_items(std::list<NotebookMenuItem*>& items)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(std::list<NotebookMenuItem*>& items)
get_notebook_menu_items	src/notebooks/notebooknoteaddin.hpp	/^    void get_notebook_menu_items(std::list<NotebookMenuItem*> &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(std::list<NotebookMenuItem*> &)
get_notebook_name	src/notebooks/createnotebookdialog.cpp	/^    std::string CreateNotebookDialog::get_notebook_name()$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:()
get_notebook_name	src/notebooks/createnotebookdialog.hpp	/^  std::string get_notebook_name();$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:()
get_notebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_notebooks()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
get_notebooks_with_special_items	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_notebooks_with_special_items()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
get_notes	src/notemanagerbase.hpp	/^  const NoteBase::List & get_notes() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
get_notes	src/noterenamedialog.cpp	/^NoteRenameDialog::MapPtr NoteRenameDialog::get_notes() const$/;"	f	class:gnote::NoteRenameDialog	signature:() const
get_notes	src/noterenamedialog.hpp	/^  MapPtr get_notes() const;$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:() const
get_notes	src/tag.cpp	/^  void Tag::get_notes(std::list<NoteBase*> & l) const$/;"	f	class:gnote::Tag	signature:(std::list<NoteBase*> & l) const
get_notes	src/tag.hpp	/^    void get_notes(std::list<NoteBase*> &) const;$/;"	p	class:gnote::Tag	access:public	signature:(std::list<NoteBase*> &) const
get_notes_linking_to	src/notemanagerbase.cpp	/^NoteBase::List NoteManagerBase::get_notes_linking_to(const Glib::ustring & title) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title) const
get_notes_linking_to	src/notemanagerbase.hpp	/^  NoteBase::List get_notes_linking_to(const Glib::ustring & title) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title) const
get_or_create_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_or_create_notebook(const std::string & notebookName)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName)
get_or_create_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_or_create_notebook(const std::string &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string &)
get_or_create_system_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_or_create_system_tag(const std::string & name) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & name)
get_or_create_system_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_or_create_system_tag (const std::string & tag_name)$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name)
get_or_create_system_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_or_create_system_tag(const std::string & name)$/;"	f	class:test::TagManager	signature:(const std::string & name)
get_or_create_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_or_create_tag(const std::string &) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string &)
get_or_create_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_or_create_tag(const std::string & tag_name)$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name)
get_or_create_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_or_create_tag(const std::string & tag_name)$/;"	f	class:test::TagManager	signature:(const std::string & tag_name)
get_or_create_template_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::get_or_create_template_note()$/;"	f	class:gnote::NoteManager	signature:()
get_or_create_template_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::get_or_create_template_note()$/;"	f	class:gnote::NoteManagerBase	signature:()
get_or_create_template_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr get_or_create_template_note();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
get_owning	src/mainwindow.cpp	/^MainWindow *MainWindow::get_owning(Gtk::Widget & widget)$/;"	f	class:gnote::MainWindow	signature:(Gtk::Widget & widget)
get_owning	src/mainwindow.hpp	/^  static MainWindow *get_owning(Gtk::Widget & widget);$/;"	p	class:gnote::MainWindow	access:public	signature:(Gtk::Widget & widget)
get_owning_window	src/searchnoteswidget.cpp	/^Gtk::Window *SearchNotesWidget::get_owning_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_owning_window	src/searchnoteswidget.hpp	/^  Gtk::Window *get_owning_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
get_palette_foreground	src/notetag.hpp	/^  ContrastPaletteColor get_palette_foreground() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
get_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int get_paragraph() const$/;"	f	class:printnotes::PageBreak	access:public	signature:() const
get_paragraph_attributes	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::get_paragraph_attributes(const Glib::RefPtr<Pango::Layout> & layout,$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Pango::Layout> & layout, double dpiX, int & indentation, Gtk::TextIter & position, const Gtk::TextIter & limit, std::list<Pango::Attribute> & attributes)
get_paragraph_attributes	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void get_paragraph_attributes(const Glib::RefPtr<Pango::Layout> & layout,$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Pango::Layout> & layout, double dpiX, int & indentation, Gtk::TextIter & position, const Gtk::TextIter & limit, std::list<Pango::Attribute> & attributes)
get_pindown_icon	src/tray.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteMenuItem::get_pindown_icon()$/;"	f	class:gnote::NoteMenuItem	signature:()
get_pindown_icon	src/tray.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_pindown_icon();$/;"	p	class:gnote::NoteMenuItem	access:private	signature:()
get_pinup_icon	src/tray.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteMenuItem::get_pinup_icon()$/;"	f	class:gnote::NoteMenuItem	signature:()
get_pinup_icon	src/tray.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_pinup_icon();$/;"	p	class:gnote::NoteMenuItem	access:private	signature:()
get_pref_widget_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::get_pref_widget_settings(std::string & url, std::string & username, std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(std::string & url, std::string & username, std::string & password)
get_pref_widget_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool get_pref_widget_settings(std::string & url, std::string & username, std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(std::string & url, std::string & username, std::string & password)
get_preference_tab_addins	src/addinmanager.cpp	/^  void AddinManager::get_preference_tab_addins(std::list<PreferenceTabAddin *> &l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<PreferenceTabAddin *> &l) const
get_preference_tab_addins	src/addinmanager.hpp	/^  void get_preference_tab_addins(std::list<PreferenceTabAddin *> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<PreferenceTabAddin *> &) const
get_preference_tab_widget	src/preferencetabaddin.hpp	/^    virtual bool get_preference_tab_widget ($/;"	p	class:gnote::PreferenceTabAddin	access:public	signature:( Gtk::Dialog * parent, std::string & tabLabel, Gtk::Widget * preferenceWidget)
get_prefs_dir	src/addinmanager.hpp	/^  std::string & get_prefs_dir()$/;"	f	class:gnote::AddinManager	access:public	signature:()
get_pretty_print_date	src/utils.cpp	/^    std::string get_pretty_print_date(const sharp::DateTime & date, bool show_time)$/;"	f	namespace:gnote::utils	signature:(const sharp::DateTime & date, bool show_time)
get_pretty_print_date	src/utils.cpp	/^    std::string get_pretty_print_date(const sharp::DateTime & date, bool show_time, bool use_12h)$/;"	f	namespace:gnote::utils	signature:(const sharp::DateTime & date, bool show_time, bool use_12h)
get_pretty_print_date	src/utils.hpp	/^    std::string get_pretty_print_date(const sharp::DateTime &, bool show_time);$/;"	p	namespace:gnote::utils	signature:(const sharp::DateTime &, bool show_time)
get_pretty_print_date	src/utils.hpp	/^    std::string get_pretty_print_date(const sharp::DateTime &, bool show_time, bool use_12h);$/;"	p	namespace:gnote::utils	signature:(const sharp::DateTime &, bool show_time, bool use_12h)
get_remote_control	src/remotecontrolproxy.cpp	/^RemoteControl *RemoteControlProxy::get_remote_control()$/;"	f	class:gnote::RemoteControlProxy	signature:()
get_remote_control	src/remotecontrolproxy.hpp	/^  static RemoteControl *get_remote_control();$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:()
get_renamed_note_xml	src/notebase.cpp	/^Glib::ustring NoteArchiver::get_renamed_note_xml(const Glib::ustring & note_xml, $/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & note_xml, const Glib::ustring & old_title, const Glib::ustring & new_title) const
get_renamed_note_xml	src/notebase.hpp	/^  Glib::ustring get_renamed_note_xml(const Glib::ustring &, const Glib::ustring &, const Glib::ustring &) const;$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring &, const Glib::ustring &, const Glib::ustring &) const
get_revision	src/synchronization/gnotesyncclient.cpp	/^  int GnoteSyncClient::get_revision(const NoteBase::Ptr & note)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & note)
get_revision	src/synchronization/isyncmanager.hpp	/^  virtual int get_revision(const NoteBase::Ptr & note) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const NoteBase::Ptr & note)
get_revision_dir_path	src/synchronization/filesystemsyncserver.cpp	/^std::string FileSystemSyncServer::get_revision_dir_path(int rev)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int rev)
get_revision_dir_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string get_revision_dir_path(int rev);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(int rev)
get_right_click_menu	src/tray.cpp	/^  Gtk::Menu * TrayIcon::get_right_click_menu()$/;"	f	class:gnote::TrayIcon	signature:()
get_right_click_menu	src/tray.hpp	/^  Gtk::Menu * get_right_click_menu();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
get_schema_settings	src/preferences.cpp	/^  Glib::RefPtr<Gio::Settings> Preferences::get_schema_settings(const std::string & schema)$/;"	f	class:gnote::Preferences	signature:(const std::string & schema)
get_schema_settings	src/preferences.hpp	/^    Glib::RefPtr<Gio::Settings> get_schema_settings(const std::string & schema);$/;"	p	class:gnote::Preferences	access:public	signature:(const std::string & schema)
get_search_text	src/recentchanges.cpp	/^  std::string NoteRecentChanges::get_search_text()$/;"	f	class:gnote::NoteRecentChanges	signature:()
get_search_text	src/recentchanges.hpp	/^  std::string get_search_text();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
get_selected_addin	src/preferencesdialog.cpp	/^  std::string PreferencesDialog::get_selected_addin()$/;"	f	class:gnote::PreferencesDialog	signature:()
get_selected_addin	src/preferencesdialog.hpp	/^  std::string get_selected_addin();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
get_selected_behavior	src/noterenamedialog.cpp	/^NoteRenameBehavior NoteRenameDialog::get_selected_behavior() const$/;"	f	class:gnote::NoteRenameDialog	signature:() const
get_selected_behavior	src/noterenamedialog.hpp	/^  NoteRenameBehavior get_selected_behavior() const;$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:() const
get_selected_notebook	src/searchnoteswidget.cpp	/^notebooks::Notebook::Ptr SearchNotesWidget::get_selected_notebook() const$/;"	f	class:gnote::SearchNotesWidget	signature:() const
get_selected_notebook	src/searchnoteswidget.hpp	/^  notebooks::Notebook::Ptr get_selected_notebook() const;$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:() const
get_selected_notes	src/searchnoteswidget.cpp	/^Note::List SearchNotesWidget::get_selected_notes()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_selected_notes	src/searchnoteswidget.hpp	/^  Note::List get_selected_notes();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
get_selection	src/notebuffer.cpp	/^  std::string NoteBuffer::get_selection() const$/;"	f	class:gnote::NoteBuffer	signature:() const
get_selection	src/notebuffer.hpp	/^  std::string get_selection() const;$/;"	p	class:gnote::NoteBuffer	access:public	signature:() const
get_shortcut	src/tray.cpp	/^  std::string KeybindingToAccel::get_shortcut (const std::string & key)$/;"	f	class:gnote::KeybindingToAccel	signature:(const std::string & key)
get_shortcut	src/tray.hpp	/^  static std::string get_shortcut (const std::string & key);$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:(const std::string & key)
get_split_offset	src/undo.cpp	/^  int SplitterAction::get_split_offset() const$/;"	f	class:gnote::SplitterAction	signature:() const
get_split_offset	src/undo.hpp	/^  int get_split_offset() const;$/;"	p	class:gnote::SplitterAction	access:protected	signature:() const
get_split_tags	src/undo.hpp	/^  const std::list<TagData> & get_split_tags() const$/;"	f	class:gnote::SplitterAction	access:public	signature:() const
get_sticky_xml_doc	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^xmlDocPtr StickyNoteImportNoteAddin::get_sticky_xml_doc()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
get_sticky_xml_doc	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  xmlDocPtr get_sticky_xml_doc();$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:()
get_sync_service_addin	src/addinmanager.cpp	/^  sync::SyncServiceAddin *AddinManager::get_sync_service_addin(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
get_sync_service_addin	src/addinmanager.hpp	/^  sync::SyncServiceAddin *get_sync_service_addin(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
get_sync_service_addin	src/synchronization/syncmanager.cpp	/^  SyncServiceAddin *SyncManager::get_sync_service_addin(const std::string & sync_service_id)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & sync_service_id)
get_sync_service_addin	src/synchronization/syncmanager.hpp	/^    virtual SyncServiceAddin *get_sync_service_addin(const std::string & sync_service_id);$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:(const std::string & sync_service_id)
get_sync_service_addins	src/addinmanager.cpp	/^  void AddinManager::get_sync_service_addins(std::list<sync::SyncServiceAddin *> &l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<sync::SyncServiceAddin *> &l) const
get_sync_service_addins	src/addinmanager.hpp	/^  void get_sync_service_addins(std::list<sync::SyncServiceAddin *> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<sync::SyncServiceAddin *> &) const
get_synchronized_xml_bits	src/synchronization/syncmanager.cpp	/^  void SyncManager::get_synchronized_xml_bits(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)
get_synchronized_xml_bits	src/synchronization/syncmanager.hpp	/^    void get_synchronized_xml_bits(const std::string & noteXml, std::string & title, std::string & tags, std::string & content);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)
get_system_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_system_tag(const std::string & tag_name) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & tag_name) const
get_system_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_system_tag (const std::string & tag_name) const$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name) const
get_system_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_system_tag(const std::string & name) const$/;"	f	class:test::TagManager	signature:(const std::string & name) const
get_tableofcontents_menu_items	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::get_tableofcontents_menu_items(std::list<TableofcontentsMenuItem*> & items)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(std::list<TableofcontentsMenuItem*> & items)
get_tableofcontents_menu_items	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void get_tableofcontents_menu_items (std::list<TableofcontentsMenuItem*> & items);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(std::list<TableofcontentsMenuItem*> & items)
get_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_tag(const std::string & tag_name) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & tag_name) const
get_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::get_tag() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
get_tag	src/notebooks/notebook.hpp	/^  virtual Tag::Ptr    get_tag() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
get_tag	src/notebooks/specialnotebooks.cpp	/^Tag::Ptr SpecialNotebook::get_tag() const$/;"	f	class:gnote::notebooks::SpecialNotebook	signature:() const
get_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_tag (const std::string & tag_name) const$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name) const
get_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_tag(const std::string & tag_name) const$/;"	f	class:test::TagManager	signature:(const std::string & tag_name) const
get_tag_table	src/note.cpp	/^  const Glib::RefPtr<NoteTagTable> & Note::get_tag_table()$/;"	f	class:gnote::Note	signature:()
get_tag_table	src/note.hpp	/^  const Glib::RefPtr<NoteTagTable> & get_tag_table();$/;"	p	class:gnote::Note	access:public	signature:()
get_tags	src/notebase.cpp	/^void NoteBase::get_tags(std::list<Tag::Ptr> & l) const$/;"	f	class:gnote::NoteBase	signature:(std::list<Tag::Ptr> & l) const
get_tags	src/notebase.hpp	/^  void get_tags(std::list<Tag::Ptr> &) const;$/;"	p	class:gnote::NoteBase	access:public	signature:(std::list<Tag::Ptr> &) const
get_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_tags() const$/;"	f	class:gnote::TagManager	access:public	signature:() const
get_template_content	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_template_content($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const std::string & title)
get_template_content	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_template_content($/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:( const std::string & title)
get_template_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::get_template_note() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
get_template_note	src/notebooks/notebook.hpp	/^  virtual Note::Ptr   get_template_note() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
get_template_note	src/notebooks/specialnotebooks.cpp	/^Note::Ptr SpecialNotebook::get_template_note() const$/;"	f	class:gnote::notebooks::SpecialNotebook	signature:() const
get_template_tag	src/notebooks/notebooknoteaddin.cpp	/^  Tag::Ptr NotebookNoteAddin::get_template_tag()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
get_template_tag	src/notebooks/notebooknoteaddin.hpp	/^    static Tag::Ptr get_template_tag();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:public	signature:()
get_timeout_ms	src/synchronization/fusesyncserviceaddin.cpp	/^int FuseSyncServiceAddin::get_timeout_ms()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
get_timeout_ms	src/synchronization/fusesyncserviceaddin.hpp	/^  int get_timeout_ms();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
get_title	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_title(const Glib::Date & date)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(const Glib::Date & date)
get_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_title(const Glib::Date & date);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const Glib::Date & date)
get_title	src/notebase.cpp	/^const Glib::ustring & NoteBase::get_title() const$/;"	f	class:gnote::NoteBase	signature:() const
get_title	src/notebase.hpp	/^  const Glib::ustring & get_title() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
get_title_end	src/watchers.cpp	/^  Gtk::TextIter NoteRenameWatcher::get_title_end() const$/;"	f	class:gnote::NoteRenameWatcher	signature:() const
get_title_end	src/watchers.hpp	/^    Gtk::TextIter get_title_end() const;$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:() const
get_title_from_note_xml	src/notebase.cpp	/^Glib::ustring NoteArchiver::get_title_from_note_xml(const Glib::ustring & noteXml) const$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & noteXml) const
get_title_from_note_xml	src/notebase.hpp	/^  Glib::ustring get_title_from_note_xml(const Glib::ustring & noteXml) const;$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & noteXml) const
get_title_start	src/watchers.cpp	/^  Gtk::TextIter NoteRenameWatcher::get_title_start() const$/;"	f	class:gnote::NoteRenameWatcher	signature:() const
get_title_start	src/watchers.hpp	/^    Gtk::TextIter get_title_start() const;$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:() const
get_tray_menu_items	src/actionmanager.cpp	/^  std::vector<Gtk::MenuItem*> ActionManager::get_tray_menu_items()$/;"	f	class:gnote::ActionManager	signature:()
get_tray_menu_items	src/iactionmanager.hpp	/^  virtual std::vector<Gtk::MenuItem*> get_tray_menu_items() = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:()
get_unique_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::get_unique_name(const Glib::ustring & basename) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & basename) const
get_unique_name	src/notemanagerbase.hpp	/^  Glib::ustring get_unique_name(const Glib::ustring & basename) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & basename) const
get_unique_untitled	src/watchers.cpp	/^  std::string NoteRenameWatcher::get_unique_untitled()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
get_unique_untitled	src/watchers.hpp	/^    std::string get_unique_untitled();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
get_url	src/watchers.cpp	/^  std::string NoteUrlWatcher::get_url(const Gtk::TextIter & start, const Gtk::TextIter & end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
get_url	src/watchers.hpp	/^    std::string get_url(const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
get_url_tag	src/notetag.hpp	/^  NoteTag::Ptr get_url_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
get_value	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_value()$/;"	f	class:sharp::XmlReader	signature:()
get_value	src/sharp/xmlreader.hpp	/^  std::string    get_value();$/;"	p	class:sharp::XmlReader	access:public	signature:()
get_widget	src/notetag.hpp	/^  virtual Gtk::Widget * get_widget() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
get_widget_actions	src/mainwindowembeds.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() = 0;$/;"	p	class:gnote::HasActions	access:public	signature:()
get_widget_actions	src/notewindow.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > NoteWindow::get_widget_actions()$/;"	f	class:gnote::NoteWindow	signature:()
get_widget_actions	src/searchnoteswidget.cpp	/^std::vector<Glib::RefPtr<Gtk::Action> > SearchNotesWidget::get_widget_actions()$/;"	f	class:gnote::SearchNotesWidget	signature:()
get_widget_location	src/notetag.hpp	/^  const Glib::RefPtr<Gtk::TextMark> & get_widget_location() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
get_window	src/note.cpp	/^  NoteWindow * Note::get_window()$/;"	f	class:gnote::Note	signature:()
get_window	src/note.hpp	/^  NoteWindow * get_window();$/;"	p	class:gnote::Note	access:public	signature:()
get_window	src/noteaddin.hpp	/^  NoteWindow * get_window() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
get_window_for_note	src/gnote.cpp	/^  MainWindow & Gnote::get_window_for_note()$/;"	f	class:gnote::Gnote	signature:()
get_window_for_note	src/ignote.hpp	/^  virtual MainWindow & get_window_for_note() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
get_xlst_params	src/sharp/xsltargumentlist.cpp	/^const char ** XsltArgumentList::get_xlst_params() const$/;"	f	class:sharp::XsltArgumentList	signature:() const
get_xlst_params	src/sharp/xsltargumentlist.hpp	/^  const char ** get_xlst_params() const;$/;"	p	class:sharp::XsltArgumentList	access:public	signature:() const
give_advice	missing	/^give_advice ()$/;"	f
gnome	src/dbus/remotecontrol-client-glue.hpp	/^namespace gnome {$/;"	n	namespace:org
gnome	src/dbus/remotecontrol-glue.hpp	/^namespace gnome {$/;"	n	namespace:org
gnome	src/dbus/searchprovider.cpp	/^namespace gnome {$/;"	n	namespace:org	file:
gnome	src/dbus/searchprovider.hpp	/^namespace gnome {$/;"	n	namespace:org
gnome	src/gnome_keyring/keyringexception.hpp	/^namespace gnome {$/;"	n
gnome	src/gnome_keyring/ring.cpp	/^namespace gnome {$/;"	n	file:
gnome	src/gnome_keyring/ring.hpp	/^namespace gnome {$/;"	n
gnome	src/remotecontrolproxy.hpp	/^namespace gnome {$/;"	n	namespace:org
gnome::keyring	src/gnome_keyring/keyringexception.hpp	/^namespace keyring {$/;"	n	namespace:gnome
gnome::keyring	src/gnome_keyring/ring.cpp	/^namespace keyring {$/;"	n	namespace:gnome	file:
gnome::keyring	src/gnome_keyring/ring.hpp	/^namespace keyring {$/;"	n	namespace:gnome
gnome::keyring::KeyringException	src/gnome_keyring/keyringexception.hpp	/^class KeyringException$/;"	c	namespace:gnome::keyring	inherits:std::exception
gnome::keyring::KeyringException::KeyringException	src/gnome_keyring/keyringexception.hpp	/^  KeyringException(const std::string & msg)$/;"	f	class:gnome::keyring::KeyringException	access:public	signature:(const std::string & msg)
gnome::keyring::KeyringException::m_what	src/gnome_keyring/keyringexception.hpp	/^  std::string m_what;$/;"	m	class:gnome::keyring::KeyringException	access:private
gnome::keyring::Ring	src/gnome_keyring/ring.hpp	/^class Ring$/;"	c	namespace:gnome::keyring
gnome::keyring::Ring::clear_password	src/gnome_keyring/ring.cpp	/^void Ring::clear_password(const std::map<std::string, std::string> & attributes)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & attributes)
gnome::keyring::Ring::clear_password	src/gnome_keyring/ring.hpp	/^  static void clear_password(const std::map<std::string, std::string> & attributes);$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::map<std::string, std::string> & attributes)
gnome::keyring::Ring::create_password	src/gnome_keyring/ring.cpp	/^void Ring::create_password(const std::string & keyring, const std::string & displayName,$/;"	f	class:gnome::keyring::Ring	signature:(const std::string & keyring, const std::string & displayName, const std::map<std::string, std::string> & attributes, const std::string & secret)
gnome::keyring::Ring::create_password	src/gnome_keyring/ring.hpp	/^  static void create_password(const std::string & keyring, const std::string & displayName,$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::string & keyring, const std::string & displayName, const std::map<std::string, std::string> & attributes, const std::string & secret)
gnome::keyring::Ring::default_keyring	src/gnome_keyring/ring.cpp	/^std::string Ring::default_keyring()$/;"	f	class:gnome::keyring::Ring	signature:()
gnome::keyring::Ring::default_keyring	src/gnome_keyring/ring.hpp	/^  static std::string default_keyring();$/;"	p	class:gnome::keyring::Ring	access:public	signature:()
gnome::keyring::Ring::find_password	src/gnome_keyring/ring.cpp	/^std::string Ring::find_password(const std::map<std::string, std::string> & atts)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & atts)
gnome::keyring::Ring::find_password	src/gnome_keyring/ring.hpp	/^  static std::string find_password(const std::map<std::string, std::string> & atts);$/;"	p	class:gnome::keyring::Ring	access:public	signature:(const std::map<std::string, std::string> & atts)
gnome::keyring::Ring::keyring_attributes	src/gnome_keyring/ring.cpp	/^GHashTable *Ring::keyring_attributes(const std::map<std::string, std::string> & atts)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & atts)
gnome::keyring::Ring::keyring_attributes	src/gnome_keyring/ring.hpp	/^  static GHashTable *keyring_attributes(const std::map<std::string, std::string> & atts);$/;"	p	class:gnome::keyring::Ring	access:private	signature:(const std::map<std::string, std::string> & atts)
gnome::keyring::Ring::s_schema	src/gnome_keyring/ring.cpp	/^SecretSchema Ring::s_schema = {$/;"	m	class:gnome::keyring::Ring	file:
gnome::keyring::Ring::s_schema	src/gnome_keyring/ring.hpp	/^  static SecretSchema s_schema;$/;"	m	class:gnome::keyring::Ring	access:private
gnote	src/abstractaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/abstractaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/actionmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/actionmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/addininfo.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/addininfo.hpp	/^namespace gnote {$/;"	n
gnote	src/addinmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/addinmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/addinpreferencefactory.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/addinpreferencefactory.hpp	/^namespace gnote {$/;"	n
gnote	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^namespace gnote {$/;"	n
gnote	src/addins/noteoftheday/noteoftheday.hpp	/^namespace gnote {$/;"	n
gnote	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/addins/underline/underlinemenuitem.hpp	/^namespace gnote {$/;"	n
gnote	src/applicationaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/applicationaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/dbus/iremotecontrol.hpp	/^namespace gnote {$/;"	n
gnote	src/dbus/remotecontrol.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/dbus/remotecontrol.hpp	/^namespace gnote {$/;"	n
gnote	src/dbus/remotecontrolclient.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/dbus/remotecontrolclient.hpp	/^namespace gnote {$/;"	n
gnote	src/gnote.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/gnote.hpp	/^namespace gnote {$/;"	n
gnote	src/iactionmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/iactionmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/iconmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/iconmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/ignote.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/ignote.hpp	/^namespace gnote {$/;"	n
gnote	src/importaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/importaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/itagmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/itagmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/keybinder.hpp	/^namespace gnote {$/;"	n
gnote	src/mainwindow.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/mainwindow.hpp	/^namespace gnote {$/;"	n
gnote	src/mainwindowembeds.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/mainwindowembeds.hpp	/^namespace gnote {$/;"	n
gnote	src/note.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/note.hpp	/^namespace gnote {$/;"	n
gnote	src/noteaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/noteaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/notebase.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebase.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/createnotebookdialog.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/createnotebookdialog.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebook.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebook.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebookapplicationaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebookapplicationaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebookmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebookmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebookmenuitem.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebookmenuitem.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebooknewnotemenuitem.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebooknewnotemenuitem.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebooknoteaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebooknoteaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/notebookstreeview.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/notebookstreeview.hpp	/^namespace gnote {$/;"	n
gnote	src/notebooks/specialnotebooks.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebooks/specialnotebooks.hpp	/^namespace gnote {$/;"	n
gnote	src/notebuffer.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notebuffer.hpp	/^namespace gnote {$/;"	n
gnote	src/noteeditor.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/noteeditor.hpp	/^namespace gnote {$/;"	n
gnote	src/notemanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notemanager.hpp	/^namespace gnote {$/;"	n
gnote	src/notemanagerbase.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notemanagerbase.hpp	/^namespace gnote {$/;"	n
gnote	src/noterenamedialog.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/noterenamedialog.hpp	/^namespace gnote {$/;"	n
gnote	src/notetag.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notetag.hpp	/^namespace gnote {$/;"	n
gnote	src/notewindow.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/notewindow.hpp	/^namespace gnote {$/;"	n
gnote	src/preferences.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/preferences.hpp	/^namespace gnote {$/;"	n
gnote	src/preferencesdialog.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/preferencesdialog.hpp	/^namespace gnote {$/;"	n
gnote	src/preferencetabaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/prefskeybinder.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/prefskeybinder.hpp	/^namespace gnote {$/;"	n
gnote	src/recentchanges.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/recentchanges.hpp	/^namespace gnote {$/;"	n
gnote	src/recenttreeview.hpp	/^namespace gnote {$/;"	n
gnote	src/remotecontrolproxy.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/remotecontrolproxy.hpp	/^namespace gnote {$/;"	n
gnote	src/search.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/search.hpp	/^namespace gnote {$/;"	n
gnote	src/searchnoteswidget.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/searchnoteswidget.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/filesystemsyncserver.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/filesystemsyncserver.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/fusesyncserviceaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/fusesyncserviceaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/gnotesyncclient.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/gnotesyncclient.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/isyncmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/isyncmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/silentui.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/silentui.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/syncdialog.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/syncdialog.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/syncmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/syncmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/syncserviceaddin.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/syncserviceaddin.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/syncui.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/syncui.hpp	/^namespace gnote {$/;"	n
gnote	src/synchronization/syncutils.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/synchronization/syncutils.hpp	/^namespace gnote {$/;"	n
gnote	src/tag.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/tag.hpp	/^namespace gnote {$/;"	n
gnote	src/tagmanager.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/tagmanager.hpp	/^namespace gnote {$/;"	n
gnote	src/tray.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/tray.hpp	/^namespace gnote {$/;"	n
gnote	src/trie.hpp	/^namespace gnote {$/;"	n
gnote	src/triehit.hpp	/^namespace gnote {$/;"	n
gnote	src/undo.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/undo.hpp	/^namespace gnote {$/;"	n
gnote	src/utils.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/utils.hpp	/^namespace gnote {$/;"	n
gnote	src/watchers.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/watchers.hpp	/^namespace gnote {$/;"	n
gnote	src/xkeybinder.cpp	/^namespace gnote {$/;"	n	file:
gnote	src/xkeybinder.hpp	/^namespace gnote {$/;"	n
gnote::ADDIN_CATEGORY_DESKTOP_INTEGRATION	src/addininfo.hpp	/^  ADDIN_CATEGORY_DESKTOP_INTEGRATION,$/;"	e	enum:gnote::AddinCategory
gnote::ADDIN_CATEGORY_FORMATTING	src/addininfo.hpp	/^  ADDIN_CATEGORY_FORMATTING,$/;"	e	enum:gnote::AddinCategory
gnote::ADDIN_CATEGORY_SYNCHRONIZATION	src/addininfo.hpp	/^  ADDIN_CATEGORY_SYNCHRONIZATION$/;"	e	enum:gnote::AddinCategory
gnote::ADDIN_CATEGORY_TOOLS	src/addininfo.hpp	/^  ADDIN_CATEGORY_TOOLS,$/;"	e	enum:gnote::AddinCategory
gnote::ADDIN_CATEGORY_UNKNOWN	src/addininfo.hpp	/^  ADDIN_CATEGORY_UNKNOWN,$/;"	e	enum:gnote::AddinCategory
gnote::AbstractAddin	src/abstractaddin.hpp	/^class AbstractAddin$/;"	c	namespace:gnote	inherits:sharp::IInterface,sigc::trackable
gnote::AbstractAddin::AbstractAddin	src/abstractaddin.cpp	/^  AbstractAddin::AbstractAddin()$/;"	f	class:gnote::AbstractAddin	signature:()
gnote::AbstractAddin::AbstractAddin	src/abstractaddin.hpp	/^  AbstractAddin();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
gnote::AbstractAddin::dispose	src/abstractaddin.cpp	/^  void AbstractAddin::dispose()$/;"	f	class:gnote::AbstractAddin	signature:()
gnote::AbstractAddin::dispose	src/abstractaddin.cpp	/^  void AbstractAddin::dispose(bool )$/;"	f	class:gnote::AbstractAddin	signature:(bool )
gnote::AbstractAddin::dispose	src/abstractaddin.hpp	/^  virtual void dispose(bool disposing);$/;"	p	class:gnote::AbstractAddin	access:protected	signature:(bool disposing)
gnote::AbstractAddin::dispose	src/abstractaddin.hpp	/^  void dispose();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
gnote::AbstractAddin::is_disposing	src/abstractaddin.hpp	/^  bool is_disposing() const$/;"	f	class:gnote::AbstractAddin	access:public	signature:() const
gnote::AbstractAddin::m_disposing	src/abstractaddin.hpp	/^  bool m_disposing;$/;"	m	class:gnote::AbstractAddin	access:private
gnote::AbstractAddin::~AbstractAddin	src/abstractaddin.cpp	/^  AbstractAddin::~AbstractAddin()$/;"	f	class:gnote::AbstractAddin	signature:()
gnote::AbstractAddin::~AbstractAddin	src/abstractaddin.hpp	/^  virtual ~AbstractAddin();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
gnote::ActionManager	src/actionmanager.hpp	/^class ActionManager$/;"	c	namespace:gnote	inherits:IActionManager
gnote::ActionManager::ActionManager	src/actionmanager.cpp	/^  ActionManager::ActionManager()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::ActionManager	src/actionmanager.hpp	/^  ActionManager();$/;"	p	class:gnote::ActionManager	access:public	signature:()
gnote::ActionManager::AppMenuItem	src/actionmanager.hpp	/^  struct AppMenuItem$/;"	s	class:gnote::ActionManager	access:private
gnote::ActionManager::AppMenuItem::AppMenuItem	src/actionmanager.hpp	/^    AppMenuItem(int ord, const std::string & lbl, const std::string & act_def)$/;"	f	struct:gnote::ActionManager::AppMenuItem	access:public	signature:(int ord, const std::string & lbl, const std::string & act_def)
gnote::ActionManager::AppMenuItem::action_def	src/actionmanager.hpp	/^    std::string action_def;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
gnote::ActionManager::AppMenuItem::label	src/actionmanager.hpp	/^    std::string label;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
gnote::ActionManager::AppMenuItem::order	src/actionmanager.hpp	/^    int order;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
gnote::ActionManager::AppMenuItem::ptr_comparator	src/actionmanager.hpp	/^    struct ptr_comparator$/;"	s	struct:gnote::ActionManager::AppMenuItem	access:public
gnote::ActionManager::AppMenuItem::ptr_comparator::operator ()	src/actionmanager.hpp	/^      bool operator() (const AppMenuItem *x, const AppMenuItem *y)$/;"	f	struct:gnote::ActionManager::AppMenuItem::ptr_comparator	access:public	signature:(const AppMenuItem *x, const AppMenuItem *y)
gnote::ActionManager::AppMenuItemMultiMap	src/actionmanager.hpp	/^  typedef std::multimap<int, AppMenuItem> AppMenuItemMultiMap;$/;"	t	class:gnote::ActionManager	access:private
gnote::ActionManager::add_app_action	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::SimpleAction> ActionManager::add_app_action(const std::string & name)$/;"	f	class:gnote::ActionManager	signature:(const std::string & name)
gnote::ActionManager::add_app_menu_item	src/actionmanager.cpp	/^  void ActionManager::add_app_menu_item(int section, int order, const std::string & label,$/;"	f	class:gnote::ActionManager	signature:(int section, int order, const std::string & label, const std::string & action_def)
gnote::ActionManager::add_main_window_action	src/actionmanager.cpp	/^  void ActionManager::add_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	f	class:gnote::ActionManager	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::ActionManager::add_main_window_action	src/actionmanager.hpp	/^  void add_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::ActionManager::add_main_window_search_action	src/actionmanager.cpp	/^  void ActionManager::add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::ActionManager	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::ActionManager::add_tray_menu_item	src/actionmanager.cpp	/^  void ActionManager::add_tray_menu_item(Gtk::MenuItem & item)$/;"	f	class:gnote::ActionManager	signature:(Gtk::MenuItem & item)
gnote::ActionManager::find_action_by_name	src/actionmanager.cpp	/^  Glib::RefPtr<Gtk::Action> ActionManager::find_action_by_name(const std::string & n) const$/;"	f	class:gnote::ActionManager	signature:(const std::string & n) const
gnote::ActionManager::find_action_by_name	src/actionmanager.hpp	/^  Glib::RefPtr<Gtk::Action> find_action_by_name(const std::string & n) const;$/;"	p	class:gnote::ActionManager	access:public	signature:(const std::string & n) const
gnote::ActionManager::get_app_action	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::SimpleAction> ActionManager::get_app_action(const std::string & name) const$/;"	f	class:gnote::ActionManager	signature:(const std::string & name) const
gnote::ActionManager::get_app_actions	src/actionmanager.hpp	/^  const std::vector<Glib::RefPtr<Gio::SimpleAction> > & get_app_actions() const$/;"	f	class:gnote::ActionManager	access:public	signature:() const
gnote::ActionManager::get_app_menu	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::Menu> ActionManager::get_app_menu() const$/;"	f	class:gnote::ActionManager	signature:() const
gnote::ActionManager::get_app_menu	src/actionmanager.hpp	/^  Glib::RefPtr<Gio::Menu> get_app_menu() const;$/;"	p	class:gnote::ActionManager	access:public	signature:() const
gnote::ActionManager::get_main_window_actions	src/actionmanager.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > ActionManager::get_main_window_actions($/;"	f	class:gnote::ActionManager	signature:( std::map<int, Glib::RefPtr<Gtk::Action> > & actions)
gnote::ActionManager::get_main_window_actions	src/actionmanager.hpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_actions(std::map<int, Glib::RefPtr<Gtk::Action> > & actions);$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions)
gnote::ActionManager::get_main_window_search_actions	src/actionmanager.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > ActionManager::get_main_window_search_actions()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::get_tray_menu_items	src/actionmanager.cpp	/^  std::vector<Gtk::MenuItem*> ActionManager::get_tray_menu_items()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::m_app_actions	src/actionmanager.hpp	/^  std::vector<Glib::RefPtr<Gio::SimpleAction> > m_app_actions;$/;"	m	class:gnote::ActionManager	access:private
gnote::ActionManager::m_app_menu_items	src/actionmanager.hpp	/^  AppMenuItemMultiMap m_app_menu_items;$/;"	m	class:gnote::ActionManager	access:private
gnote::ActionManager::m_main_window_actions	src/actionmanager.hpp	/^  Glib::RefPtr<Gtk::ActionGroup> m_main_window_actions;$/;"	m	class:gnote::ActionManager	access:private
gnote::ActionManager::m_main_window_search_actions	src/actionmanager.hpp	/^  std::map<int, Glib::RefPtr<Gtk::Action> > m_main_window_search_actions;$/;"	m	class:gnote::ActionManager	access:private
gnote::ActionManager::m_tray_menu_items	src/actionmanager.hpp	/^  std::vector<Gtk::MenuItem*> m_tray_menu_items;$/;"	m	class:gnote::ActionManager	access:private
gnote::ActionManager::make_app_actions	src/actionmanager.cpp	/^  void ActionManager::make_app_actions()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::make_app_actions	src/actionmanager.hpp	/^  void make_app_actions();$/;"	p	class:gnote::ActionManager	access:private	signature:()
gnote::ActionManager::make_app_menu_items	src/actionmanager.cpp	/^  void ActionManager::make_app_menu_items()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::make_app_menu_items	src/actionmanager.hpp	/^  void make_app_menu_items();$/;"	p	class:gnote::ActionManager	access:private	signature:()
gnote::ActionManager::make_app_menu_section	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::Menu> ActionManager::make_app_menu_section(int sec) const$/;"	f	class:gnote::ActionManager	signature:(int sec) const
gnote::ActionManager::make_app_menu_section	src/actionmanager.hpp	/^  Glib::RefPtr<Gio::Menu> make_app_menu_section(int section) const;$/;"	p	class:gnote::ActionManager	access:private	signature:(int section) const
gnote::ActionManager::override	src/actionmanager.hpp	/^                                 const std::string & action_def) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> add_app_action(const std::string & name) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> get_app_action(const std::string & name) const override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_search_actions() override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual std::vector<Gtk::MenuItem*> get_tray_menu_items() override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual void add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual void add_tray_menu_item(Gtk::MenuItem & item) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual void remove_main_window_search_action(const std::string & name) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::override	src/actionmanager.hpp	/^  virtual void remove_tray_menu_item(Gtk::MenuItem & item) override;$/;"	m	class:gnote::ActionManager	access:public
gnote::ActionManager::populate_action_groups	src/actionmanager.cpp	/^  void ActionManager::populate_action_groups()$/;"	f	class:gnote::ActionManager	signature:()
gnote::ActionManager::populate_action_groups	src/actionmanager.hpp	/^  void populate_action_groups();$/;"	p	class:gnote::ActionManager	access:public	signature:()
gnote::ActionManager::remove_main_window_action	src/actionmanager.cpp	/^  void ActionManager::remove_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	f	class:gnote::ActionManager	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name)
gnote::ActionManager::remove_main_window_action	src/actionmanager.hpp	/^  void remove_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name);$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name)
gnote::ActionManager::remove_main_window_search_action	src/actionmanager.cpp	/^  void ActionManager::remove_main_window_search_action(const std::string & name)$/;"	f	class:gnote::ActionManager	signature:(const std::string & name)
gnote::ActionManager::remove_tray_menu_item	src/actionmanager.cpp	/^  void ActionManager::remove_tray_menu_item(Gtk::MenuItem & item)$/;"	f	class:gnote::ActionManager	signature:(Gtk::MenuItem & item)
gnote::AddinCategory	src/addininfo.hpp	/^enum AddinCategory {$/;"	g	namespace:gnote
gnote::AddinInfo	src/addininfo.hpp	/^class AddinInfo$/;"	c	namespace:gnote
gnote::AddinInfo::AddinInfo	src/addininfo.cpp	/^AddinInfo::AddinInfo(const std::string & info_file)$/;"	f	class:gnote::AddinInfo	signature:(const std::string & info_file)
gnote::AddinInfo::AddinInfo	src/addininfo.hpp	/^  AddinInfo(){}$/;"	f	class:gnote::AddinInfo	access:public	signature:()
gnote::AddinInfo::AddinInfo	src/addininfo.hpp	/^  explicit AddinInfo(const std::string & info_file);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const std::string & info_file)
gnote::AddinInfo::addin_module	src/addininfo.hpp	/^  const std::string & addin_module() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::addin_module	src/addininfo.hpp	/^  void addin_module(const std::string & module)$/;"	f	class:gnote::AddinInfo	access:public	signature:(const std::string & module)
gnote::AddinInfo::attributes	src/addininfo.hpp	/^  const std::map<Glib::ustring, Glib::ustring> & attributes()$/;"	f	class:gnote::AddinInfo	access:public	signature:()
gnote::AddinInfo::authors	src/addininfo.hpp	/^  const std::string & authors() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::category	src/addininfo.hpp	/^  AddinCategory category() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::copyright	src/addininfo.hpp	/^  const std::string & copyright() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::default_enabled	src/addininfo.hpp	/^  bool default_enabled() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::description	src/addininfo.hpp	/^  const std::string & description() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::get_attribute	src/addininfo.cpp	/^Glib::ustring AddinInfo::get_attribute(const Glib::ustring & att)$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & att)
gnote::AddinInfo::get_attribute	src/addininfo.hpp	/^  Glib::ustring get_attribute(const Glib::ustring & att);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const Glib::ustring & att)
gnote::AddinInfo::id	src/addininfo.hpp	/^  const std::string & id() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::load_from_file	src/addininfo.cpp	/^void AddinInfo::load_from_file(const std::string & info_file)$/;"	f	class:gnote::AddinInfo	signature:(const std::string & info_file)
gnote::AddinInfo::load_from_file	src/addininfo.hpp	/^  void load_from_file(const std::string & info_file);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const std::string & info_file)
gnote::AddinInfo::m_addin_module	src/addininfo.hpp	/^  std::string m_addin_module;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_attributes	src/addininfo.hpp	/^  std::map<Glib::ustring, Glib::ustring> m_attributes;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_authors	src/addininfo.hpp	/^  std::string m_authors;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_category	src/addininfo.hpp	/^  AddinCategory m_category;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_copyright	src/addininfo.hpp	/^  std::string m_copyright;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_default_enabled	src/addininfo.hpp	/^  bool m_default_enabled;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_description	src/addininfo.hpp	/^  std::string m_description;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_id	src/addininfo.hpp	/^  std::string m_id;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_libgnote_release	src/addininfo.hpp	/^  Glib::ustring m_libgnote_release;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_libgnote_version_info	src/addininfo.hpp	/^  Glib::ustring m_libgnote_version_info;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_name	src/addininfo.hpp	/^  std::string m_name;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::m_version	src/addininfo.hpp	/^  std::string m_version;$/;"	m	class:gnote::AddinInfo	access:private
gnote::AddinInfo::name	src/addininfo.hpp	/^  const std::string & name() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfo::validate	src/addininfo.cpp	/^bool AddinInfo::validate(const Glib::ustring & release, const Glib::ustring & version_info) const$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
gnote::AddinInfo::validate	src/addininfo.hpp	/^  bool validate(const Glib::ustring & release, const Glib::ustring & version_info) const;$/;"	p	class:gnote::AddinInfo	access:public	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
gnote::AddinInfo::validate_compatibility	src/addininfo.cpp	/^bool AddinInfo::validate_compatibility(const Glib::ustring & release, const Glib::ustring & version_info) const$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
gnote::AddinInfo::validate_compatibility	src/addininfo.hpp	/^  bool validate_compatibility(const Glib::ustring & release, const Glib::ustring & version_info) const;$/;"	p	class:gnote::AddinInfo	access:private	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
gnote::AddinInfo::version	src/addininfo.hpp	/^  const std::string & version() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
gnote::AddinInfoDialog	src/preferencesdialog.cpp	/^  class AddinInfoDialog$/;"	c	namespace:gnote	file:	inherits:Gtk::Dialog
gnote::AddinInfoDialog::AddinInfoDialog	src/preferencesdialog.cpp	/^    AddinInfoDialog(const AddinInfo & module, Gtk::Dialog &parent);$/;"	p	class:gnote::AddinInfoDialog	file:	access:public	signature:(const AddinInfo & module, Gtk::Dialog &parent)
gnote::AddinInfoDialog::AddinInfoDialog	src/preferencesdialog.cpp	/^  AddinInfoDialog::AddinInfoDialog(const AddinInfo & addin_info,$/;"	f	class:gnote::AddinInfoDialog	signature:(const AddinInfo & addin_info, Gtk::Dialog &parent)
gnote::AddinInfoDialog::fill	src/preferencesdialog.cpp	/^    void fill(Gtk::Label &);$/;"	p	class:gnote::AddinInfoDialog	file:	access:private	signature:(Gtk::Label &)
gnote::AddinInfoDialog::fill	src/preferencesdialog.cpp	/^  void AddinInfoDialog::fill(Gtk::Label & info_label)$/;"	f	class:gnote::AddinInfoDialog	signature:(Gtk::Label & info_label)
gnote::AddinInfoDialog::get_addin_id	src/preferencesdialog.cpp	/^    const std::string & get_addin_id() const$/;"	f	class:gnote::AddinInfoDialog	access:public	signature:() const
gnote::AddinInfoDialog::m_addin_info	src/preferencesdialog.cpp	/^    AddinInfo m_addin_info;$/;"	m	class:gnote::AddinInfoDialog	file:	access:private
gnote::AddinInfoDialog::m_id	src/preferencesdialog.cpp	/^    std::string m_id;$/;"	m	class:gnote::AddinInfoDialog	file:	access:private
gnote::AddinInfoDialog::set_addin_id	src/preferencesdialog.cpp	/^    void set_addin_id(const std::string & id)$/;"	f	class:gnote::AddinInfoDialog	access:public	signature:(const std::string & id)
gnote::AddinInfoMap	src/addinmanager.hpp	/^typedef std::map<std::string, AddinInfo> AddinInfoMap;$/;"	t	namespace:gnote
gnote::AddinManager	src/addinmanager.hpp	/^class AddinManager$/;"	c	namespace:gnote
gnote::AddinManager::AddinManager	src/addinmanager.cpp	/^  AddinManager::AddinManager(NoteManager & note_manager, const std::string & conf_dir)$/;"	f	class:gnote::AddinManager	signature:(NoteManager & note_manager, const std::string & conf_dir)
gnote::AddinManager::AddinManager	src/addinmanager.hpp	/^  AddinManager(NoteManager & note_manager, const std::string & conf_dir);$/;"	p	class:gnote::AddinManager	access:public	signature:(NoteManager & note_manager, const std::string & conf_dir)
gnote::AddinManager::AppAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, ApplicationAddin*> AppAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, NoteAddin *> IdAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdAddinPrefsMap	src/addinmanager.hpp	/^  typedef std::map<std::string, AddinPreferenceFactoryBase*> IdAddinPrefsMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdImportAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, ImportAddin *> IdImportAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdInfoMap	src/addinmanager.hpp	/^  typedef std::map<std::string, sharp::IfaceFactoryBase*> IdInfoMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdPrefTabAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, PreferenceTabAddin*> IdPrefTabAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::IdSyncServiceAddinMap	src/addinmanager.hpp	/^  typedef std::map<std::string, sync::SyncServiceAddin*> IdSyncServiceAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::NoteAddinMap	src/addinmanager.hpp	/^  typedef std::map<Note::Ptr, IdAddinMap> NoteAddinMap;$/;"	t	class:gnote::AddinManager	access:private
gnote::AddinManager::add_module_addins	src/addinmanager.cpp	/^  void AddinManager::add_module_addins(const std::string & mod_id, sharp::DynamicModule * dmod)$/;"	f	class:gnote::AddinManager	signature:(const std::string & mod_id, sharp::DynamicModule * dmod)
gnote::AddinManager::add_module_addins	src/addinmanager.hpp	/^  void add_module_addins(const std::string & mod_id, sharp::DynamicModule * dmod);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & mod_id, sharp::DynamicModule * dmod)
gnote::AddinManager::add_note_addin_info	src/addinmanager.cpp	/^  void AddinManager::add_note_addin_info(const std::string & id,$/;"	f	class:gnote::AddinManager	signature:(const std::string & id, const sharp::DynamicModule * dmod)
gnote::AddinManager::add_note_addin_info	src/addinmanager.hpp	/^  void add_note_addin_info(const std::string & id, const sharp::DynamicModule * dmod);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id, const sharp::DynamicModule * dmod)
gnote::AddinManager::create_addin_preference_widget	src/addinmanager.cpp	/^  Gtk::Widget * AddinManager::create_addin_preference_widget(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
gnote::AddinManager::create_addin_preference_widget	src/addinmanager.hpp	/^  Gtk::Widget * create_addin_preference_widget(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
gnote::AddinManager::erase_note_addin_info	src/addinmanager.cpp	/^  void AddinManager::erase_note_addin_info(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
gnote::AddinManager::erase_note_addin_info	src/addinmanager.hpp	/^  void erase_note_addin_info(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
gnote::AddinManager::get_addin_info	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_addin_info(const AbstractAddin & addin) const$/;"	f	class:gnote::AddinManager	signature:(const AbstractAddin & addin) const
gnote::AddinManager::get_addin_info	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_addin_info(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
gnote::AddinManager::get_addin_info	src/addinmanager.hpp	/^  AddinInfo get_addin_info(const AbstractAddin & addin) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const AbstractAddin & addin) const
gnote::AddinManager::get_addin_info	src/addinmanager.hpp	/^  AddinInfo get_addin_info(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
gnote::AddinManager::get_addin_infos	src/addinmanager.hpp	/^  const AddinInfoMap & get_addin_infos() const$/;"	f	class:gnote::AddinManager	access:public	signature:() const
gnote::AddinManager::get_application_addin	src/addinmanager.cpp	/^  ApplicationAddin * AddinManager::get_application_addin($/;"	f	class:gnote::AddinManager	signature:( const std::string & id) const
gnote::AddinManager::get_application_addin	src/addinmanager.hpp	/^  ApplicationAddin *get_application_addin(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
gnote::AddinManager::get_enabled_addins	src/addinmanager.cpp	/^  void AddinManager::get_enabled_addins(std::list<std::string> & addins) const$/;"	f	class:gnote::AddinManager	signature:(std::list<std::string> & addins) const
gnote::AddinManager::get_enabled_addins	src/addinmanager.hpp	/^  void get_enabled_addins(std::list<std::string> & addins) const;$/;"	p	class:gnote::AddinManager	access:private	signature:(std::list<std::string> & addins) const
gnote::AddinManager::get_import_addins	src/addinmanager.cpp	/^  void AddinManager::get_import_addins(std::list<ImportAddin*> & l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<ImportAddin*> & l) const
gnote::AddinManager::get_import_addins	src/addinmanager.hpp	/^  void get_import_addins(std::list<ImportAddin*> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<ImportAddin*> &) const
gnote::AddinManager::get_info_for_module	src/addinmanager.cpp	/^  AddinInfo AddinManager::get_info_for_module(const std::string & module) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & module) const
gnote::AddinManager::get_info_for_module	src/addinmanager.hpp	/^  AddinInfo get_info_for_module(const std::string & module) const;$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & module) const
gnote::AddinManager::get_module	src/addinmanager.cpp	/^  sharp::DynamicModule *AddinManager::get_module(const std::string & id)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id)
gnote::AddinManager::get_module	src/addinmanager.hpp	/^  sharp::DynamicModule *get_module(const std::string & id);$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id)
gnote::AddinManager::get_preference_tab_addins	src/addinmanager.cpp	/^  void AddinManager::get_preference_tab_addins(std::list<PreferenceTabAddin *> &l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<PreferenceTabAddin *> &l) const
gnote::AddinManager::get_preference_tab_addins	src/addinmanager.hpp	/^  void get_preference_tab_addins(std::list<PreferenceTabAddin *> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<PreferenceTabAddin *> &) const
gnote::AddinManager::get_prefs_dir	src/addinmanager.hpp	/^  std::string & get_prefs_dir()$/;"	f	class:gnote::AddinManager	access:public	signature:()
gnote::AddinManager::get_sync_service_addin	src/addinmanager.cpp	/^  sync::SyncServiceAddin *AddinManager::get_sync_service_addin(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
gnote::AddinManager::get_sync_service_addin	src/addinmanager.hpp	/^  sync::SyncServiceAddin *get_sync_service_addin(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
gnote::AddinManager::get_sync_service_addins	src/addinmanager.cpp	/^  void AddinManager::get_sync_service_addins(std::list<sync::SyncServiceAddin *> &l) const$/;"	f	class:gnote::AddinManager	signature:(std::list<sync::SyncServiceAddin *> &l) const
gnote::AddinManager::get_sync_service_addins	src/addinmanager.hpp	/^  void get_sync_service_addins(std::list<sync::SyncServiceAddin *> &) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(std::list<sync::SyncServiceAddin *> &) const
gnote::AddinManager::initialize_application_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_application_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
gnote::AddinManager::initialize_application_addins	src/addinmanager.hpp	/^  void initialize_application_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
gnote::AddinManager::initialize_sharp_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_sharp_addins()$/;"	f	class:gnote::AddinManager	signature:()
gnote::AddinManager::initialize_sharp_addins	src/addinmanager.hpp	/^  void initialize_sharp_addins();$/;"	p	class:gnote::AddinManager	access:private	signature:()
gnote::AddinManager::initialize_sync_service_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_sync_service_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
gnote::AddinManager::initialize_sync_service_addins	src/addinmanager.hpp	/^  void initialize_sync_service_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
gnote::AddinManager::is_module_loaded	src/addinmanager.cpp	/^  bool AddinManager::is_module_loaded(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
gnote::AddinManager::is_module_loaded	src/addinmanager.hpp	/^  bool is_module_loaded(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
gnote::AddinManager::load_addin_infos	src/addinmanager.cpp	/^  void AddinManager::load_addin_infos(const std::string & global_path,$/;"	f	class:gnote::AddinManager	signature:(const std::string & global_path, const std::string & local_path)
gnote::AddinManager::load_addin_infos	src/addinmanager.cpp	/^  void AddinManager::load_addin_infos(const std::string & path)$/;"	f	class:gnote::AddinManager	signature:(const std::string & path)
gnote::AddinManager::load_addin_infos	src/addinmanager.hpp	/^  void load_addin_infos(const std::string & global_path, const std::string & local_path);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & global_path, const std::string & local_path)
gnote::AddinManager::load_addin_infos	src/addinmanager.hpp	/^  void load_addin_infos(const std::string & path);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & path)
gnote::AddinManager::load_addins_for_note	src/addinmanager.cpp	/^  void AddinManager::load_addins_for_note(const Note::Ptr & note)$/;"	f	class:gnote::AddinManager	signature:(const Note::Ptr & note)
gnote::AddinManager::load_addins_for_note	src/addinmanager.hpp	/^  void load_addins_for_note(const Note::Ptr &);$/;"	p	class:gnote::AddinManager	access:public	signature:(const Note::Ptr &)
gnote::AddinManager::load_note_addin	src/addinmanager.cpp	/^  void AddinManager::load_note_addin(const std::string & id, sharp::IfaceFactoryBase *const f)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id, sharp::IfaceFactoryBase *const f)
gnote::AddinManager::load_note_addin	src/addinmanager.hpp	/^  void load_note_addin(const std::string & id, sharp::IfaceFactoryBase *const f);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & id, sharp::IfaceFactoryBase *const f)
gnote::AddinManager::m_addin_infos	src/addinmanager.hpp	/^  AddinInfoMap m_addin_infos;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_addin_prefs	src/addinmanager.hpp	/^  IdAddinPrefsMap                          m_addin_prefs;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_addins_prefs_dir	src/addinmanager.hpp	/^  std::string m_addins_prefs_dir;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_addins_prefs_file	src/addinmanager.hpp	/^  std::string m_addins_prefs_file;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_app_addins	src/addinmanager.hpp	/^  AppAddinMap                               m_app_addins;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_application_addin_list_changed	src/addinmanager.hpp	/^  sigc::signal<void>         m_application_addin_list_changed;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_builtin_ifaces	src/addinmanager.hpp	/^  std::list<sharp::IfaceFactoryBase*> m_builtin_ifaces;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_gnote_conf_dir	src/addinmanager.hpp	/^  const std::string m_gnote_conf_dir;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_import_addins	src/addinmanager.hpp	/^  IdImportAddinMap                         m_import_addins;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_module_manager	src/addinmanager.hpp	/^  sharp::ModuleManager m_module_manager;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_note_addin_infos	src/addinmanager.hpp	/^  IdInfoMap                                m_note_addin_infos;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_note_addins	src/addinmanager.hpp	/^  NoteAddinMap                              m_note_addins;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_note_manager	src/addinmanager.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_pref_tab_addins	src/addinmanager.hpp	/^  IdPrefTabAddinMap                        m_pref_tab_addins;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::m_sync_service_addins	src/addinmanager.hpp	/^  IdSyncServiceAddinMap                    m_sync_service_addins;$/;"	m	class:gnote::AddinManager	access:private
gnote::AddinManager::on_setting_changed	src/addinmanager.cpp	/^  void AddinManager::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::AddinManager	signature:(const Glib::ustring & key)
gnote::AddinManager::on_setting_changed	src/addinmanager.hpp	/^  void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::AddinManager	access:private	signature:(const Glib::ustring & key)
gnote::AddinManager::save_addins_prefs	src/addinmanager.cpp	/^  void AddinManager::save_addins_prefs() const$/;"	f	class:gnote::AddinManager	signature:() const
gnote::AddinManager::save_addins_prefs	src/addinmanager.hpp	/^  void save_addins_prefs() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
gnote::AddinManager::shutdown_application_addins	src/addinmanager.cpp	/^  void AddinManager::shutdown_application_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
gnote::AddinManager::shutdown_application_addins	src/addinmanager.hpp	/^  void shutdown_application_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
gnote::AddinManager::~AddinManager	src/addinmanager.cpp	/^  AddinManager::~AddinManager()$/;"	f	class:gnote::AddinManager	signature:()
gnote::AddinManager::~AddinManager	src/addinmanager.hpp	/^  ~AddinManager();$/;"	p	class:gnote::AddinManager	access:public	signature:()
gnote::AddinPreferenceFactory	src/addinpreferencefactory.hpp	/^class AddinPreferenceFactory$/;"	c	namespace:gnote	inherits:AddinPreferenceFactoryBase
gnote::AddinPreferenceFactory::create	src/addinpreferencefactory.hpp	/^  static AddinPreferenceFactoryBase * create()$/;"	f	class:gnote::AddinPreferenceFactory	access:public	signature:()
gnote::AddinPreferenceFactoryBase	src/addinpreferencefactory.hpp	/^class AddinPreferenceFactoryBase$/;"	c	namespace:gnote	inherits:sharp::IInterface
gnote::AddinPreferenceFactoryBase::IFACE_NAME	src/addinpreferencefactory.cpp	/^const char * AddinPreferenceFactoryBase::IFACE_NAME = "gnote::AddinPreferenceFactoryBase";$/;"	m	class:gnote::AddinPreferenceFactoryBase	file:
gnote::AddinPreferenceFactoryBase::IFACE_NAME	src/addinpreferencefactory.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::AddinPreferenceFactoryBase	access:public
gnote::AddinPreferenceFactoryBase::create_preference_widget	src/addinpreferencefactory.hpp	/^  virtual Gtk::Widget * create_preference_widget(NoteManager & m) = 0;$/;"	p	class:gnote::AddinPreferenceFactoryBase	access:public	signature:(NoteManager & m)
gnote::ApplicationAddin	src/applicationaddin.hpp	/^class ApplicationAddin$/;"	c	namespace:gnote	inherits:AbstractAddin
gnote::ApplicationAddin::IFACE_NAME	src/applicationaddin.cpp	/^const char * ApplicationAddin::IFACE_NAME = "gnote::ApplicationAddin";$/;"	m	class:gnote::ApplicationAddin	file:
gnote::ApplicationAddin::IFACE_NAME	src/applicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::ApplicationAddin	access:public
gnote::ApplicationAddin::initialize	src/applicationaddin.hpp	/^  virtual void initialize () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
gnote::ApplicationAddin::initialized	src/applicationaddin.hpp	/^  virtual bool initialized () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
gnote::ApplicationAddin::m_note_manager	src/applicationaddin.hpp	/^  NoteManager *m_note_manager;$/;"	m	class:gnote::ApplicationAddin	access:private
gnote::ApplicationAddin::note_manager	src/applicationaddin.hpp	/^  NoteManager & note_manager() const$/;"	f	class:gnote::ApplicationAddin	access:public	signature:() const
gnote::ApplicationAddin::note_manager	src/applicationaddin.hpp	/^  void note_manager(NoteManager & manager)$/;"	f	class:gnote::ApplicationAddin	access:public	signature:(NoteManager & manager)
gnote::ApplicationAddin::shutdown	src/applicationaddin.hpp	/^  virtual void shutdown () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
gnote::BACKLINKS_ORDER	src/iactionmanager.hpp	/^  BACKLINKS_ORDER = 100,$/;"	e	enum:gnote::NoteActionOrder
gnote::CONTENT	src/notetag.hpp	/^  CONTENT$/;"	e	enum:gnote::TagSaveType
gnote::CONTENT_CHANGED	src/tag.hpp	/^    CONTENT_CHANGED,$/;"	e	enum:gnote::ChangeType
gnote::ChangeDepthAction	src/undo.hpp	/^class ChangeDepthAction$/;"	c	namespace:gnote	inherits:EditAction
gnote::ChangeDepthAction::ChangeDepthAction	src/undo.cpp	/^  ChangeDepthAction::ChangeDepthAction(int line, bool direction)$/;"	f	class:gnote::ChangeDepthAction	signature:(int line, bool direction)
gnote::ChangeDepthAction::ChangeDepthAction	src/undo.hpp	/^  ChangeDepthAction(int line, bool direction);$/;"	p	class:gnote::ChangeDepthAction	access:public	signature:(int line, bool direction)
gnote::ChangeDepthAction::can_merge	src/undo.cpp	/^  bool ChangeDepthAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::ChangeDepthAction	signature:(const EditAction * ) const
gnote::ChangeDepthAction::destroy	src/undo.cpp	/^  void ChangeDepthAction::destroy ()$/;"	f	class:gnote::ChangeDepthAction	signature:()
gnote::ChangeDepthAction::m_direction	src/undo.hpp	/^  bool m_direction;$/;"	m	class:gnote::ChangeDepthAction	access:private
gnote::ChangeDepthAction::m_line	src/undo.hpp	/^  int m_line;$/;"	m	class:gnote::ChangeDepthAction	access:private
gnote::ChangeDepthAction::merge	src/undo.cpp	/^  void ChangeDepthAction::merge (EditAction * )$/;"	f	class:gnote::ChangeDepthAction	signature:(EditAction * )
gnote::ChangeDepthAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::ChangeDepthAction	access:public
gnote::ChangeDepthAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::ChangeDepthAction	access:public
gnote::ChangeDepthAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
gnote::ChangeDepthAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
gnote::ChangeDepthAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
gnote::ChangeDepthAction::redo	src/undo.cpp	/^  void ChangeDepthAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::ChangeDepthAction	signature:(Gtk::TextBuffer * buffer)
gnote::ChangeDepthAction::undo	src/undo.cpp	/^  void ChangeDepthAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::ChangeDepthAction	signature:(Gtk::TextBuffer * buffer)
gnote::ChangeType	src/tag.hpp	/^  enum ChangeType {$/;"	g	namespace:gnote
gnote::ChopBuffer	src/undo.hpp	/^class ChopBuffer$/;"	c	namespace:gnote	inherits:Gtk::TextBuffer
gnote::ChopBuffer::ChopBuffer	src/undo.cpp	/^  ChopBuffer::ChopBuffer(const Glib::RefPtr<Gtk::TextTagTable> & table)$/;"	f	class:gnote::ChopBuffer	signature:(const Glib::RefPtr<Gtk::TextTagTable> & table)
gnote::ChopBuffer::ChopBuffer	src/undo.hpp	/^  ChopBuffer(const Glib::RefPtr<Gtk::TextTagTable> & table);$/;"	p	class:gnote::ChopBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTagTable> & table)
gnote::ChopBuffer::Ptr	src/undo.hpp	/^  typedef Glib::RefPtr<ChopBuffer> Ptr;$/;"	t	class:gnote::ChopBuffer	access:public
gnote::ChopBuffer::add_chop	src/undo.cpp	/^  utils::TextRange ChopBuffer::add_chop(const Gtk::TextIter & start_iter, $/;"	f	class:gnote::ChopBuffer	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter)
gnote::ChopBuffer::add_chop	src/undo.hpp	/^  utils::TextRange add_chop(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter);$/;"	p	class:gnote::ChopBuffer	access:public	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter)
gnote::CompareSyncAddinsByName	src/preferencesdialog.cpp	/^  struct CompareSyncAddinsByName$/;"	s	namespace:gnote	file:
gnote::CompareSyncAddinsByName::operator ()	src/preferencesdialog.cpp	/^    bool operator()(sync::SyncServiceAddin *x, sync::SyncServiceAddin *y)$/;"	f	struct:gnote::CompareSyncAddinsByName	access:public	signature:(sync::SyncServiceAddin *x, sync::SyncServiceAddin *y)
gnote::DBG	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_added(const NoteBase& DBG(note), const Tag::Ptr& DBG(tag))$/;"	f	namespace:gnote	signature:(tag)
gnote::DepthNoteTag	src/notetag.hpp	/^class DepthNoteTag$/;"	c	namespace:gnote	inherits:NoteTag
gnote::DepthNoteTag::DepthNoteTag	src/notetag.cpp	/^  DepthNoteTag::DepthNoteTag(int depth, Pango::Direction direction)$/;"	f	class:gnote::DepthNoteTag	signature:(int depth, Pango::Direction direction)
gnote::DepthNoteTag::DepthNoteTag	src/notetag.hpp	/^  DepthNoteTag(int depth, Pango::Direction direction);$/;"	p	class:gnote::DepthNoteTag	access:public	signature:(int depth, Pango::Direction direction)
gnote::DepthNoteTag::Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<DepthNoteTag> Ptr;$/;"	t	class:gnote::DepthNoteTag	access:public
gnote::DepthNoteTag::get_depth	src/notetag.hpp	/^  int get_depth() const$/;"	f	class:gnote::DepthNoteTag	access:public	signature:() const
gnote::DepthNoteTag::get_direction	src/notetag.hpp	/^  Pango::Direction get_direction() const$/;"	f	class:gnote::DepthNoteTag	access:public	signature:() const
gnote::DepthNoteTag::m_depth	src/notetag.hpp	/^  int            m_depth;$/;"	m	class:gnote::DepthNoteTag	access:private
gnote::DepthNoteTag::m_direction	src/notetag.hpp	/^  Pango::Direction m_direction;$/;"	m	class:gnote::DepthNoteTag	access:private
gnote::DepthNoteTag::override	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const override;$/;"	m	class:gnote::DepthNoteTag	access:public
gnote::DepthNoteTag::write	src/notetag.cpp	/^  void DepthNoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::DepthNoteTag	signature:(sharp::XmlWriter & xml, bool start) const
gnote::DynamicNoteTag	src/notetag.hpp	/^class DynamicNoteTag$/;"	c	namespace:gnote	inherits:NoteTag
gnote::DynamicNoteTag::AttributeMap	src/notetag.hpp	/^  typedef std::map<std::string, std::string> AttributeMap;$/;"	t	class:gnote::DynamicNoteTag	access:public
gnote::DynamicNoteTag::ConstPtr	src/notetag.hpp	/^  typedef Glib::RefPtr<const DynamicNoteTag> ConstPtr;$/;"	t	class:gnote::DynamicNoteTag	access:public
gnote::DynamicNoteTag::Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<DynamicNoteTag> Ptr;$/;"	t	class:gnote::DynamicNoteTag	access:public
gnote::DynamicNoteTag::get_attributes	src/notetag.hpp	/^  AttributeMap & get_attributes()$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:()
gnote::DynamicNoteTag::get_attributes	src/notetag.hpp	/^  const AttributeMap & get_attributes() const$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:() const
gnote::DynamicNoteTag::m_attributes	src/notetag.hpp	/^  AttributeMap m_attributes;$/;"	m	class:gnote::DynamicNoteTag	access:private
gnote::DynamicNoteTag::on_attribute_read	src/notetag.hpp	/^  virtual void on_attribute_read(const std::string &)$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:(const std::string &)
gnote::DynamicNoteTag::override	src/notetag.hpp	/^  virtual void read(sharp::XmlReader &, bool) override;$/;"	m	class:gnote::DynamicNoteTag	access:public
gnote::DynamicNoteTag::override	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const override;$/;"	m	class:gnote::DynamicNoteTag	access:public
gnote::DynamicNoteTag::read	src/notetag.cpp	/^  void DynamicNoteTag::read(sharp::XmlReader & xml, bool start)$/;"	f	class:gnote::DynamicNoteTag	signature:(sharp::XmlReader & xml, bool start)
gnote::DynamicNoteTag::write	src/notetag.cpp	/^  void DynamicNoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::DynamicNoteTag	signature:(sharp::XmlWriter & xml, bool start) const
gnote::EXPORT_TO_GTG_ORDER	src/iactionmanager.hpp	/^  EXPORT_TO_GTG_ORDER = 250,$/;"	e	enum:gnote::NoteActionOrder
gnote::EXPORT_TO_HTML_ORDER	src/iactionmanager.hpp	/^  EXPORT_TO_HTML_ORDER = 200,$/;"	e	enum:gnote::NoteActionOrder
gnote::EditAction	src/undo.hpp	/^class EditAction$/;"	c	namespace:gnote
gnote::EditAction::can_merge	src/undo.hpp	/^  virtual bool can_merge (const EditAction * action) const = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(const EditAction * action) const
gnote::EditAction::destroy	src/undo.hpp	/^  virtual void destroy () = 0;$/;"	p	class:gnote::EditAction	access:public	signature:()
gnote::EditAction::merge	src/undo.hpp	/^  virtual void merge (EditAction * action) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(EditAction * action)
gnote::EditAction::redo	src/undo.hpp	/^  virtual void redo (Gtk::TextBuffer * buffer) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(Gtk::TextBuffer * buffer)
gnote::EditAction::undo	src/undo.hpp	/^  virtual void undo (Gtk::TextBuffer * buffer) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(Gtk::TextBuffer * buffer)
gnote::EditAction::~EditAction	src/undo.hpp	/^  virtual ~EditAction() {}$/;"	f	class:gnote::EditAction	access:public	signature:()
gnote::EmbeddableWidget	src/mainwindowembeds.hpp	/^class EmbeddableWidget$/;"	c	namespace:gnote
gnote::EmbeddableWidget::EmbeddableWidget	src/mainwindowembeds.hpp	/^  EmbeddableWidget() : m_host(NULL) {}$/;"	f	class:gnote::EmbeddableWidget	access:public	signature:()
gnote::EmbeddableWidget::background	src/mainwindowembeds.cpp	/^void EmbeddableWidget::background()$/;"	f	class:gnote::EmbeddableWidget	signature:()
gnote::EmbeddableWidget::background	src/mainwindowembeds.hpp	/^  virtual void background();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
gnote::EmbeddableWidget::embed	src/mainwindowembeds.cpp	/^void EmbeddableWidget::embed(EmbeddableWidgetHost *h)$/;"	f	class:gnote::EmbeddableWidget	signature:(EmbeddableWidgetHost *h)
gnote::EmbeddableWidget::embed	src/mainwindowembeds.hpp	/^  virtual void embed(EmbeddableWidgetHost *h);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(EmbeddableWidgetHost *h)
gnote::EmbeddableWidget::foreground	src/mainwindowembeds.cpp	/^void EmbeddableWidget::foreground()$/;"	f	class:gnote::EmbeddableWidget	signature:()
gnote::EmbeddableWidget::foreground	src/mainwindowembeds.hpp	/^  virtual void foreground();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
gnote::EmbeddableWidget::get_name	src/mainwindowembeds.hpp	/^  virtual std::string get_name() const = 0;$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:() const
gnote::EmbeddableWidget::hint_position	src/mainwindowembeds.cpp	/^void EmbeddableWidget::hint_position(int &, int &)$/;"	f	class:gnote::EmbeddableWidget	signature:(int &, int &)
gnote::EmbeddableWidget::hint_position	src/mainwindowembeds.hpp	/^  virtual void hint_position(int & x, int & y);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(int & x, int & y)
gnote::EmbeddableWidget::hint_size	src/mainwindowembeds.cpp	/^void EmbeddableWidget::hint_size(int &, int &)$/;"	f	class:gnote::EmbeddableWidget	signature:(int &, int &)
gnote::EmbeddableWidget::hint_size	src/mainwindowembeds.hpp	/^  virtual void hint_size(int & width, int & height);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(int & width, int & height)
gnote::EmbeddableWidget::host	src/mainwindowembeds.hpp	/^  EmbeddableWidgetHost *host() const$/;"	f	class:gnote::EmbeddableWidget	access:public	signature:() const
gnote::EmbeddableWidget::m_host	src/mainwindowembeds.hpp	/^  EmbeddableWidgetHost *m_host;$/;"	m	class:gnote::EmbeddableWidget	access:private
gnote::EmbeddableWidget::signal_backgrounded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_backgrounded;$/;"	m	class:gnote::EmbeddableWidget	access:public
gnote::EmbeddableWidget::signal_embedded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_embedded;$/;"	m	class:gnote::EmbeddableWidget	access:public
gnote::EmbeddableWidget::signal_foregrounded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_foregrounded;$/;"	m	class:gnote::EmbeddableWidget	access:public
gnote::EmbeddableWidget::signal_name_changed	src/mainwindowembeds.hpp	/^  sigc::signal<void, const std::string &> signal_name_changed;$/;"	m	class:gnote::EmbeddableWidget	access:public
gnote::EmbeddableWidget::signal_unembedded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_unembedded;$/;"	m	class:gnote::EmbeddableWidget	access:public
gnote::EmbeddableWidget::size_internals	src/mainwindowembeds.cpp	/^void EmbeddableWidget::size_internals()$/;"	f	class:gnote::EmbeddableWidget	signature:()
gnote::EmbeddableWidget::size_internals	src/mainwindowembeds.hpp	/^  virtual void size_internals();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
gnote::EmbeddableWidget::unembed	src/mainwindowembeds.cpp	/^void EmbeddableWidget::unembed()$/;"	f	class:gnote::EmbeddableWidget	signature:()
gnote::EmbeddableWidget::unembed	src/mainwindowembeds.hpp	/^  virtual void unembed();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
gnote::EmbeddableWidgetHost	src/mainwindowembeds.hpp	/^class EmbeddableWidgetHost$/;"	c	namespace:gnote
gnote::EmbeddableWidgetHost::background_embedded	src/mainwindowembeds.hpp	/^  virtual void background_embedded(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EmbeddableWidgetHost::contains	src/mainwindowembeds.hpp	/^  virtual bool contains(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EmbeddableWidgetHost::embed_widget	src/mainwindowembeds.hpp	/^  virtual void embed_widget(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EmbeddableWidgetHost::foreground_embedded	src/mainwindowembeds.hpp	/^  virtual void foreground_embedded(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EmbeddableWidgetHost::is_foreground	src/mainwindowembeds.hpp	/^  virtual bool is_foreground(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EmbeddableWidgetHost::running	src/mainwindowembeds.hpp	/^  virtual bool running() = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:()
gnote::EmbeddableWidgetHost::unembed_widget	src/mainwindowembeds.hpp	/^  virtual void unembed_widget(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
gnote::EraseAction	src/undo.hpp	/^class EraseAction $/;"	c	namespace:gnote	inherits:SplitterAction
gnote::EraseAction::EraseAction	src/undo.cpp	/^  EraseAction::EraseAction(const Gtk::TextIter & start_iter, $/;"	f	class:gnote::EraseAction	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter, const ChopBuffer::Ptr & chop_buf)
gnote::EraseAction::EraseAction	src/undo.hpp	/^  EraseAction(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter,$/;"	p	class:gnote::EraseAction	access:public	signature:(const Gtk::TextIter & start_iter, const Gtk::TextIter & end_iter, const ChopBuffer::Ptr & chop_buf)
gnote::EraseAction::can_merge	src/undo.cpp	/^  bool EraseAction::can_merge (const EditAction * action) const$/;"	f	class:gnote::EraseAction	signature:(const EditAction * action) const
gnote::EraseAction::destroy	src/undo.cpp	/^  void EraseAction::destroy ()$/;"	f	class:gnote::EraseAction	signature:()
gnote::EraseAction::m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::EraseAction	access:private
gnote::EraseAction::m_is_cut	src/undo.hpp	/^  bool m_is_cut;$/;"	m	class:gnote::EraseAction	access:private
gnote::EraseAction::m_is_forward	src/undo.hpp	/^  bool m_is_forward;$/;"	m	class:gnote::EraseAction	access:private
gnote::EraseAction::m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::EraseAction	access:private
gnote::EraseAction::merge	src/undo.cpp	/^  void EraseAction::merge (EditAction * action)$/;"	f	class:gnote::EraseAction	signature:(EditAction * action)
gnote::EraseAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::EraseAction	access:public
gnote::EraseAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::EraseAction	access:public
gnote::EraseAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::EraseAction	access:public
gnote::EraseAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::EraseAction	access:public
gnote::EraseAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::EraseAction	access:public
gnote::EraseAction::redo	src/undo.cpp	/^  void EraseAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::EraseAction	signature:(Gtk::TextBuffer * buffer)
gnote::EraseAction::undo	src/undo.cpp	/^  void EraseAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::EraseAction	signature:(Gtk::TextBuffer * buffer)
gnote::Gnote	src/gnote.hpp	/^class Gnote$/;"	c	namespace:gnote	inherits:Gtk::Application,IGnote
gnote::Gnote::Gnote	src/gnote.cpp	/^  Gnote::Gnote()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::Gnote	src/gnote.hpp	/^  Gnote();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::add_app_actions	src/gnote.cpp	/^  void Gnote::add_app_actions(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)$/;"	f	class:gnote::Gnote	signature:(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)
gnote::Gnote::add_app_actions	src/gnote.hpp	/^  void add_app_actions(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions);$/;"	p	class:gnote::Gnote	access:private	signature:(const std::vector<Glib::RefPtr<Gio::SimpleAction> > & actions)
gnote::Gnote::cmd_line	src/gnote.hpp	/^  GnoteCommandLine cmd_line;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::common_init	src/gnote.cpp	/^  void Gnote::common_init()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::common_init	src/gnote.hpp	/^  void common_init();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::create	src/gnote.hpp	/^  static Glib::RefPtr<Gnote> create()$/;"	f	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::default_note_manager	src/gnote.hpp	/^  NoteManager & default_note_manager()$/;"	f	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::end_main	src/gnote.cpp	/^  void Gnote::end_main(bool bus_acquired, bool name_acquired)$/;"	f	class:gnote::Gnote	signature:(bool bus_acquired, bool name_acquired)
gnote::Gnote::end_main	src/gnote.hpp	/^  void end_main(bool bus_aquired, bool name_acquired);$/;"	p	class:gnote::Gnote	access:private	signature:(bool bus_aquired, bool name_acquired)
gnote::Gnote::get_active_window	src/gnote.cpp	/^  MainWindow *Gnote::get_active_window()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::get_active_window	src/gnote.hpp	/^  MainWindow *get_active_window();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::get_main_window	src/gnote.cpp	/^  MainWindow & Gnote::get_main_window()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::get_note_path	src/gnote.cpp	/^  std::string Gnote::get_note_path(const std::string & override_path)$/;"	f	class:gnote::Gnote	signature:(const std::string & override_path)
gnote::Gnote::get_note_path	src/gnote.hpp	/^  std::string get_note_path(const std::string & override_path);$/;"	p	class:gnote::Gnote	access:private	signature:(const std::string & override_path)
gnote::Gnote::get_window_for_note	src/gnote.cpp	/^  MainWindow & Gnote::get_window_for_note()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::is_background	src/gnote.hpp	/^  bool is_background() const$/;"	f	class:gnote::Gnote	access:public	signature:() const
gnote::Gnote::keybinder	src/gnote.hpp	/^  IKeybinder & keybinder()$/;"	f	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::m_icon_theme	src/gnote.hpp	/^  Glib::RefPtr<Gtk::IconTheme> m_icon_theme;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_is_background	src/gnote.hpp	/^  bool m_is_background;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_is_shell_search	src/gnote.hpp	/^  bool m_is_shell_search;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_keybinder	src/gnote.hpp	/^  IKeybinder  *m_keybinder;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_manager	src/gnote.hpp	/^  NoteManager *m_manager;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_prefsdlg	src/gnote.hpp	/^  PreferencesDialog *m_prefsdlg;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_sync_dlg	src/gnote.hpp	/^  sync::SyncDialog::Ptr m_sync_dlg;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_tray	src/gnote.hpp	/^  Tray::Ptr m_tray;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::m_tray_icon	src/gnote.hpp	/^  Glib::RefPtr<TrayIcon> m_tray_icon;$/;"	m	class:gnote::Gnote	access:private
gnote::Gnote::main	src/gnote.cpp	/^  int Gnote::main(int argc, char **argv)$/;"	f	class:gnote::Gnote	signature:(int argc, char **argv)
gnote::Gnote::main	src/gnote.hpp	/^  int main(int argc, char **argv);$/;"	p	class:gnote::Gnote	access:public	signature:(int argc, char **argv)
gnote::Gnote::make_app_actions	src/gnote.cpp	/^  void Gnote::make_app_actions()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::make_app_actions	src/gnote.hpp	/^  void make_app_actions();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::make_app_menu	src/gnote.cpp	/^  void Gnote::make_app_menu()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::make_app_menu	src/gnote.hpp	/^  void make_app_menu();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::new_main_window	src/gnote.cpp	/^  MainWindow & Gnote::new_main_window()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::on_command_line	src/gnote.cpp	/^  int Gnote::on_command_line(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line)$/;"	f	class:gnote::Gnote	signature:(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line)
gnote::Gnote::on_main_window_closed	src/gnote.cpp	/^  void Gnote::on_main_window_closed(Gtk::Window *win)$/;"	f	class:gnote::Gnote	signature:(Gtk::Window *win)
gnote::Gnote::on_main_window_closed	src/gnote.hpp	/^  void on_main_window_closed(Gtk::Window*);$/;"	p	class:gnote::Gnote	access:private	signature:(Gtk::Window*)
gnote::Gnote::on_new_note_app_action	src/gnote.cpp	/^  void Gnote::on_new_note_app_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_new_note_app_action	src/gnote.hpp	/^  void on_new_note_app_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::VariantBase&)
gnote::Gnote::on_new_window_action	src/gnote.cpp	/^  void Gnote::on_new_window_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_new_window_action	src/gnote.hpp	/^  void on_new_window_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::VariantBase&)
gnote::Gnote::on_preferences_response	src/gnote.cpp	/^  void Gnote::on_preferences_response(int \/*res*\/)$/;"	f	class:gnote::Gnote	signature:(int )
gnote::Gnote::on_preferences_response	src/gnote.hpp	/^  void on_preferences_response(int res);$/;"	p	class:gnote::Gnote	access:public	signature:(int res)
gnote::Gnote::on_quit_gnote_action	src/gnote.cpp	/^  void Gnote::on_quit_gnote_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_quit_gnote_action	src/gnote.hpp	/^  void on_quit_gnote_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
gnote::Gnote::on_setting_changed	src/gnote.cpp	/^  void Gnote::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::Gnote	signature:(const Glib::ustring & key)
gnote::Gnote::on_setting_changed	src/gnote.hpp	/^  void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::ustring & key)
gnote::Gnote::on_show_about_action	src/gnote.cpp	/^  void Gnote::on_show_about_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_show_about_action	src/gnote.hpp	/^  void on_show_about_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
gnote::Gnote::on_show_help_action	src/gnote.cpp	/^  void Gnote::on_show_help_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_show_help_action	src/gnote.hpp	/^  void on_show_help_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
gnote::Gnote::on_show_preferences_action	src/gnote.cpp	/^  void Gnote::on_show_preferences_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::on_show_preferences_action	src/gnote.hpp	/^  void on_show_preferences_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
gnote::Gnote::on_startup	src/gnote.cpp	/^  void Gnote::on_startup()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::on_sync_dialog_response	src/gnote.cpp	/^  void Gnote::on_sync_dialog_response(int)$/;"	f	class:gnote::Gnote	signature:(int)
gnote::Gnote::on_sync_dialog_response	src/gnote.hpp	/^  void on_sync_dialog_response(int response_id);$/;"	p	class:gnote::Gnote	access:private	signature:(int response_id)
gnote::Gnote::open_note	src/gnote.cpp	/^  void Gnote::open_note(const Note::Ptr & note)$/;"	f	class:gnote::Gnote	signature:(const Note::Ptr & note)
gnote::Gnote::open_note_sync_window	src/gnote.cpp	/^  void Gnote::open_note_sync_window(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
gnote::Gnote::open_note_sync_window	src/gnote.hpp	/^  void open_note_sync_window(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
gnote::Gnote::open_search_all	src/gnote.cpp	/^  void Gnote::open_search_all()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::override	src/gnote.hpp	/^  virtual MainWindow & get_main_window() override;$/;"	m	class:gnote::Gnote	access:public
gnote::Gnote::override	src/gnote.hpp	/^  virtual MainWindow & get_window_for_note() override;$/;"	m	class:gnote::Gnote	access:public
gnote::Gnote::override	src/gnote.hpp	/^  virtual MainWindow & new_main_window() override;$/;"	m	class:gnote::Gnote	access:public
gnote::Gnote::override	src/gnote.hpp	/^  virtual int on_command_line(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line) override;$/;"	m	class:gnote::Gnote	access:protected
gnote::Gnote::override	src/gnote.hpp	/^  virtual void on_startup() override;$/;"	m	class:gnote::Gnote	access:protected
gnote::Gnote::override	src/gnote.hpp	/^  virtual void open_note(const Note::Ptr & note) override;$/;"	m	class:gnote::Gnote	access:public
gnote::Gnote::override	src/gnote.hpp	/^  virtual void open_search_all() override;$/;"	m	class:gnote::Gnote	access:public
gnote::Gnote::register_object	src/gnote.cpp	/^  void Gnote::register_object()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::register_object	src/gnote.hpp	/^  void register_object();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::register_remote_control	src/gnote.cpp	/^  void Gnote::register_remote_control(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)$/;"	f	class:gnote::Gnote	signature:(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)
gnote::Gnote::register_remote_control	src/gnote.hpp	/^  static void register_remote_control(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish);$/;"	p	class:gnote::Gnote	access:public	signature:(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)
gnote::Gnote::set_tray	src/gnote.hpp	/^  void set_tray(const Tray::Ptr & tray)$/;"	f	class:gnote::Gnote	access:public	signature:(const Tray::Ptr & tray)
gnote::Gnote::setup_global_actions	src/gnote.cpp	/^  void Gnote::setup_global_actions()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::setup_global_actions	src/gnote.hpp	/^  void setup_global_actions();$/;"	p	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::show_tray_icon_timeout	src/gnote.cpp	/^  bool Gnote::show_tray_icon_timeout()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::show_tray_icon_timeout	src/gnote.hpp	/^  bool show_tray_icon_timeout();$/;"	p	class:gnote::Gnote	access:private	signature:()
gnote::Gnote::start_tray_icon	src/gnote.cpp	/^  void Gnote::start_tray_icon()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::start_tray_icon	src/gnote.hpp	/^  void start_tray_icon();$/;"	p	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::tray_icon_showing	src/gnote.hpp	/^  bool tray_icon_showing()$/;"	f	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::windowed	src/gnote.hpp	/^  bool windowed()$/;"	f	class:gnote::Gnote	access:public	signature:()
gnote::Gnote::~Gnote	src/gnote.cpp	/^  Gnote::~Gnote()$/;"	f	class:gnote::Gnote	signature:()
gnote::Gnote::~Gnote	src/gnote.hpp	/^  ~Gnote();$/;"	p	class:gnote::Gnote	access:public	signature:()
gnote::GnoteCommandLine	src/gnote.hpp	/^class GnoteCommandLine$/;"	c	namespace:gnote
gnote::GnoteCommandLine::GnoteCommandLine	src/gnote.cpp	/^  GnoteCommandLine::GnoteCommandLine()$/;"	f	class:gnote::GnoteCommandLine	signature:()
gnote::GnoteCommandLine::GnoteCommandLine	src/gnote.hpp	/^  GnoteCommandLine();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnoteCommandLine::background	src/gnote.hpp	/^  bool        background()$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnoteCommandLine::display_note	src/gnote.cpp	/^  bool GnoteCommandLine::display_note(T & remote, std::string uri)$/;"	f	class:gnote::GnoteCommandLine	signature:(T & remote, std::string uri)
gnote::GnoteCommandLine::display_note	src/gnote.hpp	/^  bool        display_note(T & remote, std::string uri);$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:(T & remote, std::string uri)
gnote::GnoteCommandLine::execute	src/gnote.cpp	/^  int GnoteCommandLine::execute()$/;"	f	class:gnote::GnoteCommandLine	signature:()
gnote::GnoteCommandLine::execute	src/gnote.cpp	/^  void GnoteCommandLine::execute(T & remote)$/;"	f	class:gnote::GnoteCommandLine	signature:(T & remote)
gnote::GnoteCommandLine::execute	src/gnote.hpp	/^  int execute();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnoteCommandLine::execute	src/gnote.hpp	/^  void execute(T & remote);$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:(T & remote)
gnote::GnoteCommandLine::immediate_execute	src/gnote.cpp	/^  int GnoteCommandLine::immediate_execute()$/;"	f	class:gnote::GnoteCommandLine	signature:()
gnote::GnoteCommandLine::immediate_execute	src/gnote.hpp	/^  int immediate_execute();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnoteCommandLine::m_background	src/gnote.hpp	/^  bool        m_background;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_context	src/gnote.hpp	/^  GOptionContext *m_context;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_do_new_note	src/gnote.hpp	/^  bool        m_do_new_note;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_do_search	src/gnote.hpp	/^  bool        m_do_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_highlight_search	src/gnote.hpp	/^  gchar*      m_highlight_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_new_note_name	src/gnote.hpp	/^  std::string m_new_note_name;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_note_path	src/gnote.hpp	/^  gchar *     m_note_path;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_open_external_note_path	src/gnote.hpp	/^  std::string m_open_external_note_path;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_open_note	src/gnote.hpp	/^  gchar*      m_open_note;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_open_note_name	src/gnote.hpp	/^  std::string m_open_note_name;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_open_note_uri	src/gnote.hpp	/^  std::string m_open_note_uri;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_open_start_here	src/gnote.hpp	/^  bool        m_open_start_here;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_search	src/gnote.hpp	/^  std::string m_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_shell_search	src/gnote.hpp	/^  bool        m_shell_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_show_version	src/gnote.hpp	/^  bool        m_show_version;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::m_use_panel	src/gnote.hpp	/^  bool        m_use_panel;$/;"	m	class:gnote::GnoteCommandLine	access:private
gnote::GnoteCommandLine::needs_execute	src/gnote.cpp	/^  bool GnoteCommandLine::needs_execute() const$/;"	f	class:gnote::GnoteCommandLine	signature:() const
gnote::GnoteCommandLine::needs_execute	src/gnote.hpp	/^  bool        needs_execute() const;$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:() const
gnote::GnoteCommandLine::needs_immediate_execute	src/gnote.cpp	/^  bool GnoteCommandLine::needs_immediate_execute() const$/;"	f	class:gnote::GnoteCommandLine	signature:() const
gnote::GnoteCommandLine::needs_immediate_execute	src/gnote.hpp	/^  bool        needs_immediate_execute() const;$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:() const
gnote::GnoteCommandLine::note_path	src/gnote.hpp	/^  const gchar * note_path() const$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:() const
gnote::GnoteCommandLine::parse	src/gnote.cpp	/^  void GnoteCommandLine::parse(int &argc, gchar ** & argv)$/;"	f	class:gnote::GnoteCommandLine	signature:(int &argc, gchar ** & argv)
gnote::GnoteCommandLine::parse	src/gnote.hpp	/^  void parse(int &argc, gchar ** & argv);$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:(int &argc, gchar ** & argv)
gnote::GnoteCommandLine::parse_func	src/gnote.cpp	/^  gboolean GnoteCommandLine::parse_func(const gchar *option_name,$/;"	f	class:gnote::GnoteCommandLine	signature:(const gchar *option_name, const gchar *value, gpointer data, GError ** )
gnote::GnoteCommandLine::parse_func	src/gnote.hpp	/^  static gboolean parse_func(const gchar *option_name,$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:(const gchar *option_name, const gchar *value, gpointer data, GError **error)
gnote::GnoteCommandLine::print_version	src/gnote.cpp	/^  void GnoteCommandLine::print_version()$/;"	f	class:gnote::GnoteCommandLine	signature:()
gnote::GnoteCommandLine::print_version	src/gnote.hpp	/^  void        print_version();$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:()
gnote::GnoteCommandLine::shell_search	src/gnote.hpp	/^  bool shell_search()$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnoteCommandLine::~GnoteCommandLine	src/gnote.cpp	/^  GnoteCommandLine::~GnoteCommandLine()$/;"	f	class:gnote::GnoteCommandLine	signature:()
gnote::GnoteCommandLine::~GnoteCommandLine	src/gnote.hpp	/^  ~GnoteCommandLine();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
gnote::GnotePrefsKeybinder	src/prefskeybinder.hpp	/^class GnotePrefsKeybinder$/;"	c	namespace:gnote	inherits:PrefsKeybinder
gnote::GnotePrefsKeybinder::GnotePrefsKeybinder	src/prefskeybinder.cpp	/^  GnotePrefsKeybinder::GnotePrefsKeybinder(IKeybinder & keybinder,$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon)
gnote::GnotePrefsKeybinder::GnotePrefsKeybinder	src/prefskeybinder.hpp	/^  GnotePrefsKeybinder(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(IKeybinder & keybinder, NoteManager & manager, IGnoteTray & trayicon)
gnote::GnotePrefsKeybinder::enable_disable	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::enable_disable(bool enable)$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(bool enable)
gnote::GnotePrefsKeybinder::enable_disable	src/prefskeybinder.hpp	/^  void enable_disable(bool enable);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(bool enable)
gnote::GnotePrefsKeybinder::enable_keybindings_changed	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::enable_keybindings_changed(const Glib::ustring & key)$/;"	f	class:gnote::GnotePrefsKeybinder	signature:(const Glib::ustring & key)
gnote::GnotePrefsKeybinder::enable_keybindings_changed	src/prefskeybinder.hpp	/^  void enable_keybindings_changed(const Glib::ustring & key);$/;"	p	class:gnote::GnotePrefsKeybinder	access:public	signature:(const Glib::ustring & key)
gnote::GnotePrefsKeybinder::key_create_new_note	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_create_new_note()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
gnote::GnotePrefsKeybinder::key_create_new_note	src/prefskeybinder.hpp	/^  void key_create_new_note();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
gnote::GnotePrefsKeybinder::key_open_recent_changes	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_open_recent_changes()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
gnote::GnotePrefsKeybinder::key_open_recent_changes	src/prefskeybinder.hpp	/^  void key_open_recent_changes();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
gnote::GnotePrefsKeybinder::key_open_search	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_open_search()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
gnote::GnotePrefsKeybinder::key_open_search	src/prefskeybinder.hpp	/^  void key_open_search();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
gnote::GnotePrefsKeybinder::key_openstart_here	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_openstart_here()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
gnote::GnotePrefsKeybinder::key_openstart_here	src/prefskeybinder.hpp	/^  void key_openstart_here();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
gnote::GnotePrefsKeybinder::key_show_menu	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_show_menu()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
gnote::GnotePrefsKeybinder::key_show_menu	src/prefskeybinder.hpp	/^  void key_show_menu();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
gnote::GnotePrefsKeybinder::m_manager	src/prefskeybinder.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::GnotePrefsKeybinder	access:private
gnote::GnotePrefsKeybinder::m_trayicon	src/prefskeybinder.hpp	/^  IGnoteTray & m_trayicon;$/;"	m	class:gnote::GnotePrefsKeybinder	access:private
gnote::HasActions	src/mainwindowembeds.hpp	/^class HasActions$/;"	c	namespace:gnote
gnote::HasActions::get_widget_actions	src/mainwindowembeds.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() = 0;$/;"	p	class:gnote::HasActions	access:public	signature:()
gnote::HasActions::signal_actions_changed	src/mainwindowembeds.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() = 0;$/;"	p	class:gnote::HasActions	access:public	signature:()
gnote::HasEmbeddableToolbar	src/mainwindowembeds.hpp	/^class HasEmbeddableToolbar$/;"	c	namespace:gnote
gnote::HasEmbeddableToolbar::embeddable_toolbar	src/mainwindowembeds.hpp	/^  virtual Gtk::Widget *embeddable_toolbar() = 0;$/;"	p	class:gnote::HasEmbeddableToolbar	access:public	signature:()
gnote::IActionManager	src/iactionmanager.hpp	/^class IActionManager$/;"	c	namespace:gnote	inherits:base::Singleton
gnote::IActionManager::APP_ACTION_LAST	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_LAST = 3;$/;"	m	class:gnote::IActionManager	file:
gnote::IActionManager::APP_ACTION_LAST	src/iactionmanager.hpp	/^  static const int APP_ACTION_LAST;$/;"	m	class:gnote::IActionManager	access:public
gnote::IActionManager::APP_ACTION_MANAGE	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_MANAGE = 2;$/;"	m	class:gnote::IActionManager	file:
gnote::IActionManager::APP_ACTION_MANAGE	src/iactionmanager.hpp	/^  static const int APP_ACTION_MANAGE;$/;"	m	class:gnote::IActionManager	access:public
gnote::IActionManager::APP_ACTION_NEW	src/iactionmanager.cpp	/^const int IActionManager::APP_ACTION_NEW = 1;$/;"	m	class:gnote::IActionManager	file:
gnote::IActionManager::APP_ACTION_NEW	src/iactionmanager.hpp	/^  static const int APP_ACTION_NEW;$/;"	m	class:gnote::IActionManager	access:public
gnote::IActionManager::add_app_action	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> add_app_action(const std::string & name) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name)
gnote::IActionManager::add_app_menu_item	src/iactionmanager.hpp	/^  virtual void add_app_menu_item(int section, int order, const std::string & label,$/;"	p	class:gnote::IActionManager	access:public	signature:(int section, int order, const std::string & label, const std::string & action_def)
gnote::IActionManager::add_main_window_search_action	src/iactionmanager.hpp	/^  virtual void add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::IActionManager::add_tray_menu_item	src/iactionmanager.hpp	/^  virtual void add_tray_menu_item(Gtk::MenuItem & item) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(Gtk::MenuItem & item)
gnote::IActionManager::get_app_action	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> get_app_action(const std::string & name) const = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name) const
gnote::IActionManager::get_main_window_search_actions	src/iactionmanager.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_search_actions() = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:()
gnote::IActionManager::get_tray_menu_items	src/iactionmanager.hpp	/^  virtual std::vector<Gtk::MenuItem*> get_tray_menu_items() = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:()
gnote::IActionManager::operator []	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gtk::Action> operator[](const std::string & n) const = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & n) const
gnote::IActionManager::remove_main_window_search_action	src/iactionmanager.hpp	/^  virtual void remove_main_window_search_action(const std::string & name) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name)
gnote::IActionManager::remove_tray_menu_item	src/iactionmanager.hpp	/^  virtual void remove_tray_menu_item(Gtk::MenuItem & item) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(Gtk::MenuItem & item)
gnote::IActionManager::signal_main_window_search_actions_changed	src/iactionmanager.hpp	/^  sigc::signal<void> signal_main_window_search_actions_changed;$/;"	m	class:gnote::IActionManager	access:public
gnote::IActionManager::~IActionManager	src/iactionmanager.cpp	/^IActionManager::~IActionManager()$/;"	f	class:gnote::IActionManager	signature:()
gnote::IActionManager::~IActionManager	src/iactionmanager.hpp	/^  virtual ~IActionManager();$/;"	p	class:gnote::IActionManager	access:public	signature:()
gnote::IGnote	src/ignote.hpp	/^class IGnote$/;"	c	namespace:gnote	inherits:base::Singleton
gnote::IGnote::cache_dir	src/ignote.cpp	/^std::string IGnote::cache_dir()$/;"	f	class:gnote::IGnote	signature:()
gnote::IGnote::cache_dir	src/ignote.hpp	/^  static std::string cache_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::conf_dir	src/ignote.cpp	/^std::string IGnote::conf_dir()$/;"	f	class:gnote::IGnote	signature:()
gnote::IGnote::conf_dir	src/ignote.hpp	/^  static std::string conf_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::data_dir	src/ignote.cpp	/^std::string IGnote::data_dir()$/;"	f	class:gnote::IGnote	signature:()
gnote::IGnote::data_dir	src/ignote.hpp	/^  static std::string data_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::get_main_window	src/ignote.hpp	/^  virtual MainWindow & get_main_window() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::get_window_for_note	src/ignote.hpp	/^  virtual MainWindow & get_window_for_note() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::new_main_window	src/ignote.hpp	/^  virtual MainWindow & new_main_window() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::old_note_dir	src/ignote.cpp	/^std::string IGnote::old_note_dir()$/;"	f	class:gnote::IGnote	signature:()
gnote::IGnote::old_note_dir	src/ignote.hpp	/^  static std::string old_note_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::open_note	src/ignote.hpp	/^  virtual void open_note(const Note::Ptr & note) = 0;$/;"	p	class:gnote::IGnote	access:public	signature:(const Note::Ptr & note)
gnote::IGnote::open_search_all	src/ignote.hpp	/^  virtual void open_search_all() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnote::signal_quit	src/ignote.hpp	/^  sigc::signal<void> signal_quit;$/;"	m	class:gnote::IGnote	access:public
gnote::IGnote::~IGnote	src/ignote.cpp	/^IGnote::~IGnote()$/;"	f	class:gnote::IGnote	signature:()
gnote::IGnote::~IGnote	src/ignote.hpp	/^  virtual ~IGnote();$/;"	p	class:gnote::IGnote	access:public	signature:()
gnote::IGnoteTray	src/tray.hpp	/^class IGnoteTray$/;"	c	namespace:gnote
gnote::IGnoteTray::menu_opens_upward	src/tray.hpp	/^  virtual bool menu_opens_upward() = 0;$/;"	p	class:gnote::IGnoteTray	access:public	signature:()
gnote::IGnoteTray::show_menu	src/tray.hpp	/^  virtual void show_menu(bool select_first_item) = 0;$/;"	p	class:gnote::IGnoteTray	access:public	signature:(bool select_first_item)
gnote::IKeybinder	src/keybinder.hpp	/^class IKeybinder$/;"	c	namespace:gnote
gnote::IKeybinder::bind	src/keybinder.hpp	/^  virtual void bind(const std::string & keystring, const sigc::slot<void> & handler) = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & keystring, const sigc::slot<void> & handler)
gnote::IKeybinder::get_accel_keys	src/keybinder.hpp	/^  virtual bool get_accel_keys(const std::string & prefs_path, guint & keyval, $/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & prefs_path, guint & keyval, Gdk::ModifierType & mods)
gnote::IKeybinder::unbind	src/keybinder.hpp	/^  virtual void unbind(const std::string & keystring) = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & keystring)
gnote::IKeybinder::unbind_all	src/keybinder.hpp	/^  virtual void unbind_all() = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:()
gnote::IKeybinder::~IKeybinder	src/keybinder.hpp	/^  virtual ~IKeybinder(){}$/;"	f	class:gnote::IKeybinder	access:public	signature:()
gnote::INSERT_TIMESTAMP_ORDER	src/iactionmanager.hpp	/^  INSERT_TIMESTAMP_ORDER = 300,$/;"	e	enum:gnote::NoteActionOrder
gnote::IRemoteControl	src/dbus/iremotecontrol.hpp	/^typedef org::gnome::Gnote::RemoteControl_adaptor IRemoteControl;$/;"	t	namespace:gnote
gnote::ITagManager	src/itagmanager.hpp	/^class ITagManager$/;"	c	namespace:gnote	inherits:base::Singleton
gnote::ITagManager::TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG = "template:save-selection";$/;"	m	class:gnote::ITagManager	file:
gnote::ITagManager::TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_SELECTION_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
gnote::ITagManager::TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG = "template:save-size";$/;"	m	class:gnote::ITagManager	file:
gnote::ITagManager::TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_SIZE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
gnote::ITagManager::TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG = "template:save-title";$/;"	m	class:gnote::ITagManager	file:
gnote::ITagManager::TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SAVE_TITLE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
gnote::ITagManager::TEMPLATE_NOTE_SYSTEM_TAG	src/itagmanager.cpp	/^const char *ITagManager::TEMPLATE_NOTE_SYSTEM_TAG = "template";$/;"	m	class:gnote::ITagManager	file:
gnote::ITagManager::TEMPLATE_NOTE_SYSTEM_TAG	src/itagmanager.hpp	/^  static const char * TEMPLATE_NOTE_SYSTEM_TAG;$/;"	m	class:gnote::ITagManager	access:public
gnote::ITagManager::all_tags	src/itagmanager.hpp	/^  virtual void all_tags(std::list<Tag::Ptr> &) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(std::list<Tag::Ptr> &) const
gnote::ITagManager::get_or_create_system_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_or_create_system_tag(const std::string & name) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & name)
gnote::ITagManager::get_or_create_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_or_create_tag(const std::string &) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string &)
gnote::ITagManager::get_system_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_system_tag(const std::string & tag_name) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & tag_name) const
gnote::ITagManager::get_tag	src/itagmanager.hpp	/^  virtual Tag::Ptr get_tag(const std::string & tag_name) const = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const std::string & tag_name) const
gnote::ITagManager::remove_tag	src/itagmanager.hpp	/^  virtual void remove_tag(const Tag::Ptr & tag) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const Tag::Ptr & tag)
gnote::ITagManager::~ITagManager	src/itagmanager.cpp	/^ITagManager::~ITagManager()$/;"	f	class:gnote::ITagManager	signature:()
gnote::ITagManager::~ITagManager	src/itagmanager.hpp	/^  virtual ~ITagManager();$/;"	p	class:gnote::ITagManager	access:public	signature:()
gnote::IconManager	src/iconmanager.hpp	/^class IconManager$/;"	c	namespace:gnote	inherits:base::Singleton
gnote::IconManager::ACTIVE_NOTES	src/iconmanager.cpp	/^const char *IconManager::ACTIVE_NOTES = "active-notes";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::ACTIVE_NOTES	src/iconmanager.hpp	/^  static const char *ACTIVE_NOTES;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::BUG	src/iconmanager.cpp	/^const char *IconManager::BUG = "bug";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::BUG	src/iconmanager.hpp	/^  static const char *BUG;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::EMBLEM_PACKAGE	src/iconmanager.cpp	/^const char *IconManager::EMBLEM_PACKAGE = "emblem-package";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::EMBLEM_PACKAGE	src/iconmanager.hpp	/^  static const char *EMBLEM_PACKAGE;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::FILTER_NOTE_ALL	src/iconmanager.cpp	/^const char *IconManager::FILTER_NOTE_ALL = "filter-note-all";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::FILTER_NOTE_ALL	src/iconmanager.hpp	/^  static const char *FILTER_NOTE_ALL;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::FILTER_NOTE_UNFILED	src/iconmanager.cpp	/^const char *IconManager::FILTER_NOTE_UNFILED = "filter-note-unfiled";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::FILTER_NOTE_UNFILED	src/iconmanager.hpp	/^  static const char *FILTER_NOTE_UNFILED;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::GNOTE	src/iconmanager.cpp	/^const char *IconManager::GNOTE = "gnote";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::GNOTE	src/iconmanager.hpp	/^  static const char *GNOTE;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::IconDef	src/iconmanager.hpp	/^  typedef std::pair<std::string, int> IconDef;$/;"	t	class:gnote::IconManager	access:private
gnote::IconManager::IconMap	src/iconmanager.hpp	/^  typedef std::map<IconDef, Glib::RefPtr<Gdk::Pixbuf> > IconMap;$/;"	t	class:gnote::IconManager	access:private
gnote::IconManager::NOTE	src/iconmanager.cpp	/^const char *IconManager::NOTE = "note";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::NOTE	src/iconmanager.hpp	/^  static const char *NOTE;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::NOTEBOOK	src/iconmanager.cpp	/^const char *IconManager::NOTEBOOK = "notebook";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::NOTEBOOK	src/iconmanager.hpp	/^  static const char *NOTEBOOK;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::NOTEBOOK_NEW	src/iconmanager.cpp	/^const char *IconManager::NOTEBOOK_NEW = "notebook-new";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::NOTEBOOK_NEW	src/iconmanager.hpp	/^  static const char *NOTEBOOK_NEW;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::NOTE_NEW	src/iconmanager.cpp	/^const char *IconManager::NOTE_NEW = "note-new";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::NOTE_NEW	src/iconmanager.hpp	/^  static const char *NOTE_NEW;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::PIN_ACTIVE	src/iconmanager.cpp	/^const char *IconManager::PIN_ACTIVE = "pin-active";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::PIN_ACTIVE	src/iconmanager.hpp	/^  static const char *PIN_ACTIVE;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::PIN_DOWN	src/iconmanager.cpp	/^const char *IconManager::PIN_DOWN = "pin-down";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::PIN_DOWN	src/iconmanager.hpp	/^  static const char *PIN_DOWN;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::PIN_UP	src/iconmanager.cpp	/^const char *IconManager::PIN_UP = "pin-up";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::PIN_UP	src/iconmanager.hpp	/^  static const char *PIN_UP;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::SPECIAL_NOTES	src/iconmanager.cpp	/^const char *IconManager::SPECIAL_NOTES = "special-notes";$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::SPECIAL_NOTES	src/iconmanager.hpp	/^  static const char *SPECIAL_NOTES;$/;"	m	class:gnote::IconManager	access:public
gnote::IconManager::get_icon	src/iconmanager.cpp	/^Glib::RefPtr<Gdk::Pixbuf> IconManager::get_icon(const std::string & name, int size)$/;"	f	class:gnote::IconManager	signature:(const std::string & name, int size)
gnote::IconManager::get_icon	src/iconmanager.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> get_icon(const std::string &, int);$/;"	p	class:gnote::IconManager	access:public	signature:(const std::string &, int)
gnote::IconManager::lookup_icon	src/iconmanager.cpp	/^Gtk::IconInfo IconManager::lookup_icon(const std::string & name, int size)$/;"	f	class:gnote::IconManager	signature:(const std::string & name, int size)
gnote::IconManager::lookup_icon	src/iconmanager.hpp	/^  Gtk::IconInfo lookup_icon(const std::string &, int);$/;"	p	class:gnote::IconManager	access:public	signature:(const std::string &, int)
gnote::IconManager::m_icons	src/iconmanager.hpp	/^  IconMap m_icons;$/;"	m	class:gnote::IconManager	access:private
gnote::IconManager::s_obj	src/iconmanager.cpp	/^IconManager IconManager::s_obj;$/;"	m	class:gnote::IconManager	file:
gnote::IconManager::s_obj	src/iconmanager.hpp	/^  static IconManager s_obj;$/;"	m	class:gnote::IconManager	access:private
gnote::ImportAddin	src/importaddin.hpp	/^class ImportAddin $/;"	c	namespace:gnote	inherits:ApplicationAddin
gnote::ImportAddin::IFACE_NAME	src/importaddin.cpp	/^  const char * ImportAddin::IFACE_NAME = "gnote::ImportAddin";$/;"	m	class:gnote::ImportAddin	file:
gnote::ImportAddin::IFACE_NAME	src/importaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::ImportAddin	access:public
gnote::ImportAddin::ImportAddin	src/importaddin.cpp	/^  ImportAddin::ImportAddin()$/;"	f	class:gnote::ImportAddin	signature:()
gnote::ImportAddin::ImportAddin	src/importaddin.hpp	/^  ImportAddin();$/;"	p	class:gnote::ImportAddin	access:public	signature:()
gnote::ImportAddin::first_run	src/importaddin.hpp	/^  virtual bool first_run(NoteManager & manager) = 0;$/;"	p	class:gnote::ImportAddin	access:public	signature:(NoteManager & manager)
gnote::ImportAddin::initialized	src/importaddin.cpp	/^  bool ImportAddin::initialized ()$/;"	f	class:gnote::ImportAddin	signature:()
gnote::ImportAddin::m_initialized	src/importaddin.hpp	/^  bool m_initialized;$/;"	m	class:gnote::ImportAddin	access:protected
gnote::ImportAddin::override	src/importaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:gnote::ImportAddin	access:public
gnote::ImportAddin::want_to_run	src/importaddin.hpp	/^  virtual bool want_to_run(NoteManager & manager) = 0;$/;"	p	class:gnote::ImportAddin	access:public	signature:(NoteManager & manager)
gnote::InsertAction	src/undo.hpp	/^class InsertAction$/;"	c	namespace:gnote	inherits:SplitterAction
gnote::InsertAction::InsertAction	src/undo.cpp	/^  InsertAction::InsertAction(const Gtk::TextIter & start, $/;"	f	class:gnote::InsertAction	signature:(const Gtk::TextIter & start, const std::string & , int length, const ChopBuffer::Ptr & chop_buf)
gnote::InsertAction::InsertAction	src/undo.hpp	/^  InsertAction(const Gtk::TextIter & start, const std::string & text, int length,$/;"	p	class:gnote::InsertAction	access:public	signature:(const Gtk::TextIter & start, const std::string & text, int length, const ChopBuffer::Ptr & chop_buf)
gnote::InsertAction::can_merge	src/undo.cpp	/^  bool InsertAction::can_merge (const EditAction * action) const$/;"	f	class:gnote::InsertAction	signature:(const EditAction * action) const
gnote::InsertAction::destroy	src/undo.cpp	/^  void InsertAction::destroy ()$/;"	f	class:gnote::InsertAction	signature:()
gnote::InsertAction::m_index	src/undo.hpp	/^  int m_index;$/;"	m	class:gnote::InsertAction	access:private
gnote::InsertAction::m_is_paste	src/undo.hpp	/^  bool m_is_paste;$/;"	m	class:gnote::InsertAction	access:private
gnote::InsertAction::merge	src/undo.cpp	/^  void InsertAction::merge (EditAction * action)$/;"	f	class:gnote::InsertAction	signature:(EditAction * action)
gnote::InsertAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::InsertAction	access:public
gnote::InsertAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::InsertAction	access:public
gnote::InsertAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::InsertAction	access:public
gnote::InsertAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertAction	access:public
gnote::InsertAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertAction	access:public
gnote::InsertAction::redo	src/undo.cpp	/^  void InsertAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertAction	signature:(Gtk::TextBuffer * buffer)
gnote::InsertAction::undo	src/undo.cpp	/^  void InsertAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertAction	signature:(Gtk::TextBuffer * buffer)
gnote::InsertBulletAction	src/undo.hpp	/^class InsertBulletAction$/;"	c	namespace:gnote	inherits:EditAction
gnote::InsertBulletAction::InsertBulletAction	src/undo.cpp	/^  InsertBulletAction::InsertBulletAction(int offset, int depth, $/;"	f	class:gnote::InsertBulletAction	signature:(int offset, int depth, Pango::Direction direction)
gnote::InsertBulletAction::InsertBulletAction	src/undo.hpp	/^  InsertBulletAction(int offset, int depth, Pango::Direction direction);$/;"	p	class:gnote::InsertBulletAction	access:public	signature:(int offset, int depth, Pango::Direction direction)
gnote::InsertBulletAction::can_merge	src/undo.cpp	/^  bool InsertBulletAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::InsertBulletAction	signature:(const EditAction * ) const
gnote::InsertBulletAction::destroy	src/undo.cpp	/^  void InsertBulletAction::destroy ()$/;"	f	class:gnote::InsertBulletAction	signature:()
gnote::InsertBulletAction::m_depth	src/undo.hpp	/^  int m_depth;$/;"	m	class:gnote::InsertBulletAction	access:private
gnote::InsertBulletAction::m_direction	src/undo.hpp	/^  Pango::Direction m_direction;$/;"	m	class:gnote::InsertBulletAction	access:private
gnote::InsertBulletAction::m_offset	src/undo.hpp	/^  int m_offset;$/;"	m	class:gnote::InsertBulletAction	access:private
gnote::InsertBulletAction::merge	src/undo.cpp	/^  void InsertBulletAction::merge (EditAction * )$/;"	f	class:gnote::InsertBulletAction	signature:(EditAction * )
gnote::InsertBulletAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::InsertBulletAction	access:public
gnote::InsertBulletAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::InsertBulletAction	access:public
gnote::InsertBulletAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::InsertBulletAction	access:public
gnote::InsertBulletAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertBulletAction	access:public
gnote::InsertBulletAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertBulletAction	access:public
gnote::InsertBulletAction::redo	src/undo.cpp	/^  void InsertBulletAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertBulletAction	signature:(Gtk::TextBuffer * buffer)
gnote::InsertBulletAction::undo	src/undo.cpp	/^  void InsertBulletAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertBulletAction	signature:(Gtk::TextBuffer * buffer)
gnote::KeybindingToAccel	src/tray.hpp	/^class KeybindingToAccel$/;"	c	namespace:gnote
gnote::KeybindingToAccel::add_accelerator	src/tray.cpp	/^  void KeybindingToAccel::add_accelerator(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)$/;"	f	class:gnote::KeybindingToAccel	signature:(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)
gnote::KeybindingToAccel::add_accelerator	src/tray.hpp	/^  static void add_accelerator(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key);$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:(IKeybinder & keybinder, Gtk::MenuItem & item, const std::string & key)
gnote::KeybindingToAccel::get_accel_group	src/tray.cpp	/^  KeybindingToAccel::get_accel_group()$/;"	f	class:gnote::KeybindingToAccel	signature:()
gnote::KeybindingToAccel::get_accel_group	src/tray.hpp	/^  static Glib::RefPtr<Gtk::AccelGroup> get_accel_group();$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:()
gnote::KeybindingToAccel::get_shortcut	src/tray.cpp	/^  std::string KeybindingToAccel::get_shortcut (const std::string & key)$/;"	f	class:gnote::KeybindingToAccel	signature:(const std::string & key)
gnote::KeybindingToAccel::get_shortcut	src/tray.hpp	/^  static std::string get_shortcut (const std::string & key);$/;"	p	class:gnote::KeybindingToAccel	access:public	signature:(const std::string & key)
gnote::KeybindingToAccel::s_accel_group	src/tray.cpp	/^  Glib::RefPtr<Gtk::AccelGroup> KeybindingToAccel::s_accel_group;$/;"	m	class:gnote::KeybindingToAccel	file:
gnote::KeybindingToAccel::s_accel_group	src/tray.hpp	/^  static Glib::RefPtr<Gtk::AccelGroup> s_accel_group;$/;"	m	class:gnote::KeybindingToAccel	access:private
gnote::META	src/notetag.hpp	/^  META,$/;"	e	enum:gnote::TagSaveType
gnote::MainWindow	src/mainwindow.hpp	/^class MainWindow$/;"	c	namespace:gnote	inherits:utils::ForcedPresentWindow,EmbeddableWidgetHost
gnote::MainWindow::MainWindow	src/mainwindow.cpp	/^MainWindow::MainWindow(const std::string & title)$/;"	f	class:gnote::MainWindow	signature:(const std::string & title)
gnote::MainWindow::MainWindow	src/mainwindow.hpp	/^  explicit MainWindow(const std::string & title);$/;"	p	class:gnote::MainWindow	access:public	signature:(const std::string & title)
gnote::MainWindow::close_on_escape	src/mainwindow.hpp	/^  bool close_on_escape() const$/;"	f	class:gnote::MainWindow	access:public	signature:() const
gnote::MainWindow::close_on_escape	src/mainwindow.hpp	/^  void close_on_escape(bool close_win)$/;"	f	class:gnote::MainWindow	access:public	signature:(bool close_win)
gnote::MainWindow::close_window	src/mainwindow.hpp	/^  virtual void close_window() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
gnote::MainWindow::get_owning	src/mainwindow.cpp	/^MainWindow *MainWindow::get_owning(Gtk::Widget & widget)$/;"	f	class:gnote::MainWindow	signature:(Gtk::Widget & widget)
gnote::MainWindow::get_owning	src/mainwindow.hpp	/^  static MainWindow *get_owning(Gtk::Widget & widget);$/;"	p	class:gnote::MainWindow	access:public	signature:(Gtk::Widget & widget)
gnote::MainWindow::m_close_on_esc	src/mainwindow.hpp	/^  bool m_close_on_esc;$/;"	m	class:gnote::MainWindow	access:private
gnote::MainWindow::new_note	src/mainwindow.hpp	/^  virtual void new_note() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
gnote::MainWindow::present_active	src/mainwindow.cpp	/^MainWindow *MainWindow::present_active(const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note)
gnote::MainWindow::present_active	src/mainwindow.hpp	/^  static MainWindow *present_active(const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note)
gnote::MainWindow::present_default	src/mainwindow.cpp	/^MainWindow *MainWindow::present_default(const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note)
gnote::MainWindow::present_default	src/mainwindow.hpp	/^  static MainWindow *present_default(const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note)
gnote::MainWindow::present_in	src/mainwindow.cpp	/^void MainWindow::present_in(MainWindow & win, const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(MainWindow & win, const Note::Ptr & note)
gnote::MainWindow::present_in	src/mainwindow.hpp	/^  static void present_in(MainWindow & win, const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(MainWindow & win, const Note::Ptr & note)
gnote::MainWindow::present_in_new_window	src/mainwindow.cpp	/^MainWindow *MainWindow::present_in_new_window(const Note::Ptr & note, bool close_on_esc)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note, bool close_on_esc)
gnote::MainWindow::present_in_new_window	src/mainwindow.hpp	/^  static MainWindow *present_in_new_window(const Note::Ptr & note, bool close_on_esacpe);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note, bool close_on_esacpe)
gnote::MainWindow::present_note	src/mainwindow.hpp	/^  virtual void present_note(const Note::Ptr & note) = 0;$/;"	p	class:gnote::MainWindow	access:protected	signature:(const Note::Ptr & note)
gnote::MainWindow::present_search	src/mainwindow.hpp	/^  virtual void present_search() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
gnote::MainWindow::set_search_text	src/mainwindow.hpp	/^  virtual void set_search_text(const std::string & value) = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:(const std::string & value)
gnote::MainWindow::show_search_bar	src/mainwindow.hpp	/^  virtual void show_search_bar(bool grab_focus = true) = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:(bool grab_focus = true)
gnote::ModelColumnRecord	src/noterenamedialog.hpp	/^class ModelColumnRecord$/;"	c	namespace:gnote	inherits:Gtk::TreeModelColumnRecord
gnote::ModelColumnRecord::COLUMN_BOOL	src/noterenamedialog.hpp	/^    COLUMN_BOOL = 0,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
gnote::ModelColumnRecord::COLUMN_COUNT	src/noterenamedialog.hpp	/^    COLUMN_COUNT$/;"	e	enum:gnote::ModelColumnRecord::__anon7
gnote::ModelColumnRecord::COLUMN_NOTE	src/noterenamedialog.hpp	/^    COLUMN_NOTE,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
gnote::ModelColumnRecord::COLUMN_TITLE	src/noterenamedialog.hpp	/^    COLUMN_TITLE,$/;"	e	enum:gnote::ModelColumnRecord::__anon7
gnote::ModelColumnRecord::ModelColumnRecord	src/noterenamedialog.cpp	/^ModelColumnRecord::ModelColumnRecord()$/;"	f	class:gnote::ModelColumnRecord	signature:()
gnote::ModelColumnRecord::ModelColumnRecord	src/noterenamedialog.hpp	/^  ModelColumnRecord();$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:()
gnote::ModelColumnRecord::get_column_note	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<NoteBase::Ptr> & ModelColumnRecord::get_column_note()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_note	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<NoteBase::Ptr> & get_column_note() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::get_column_note_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_note_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_note_num	src/noterenamedialog.hpp	/^  gint get_column_note_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::get_column_selected	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<bool> & ModelColumnRecord::get_column_selected()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_selected	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<bool> & get_column_selected() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::get_column_selected_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_selected_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_selected_num	src/noterenamedialog.hpp	/^  gint get_column_selected_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::get_column_title	src/noterenamedialog.cpp	/^const Gtk::TreeModelColumn<std::string> & ModelColumnRecord::get_column_title()$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_title	src/noterenamedialog.hpp	/^  const Gtk::TreeModelColumn<std::string> & get_column_title() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::get_column_title_num	src/noterenamedialog.cpp	/^gint ModelColumnRecord::get_column_title_num() const$/;"	f	class:gnote::ModelColumnRecord	signature:() const
gnote::ModelColumnRecord::get_column_title_num	src/noterenamedialog.hpp	/^  gint get_column_title_num() const;$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:() const
gnote::ModelColumnRecord::m_column_note	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<NoteBase::Ptr> m_column_note;$/;"	m	class:gnote::ModelColumnRecord	access:private
gnote::ModelColumnRecord::m_column_selected	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<bool> m_column_selected;$/;"	m	class:gnote::ModelColumnRecord	access:private
gnote::ModelColumnRecord::m_column_title	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<std::string> m_column_title;$/;"	m	class:gnote::ModelColumnRecord	access:private
gnote::ModelColumnRecord::~ModelColumnRecord	src/noterenamedialog.cpp	/^ModelColumnRecord::~ModelColumnRecord()$/;"	f	class:gnote::ModelColumnRecord	signature:()
gnote::ModelColumnRecord::~ModelColumnRecord	src/noterenamedialog.hpp	/^  virtual ~ModelColumnRecord();$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:()
gnote::ModelFiller	src/noterenamedialog.cpp	/^class ModelFiller$/;"	c	namespace:gnote	file:	inherits:std::unary_function
gnote::ModelFiller::ModelFiller	src/noterenamedialog.cpp	/^  ModelFiller(const Glib::RefPtr<Gtk::ListStore> & list_store);$/;"	p	class:gnote::ModelFiller	file:	access:public	signature:(const Glib::RefPtr<Gtk::ListStore> & list_store)
gnote::ModelFiller::ModelFiller	src/noterenamedialog.cpp	/^ModelFiller::ModelFiller($/;"	f	class:gnote::ModelFiller	signature:( const Glib::RefPtr<Gtk::ListStore> & list_store)
gnote::ModelFiller::m_list_store	src/noterenamedialog.cpp	/^  Glib::RefPtr<Gtk::ListStore> m_list_store;$/;"	m	class:gnote::ModelFiller	file:	access:private
gnote::ModelFiller::operator ()	src/noterenamedialog.cpp	/^  void operator()(const NoteBase::Ptr & note);$/;"	p	class:gnote::ModelFiller	file:	access:public	signature:(const NoteBase::Ptr & note)
gnote::ModelFiller::operator ()	src/noterenamedialog.cpp	/^void ModelFiller::operator()(const NoteBase::Ptr & note)$/;"	f	class:gnote::ModelFiller	signature:(const NoteBase::Ptr & note)
gnote::MouseHandWatcher	src/watchers.hpp	/^  class MouseHandWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
gnote::MouseHandWatcher::MouseHandWatcher	src/watchers.hpp	/^    MouseHandWatcher()$/;"	f	class:gnote::MouseHandWatcher	access:protected	signature:()
gnote::MouseHandWatcher::_init_static	src/watchers.cpp	/^  void MouseHandWatcher::_init_static()$/;"	f	class:gnote::MouseHandWatcher	signature:()
gnote::MouseHandWatcher::_init_static	src/watchers.hpp	/^    void _init_static();$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:()
gnote::MouseHandWatcher::create	src/watchers.cpp	/^  NoteAddin * MouseHandWatcher::create()$/;"	f	class:gnote::MouseHandWatcher	signature:()
gnote::MouseHandWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::MouseHandWatcher	access:public	signature:()
gnote::MouseHandWatcher::initialize	src/watchers.cpp	/^  void MouseHandWatcher::initialize ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
gnote::MouseHandWatcher::m_hovering_on_link	src/watchers.hpp	/^    bool m_hovering_on_link;$/;"	m	class:gnote::MouseHandWatcher	access:private
gnote::MouseHandWatcher::on_editor_key_press	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_key_press(GdkEventKey* ev)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventKey* ev)
gnote::MouseHandWatcher::on_editor_key_press	src/watchers.hpp	/^    bool on_editor_key_press(GdkEventKey*);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventKey*)
gnote::MouseHandWatcher::on_editor_key_release	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_key_release(GdkEventKey* ev)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventKey* ev)
gnote::MouseHandWatcher::on_editor_key_release	src/watchers.hpp	/^    bool on_editor_key_release(GdkEventKey*);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventKey*)
gnote::MouseHandWatcher::on_editor_motion	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_motion(GdkEventMotion *)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventMotion *)
gnote::MouseHandWatcher::on_editor_motion	src/watchers.hpp	/^    bool on_editor_motion(GdkEventMotion *);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventMotion *)
gnote::MouseHandWatcher::on_note_opened	src/watchers.cpp	/^  void MouseHandWatcher::on_note_opened ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
gnote::MouseHandWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
gnote::MouseHandWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
gnote::MouseHandWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
gnote::MouseHandWatcher::s_hand_cursor	src/watchers.cpp	/^  Glib::RefPtr<Gdk::Cursor> MouseHandWatcher::s_hand_cursor;$/;"	m	class:gnote::MouseHandWatcher	file:
gnote::MouseHandWatcher::s_hand_cursor	src/watchers.hpp	/^    static Glib::RefPtr<Gdk::Cursor> s_hand_cursor;$/;"	m	class:gnote::MouseHandWatcher	access:private
gnote::MouseHandWatcher::s_normal_cursor	src/watchers.cpp	/^  Glib::RefPtr<Gdk::Cursor> MouseHandWatcher::s_normal_cursor;$/;"	m	class:gnote::MouseHandWatcher	file:
gnote::MouseHandWatcher::s_normal_cursor	src/watchers.hpp	/^    static Glib::RefPtr<Gdk::Cursor> s_normal_cursor;$/;"	m	class:gnote::MouseHandWatcher	access:private
gnote::MouseHandWatcher::s_static_inited	src/watchers.cpp	/^  bool MouseHandWatcher::s_static_inited = false;$/;"	m	class:gnote::MouseHandWatcher	file:
gnote::MouseHandWatcher::s_static_inited	src/watchers.hpp	/^    static bool s_static_inited;$/;"	m	class:gnote::MouseHandWatcher	access:private
gnote::MouseHandWatcher::shutdown	src/watchers.cpp	/^  void MouseHandWatcher::shutdown ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
gnote::NOTE_RENAME_ALWAYS_REMOVE_LINKS	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_REMOVE_LINKS = 1,$/;"	e	enum:gnote::NoteRenameBehavior
gnote::NOTE_RENAME_ALWAYS_RENAME_LINKS	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_RENAME_LINKS = 2$/;"	e	enum:gnote::NoteRenameBehavior
gnote::NOTE_RENAME_ALWAYS_SHOW_DIALOG	src/noterenamedialog.hpp	/^  NOTE_RENAME_ALWAYS_SHOW_DIALOG = 0,$/;"	e	enum:gnote::NoteRenameBehavior
gnote::NO_CHANGE	src/tag.hpp	/^    NO_CHANGE,$/;"	e	enum:gnote::ChangeType
gnote::NO_SAVE	src/notetag.hpp	/^  NO_SAVE,$/;"	e	enum:gnote::TagSaveType
gnote::Note	src/note.hpp	/^class Note $/;"	c	namespace:gnote	inherits:NoteBase
gnote::Note::ChildWidgetData	src/note.hpp	/^  struct ChildWidgetData$/;"	s	class:gnote::Note	access:private
gnote::Note::ChildWidgetData::ChildWidgetData	src/note.hpp	/^    ChildWidgetData(const Glib::RefPtr<Gtk::TextChildAnchor> & _anchor,$/;"	f	struct:gnote::Note::ChildWidgetData	access:public	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & _anchor, Gtk::Widget *_widget)
gnote::Note::ChildWidgetData::anchor	src/note.hpp	/^    Glib::RefPtr<Gtk::TextChildAnchor> anchor;$/;"	m	struct:gnote::Note::ChildWidgetData	access:public
gnote::Note::ChildWidgetData::widget	src/note.hpp	/^    Gtk::Widget *widget;$/;"	m	struct:gnote::Note::ChildWidgetData	access:public
gnote::Note::List	src/note.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::Note	access:public
gnote::Note::Note	src/note.cpp	/^  Note::Note(NoteData * _data, const Glib::ustring & filepath, NoteManager & _manager)$/;"	f	class:gnote::Note	signature:(NoteData * _data, const Glib::ustring & filepath, NoteManager & _manager)
gnote::Note::Note	src/note.hpp	/^  Note(NoteData * data, const Glib::ustring & filepath, NoteManager & manager);$/;"	p	class:gnote::Note	access:private	signature:(NoteData * data, const Glib::ustring & filepath, NoteManager & manager)
gnote::Note::Ptr	src/note.hpp	/^  typedef shared_ptr<Note> Ptr;$/;"	t	class:gnote::Note	access:public
gnote::Note::WeakPtr	src/note.hpp	/^  typedef weak_ptr<Note> WeakPtr;$/;"	t	class:gnote::Note	access:public
gnote::Note::add_child_widget	src/note.cpp	/^  void Note::add_child_widget(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor, Gtk::Widget * widget)
gnote::Note::add_child_widget	src/note.hpp	/^  void add_child_widget(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor,$/;"	p	class:gnote::Note	access:public	signature:(const Glib::RefPtr<Gtk::TextChildAnchor> & child_anchor, Gtk::Widget * widget)
gnote::Note::contains_text	src/note.cpp	/^  bool Note::contains_text(const Glib::ustring & text)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & text)
gnote::Note::contains_text	src/note.hpp	/^  bool contains_text(const Glib::ustring & text);$/;"	p	class:gnote::Note	access:private	signature:(const Glib::ustring & text)
gnote::Note::create_existing_note	src/note.cpp	/^  Note::Ptr Note::create_existing_note(NoteData *data,$/;"	f	class:gnote::Note	signature:(NoteData *data, std::string filepath, NoteManager & manager)
gnote::Note::create_existing_note	src/note.hpp	/^  static Note::Ptr create_existing_note(NoteData *data,$/;"	p	class:gnote::Note	access:public	signature:(NoteData *data, std::string filepath, NoteManager & manager)
gnote::Note::create_new_note	src/note.cpp	/^  Note::Ptr Note::create_new_note(const Glib::ustring & title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & title, const Glib::ustring & filename, NoteManager & manager)
gnote::Note::create_new_note	src/note.hpp	/^  static Note::Ptr create_new_note(const Glib::ustring & title,$/;"	p	class:gnote::Note	access:public	signature:(const Glib::ustring & title, const Glib::ustring & filename, NoteManager & manager)
gnote::Note::delete_note	src/note.cpp	/^  void Note::delete_note()$/;"	f	class:gnote::Note	signature:()
gnote::Note::enabled	src/note.cpp	/^  void Note::enabled(bool is_enabled)$/;"	f	class:gnote::Note	signature:(bool is_enabled)
gnote::Note::get_buffer	src/note.cpp	/^  const Glib::RefPtr<NoteBuffer> & Note::get_buffer()$/;"	f	class:gnote::Note	signature:()
gnote::Note::get_buffer	src/note.hpp	/^  const Glib::RefPtr<NoteBuffer> & get_buffer();$/;"	p	class:gnote::Note	access:public	signature:()
gnote::Note::get_tag_table	src/note.cpp	/^  const Glib::RefPtr<NoteTagTable> & Note::get_tag_table()$/;"	f	class:gnote::Note	signature:()
gnote::Note::get_tag_table	src/note.hpp	/^  const Glib::RefPtr<NoteTagTable> & get_tag_table();$/;"	p	class:gnote::Note	access:public	signature:()
gnote::Note::get_window	src/note.cpp	/^  NoteWindow * Note::get_window()$/;"	f	class:gnote::Note	signature:()
gnote::Note::get_window	src/note.hpp	/^  NoteWindow * get_window();$/;"	p	class:gnote::Note	access:public	signature:()
gnote::Note::handle_link_rename	src/note.cpp	/^  void Note::handle_link_rename(const Glib::ustring & old_title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & old_title, const NoteBase::Ptr & renamed, bool rename)
gnote::Note::has_buffer	src/note.hpp	/^  bool has_buffer() const$/;"	f	class:gnote::Note	access:public	signature:() const
gnote::Note::has_window	src/note.hpp	/^  bool has_window() const $/;"	f	class:gnote::Note	access:public	signature:() const
gnote::Note::is_loaded	src/note.hpp	/^  bool is_loaded() const$/;"	f	class:gnote::Note	access:public	signature:() const
gnote::Note::is_opened	src/note.hpp	/^  bool is_opened() const$/;"	f	class:gnote::Note	access:public	signature:() const
gnote::Note::is_pinned	src/note.cpp	/^  bool Note::is_pinned() const$/;"	f	class:gnote::Note	signature:() const
gnote::Note::is_pinned	src/note.hpp	/^  bool is_pinned() const;$/;"	p	class:gnote::Note	access:public	signature:() const
gnote::Note::is_special	src/note.cpp	/^  bool Note::is_special() const$/;"	f	class:gnote::Note	signature:() const
gnote::Note::is_special	src/note.hpp	/^  bool is_special() const;$/;"	p	class:gnote::Note	access:public	signature:() const
gnote::Note::load	src/note.cpp	/^  Note::Ptr Note::load(const std::string & read_file, NoteManager & manager)$/;"	f	class:gnote::Note	signature:(const std::string & read_file, NoteManager & manager)
gnote::Note::load	src/note.hpp	/^  static Note::Ptr load(const std::string &, NoteManager &);$/;"	p	class:gnote::Note	access:public	signature:(const std::string &, NoteManager &)
gnote::Note::m_buffer	src/note.hpp	/^  Glib::RefPtr<NoteBuffer>   m_buffer;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_child_widget_queue	src/note.hpp	/^  std::queue<ChildWidgetData> m_child_widget_queue;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_data	src/note.hpp	/^  NoteDataBufferSynchronizer m_data;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_focus_widget	src/note.hpp	/^  Gtk::Widget               *m_focus_widget;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_is_deleting	src/note.hpp	/^  bool                       m_is_deleting;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_mark_deleted_conn	src/note.hpp	/^  sigc::connection m_mark_deleted_conn;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_mark_set_conn	src/note.hpp	/^  sigc::connection m_mark_set_conn;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_note_window_embedded	src/note.hpp	/^  bool                       m_note_window_embedded;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_save_needed	src/note.hpp	/^  bool                       m_save_needed;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_save_timeout	src/note.hpp	/^  utils::InterruptableTimeout *m_save_timeout;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_signal_opened	src/note.hpp	/^  sigc::signal<void,Note&> m_signal_opened;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_tag_table	src/note.hpp	/^  Glib::RefPtr<NoteTagTable> m_tag_table;$/;"	m	class:gnote::Note	access:private
gnote::Note::m_window	src/note.hpp	/^  NoteWindow                *m_window;$/;"	m	class:gnote::Note	access:private
gnote::Note::on_buffer_changed	src/note.cpp	/^  void Note::on_buffer_changed()$/;"	f	class:gnote::Note	signature:()
gnote::Note::on_buffer_changed	src/note.hpp	/^  void on_buffer_changed();$/;"	p	class:gnote::Note	access:private	signature:()
gnote::Note::on_buffer_mark_deleted	src/note.cpp	/^  void Note::on_buffer_mark_deleted(const Glib::RefPtr<Gtk::TextBuffer::Mark> &)$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextBuffer::Mark> &)
gnote::Note::on_buffer_mark_deleted	src/note.hpp	/^  void on_buffer_mark_deleted(const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark);$/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)
gnote::Note::on_buffer_mark_set	src/note.cpp	/^  void Note::on_buffer_mark_set(const Gtk::TextBuffer::iterator & iter,$/;"	f	class:gnote::Note	signature:(const Gtk::TextBuffer::iterator & iter, const Glib::RefPtr<Gtk::TextBuffer::Mark> & insert)
gnote::Note::on_buffer_mark_set	src/note.hpp	/^  void on_buffer_mark_set(const Gtk::TextBuffer::iterator & iter,$/;"	p	class:gnote::Note	access:private	signature:(const Gtk::TextBuffer::iterator & iter, const Glib::RefPtr<Gtk::TextBuffer::Mark> & insert)
gnote::Note::on_buffer_tag_applied	src/note.cpp	/^  void Note::on_buffer_tag_applied(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::Note::on_buffer_tag_applied	src/note.hpp	/^  void on_buffer_tag_applied(const Glib::RefPtr<Gtk::TextTag> &tag, $/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::Note::on_buffer_tag_removed	src/note.cpp	/^  void Note::on_buffer_tag_removed(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::Note::on_buffer_tag_removed	src/note.hpp	/^  void on_buffer_tag_removed(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::Note::on_note_window_embedded	src/note.cpp	/^  void Note::on_note_window_embedded()$/;"	f	class:gnote::Note	signature:()
gnote::Note::on_note_window_embedded	src/note.hpp	/^  void on_note_window_embedded();$/;"	p	class:gnote::Note	access:private	signature:()
gnote::Note::on_note_window_foregrounded	src/note.cpp	/^  void Note::on_note_window_foregrounded()$/;"	f	class:gnote::Note	signature:()
gnote::Note::on_note_window_foregrounded	src/note.hpp	/^  void on_note_window_foregrounded();$/;"	p	class:gnote::Note	access:private	signature:()
gnote::Note::on_save_timeout	src/note.cpp	/^  void Note::on_save_timeout()$/;"	f	class:gnote::Note	signature:()
gnote::Note::on_save_timeout	src/note.hpp	/^  void on_save_timeout();$/;"	p	class:gnote::Note	access:private	signature:()
gnote::Note::on_window_destroyed	src/note.cpp	/^  bool Note::on_window_destroyed(GdkEventAny * \/*ev*\/)$/;"	f	class:gnote::Note	signature:(GdkEventAny * )
gnote::Note::on_window_destroyed	src/note.hpp	/^  bool on_window_destroyed(GdkEventAny *ev);$/;"	p	class:gnote::Note	access:private	signature:(GdkEventAny *ev)
gnote::Note::override	src/note.hpp	/^                                  const NoteBase::Ptr & renamed, bool rename) override;$/;"	m	class:gnote::Note	access:private
gnote::Note::override	src/note.hpp	/^  virtual void delete_note() override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void enabled(bool is_enabled) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void queue_save(ChangeType c) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void remove_tag(Tag &) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void rename_without_link_update(const Glib::ustring & newTitle) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void save() override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void set_title(const Glib::ustring & new_title, bool from_user_action) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::override	src/note.hpp	/^  virtual void set_xml_content(const Glib::ustring & xml) override;$/;"	m	class:gnote::Note	access:public
gnote::Note::process_child_widget_queue	src/note.cpp	/^  void Note::process_child_widget_queue()$/;"	f	class:gnote::Note	signature:()
gnote::Note::process_child_widget_queue	src/note.hpp	/^  void process_child_widget_queue();$/;"	p	class:gnote::Note	access:private	signature:()
gnote::Note::process_rename_link_update	src/note.cpp	/^  void Note::process_rename_link_update(const std::string & old_title)$/;"	f	class:gnote::Note	signature:(const std::string & old_title)
gnote::Note::process_rename_link_update	src/note.hpp	/^  void process_rename_link_update(const std::string & old_title);$/;"	p	class:gnote::Note	access:private	signature:(const std::string & old_title)
gnote::Note::process_rename_link_update_end	src/note.cpp	/^  void Note::process_rename_link_update_end(int response, Gtk::Dialog *dialog,$/;"	f	class:gnote::Note	signature:(int response, Gtk::Dialog *dialog, const std::string & old_title, const Note::Ptr & self)
gnote::Note::process_rename_link_update_end	src/note.hpp	/^  void process_rename_link_update_end(int response, Gtk::Dialog *dialog,$/;"	p	class:gnote::Note	access:private	signature:(int response, Gtk::Dialog *dialog, const std::string & old_title, const Note::Ptr & self)
gnote::Note::queue_save	src/note.cpp	/^  void Note::queue_save (ChangeType changeType)$/;"	f	class:gnote::Note	signature:(ChangeType changeType)
gnote::Note::remove_tag	src/note.cpp	/^  void Note::remove_tag(Tag & tag)$/;"	f	class:gnote::Note	signature:(Tag & tag)
gnote::Note::rename_without_link_update	src/note.cpp	/^  void Note::rename_without_link_update(const Glib::ustring & newTitle)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & newTitle)
gnote::Note::save	src/note.cpp	/^  void Note::save()$/;"	f	class:gnote::Note	signature:()
gnote::Note::set_pinned	src/note.cpp	/^  void Note::set_pinned(bool pinned) const$/;"	f	class:gnote::Note	signature:(bool pinned) const
gnote::Note::set_pinned	src/note.hpp	/^  void set_pinned(bool pinned) const;$/;"	p	class:gnote::Note	access:public	signature:(bool pinned) const
gnote::Note::set_text_content	src/note.cpp	/^  void Note::set_text_content(const std::string & text)$/;"	f	class:gnote::Note	signature:(const std::string & text)
gnote::Note::set_text_content	src/note.hpp	/^  void set_text_content(const std::string & text);$/;"	p	class:gnote::Note	access:public	signature:(const std::string & text)
gnote::Note::set_title	src/note.cpp	/^  void Note::set_title(const Glib::ustring & new_title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & new_title, bool from_user_action)
gnote::Note::set_xml_content	src/note.cpp	/^  void Note::set_xml_content(const Glib::ustring & xml)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & xml)
gnote::Note::signal_opened	src/note.hpp	/^  sigc::signal<void,Note&> & signal_opened()$/;"	f	class:gnote::Note	access:public	signature:()
gnote::Note::text_content	src/note.cpp	/^  Glib::ustring Note::text_content()$/;"	f	class:gnote::Note	signature:()
gnote::Note::text_content	src/note.hpp	/^  Glib::ustring text_content();$/;"	p	class:gnote::Note	access:public	signature:()
gnote::Note::~Note	src/note.cpp	/^  Note::~Note()$/;"	f	class:gnote::Note	signature:()
gnote::Note::~Note	src/note.hpp	/^  ~Note();$/;"	p	class:gnote::Note	access:public	signature:()
gnote::NoteActionOrder	src/iactionmanager.hpp	/^enum NoteActionOrder {$/;"	g	namespace:gnote
gnote::NoteAddin	src/noteaddin.hpp	/^class NoteAddin$/;"	c	namespace:gnote	inherits:AbstractAddin
gnote::NoteAddin::IFACE_NAME	src/noteaddin.cpp	/^  const char * NoteAddin::IFACE_NAME = "gnote::NoteAddin";$/;"	m	class:gnote::NoteAddin	file:
gnote::NoteAddin::IFACE_NAME	src/noteaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:gnote::NoteAddin	access:public
gnote::NoteAddin::ToolItemMap	src/noteaddin.hpp	/^  typedef std::map<Gtk::ToolItem*, int> ToolItemMap;$/;"	t	class:gnote::NoteAddin	access:private
gnote::NoteAddin::add_note_action	src/noteaddin.cpp	/^  void NoteAddin::add_note_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::NoteAddin	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::NoteAddin::add_note_action	src/noteaddin.hpp	/^  void add_note_action(const Glib::RefPtr<Gtk::Action> & action, int order);$/;"	p	class:gnote::NoteAddin	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::NoteAddin::add_text_menu_item	src/noteaddin.cpp	/^  void NoteAddin::add_text_menu_item (Gtk::MenuItem * item)$/;"	f	class:gnote::NoteAddin	signature:(Gtk::MenuItem * item)
gnote::NoteAddin::add_text_menu_item	src/noteaddin.hpp	/^  void add_text_menu_item (Gtk::MenuItem * item);$/;"	p	class:gnote::NoteAddin	access:public	signature:(Gtk::MenuItem * item)
gnote::NoteAddin::add_tool_item	src/noteaddin.cpp	/^  void NoteAddin::add_tool_item (Gtk::ToolItem *item, int position)$/;"	f	class:gnote::NoteAddin	signature:(Gtk::ToolItem *item, int position)
gnote::NoteAddin::add_tool_item	src/noteaddin.hpp	/^  void add_tool_item (Gtk::ToolItem *item, int position);$/;"	p	class:gnote::NoteAddin	access:public	signature:(Gtk::ToolItem *item, int position)
gnote::NoteAddin::dispose	src/noteaddin.cpp	/^  void NoteAddin::dispose(bool disposing)$/;"	f	class:gnote::NoteAddin	signature:(bool disposing)
gnote::NoteAddin::get_buffer	src/noteaddin.hpp	/^  const NoteBuffer::Ptr & get_buffer() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::get_host_window	src/noteaddin.cpp	/^  Gtk::Window *NoteAddin::get_host_window() const$/;"	f	class:gnote::NoteAddin	signature:() const
gnote::NoteAddin::get_host_window	src/noteaddin.hpp	/^  Gtk::Window *get_host_window() const;$/;"	p	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::get_note	src/noteaddin.hpp	/^  const Note::Ptr & get_note() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::get_window	src/noteaddin.hpp	/^  NoteWindow * get_window() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::has_buffer	src/noteaddin.hpp	/^  bool has_buffer() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::has_window	src/noteaddin.hpp	/^  bool has_window() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::initialize	src/noteaddin.cpp	/^  void NoteAddin::initialize(const Note::Ptr & note)$/;"	f	class:gnote::NoteAddin	signature:(const Note::Ptr & note)
gnote::NoteAddin::initialize	src/noteaddin.hpp	/^  virtual void initialize () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
gnote::NoteAddin::initialize	src/noteaddin.hpp	/^  void initialize(const Note::Ptr & note);$/;"	p	class:gnote::NoteAddin	access:public	signature:(const Note::Ptr & note)
gnote::NoteAddin::m_note	src/noteaddin.hpp	/^  Note::Ptr                     m_note;$/;"	m	class:gnote::NoteAddin	access:private
gnote::NoteAddin::m_note_actions	src/noteaddin.hpp	/^  std::list<std::string>        m_note_actions;$/;"	m	class:gnote::NoteAddin	access:private
gnote::NoteAddin::m_note_opened_cid	src/noteaddin.hpp	/^  sigc::connection              m_note_opened_cid;$/;"	m	class:gnote::NoteAddin	access:private
gnote::NoteAddin::m_text_menu_items	src/noteaddin.hpp	/^  std::list<Gtk::MenuItem*>     m_text_menu_items;$/;"	m	class:gnote::NoteAddin	access:private
gnote::NoteAddin::m_toolbar_items	src/noteaddin.hpp	/^  ToolItemMap                   m_toolbar_items;$/;"	m	class:gnote::NoteAddin	access:private
gnote::NoteAddin::manager	src/noteaddin.hpp	/^  NoteManagerBase & manager() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
gnote::NoteAddin::on_note_opened	src/noteaddin.hpp	/^  virtual void on_note_opened () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
gnote::NoteAddin::on_note_opened_event	src/noteaddin.cpp	/^  void NoteAddin::on_note_opened_event(Note & )$/;"	f	class:gnote::NoteAddin	signature:(Note & )
gnote::NoteAddin::on_note_opened_event	src/noteaddin.hpp	/^  void on_note_opened_event(Note & );$/;"	p	class:gnote::NoteAddin	access:public	signature:(Note & )
gnote::NoteAddin::override	src/noteaddin.hpp	/^  virtual void dispose(bool) override;$/;"	m	class:gnote::NoteAddin	access:public
gnote::NoteAddin::shutdown	src/noteaddin.hpp	/^  virtual void shutdown () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
gnote::NoteArchiver	src/notebase.hpp	/^class NoteArchiver$/;"	c	namespace:gnote	inherits:base::Singleton
gnote::NoteArchiver::CURRENT_VERSION	src/notebase.cpp	/^const char *NoteArchiver::CURRENT_VERSION = "0.3";$/;"	m	class:gnote::NoteArchiver	file:
gnote::NoteArchiver::CURRENT_VERSION	src/notebase.hpp	/^  static const char *CURRENT_VERSION;$/;"	m	class:gnote::NoteArchiver	access:public
gnote::NoteArchiver::_read	src/notebase.cpp	/^void NoteArchiver::_read(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)
gnote::NoteArchiver::_read	src/notebase.hpp	/^  void _read(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version);$/;"	p	class:gnote::NoteArchiver	access:protected	signature:(sharp::XmlReader & xml, NoteData & data, Glib::ustring & version)
gnote::NoteArchiver::get_renamed_note_xml	src/notebase.cpp	/^Glib::ustring NoteArchiver::get_renamed_note_xml(const Glib::ustring & note_xml, $/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & note_xml, const Glib::ustring & old_title, const Glib::ustring & new_title) const
gnote::NoteArchiver::get_renamed_note_xml	src/notebase.hpp	/^  Glib::ustring get_renamed_note_xml(const Glib::ustring &, const Glib::ustring &, const Glib::ustring &) const;$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring &, const Glib::ustring &, const Glib::ustring &) const
gnote::NoteArchiver::get_title_from_note_xml	src/notebase.cpp	/^Glib::ustring NoteArchiver::get_title_from_note_xml(const Glib::ustring & noteXml) const$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & noteXml) const
gnote::NoteArchiver::get_title_from_note_xml	src/notebase.hpp	/^  Glib::ustring get_title_from_note_xml(const Glib::ustring & noteXml) const;$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & noteXml) const
gnote::NoteArchiver::read	src/notebase.cpp	/^void NoteArchiver::read(const Glib::ustring & read_file, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & read_file, NoteData & data)
gnote::NoteArchiver::read	src/notebase.cpp	/^void NoteArchiver::read(sharp::XmlReader & xml, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlReader & xml, NoteData & data)
gnote::NoteArchiver::read	src/notebase.hpp	/^  static void read(const Glib::ustring & read_file, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & read_file, NoteData & data)
gnote::NoteArchiver::read	src/notebase.hpp	/^  void read(sharp::XmlReader & xml, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(sharp::XmlReader & xml, NoteData & data)
gnote::NoteArchiver::read_file	src/notebase.cpp	/^void NoteArchiver::read_file(const Glib::ustring & file, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & file, NoteData & data)
gnote::NoteArchiver::read_file	src/notebase.hpp	/^  void read_file(const Glib::ustring & file, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & file, NoteData & data)
gnote::NoteArchiver::s_obj	src/notebase.cpp	/^NoteArchiver NoteArchiver::s_obj;$/;"	m	class:gnote::NoteArchiver	file:
gnote::NoteArchiver::s_obj	src/notebase.hpp	/^  static NoteArchiver s_obj;$/;"	m	class:gnote::NoteArchiver	access:protected
gnote::NoteArchiver::write	src/notebase.cpp	/^void NoteArchiver::write(const Glib::ustring & write_file, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & write_file, const NoteData & data)
gnote::NoteArchiver::write	src/notebase.cpp	/^void NoteArchiver::write(sharp::XmlWriter & xml, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlWriter & xml, const NoteData & data)
gnote::NoteArchiver::write	src/notebase.hpp	/^  static void write(const Glib::ustring & write_file, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & write_file, const NoteData & data)
gnote::NoteArchiver::write	src/notebase.hpp	/^  void write(sharp::XmlWriter & xml, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(sharp::XmlWriter & xml, const NoteData & data)
gnote::NoteArchiver::write_file	src/notebase.cpp	/^void NoteArchiver::write_file(const Glib::ustring & _write_file, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & _write_file, const NoteData & data)
gnote::NoteArchiver::write_file	src/notebase.hpp	/^  void write_file(const Glib::ustring & write_file, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & write_file, const NoteData & data)
gnote::NoteArchiver::write_string	src/notebase.cpp	/^Glib::ustring NoteArchiver::write_string(const NoteData & note)$/;"	f	class:gnote::NoteArchiver	signature:(const NoteData & note)
gnote::NoteArchiver::write_string	src/notebase.hpp	/^  static Glib::ustring write_string(const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const NoteData & data)
gnote::NoteBase	src/notebase.hpp	/^class NoteBase$/;"	c	namespace:gnote	inherits:enable_shared_from_this,sigc::trackable
gnote::NoteBase::List	src/notebase.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::NoteBase	src/notebase.cpp	/^NoteBase::NoteBase(NoteData *, const Glib::ustring & filepath, NoteManagerBase & _manager)$/;"	f	class:gnote::NoteBase	signature:(NoteData *, const Glib::ustring & filepath, NoteManagerBase & _manager)
gnote::NoteBase::NoteBase	src/notebase.hpp	/^  NoteBase(NoteData *_data, const Glib::ustring & filepath, NoteManagerBase & manager);$/;"	p	class:gnote::NoteBase	access:public	signature:(NoteData *_data, const Glib::ustring & filepath, NoteManagerBase & manager)
gnote::NoteBase::Ptr	src/notebase.hpp	/^  typedef shared_ptr<NoteBase> Ptr;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::RenamedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr&, const std::string& > RenamedHandler;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::SavedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr &> SavedHandler;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::TagAddedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase&, const Tag::Ptr&> TagAddedHandler;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::TagRemovedHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr&, const std::string&> TagRemovedHandler;  $/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::TagRemovingHandler	src/notebase.hpp	/^  typedef sigc::signal<void, const NoteBase&, const Tag &> TagRemovingHandler;  $/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::WeakPtr	src/notebase.hpp	/^  typedef weak_ptr<NoteBase> WeakPtr;$/;"	t	class:gnote::NoteBase	access:public
gnote::NoteBase::add_tag	src/notebase.cpp	/^void NoteBase::add_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag)
gnote::NoteBase::add_tag	src/notebase.hpp	/^  void add_tag(const Tag::Ptr &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &)
gnote::NoteBase::change_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::change_date() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::change_date	src/notebase.hpp	/^  const sharp::DateTime & change_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::contains_tag	src/notebase.cpp	/^bool NoteBase::contains_tag(const Tag::Ptr & tag) const$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag) const
gnote::NoteBase::contains_tag	src/notebase.hpp	/^  bool contains_tag(const Tag::Ptr &) const;$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &) const
gnote::NoteBase::create_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::create_date() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::create_date	src/notebase.hpp	/^  const sharp::DateTime & create_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::data	src/notebase.cpp	/^NoteData & NoteBase::data()$/;"	f	class:gnote::NoteBase	signature:()
gnote::NoteBase::data	src/notebase.cpp	/^const NoteData & NoteBase::data() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::data	src/notebase.hpp	/^  NoteData & data();$/;"	p	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBase::data	src/notebase.hpp	/^  const NoteData & data() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::data_synchronizer	src/notebase.hpp	/^  virtual NoteDataBufferSynchronizerBase & data_synchronizer() = 0;$/;"	p	class:gnote::NoteBase	access:protected	signature:()
gnote::NoteBase::data_synchronizer	src/notebase.hpp	/^  virtual const NoteDataBufferSynchronizerBase & data_synchronizer() const = 0;$/;"	p	class:gnote::NoteBase	access:protected	signature:() const
gnote::NoteBase::delete_note	src/notebase.cpp	/^void NoteBase::delete_note()$/;"	f	class:gnote::NoteBase	signature:()
gnote::NoteBase::delete_note	src/notebase.hpp	/^  virtual void delete_note();$/;"	p	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBase::enabled	src/notebase.cpp	/^void NoteBase::enabled(bool is_enabled)$/;"	f	class:gnote::NoteBase	signature:(bool is_enabled)
gnote::NoteBase::enabled	src/notebase.hpp	/^  bool enabled() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::enabled	src/notebase.hpp	/^  virtual void enabled(bool is_enabled);$/;"	p	class:gnote::NoteBase	access:public	signature:(bool is_enabled)
gnote::NoteBase::file_path	src/notebase.hpp	/^  const Glib::ustring & file_path() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::get_complete_note_xml	src/notebase.cpp	/^Glib::ustring NoteBase::get_complete_note_xml()$/;"	f	class:gnote::NoteBase	signature:()
gnote::NoteBase::get_complete_note_xml	src/notebase.hpp	/^  Glib::ustring get_complete_note_xml();$/;"	p	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBase::get_hash_code	src/notebase.cpp	/^int NoteBase::get_hash_code() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::get_hash_code	src/notebase.hpp	/^  int get_hash_code() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::get_tags	src/notebase.cpp	/^void NoteBase::get_tags(std::list<Tag::Ptr> & l) const$/;"	f	class:gnote::NoteBase	signature:(std::list<Tag::Ptr> & l) const
gnote::NoteBase::get_tags	src/notebase.hpp	/^  void get_tags(std::list<Tag::Ptr> &) const;$/;"	p	class:gnote::NoteBase	access:public	signature:(std::list<Tag::Ptr> &) const
gnote::NoteBase::get_title	src/notebase.cpp	/^const Glib::ustring & NoteBase::get_title() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::get_title	src/notebase.hpp	/^  const Glib::ustring & get_title() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::handle_link_rename	src/notebase.cpp	/^void NoteBase::handle_link_rename(const Glib::ustring &, const Ptr &, bool)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring &, const Ptr &, bool)
gnote::NoteBase::handle_link_rename	src/notebase.hpp	/^  virtual void handle_link_rename(const Glib::ustring & old_title, const Ptr & renamed, bool rename);$/;"	p	class:gnote::NoteBase	access:protected	signature:(const Glib::ustring & old_title, const Ptr & renamed, bool rename)
gnote::NoteBase::id	src/notebase.cpp	/^const std::string NoteBase::id() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::id	src/notebase.hpp	/^  const std::string id() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::is_new	src/notebase.cpp	/^bool NoteBase::is_new() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::is_new	src/notebase.hpp	/^  bool is_new() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::load_foreign_note_xml	src/notebase.cpp	/^void NoteBase::load_foreign_note_xml(const Glib::ustring & foreignNoteXml, ChangeType changeType)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & foreignNoteXml, ChangeType changeType)
gnote::NoteBase::load_foreign_note_xml	src/notebase.hpp	/^  void load_foreign_note_xml(const Glib::ustring & foreignNoteXml, ChangeType changeType);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & foreignNoteXml, ChangeType changeType)
gnote::NoteBase::m_enabled	src/notebase.hpp	/^  bool m_enabled;$/;"	m	class:gnote::NoteBase	access:private
gnote::NoteBase::m_file_path	src/notebase.hpp	/^  Glib::ustring m_file_path;$/;"	m	class:gnote::NoteBase	access:private
gnote::NoteBase::m_manager	src/notebase.hpp	/^  NoteManagerBase & m_manager;$/;"	m	class:gnote::NoteBase	access:private
gnote::NoteBase::manager	src/notebase.hpp	/^  NoteManagerBase & manager()$/;"	f	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBase::manager	src/notebase.hpp	/^  const NoteManagerBase & manager() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::metadata_change_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::metadata_change_date() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::metadata_change_date	src/notebase.hpp	/^  const sharp::DateTime & metadata_change_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::parse_tags	src/notebase.cpp	/^void NoteBase::parse_tags(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)$/;"	f	class:gnote::NoteBase	signature:(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)
gnote::NoteBase::parse_tags	src/notebase.hpp	/^  static void parse_tags(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags);$/;"	p	class:gnote::NoteBase	access:public	signature:(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)
gnote::NoteBase::process_rename_link_update	src/notebase.cpp	/^void NoteBase::process_rename_link_update(const Glib::ustring & old_title)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title)
gnote::NoteBase::process_rename_link_update	src/notebase.hpp	/^  virtual void process_rename_link_update(const Glib::ustring & old_title);$/;"	p	class:gnote::NoteBase	access:protected	signature:(const Glib::ustring & old_title)
gnote::NoteBase::queue_save	src/notebase.cpp	/^void NoteBase::queue_save(ChangeType c)$/;"	f	class:gnote::NoteBase	signature:(ChangeType c)
gnote::NoteBase::queue_save	src/notebase.hpp	/^  virtual void queue_save(ChangeType c);$/;"	p	class:gnote::NoteBase	access:public	signature:(ChangeType c)
gnote::NoteBase::remove_links	src/notebase.cpp	/^void NoteBase::remove_links(const Glib::ustring & old_title, const Ptr & renamed)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title, const Ptr & renamed)
gnote::NoteBase::remove_links	src/notebase.hpp	/^  void remove_links(const Glib::ustring & old_title, const Ptr & renamed);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & old_title, const Ptr & renamed)
gnote::NoteBase::remove_tag	src/notebase.cpp	/^void NoteBase::remove_tag(Tag & tag)$/;"	f	class:gnote::NoteBase	signature:(Tag & tag)
gnote::NoteBase::remove_tag	src/notebase.cpp	/^void NoteBase::remove_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag)
gnote::NoteBase::remove_tag	src/notebase.hpp	/^  virtual void remove_tag(Tag &);$/;"	p	class:gnote::NoteBase	access:public	signature:(Tag &)
gnote::NoteBase::remove_tag	src/notebase.hpp	/^  void remove_tag(const Tag::Ptr &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &)
gnote::NoteBase::rename_links	src/notebase.cpp	/^void NoteBase::rename_links(const Glib::ustring & old_title, const Ptr & renamed)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title, const Ptr & renamed)
gnote::NoteBase::rename_links	src/notebase.hpp	/^  void rename_links(const Glib::ustring & old_title, const Ptr & renamed);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & old_title, const Ptr & renamed)
gnote::NoteBase::rename_without_link_update	src/notebase.cpp	/^void NoteBase::rename_without_link_update(const Glib::ustring & newTitle)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & newTitle)
gnote::NoteBase::rename_without_link_update	src/notebase.hpp	/^  virtual void rename_without_link_update(const Glib::ustring & newTitle);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & newTitle)
gnote::NoteBase::save	src/notebase.cpp	/^void NoteBase::save()$/;"	f	class:gnote::NoteBase	signature:()
gnote::NoteBase::save	src/notebase.hpp	/^  virtual void save();$/;"	p	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBase::set_change_type	src/notebase.cpp	/^void NoteBase::set_change_type(ChangeType c)$/;"	f	class:gnote::NoteBase	signature:(ChangeType c)
gnote::NoteBase::set_change_type	src/notebase.hpp	/^  void set_change_type(ChangeType c);$/;"	p	class:gnote::NoteBase	access:protected	signature:(ChangeType c)
gnote::NoteBase::set_title	src/notebase.cpp	/^void NoteBase::set_title(const Glib::ustring & new_title)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & new_title)
gnote::NoteBase::set_title	src/notebase.cpp	/^void NoteBase::set_title(const Glib::ustring & new_title, bool from_user_action)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & new_title, bool from_user_action)
gnote::NoteBase::set_title	src/notebase.hpp	/^  virtual void set_title(const Glib::ustring & new_title, bool from_user_action);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & new_title, bool from_user_action)
gnote::NoteBase::set_title	src/notebase.hpp	/^  void set_title(const Glib::ustring & new_title);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & new_title)
gnote::NoteBase::set_xml_content	src/notebase.cpp	/^void NoteBase::set_xml_content(const Glib::ustring & xml)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & xml)
gnote::NoteBase::set_xml_content	src/notebase.hpp	/^  virtual void set_xml_content(const Glib::ustring & xml);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & xml)
gnote::NoteBase::signal_renamed	src/notebase.hpp	/^  RenamedHandler signal_renamed;$/;"	m	class:gnote::NoteBase	access:public
gnote::NoteBase::signal_saved	src/notebase.hpp	/^  SavedHandler signal_saved;$/;"	m	class:gnote::NoteBase	access:public
gnote::NoteBase::signal_tag_added	src/notebase.hpp	/^  TagAddedHandler signal_tag_added;$/;"	m	class:gnote::NoteBase	access:public
gnote::NoteBase::signal_tag_removed	src/notebase.hpp	/^  TagRemovedHandler signal_tag_removed;$/;"	m	class:gnote::NoteBase	access:public
gnote::NoteBase::signal_tag_removing	src/notebase.hpp	/^  TagRemovingHandler signal_tag_removing;$/;"	m	class:gnote::NoteBase	access:public
gnote::NoteBase::uri	src/notebase.cpp	/^const std::string & NoteBase::uri() const$/;"	f	class:gnote::NoteBase	signature:() const
gnote::NoteBase::uri	src/notebase.hpp	/^  const std::string & uri() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
gnote::NoteBase::url_from_path	src/notebase.cpp	/^Glib::ustring NoteBase::url_from_path(const Glib::ustring & filepath)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & filepath)
gnote::NoteBase::url_from_path	src/notebase.hpp	/^  static Glib::ustring url_from_path(const Glib::ustring &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring &)
gnote::NoteBase::xml_content	src/notebase.hpp	/^  const Glib::ustring & xml_content()$/;"	f	class:gnote::NoteBase	access:public	signature:()
gnote::NoteBuffer	src/notebuffer.hpp	/^class NoteBuffer $/;"	c	namespace:gnote	inherits:Gtk::TextBuffer
gnote::NoteBuffer::ChangeDepthHandler	src/notebuffer.hpp	/^  typedef sigc::signal<void, int, bool> ChangeDepthHandler;$/;"	t	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::NewBulletHandler	src/notebuffer.hpp	/^  typedef sigc::signal<void, int, int, Pango::Direction> NewBulletHandler;$/;"	t	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::NoteBuffer	src/notebuffer.cpp	/^  NoteBuffer::NoteBuffer(const NoteTagTable::Ptr & tags, Note & note_)$/;"	f	class:gnote::NoteBuffer	signature:(const NoteTagTable::Ptr & tags, Note & note_)
gnote::NoteBuffer::NoteBuffer	src/notebuffer.hpp	/^  NoteBuffer(const NoteTagTable::Ptr &, Note &);$/;"	p	class:gnote::NoteBuffer	access:protected	signature:(const NoteTagTable::Ptr &, Note &)
gnote::NoteBuffer::Ptr	src/notebuffer.hpp	/^  typedef Glib::RefPtr<NoteBuffer> Ptr;$/;"	t	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::WidgetInsertData	src/notebuffer.hpp	/^  struct WidgetInsertData$/;"	s	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::WidgetInsertData::adding	src/notebuffer.hpp	/^    bool adding;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
gnote::NoteBuffer::WidgetInsertData::buffer	src/notebuffer.hpp	/^    Glib::RefPtr<Gtk::TextBuffer> buffer;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
gnote::NoteBuffer::WidgetInsertData::position	src/notebuffer.hpp	/^    Glib::RefPtr<Gtk::TextMark>   position;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
gnote::NoteBuffer::WidgetInsertData::tag	src/notebuffer.hpp	/^    NoteTag::Ptr                  tag;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
gnote::NoteBuffer::WidgetInsertData::widget	src/notebuffer.hpp	/^    Gtk::Widget                  *widget;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
gnote::NoteBuffer::add_new_line	src/notebuffer.cpp	/^  bool NoteBuffer::add_new_line(bool soft_break)$/;"	f	class:gnote::NoteBuffer	signature:(bool soft_break)
gnote::NoteBuffer::add_new_line	src/notebuffer.hpp	/^  bool add_new_line(bool soft_break);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(bool soft_break)
gnote::NoteBuffer::add_tab	src/notebuffer.cpp	/^  bool NoteBuffer::add_tab()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::add_tab	src/notebuffer.hpp	/^  bool add_tab();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::augment_selection	src/notebuffer.cpp	/^  void NoteBuffer::augment_selection(Gtk::TextIter & start, Gtk::TextIter & end_iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start, Gtk::TextIter & end_iter)
gnote::NoteBuffer::augment_selection	src/notebuffer.hpp	/^  void augment_selection(Gtk::TextIter &, Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(Gtk::TextIter &, Gtk::TextIter &)
gnote::NoteBuffer::backspace_key_handler	src/notebuffer.cpp	/^  bool NoteBuffer::backspace_key_handler()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::backspace_key_handler	src/notebuffer.hpp	/^  bool backspace_key_handler();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::can_make_bulleted_list	src/notebuffer.cpp	/^  bool NoteBuffer::can_make_bulleted_list()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::can_make_bulleted_list	src/notebuffer.hpp	/^  bool can_make_bulleted_list();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::change_bullet_direction	src/notebuffer.cpp	/^  void NoteBuffer::change_bullet_direction(Gtk::TextIter iter, Pango::Direction direction)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter, Pango::Direction direction)
gnote::NoteBuffer::change_bullet_direction	src/notebuffer.hpp	/^  void change_bullet_direction(Gtk::TextIter pos, Pango::Direction);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter pos, Pango::Direction)
gnote::NoteBuffer::change_cursor_depth	src/notebuffer.cpp	/^  void NoteBuffer::change_cursor_depth(bool increase)$/;"	f	class:gnote::NoteBuffer	signature:(bool increase)
gnote::NoteBuffer::change_cursor_depth	src/notebuffer.hpp	/^  void change_cursor_depth(bool increase);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(bool increase)
gnote::NoteBuffer::change_cursor_depth_directional	src/notebuffer.cpp	/^  void NoteBuffer::change_cursor_depth_directional(bool right)$/;"	f	class:gnote::NoteBuffer	signature:(bool right)
gnote::NoteBuffer::change_cursor_depth_directional	src/notebuffer.hpp	/^  void change_cursor_depth_directional(bool right);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(bool right)
gnote::NoteBuffer::check_selection	src/notebuffer.cpp	/^  void NoteBuffer::check_selection()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::check_selection	src/notebuffer.hpp	/^  void check_selection();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::create	src/notebuffer.hpp	/^  static Ptr create(const NoteTagTable::Ptr & table, Note & note)$/;"	f	class:gnote::NoteBuffer	access:public	signature:(const NoteTagTable::Ptr & table, Note & note)
gnote::NoteBuffer::decrease_cursor_depth	src/notebuffer.hpp	/^  void decrease_cursor_depth()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::decrease_depth	src/notebuffer.cpp	/^  void NoteBuffer::decrease_depth(Gtk::TextIter & start)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start)
gnote::NoteBuffer::decrease_depth	src/notebuffer.hpp	/^  void decrease_depth(Gtk::TextIter & start);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & start)
gnote::NoteBuffer::delete_key_handler	src/notebuffer.cpp	/^  bool NoteBuffer::delete_key_handler()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::delete_key_handler	src/notebuffer.hpp	/^  bool delete_key_handler();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::find_depth_tag	src/notebuffer.cpp	/^  DepthNoteTag::Ptr NoteBuffer::find_depth_tag(Gtk::TextIter & iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter)
gnote::NoteBuffer::find_depth_tag	src/notebuffer.hpp	/^  DepthNoteTag::Ptr find_depth_tag(Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter &)
gnote::NoteBuffer::get_block_extents	src/notebuffer.cpp	/^  void NoteBuffer::get_block_extents(Gtk::TextIter & start, Gtk::TextIter & end_iter,$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start, Gtk::TextIter & end_iter, int threshold, const Glib::RefPtr<Gtk::TextTag> & avoid_tag)
gnote::NoteBuffer::get_block_extents	src/notebuffer.hpp	/^  static void get_block_extents(Gtk::TextIter &, Gtk::TextIter &,$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter &, Gtk::TextIter &, int threshold, const Glib::RefPtr<Gtk::TextTag> & avoid_tag)
gnote::NoteBuffer::get_dynamic_tag	src/notebuffer.cpp	/^  DynamicNoteTag::ConstPtr NoteBuffer::get_dynamic_tag (const std::string  & tag_name, $/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name, const Gtk::TextIter & iter)
gnote::NoteBuffer::get_dynamic_tag	src/notebuffer.hpp	/^  DynamicNoteTag::ConstPtr get_dynamic_tag(const std::string  & tag_name, const Gtk::TextIter & iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string & tag_name, const Gtk::TextIter & iter)
gnote::NoteBuffer::get_enable_auto_bulleted_lists	src/notebuffer.cpp	/^  bool NoteBuffer::get_enable_auto_bulleted_lists() const$/;"	f	class:gnote::NoteBuffer	signature:() const
gnote::NoteBuffer::get_enable_auto_bulleted_lists	src/notebuffer.hpp	/^  bool get_enable_auto_bulleted_lists() const;$/;"	p	class:gnote::NoteBuffer	access:public	signature:() const
gnote::NoteBuffer::get_selection	src/notebuffer.cpp	/^  std::string NoteBuffer::get_selection() const$/;"	f	class:gnote::NoteBuffer	signature:() const
gnote::NoteBuffer::get_selection	src/notebuffer.hpp	/^  std::string get_selection() const;$/;"	p	class:gnote::NoteBuffer	access:public	signature:() const
gnote::NoteBuffer::increase_cursor_depth	src/notebuffer.hpp	/^  void increase_cursor_depth()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::increase_depth	src/notebuffer.cpp	/^  void NoteBuffer::increase_depth(Gtk::TextIter & start)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start)
gnote::NoteBuffer::increase_depth	src/notebuffer.hpp	/^  void increase_depth(Gtk::TextIter & start);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & start)
gnote::NoteBuffer::insert_bullet	src/notebuffer.cpp	/^  void NoteBuffer::insert_bullet(Gtk::TextIter & iter, int depth, Pango::Direction direction)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter, int depth, Pango::Direction direction)
gnote::NoteBuffer::insert_bullet	src/notebuffer.hpp	/^  void insert_bullet(Gtk::TextIter & iter, int depth, Pango::Direction direction);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & iter, int depth, Pango::Direction direction)
gnote::NoteBuffer::is_active_tag	src/notebuffer.cpp	/^  bool NoteBuffer::is_active_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
gnote::NoteBuffer::is_active_tag	src/notebuffer.hpp	/^  bool is_active_tag(const std::string & );$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string & )
gnote::NoteBuffer::is_bullet	src/notebuffer.cpp	/^  bool NoteBuffer::is_bullet(gunichar c)$/;"	f	class:gnote::NoteBuffer	signature:(gunichar c)
gnote::NoteBuffer::is_bullet	src/notebuffer.hpp	/^  static bool is_bullet(gunichar c);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(gunichar c)
gnote::NoteBuffer::is_bulleted_list_active	src/notebuffer.cpp	/^  bool NoteBuffer::is_bulleted_list_active()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::is_bulleted_list_active	src/notebuffer.cpp	/^  bool NoteBuffer::is_bulleted_list_active(Gtk::TextIter iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter)
gnote::NoteBuffer::is_bulleted_list_active	src/notebuffer.hpp	/^  bool is_bulleted_list_active();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::is_bulleted_list_active	src/notebuffer.hpp	/^  bool is_bulleted_list_active(Gtk::TextIter iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter iter)
gnote::NoteBuffer::line_needs_bullet	src/notebuffer.cpp	/^  bool NoteBuffer::line_needs_bullet(Gtk::TextIter iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter)
gnote::NoteBuffer::line_needs_bullet	src/notebuffer.hpp	/^  bool line_needs_bullet(Gtk::TextIter iter);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(Gtk::TextIter iter)
gnote::NoteBuffer::m_active_tags	src/notebuffer.hpp	/^  std::list<Glib::RefPtr<Gtk::TextTag> >      m_active_tags;$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::m_note	src/notebuffer.hpp	/^  Note &                       m_note;$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::m_undomanager	src/notebuffer.hpp	/^  UndoManager           *m_undomanager;$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::m_widget_queue	src/notebuffer.hpp	/^  std::queue<WidgetInsertData> m_widget_queue;$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::m_widget_queue_timeout	src/notebuffer.hpp	/^  sigc::connection             m_widget_queue_timeout;$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::mark_set_event	src/notebuffer.cpp	/^  void NoteBuffer::mark_set_event(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)
gnote::NoteBuffer::mark_set_event	src/notebuffer.hpp	/^  void mark_set_event(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> &)
gnote::NoteBuffer::note	src/notebuffer.hpp	/^  Note & note() const$/;"	f	class:gnote::NoteBuffer	access:public	signature:() const
gnote::NoteBuffer::on_apply_tag	src/notebuffer.cpp	/^  void NoteBuffer::on_apply_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end_iter)
gnote::NoteBuffer::on_remove_tag	src/notebuffer.cpp	/^  void NoteBuffer::on_remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end_iter)
gnote::NoteBuffer::on_tag_applied	src/notebuffer.cpp	/^  void NoteBuffer::on_tag_applied(const Glib::RefPtr<Gtk::TextTag> & tag1,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag1, const Gtk::TextIter & start_char, const Gtk::TextIter &end_char)
gnote::NoteBuffer::on_tag_applied	src/notebuffer.hpp	/^  void on_tag_applied(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteBuffer::on_tag_changed	src/notebuffer.cpp	/^  void NoteBuffer::on_tag_changed(const Glib::RefPtr<Gtk::TextTag> & tag, bool)$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, bool)
gnote::NoteBuffer::on_tag_changed	src/notebuffer.hpp	/^  void on_tag_changed(const Glib::RefPtr<Gtk::TextTag> &, bool);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, bool)
gnote::NoteBuffer::override	src/notebuffer.hpp	/^                       const Gtk::TextIter &,  const Gtk::TextIter &) override;$/;"	m	class:gnote::NoteBuffer	access:protected
gnote::NoteBuffer::range_deleted_event	src/notebuffer.cpp	/^  void NoteBuffer::range_deleted_event(const Gtk::TextIter & start,const Gtk::TextIter & end_iter)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter & start,const Gtk::TextIter & end_iter)
gnote::NoteBuffer::range_deleted_event	src/notebuffer.hpp	/^  void range_deleted_event(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteBuffer::remove_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::remove_active_tag (const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
gnote::NoteBuffer::remove_active_tag	src/notebuffer.hpp	/^  void remove_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
gnote::NoteBuffer::remove_bullet	src/notebuffer.cpp	/^  void NoteBuffer::remove_bullet(Gtk::TextIter & iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter)
gnote::NoteBuffer::remove_bullet	src/notebuffer.hpp	/^  void remove_bullet(Gtk::TextIter & iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & iter)
gnote::NoteBuffer::remove_tab	src/notebuffer.cpp	/^  bool NoteBuffer::remove_tab()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::remove_tab	src/notebuffer.hpp	/^  bool remove_tab();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::run_widget_queue	src/notebuffer.cpp	/^  bool NoteBuffer::run_widget_queue()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::run_widget_queue	src/notebuffer.hpp	/^  bool run_widget_queue();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::s_indent_bullets	src/notebuffer.cpp	/^  const gunichar NoteBuffer::s_indent_bullets[NUM_INDENT_BULLETS] = { 0x2022, 0x2218, 0x2023 };$/;"	m	class:gnote::NoteBuffer	file:
gnote::NoteBuffer::s_indent_bullets	src/notebuffer.hpp	/^  static const gunichar s_indent_bullets[];$/;"	m	class:gnote::NoteBuffer	access:private
gnote::NoteBuffer::select_note_body	src/notebuffer.cpp	/^  void NoteBuffer::select_note_body()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::select_note_body	src/notebuffer.hpp	/^  void select_note_body();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::set_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::set_active_tag (const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
gnote::NoteBuffer::set_active_tag	src/notebuffer.hpp	/^  void set_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
gnote::NoteBuffer::signal_change_text_depth	src/notebuffer.hpp	/^  ChangeDepthHandler                               signal_change_text_depth;$/;"	m	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::signal_insert_text_with_tags	src/notebuffer.hpp	/^  sigc::signal<void, const Gtk::TextIter &, const Glib::ustring &, int> signal_insert_text_with_tags;$/;"	m	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::signal_new_bullet_inserted	src/notebuffer.hpp	/^  NewBulletHandler                                 signal_new_bullet_inserted;$/;"	m	class:gnote::NoteBuffer	access:public
gnote::NoteBuffer::text_insert_event	src/notebuffer.cpp	/^  void NoteBuffer::text_insert_event(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)
gnote::NoteBuffer::text_insert_event	src/notebuffer.hpp	/^  void text_insert_event(const Gtk::TextIter & pos, const Glib::ustring & text, int);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int)
gnote::NoteBuffer::toggle_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::toggle_active_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
gnote::NoteBuffer::toggle_active_tag	src/notebuffer.hpp	/^  void toggle_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
gnote::NoteBuffer::toggle_selection_bullets	src/notebuffer.cpp	/^  void NoteBuffer::toggle_selection_bullets()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::toggle_selection_bullets	src/notebuffer.hpp	/^  void toggle_selection_bullets();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::undoer	src/notebuffer.hpp	/^  UndoManager & undoer()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBuffer::widget_swap	src/notebuffer.cpp	/^  void NoteBuffer::widget_swap (const NoteTag::Ptr & tag, const Gtk::TextIter & start,$/;"	f	class:gnote::NoteBuffer	signature:(const NoteTag::Ptr & tag, const Gtk::TextIter & start, const Gtk::TextIter & , bool adding)
gnote::NoteBuffer::widget_swap	src/notebuffer.hpp	/^  void widget_swap (const NoteTag::Ptr & tag, const Gtk::TextIter & start,$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const NoteTag::Ptr & tag, const Gtk::TextIter & start, const Gtk::TextIter & end_iter, bool adding)
gnote::NoteBuffer::~NoteBuffer	src/notebuffer.cpp	/^  NoteBuffer::~NoteBuffer()$/;"	f	class:gnote::NoteBuffer	signature:()
gnote::NoteBuffer::~NoteBuffer	src/notebuffer.hpp	/^  ~NoteBuffer();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
gnote::NoteBufferArchiver	src/notebuffer.hpp	/^class NoteBufferArchiver$/;"	c	namespace:gnote
gnote::NoteBufferArchiver::deserialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & iter, const std::string & content)
gnote::NoteBufferArchiver::deserialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, sharp::XmlReader & xml)
gnote::NoteBufferArchiver::deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & iter, sharp::XmlReader & xml)
gnote::NoteBufferArchiver::deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> &, const Gtk::TextIter & ,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> &, const Gtk::TextIter & , const std::string & )
gnote::NoteBufferArchiver::deserialize	src/notebuffer.hpp	/^  static void deserialize(const Glib::RefPtr<Gtk::TextBuffer> &buffer,$/;"	f	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> &buffer, const std::string & content)
gnote::NoteBufferArchiver::serialize	src/notebuffer.cpp	/^  std::string NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer)$/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
gnote::NoteBufferArchiver::serialize	src/notebuffer.cpp	/^  std::string NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteBufferArchiver::serialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, const Gtk::TextIter & end, sharp::XmlWriter & xml)
gnote::NoteBufferArchiver::serialize	src/notebuffer.hpp	/^  static std::string serialize(const Glib::RefPtr<Gtk::TextBuffer> & );$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & )
gnote::NoteBufferArchiver::serialize	src/notebuffer.hpp	/^  static std::string serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteBufferArchiver::serialize	src/notebuffer.hpp	/^  static void serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &, const Gtk::TextIter &, sharp::XmlWriter & xml)
gnote::NoteBufferArchiver::tag_ends_here	src/notebuffer.cpp	/^  bool NoteBufferArchiver::tag_ends_here (const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & iter, const Gtk::TextIter & next_iter)
gnote::NoteBufferArchiver::tag_ends_here	src/notebuffer.hpp	/^  static bool tag_ends_here (const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	p	class:gnote::NoteBufferArchiver	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & iter, const Gtk::TextIter & next_iter)
gnote::NoteBufferArchiver::write_tag	src/notebuffer.cpp	/^  void NoteBufferArchiver::write_tag(const Glib::RefPtr<const Gtk::TextTag> & tag, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, bool start)
gnote::NoteBufferArchiver::write_tag	src/notebuffer.hpp	/^  static void write_tag(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, $/;"	p	class:gnote::NoteBufferArchiver	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, bool start)
gnote::NoteData	src/notebase.hpp	/^class NoteData$/;"	c	namespace:gnote
gnote::NoteData::NoteData	src/note.cpp	/^  NoteData::NoteData(const std::string & _uri)$/;"	f	class:gnote::NoteData	signature:(const std::string & _uri)
gnote::NoteData::NoteData	src/notebase.hpp	/^  NoteData(const std::string & _uri);$/;"	p	class:gnote::NoteData	access:public	signature:(const std::string & _uri)
gnote::NoteData::TagMap	src/notebase.hpp	/^  typedef std::map<std::string, Tag::Ptr> TagMap;$/;"	t	class:gnote::NoteData	access:public
gnote::NoteData::change_date	src/notebase.hpp	/^  const sharp::DateTime & change_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::create_date	src/notebase.hpp	/^  const sharp::DateTime & create_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::create_date	src/notebase.hpp	/^  sharp::DateTime & create_date()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::cursor_position	src/notebase.hpp	/^  int cursor_position() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::has_extent	src/note.cpp	/^  bool NoteData::has_extent()$/;"	f	class:gnote::NoteData	signature:()
gnote::NoteData::has_extent	src/notebase.hpp	/^  bool has_extent();$/;"	p	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::height	src/notebase.hpp	/^  int & height()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::height	src/notebase.hpp	/^  int height() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::m_change_date	src/notebase.hpp	/^  sharp::DateTime             m_change_date;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_create_date	src/notebase.hpp	/^  sharp::DateTime             m_create_date;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_cursor_pos	src/notebase.hpp	/^  int               m_cursor_pos;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_height	src/notebase.hpp	/^  int               m_width, m_height;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_metadata_change_date	src/notebase.hpp	/^  sharp::DateTime             m_metadata_change_date;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_selection_bound_pos	src/notebase.hpp	/^  int               m_selection_bound_pos;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_tags	src/notebase.hpp	/^  TagMap m_tags;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_text	src/notebase.hpp	/^  Glib::ustring     m_text;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_title	src/notebase.hpp	/^  Glib::ustring     m_title;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_uri	src/notebase.hpp	/^  const std::string m_uri;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::m_width	src/notebase.hpp	/^  int               m_width, m_height;$/;"	m	class:gnote::NoteData	access:private
gnote::NoteData::metadata_change_date	src/notebase.hpp	/^  const sharp::DateTime & metadata_change_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::metadata_change_date	src/notebase.hpp	/^  sharp::DateTime & metadata_change_date()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::s_noPosition	src/note.cpp	/^  const int  NoteData::s_noPosition = -1;$/;"	m	class:gnote::NoteData	file:
gnote::NoteData::s_noPosition	src/notebase.hpp	/^  static const int s_noPosition;$/;"	m	class:gnote::NoteData	access:public
gnote::NoteData::selection_bound_position	src/notebase.hpp	/^  int selection_bound_position() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::set_change_date	src/notebase.hpp	/^  void set_change_date(const sharp::DateTime & date)$/;"	f	class:gnote::NoteData	access:public	signature:(const sharp::DateTime & date)
gnote::NoteData::set_cursor_position	src/notebase.hpp	/^  void set_cursor_position(int new_pos)$/;"	f	class:gnote::NoteData	access:public	signature:(int new_pos)
gnote::NoteData::set_extent	src/note.cpp	/^  void NoteData::set_extent(int _width, int _height)$/;"	f	class:gnote::NoteData	signature:(int _width, int _height)
gnote::NoteData::set_extent	src/notebase.hpp	/^  void set_extent(int width, int height);$/;"	p	class:gnote::NoteData	access:public	signature:(int width, int height)
gnote::NoteData::set_selection_bound_position	src/notebase.hpp	/^  void set_selection_bound_position(int pos)$/;"	f	class:gnote::NoteData	access:public	signature:(int pos)
gnote::NoteData::tags	src/notebase.hpp	/^  TagMap & tags()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::tags	src/notebase.hpp	/^  const TagMap & tags() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::text	src/notebase.hpp	/^  Glib::ustring & text()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::text	src/notebase.hpp	/^  const Glib::ustring & text() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::title	src/notebase.hpp	/^  Glib::ustring & title()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::title	src/notebase.hpp	/^  const Glib::ustring & title() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::uri	src/notebase.hpp	/^  const std::string & uri() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteData::width	src/notebase.hpp	/^  int & width()$/;"	f	class:gnote::NoteData	access:public	signature:()
gnote::NoteData::width	src/notebase.hpp	/^  int width() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
gnote::NoteDataBufferSynchronizer	src/note.hpp	/^class NoteDataBufferSynchronizer$/;"	c	namespace:gnote	inherits:NoteDataBufferSynchronizerBase
gnote::NoteDataBufferSynchronizer::NoteDataBufferSynchronizer	src/note.hpp	/^  NoteDataBufferSynchronizer(NoteData * _data)$/;"	f	class:gnote::NoteDataBufferSynchronizer	access:public	signature:(NoteData * _data)
gnote::NoteDataBufferSynchronizer::buffer	src/note.hpp	/^  const Glib::RefPtr<NoteBuffer> & buffer() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	access:public	signature:() const
gnote::NoteDataBufferSynchronizer::buffer_changed	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_changed()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
gnote::NoteDataBufferSynchronizer::buffer_changed	src/note.hpp	/^  void buffer_changed();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
gnote::NoteDataBufferSynchronizer::buffer_tag_applied	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_tag_applied(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::NoteDataBufferSynchronizer::buffer_tag_applied	src/note.hpp	/^  void buffer_tag_applied(const Glib::RefPtr<Gtk::TextBuffer::Tag> &,$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> &, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::NoteDataBufferSynchronizer::buffer_tag_removed	src/note.cpp	/^  void NoteDataBufferSynchronizer::buffer_tag_removed(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::NoteDataBufferSynchronizer::buffer_tag_removed	src/note.hpp	/^  void buffer_tag_removed(const Glib::RefPtr<Gtk::TextBuffer::Tag> &,$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> &, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
gnote::NoteDataBufferSynchronizer::invalidate_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::invalidate_text()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
gnote::NoteDataBufferSynchronizer::invalidate_text	src/note.hpp	/^  void invalidate_text();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
gnote::NoteDataBufferSynchronizer::is_text_invalid	src/note.cpp	/^  bool NoteDataBufferSynchronizer::is_text_invalid() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:() const
gnote::NoteDataBufferSynchronizer::is_text_invalid	src/note.hpp	/^  bool is_text_invalid() const;$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:() const
gnote::NoteDataBufferSynchronizer::m_buffer	src/note.hpp	/^  Glib::RefPtr<NoteBuffer> m_buffer;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:private
gnote::NoteDataBufferSynchronizer::override	src/note.hpp	/^  virtual const Glib::ustring & text() override;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:public
gnote::NoteDataBufferSynchronizer::override	src/note.hpp	/^  virtual void set_text(const Glib::ustring & t) override;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:public
gnote::NoteDataBufferSynchronizer::set_buffer	src/note.cpp	/^  void NoteDataBufferSynchronizer::set_buffer(const Glib::RefPtr<NoteBuffer> & b)$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<NoteBuffer> & b)
gnote::NoteDataBufferSynchronizer::set_buffer	src/note.hpp	/^  void set_buffer(const Glib::RefPtr<NoteBuffer> & b);$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:public	signature:(const Glib::RefPtr<NoteBuffer> & b)
gnote::NoteDataBufferSynchronizer::set_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::set_text(const Glib::ustring & t)$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::ustring & t)
gnote::NoteDataBufferSynchronizer::synchronize_buffer	src/note.cpp	/^  void NoteDataBufferSynchronizer::synchronize_buffer()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
gnote::NoteDataBufferSynchronizer::synchronize_buffer	src/note.hpp	/^  void synchronize_buffer();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
gnote::NoteDataBufferSynchronizer::synchronize_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::synchronize_text() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:() const
gnote::NoteDataBufferSynchronizer::synchronize_text	src/note.hpp	/^  void synchronize_text() const;$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:() const
gnote::NoteDataBufferSynchronizer::text	src/note.cpp	/^  const Glib::ustring & NoteDataBufferSynchronizer::text()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
gnote::NoteDataBufferSynchronizerBase	src/notebase.hpp	/^class NoteDataBufferSynchronizerBase$/;"	c	namespace:gnote
gnote::NoteDataBufferSynchronizerBase::NoteDataBufferSynchronizerBase	src/notebase.hpp	/^  NoteDataBufferSynchronizerBase(NoteData *_data)$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:(NoteData *_data)
gnote::NoteDataBufferSynchronizerBase::data	src/notebase.hpp	/^  NoteData & data()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
gnote::NoteDataBufferSynchronizerBase::data	src/notebase.hpp	/^  const NoteData & data() const$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:() const
gnote::NoteDataBufferSynchronizerBase::m_data	src/notebase.hpp	/^  NoteData *m_data;$/;"	m	class:gnote::NoteDataBufferSynchronizerBase	access:private
gnote::NoteDataBufferSynchronizerBase::set_text	src/notebase.cpp	/^void NoteDataBufferSynchronizerBase::set_text(const Glib::ustring & t)$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:(const Glib::ustring & t)
gnote::NoteDataBufferSynchronizerBase::set_text	src/notebase.hpp	/^  virtual void set_text(const Glib::ustring & t);$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:(const Glib::ustring & t)
gnote::NoteDataBufferSynchronizerBase::synchronized_data	src/notebase.hpp	/^  virtual NoteData & synchronized_data()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
gnote::NoteDataBufferSynchronizerBase::synchronized_data	src/notebase.hpp	/^  virtual const NoteData & synchronized_data() const$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:() const
gnote::NoteDataBufferSynchronizerBase::text	src/notebase.cpp	/^const Glib::ustring & NoteDataBufferSynchronizerBase::text()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:()
gnote::NoteDataBufferSynchronizerBase::text	src/notebase.hpp	/^  virtual const Glib::ustring & text();$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
gnote::NoteDataBufferSynchronizerBase::~NoteDataBufferSynchronizerBase	src/notebase.cpp	/^NoteDataBufferSynchronizerBase::~NoteDataBufferSynchronizerBase()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:()
gnote::NoteDataBufferSynchronizerBase::~NoteDataBufferSynchronizerBase	src/notebase.hpp	/^  virtual ~NoteDataBufferSynchronizerBase();$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
gnote::NoteEditor	src/noteeditor.hpp	/^class NoteEditor$/;"	c	namespace:gnote	inherits:Gtk::TextView
gnote::NoteEditor::NoteEditor	src/noteeditor.cpp	/^  NoteEditor::NoteEditor(const Glib::RefPtr<Gtk::TextBuffer> & buffer)$/;"	f	class:gnote::NoteEditor	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
gnote::NoteEditor::NoteEditor	src/noteeditor.hpp	/^  NoteEditor(const Glib::RefPtr<Gtk::TextBuffer> & buffer);$/;"	p	class:gnote::NoteEditor	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
gnote::NoteEditor::Ptr	src/noteeditor.hpp	/^  typedef Glib::RefPtr<NoteEditor> Ptr;$/;"	t	class:gnote::NoteEditor	access:public
gnote::NoteEditor::button_pressed	src/noteeditor.cpp	/^  bool NoteEditor::button_pressed (GdkEventButton * )$/;"	f	class:gnote::NoteEditor	signature:(GdkEventButton * )
gnote::NoteEditor::button_pressed	src/noteeditor.hpp	/^  bool button_pressed (GdkEventButton * ev);$/;"	p	class:gnote::NoteEditor	access:private	signature:(GdkEventButton * ev)
gnote::NoteEditor::default_margin	src/noteeditor.hpp	/^  static int default_margin()$/;"	f	class:gnote::NoteEditor	access:public	signature:()
gnote::NoteEditor::get_gnome_document_font_description	src/noteeditor.cpp	/^  Pango::FontDescription NoteEditor::get_gnome_document_font_description()$/;"	f	class:gnote::NoteEditor	signature:()
gnote::NoteEditor::get_gnome_document_font_description	src/noteeditor.hpp	/^  Pango::FontDescription get_gnome_document_font_description();$/;"	p	class:gnote::NoteEditor	access:private	signature:()
gnote::NoteEditor::key_pressed	src/noteeditor.cpp	/^  bool NoteEditor::key_pressed (GdkEventKey * ev)$/;"	f	class:gnote::NoteEditor	signature:(GdkEventKey * ev)
gnote::NoteEditor::key_pressed	src/noteeditor.hpp	/^  bool key_pressed (GdkEventKey * ev);$/;"	p	class:gnote::NoteEditor	access:private	signature:(GdkEventKey * ev)
gnote::NoteEditor::modify_font_from_string	src/noteeditor.cpp	/^  void NoteEditor::modify_font_from_string (const std::string & fontString)$/;"	f	class:gnote::NoteEditor	signature:(const std::string & fontString)
gnote::NoteEditor::modify_font_from_string	src/noteeditor.hpp	/^  void modify_font_from_string (const std::string & fontString);$/;"	p	class:gnote::NoteEditor	access:private	signature:(const std::string & fontString)
gnote::NoteEditor::on_drag_data_received	src/noteeditor.cpp	/^  void NoteEditor::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext> & context,$/;"	f	class:gnote::NoteEditor	signature:(const Glib::RefPtr<Gdk::DragContext> & context, int x, int y, const Gtk::SelectionData & selection_data, guint info, guint time)
gnote::NoteEditor::on_font_setting_changed	src/noteeditor.cpp	/^  void NoteEditor::on_font_setting_changed (const Glib::ustring & key)$/;"	f	class:gnote::NoteEditor	signature:(const Glib::ustring & key)
gnote::NoteEditor::on_font_setting_changed	src/noteeditor.hpp	/^  void on_font_setting_changed (const Glib::ustring & key);$/;"	p	class:gnote::NoteEditor	access:private	signature:(const Glib::ustring & key)
gnote::NoteEditor::override	src/noteeditor.hpp	/^                                     guint info,  guint time) override;$/;"	m	class:gnote::NoteEditor	access:protected
gnote::NoteEditor::update_custom_font_setting	src/noteeditor.cpp	/^  void NoteEditor::update_custom_font_setting()$/;"	f	class:gnote::NoteEditor	signature:()
gnote::NoteEditor::update_custom_font_setting	src/noteeditor.hpp	/^  void update_custom_font_setting();$/;"	p	class:gnote::NoteEditor	access:private	signature:()
gnote::NoteFindHandler	src/notewindow.hpp	/^class NoteFindHandler$/;"	c	namespace:gnote
gnote::NoteFindHandler::Match	src/notewindow.hpp	/^  struct Match$/;"	s	class:gnote::NoteFindHandler	access:private
gnote::NoteFindHandler::Match::buffer	src/notewindow.hpp	/^    Glib::RefPtr<NoteBuffer>     buffer;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
gnote::NoteFindHandler::Match::end_mark	src/notewindow.hpp	/^    Glib::RefPtr<Gtk::TextMark>  end_mark;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
gnote::NoteFindHandler::Match::highlighting	src/notewindow.hpp	/^    bool                         highlighting;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
gnote::NoteFindHandler::Match::start_mark	src/notewindow.hpp	/^    Glib::RefPtr<Gtk::TextMark>  start_mark;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
gnote::NoteFindHandler::NoteFindHandler	src/notewindow.cpp	/^  NoteFindHandler::NoteFindHandler(Note & note)$/;"	f	class:gnote::NoteFindHandler	signature:(Note & note)
gnote::NoteFindHandler::NoteFindHandler	src/notewindow.hpp	/^  NoteFindHandler(Note & );$/;"	p	class:gnote::NoteFindHandler	access:public	signature:(Note & )
gnote::NoteFindHandler::cleanup_matches	src/notewindow.cpp	/^  void NoteFindHandler::cleanup_matches()$/;"	f	class:gnote::NoteFindHandler	signature:()
gnote::NoteFindHandler::cleanup_matches	src/notewindow.hpp	/^  void cleanup_matches();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
gnote::NoteFindHandler::find_matches_in_buffer	src/notewindow.cpp	/^  void NoteFindHandler::find_matches_in_buffer(const Glib::RefPtr<NoteBuffer> & buffer, $/;"	f	class:gnote::NoteFindHandler	signature:(const Glib::RefPtr<NoteBuffer> & buffer, const std::vector<Glib::ustring> & words, std::list<NoteFindHandler::Match> & matches)
gnote::NoteFindHandler::find_matches_in_buffer	src/notewindow.hpp	/^  void find_matches_in_buffer(const Glib::RefPtr<NoteBuffer> & buffer, $/;"	p	class:gnote::NoteFindHandler	access:private	signature:(const Glib::RefPtr<NoteBuffer> & buffer, const std::vector<Glib::ustring> & words, std::list<Match> & matches)
gnote::NoteFindHandler::goto_next_result	src/notewindow.cpp	/^  bool NoteFindHandler::goto_next_result()$/;"	f	class:gnote::NoteFindHandler	signature:()
gnote::NoteFindHandler::goto_next_result	src/notewindow.hpp	/^  bool goto_next_result();$/;"	p	class:gnote::NoteFindHandler	access:public	signature:()
gnote::NoteFindHandler::goto_previous_result	src/notewindow.cpp	/^  bool NoteFindHandler::goto_previous_result()$/;"	f	class:gnote::NoteFindHandler	signature:()
gnote::NoteFindHandler::goto_previous_result	src/notewindow.hpp	/^  bool goto_previous_result();$/;"	p	class:gnote::NoteFindHandler	access:public	signature:()
gnote::NoteFindHandler::highlight_matches	src/notewindow.cpp	/^  void NoteFindHandler::highlight_matches(bool highlight)$/;"	f	class:gnote::NoteFindHandler	signature:(bool highlight)
gnote::NoteFindHandler::highlight_matches	src/notewindow.hpp	/^  void highlight_matches(bool);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(bool)
gnote::NoteFindHandler::jump_to_match	src/notewindow.cpp	/^  void NoteFindHandler::jump_to_match(const Match & match)$/;"	f	class:gnote::NoteFindHandler	signature:(const Match & match)
gnote::NoteFindHandler::jump_to_match	src/notewindow.hpp	/^  void jump_to_match(const Match & match);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(const Match & match)
gnote::NoteFindHandler::m_current_matches	src/notewindow.hpp	/^  std::list<Match> m_current_matches;$/;"	m	class:gnote::NoteFindHandler	access:private
gnote::NoteFindHandler::m_note	src/notewindow.hpp	/^  Note           & m_note;$/;"	m	class:gnote::NoteFindHandler	access:private
gnote::NoteFindHandler::note_changed_timeout	src/notewindow.hpp	/^  void note_changed_timeout();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
gnote::NoteFindHandler::perform_search	src/notewindow.cpp	/^  void NoteFindHandler::perform_search(const std::string & txt)$/;"	f	class:gnote::NoteFindHandler	signature:(const std::string & txt)
gnote::NoteFindHandler::perform_search	src/notewindow.hpp	/^  void perform_search (bool scroll_to_hit);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(bool scroll_to_hit)
gnote::NoteFindHandler::perform_search	src/notewindow.hpp	/^  void perform_search(const std::string & text);$/;"	p	class:gnote::NoteFindHandler	access:public	signature:(const std::string & text)
gnote::NoteFindHandler::update_search	src/notewindow.hpp	/^  void update_search();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
gnote::NoteFindHandler::update_sensitivity	src/notewindow.hpp	/^  void update_sensitivity();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
gnote::NoteLinkWatcher	src/watchers.hpp	/^  class NoteLinkWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteLinkWatcher::contains_text	src/watchers.cpp	/^  bool NoteLinkWatcher::contains_text(const Glib::ustring & text)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::ustring & text)
gnote::NoteLinkWatcher::contains_text	src/watchers.hpp	/^    bool contains_text(const Glib::ustring & text);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::ustring & text)
gnote::NoteLinkWatcher::create	src/watchers.cpp	/^  NoteAddin * NoteLinkWatcher::create()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
gnote::NoteLinkWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteLinkWatcher	access:public	signature:()
gnote::NoteLinkWatcher::do_highlight	src/watchers.cpp	/^  void NoteLinkWatcher::do_highlight(const TrieHit<NoteBase::WeakPtr> & hit,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const TrieHit<NoteBase::WeakPtr> & hit, const Gtk::TextIter & start, const Gtk::TextIter &)
gnote::NoteLinkWatcher::do_highlight	src/watchers.hpp	/^    void do_highlight(const TrieHit<NoteBase::WeakPtr> & , const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const TrieHit<NoteBase::WeakPtr> & , const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteLinkWatcher::highlight_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::highlight_in_block(const Gtk::TextIter & start,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::highlight_in_block	src/watchers.hpp	/^    void highlight_in_block(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteLinkWatcher::highlight_note_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::highlight_note_in_block (const NoteBase::Ptr & find_note,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & find_note, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::highlight_note_in_block	src/watchers.hpp	/^    void highlight_note_in_block (const NoteBase::Ptr &, const Gtk::TextIter &,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteLinkWatcher::initialize	src/watchers.cpp	/^  void NoteLinkWatcher::initialize ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
gnote::NoteLinkWatcher::m_broken_link_tag	src/watchers.hpp	/^    NoteTag::Ptr m_broken_link_tag;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::m_link_tag	src/watchers.hpp	/^    NoteTag::Ptr m_link_tag;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::m_on_note_added_cid	src/watchers.hpp	/^    sigc::connection m_on_note_added_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::m_on_note_deleted_cid	src/watchers.hpp	/^    sigc::connection m_on_note_deleted_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::m_on_note_renamed_cid	src/watchers.hpp	/^    sigc::connection m_on_note_renamed_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::on_apply_tag	src/watchers.cpp	/^  void NoteLinkWatcher::on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
gnote::NoteLinkWatcher::on_apply_tag	src/watchers.hpp	/^    void on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
gnote::NoteLinkWatcher::on_delete_range	src/watchers.cpp	/^  void NoteLinkWatcher::on_delete_range(const Gtk::TextIter & s,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & s, const Gtk::TextIter & e)
gnote::NoteLinkWatcher::on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteLinkWatcher::on_insert_text	src/watchers.cpp	/^  void NoteLinkWatcher::on_insert_text(const Gtk::TextIter & pos, $/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int length)
gnote::NoteLinkWatcher::on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
gnote::NoteLinkWatcher::on_link_tag_activated	src/watchers.cpp	/^  bool NoteLinkWatcher::on_link_tag_activated(const NoteEditor & editor,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteEditor & editor, const Gtk::TextIter &start, const Gtk::TextIter &end)
gnote::NoteLinkWatcher::on_link_tag_activated	src/watchers.hpp	/^    bool on_link_tag_activated(const NoteEditor &,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteLinkWatcher::on_note_added	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_added(const NoteBase::Ptr & added)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & added)
gnote::NoteLinkWatcher::on_note_added	src/watchers.hpp	/^    void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &)
gnote::NoteLinkWatcher::on_note_deleted	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_deleted(const NoteBase::Ptr & deleted)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & deleted)
gnote::NoteLinkWatcher::on_note_deleted	src/watchers.hpp	/^    void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &)
gnote::NoteLinkWatcher::on_note_opened	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_opened ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
gnote::NoteLinkWatcher::on_note_renamed	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_renamed(const NoteBase::Ptr& renamed, const Glib::ustring& \/*old_title*\/)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr& renamed, const Glib::ustring& )
gnote::NoteLinkWatcher::on_note_renamed	src/watchers.hpp	/^    void on_note_renamed(const NoteBase::Ptr&, const Glib::ustring&);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr&, const Glib::ustring&)
gnote::NoteLinkWatcher::open_or_create_link	src/watchers.cpp	/^  bool NoteLinkWatcher::open_or_create_link(const NoteEditor &,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteEditor &, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::open_or_create_link	src/watchers.hpp	/^    bool open_or_create_link(const NoteEditor &, const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteLinkWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
gnote::NoteLinkWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
gnote::NoteLinkWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
gnote::NoteLinkWatcher::remove_link_tag	src/watchers.cpp	/^  void NoteLinkWatcher::remove_link_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::remove_link_tag	src/watchers.hpp	/^    void remove_link_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::s_text_event_connected	src/watchers.cpp	/^  bool NoteLinkWatcher::s_text_event_connected = false;$/;"	m	class:gnote::NoteLinkWatcher	file:
gnote::NoteLinkWatcher::s_text_event_connected	src/watchers.hpp	/^    static bool s_text_event_connected;$/;"	m	class:gnote::NoteLinkWatcher	access:private
gnote::NoteLinkWatcher::shutdown	src/watchers.cpp	/^  void NoteLinkWatcher::shutdown ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
gnote::NoteLinkWatcher::unhighlight_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::unhighlight_in_block(const Gtk::TextIter & start,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteLinkWatcher::unhighlight_in_block	src/watchers.hpp	/^    void unhighlight_in_block(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteManager	src/notemanager.hpp	/^  class NoteManager $/;"	c	namespace:gnote	inherits:NoteManagerBase
gnote::NoteManager::NoteChangedSlot	src/notemanager.hpp	/^    typedef sigc::slot<void, const Note::Ptr &> NoteChangedSlot;$/;"	t	class:gnote::NoteManager	access:public
gnote::NoteManager::NoteManager	src/notemanager.cpp	/^  NoteManager::NoteManager(const Glib::ustring & directory)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & directory)
gnote::NoteManager::NoteManager	src/notemanager.hpp	/^    NoteManager(const Glib::ustring &);$/;"	p	class:gnote::NoteManager	access:public	signature:(const Glib::ustring &)
gnote::NoteManager::Ptr	src/notemanager.hpp	/^    typedef shared_ptr<NoteManager> Ptr;$/;"	t	class:gnote::NoteManager	access:public
gnote::NoteManager::_common_init	src/notemanager.cpp	/^  void NoteManager::_common_init(const Glib::ustring & directory, const Glib::ustring & backup_directory)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & directory, const Glib::ustring & backup_directory)
gnote::NoteManager::create_addin_manager	src/notemanager.cpp	/^  AddinManager *NoteManager::create_addin_manager()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::create_addin_manager	src/notemanager.hpp	/^    AddinManager *create_addin_manager();$/;"	p	class:gnote::NoteManager	access:private	signature:()
gnote::NoteManager::create_new_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_new_note(Glib::ustring title, const std::string & guid)$/;"	f	class:gnote::NoteManager	signature:(Glib::ustring title, const std::string & guid)
gnote::NoteManager::create_new_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
gnote::NoteManager::create_note_from_template	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::create_note_from_template(const Glib::ustring & title,$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
gnote::NoteManager::create_start_notes	src/notemanager.cpp	/^  void NoteManager::create_start_notes ()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::create_start_notes	src/notemanager.hpp	/^    void create_start_notes();$/;"	p	class:gnote::NoteManager	access:private	signature:()
gnote::NoteManager::get_addin_manager	src/notemanager.hpp	/^    AddinManager & get_addin_manager()$/;"	f	class:gnote::NoteManager	access:public	signature:()
gnote::NoteManager::get_or_create_template_note	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::get_or_create_template_note()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::load_notes	src/notemanager.cpp	/^  void NoteManager::load_notes()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::load_notes	src/notemanager.hpp	/^    void load_notes();$/;"	p	class:gnote::NoteManager	access:private	signature:()
gnote::NoteManager::m_addin_mgr	src/notemanager.hpp	/^    AddinManager   *m_addin_mgr;$/;"	m	class:gnote::NoteManager	access:private
gnote::NoteManager::migrate_notes	src/notemanager.cpp	/^  void NoteManager::migrate_notes(const std::string & old_note_dir)$/;"	f	class:gnote::NoteManager	signature:(const std::string & old_note_dir)
gnote::NoteManager::note_create_new	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::note_create_new(const Glib::ustring & title, const Glib::ustring & file_name)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
gnote::NoteManager::note_load	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::note_load(const Glib::ustring & file_name)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & file_name)
gnote::NoteManager::on_exiting_event	src/notemanager.cpp	/^  void NoteManager::on_exiting_event()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::on_exiting_event	src/notemanager.hpp	/^    void on_exiting_event();$/;"	p	class:gnote::NoteManager	access:private	signature:()
gnote::NoteManager::on_setting_changed	src/notemanager.cpp	/^  void NoteManager::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & key)
gnote::NoteManager::on_setting_changed	src/notemanager.hpp	/^    void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteManager	access:public	signature:(const Glib::ustring & key)
gnote::NoteManager::override	src/notemanager.hpp	/^                                                    const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^                                          const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual NoteBase::Ptr create_new_note(Glib::ustring title, const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual NoteBase::Ptr get_or_create_template_note() override;$/;"	m	class:gnote::NoteManager	access:public
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual NoteBase::Ptr note_load(const Glib::ustring & file_name) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual void _common_init(const Glib::ustring & directory, const Glib::ustring & backup) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual void migrate_notes(const std::string & old_note_dir) override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::override	src/notemanager.hpp	/^    virtual void post_load() override;$/;"	m	class:gnote::NoteManager	access:protected
gnote::NoteManager::post_load	src/notemanager.cpp	/^  void NoteManager::post_load()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::signal_note_buffer_changed	src/notemanager.hpp	/^    ChangedHandler signal_note_buffer_changed;$/;"	m	class:gnote::NoteManager	access:public
gnote::NoteManager::~NoteManager	src/notemanager.cpp	/^  NoteManager::~NoteManager()$/;"	f	class:gnote::NoteManager	signature:()
gnote::NoteManager::~NoteManager	src/notemanager.hpp	/^    ~NoteManager();$/;"	p	class:gnote::NoteManager	access:public	signature:()
gnote::NoteManagerBase	src/notemanagerbase.hpp	/^class NoteManagerBase$/;"	c	namespace:gnote
gnote::NoteManagerBase::ChangedHandler	src/notemanagerbase.hpp	/^  typedef sigc::signal<void, const NoteBase::Ptr &> ChangedHandler;$/;"	t	class:gnote::NoteManagerBase	access:public
gnote::NoteManagerBase::NoteManagerBase	src/notemanagerbase.cpp	/^NoteManagerBase::NoteManagerBase(const Glib::ustring & directory)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & directory)
gnote::NoteManagerBase::NoteManagerBase	src/notemanagerbase.hpp	/^  NoteManagerBase(const Glib::ustring & directory);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & directory)
gnote::NoteManagerBase::_common_init	src/notemanagerbase.cpp	/^void NoteManagerBase::_common_init(const Glib::ustring & \/*directory*\/, const Glib::ustring & backup_directory)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & , const Glib::ustring & backup_directory)
gnote::NoteManagerBase::_common_init	src/notemanagerbase.hpp	/^  virtual void _common_init(const Glib::ustring & directory, const Glib::ustring & backup);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & directory, const Glib::ustring & backup)
gnote::NoteManagerBase::add_note	src/notemanagerbase.cpp	/^void NoteManagerBase::add_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
gnote::NoteManagerBase::add_note	src/notemanagerbase.hpp	/^  void add_note(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr &)
gnote::NoteManagerBase::create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create(const Glib::ustring & title)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title)
gnote::NoteManagerBase::create	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create(const Glib::ustring & title, const Glib::ustring & xml_content)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const Glib::ustring & xml_content)
gnote::NoteManagerBase::create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
gnote::NoteManagerBase::create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create(const Glib::ustring & title);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title)
gnote::NoteManagerBase::create	src/notemanagerbase.hpp	/^  NoteBase::Ptr create(const Glib::ustring & title, const Glib::ustring & xml_content);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const Glib::ustring & xml_content)
gnote::NoteManagerBase::create_directory	src/notemanagerbase.cpp	/^bool NoteManagerBase::create_directory(const Glib::ustring & directory) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & directory) const
gnote::NoteManagerBase::create_directory	src/notemanagerbase.hpp	/^  bool create_directory(const Glib::ustring & directory) const;$/;"	p	class:gnote::NoteManagerBase	access:private	signature:(const Glib::ustring & directory) const
gnote::NoteManagerBase::create_new_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_new_note(Glib::ustring title, const std::string & guid)$/;"	f	class:gnote::NoteManagerBase	signature:(Glib::ustring title, const std::string & guid)
gnote::NoteManagerBase::create_new_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
gnote::NoteManagerBase::create_new_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_new_note(Glib::ustring title, const std::string & guid);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(Glib::ustring title, const std::string & guid)
gnote::NoteManagerBase::create_new_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_new_note(const Glib::ustring & title, const Glib::ustring & xml_content, $/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const Glib::ustring & xml_content, const std::string & guid)
gnote::NoteManagerBase::create_note_from_template	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_note_from_template(const Glib::ustring & title, const NoteBase::Ptr & template_note)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note)
gnote::NoteManagerBase::create_note_from_template	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_note_from_template(const Glib::ustring & title,$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
gnote::NoteManagerBase::create_note_from_template	src/notemanagerbase.hpp	/^  NoteBase::Ptr create_note_from_template(const Glib::ustring & title, const NoteBase::Ptr & template_note);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note)
gnote::NoteManagerBase::create_note_from_template	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr create_note_from_template(const Glib::ustring & title,$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const NoteBase::Ptr & template_note, const std::string & guid)
gnote::NoteManagerBase::create_notes_dir	src/notemanagerbase.cpp	/^void NoteManagerBase::create_notes_dir() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
gnote::NoteManagerBase::create_notes_dir	src/notemanagerbase.hpp	/^  void create_notes_dir() const;$/;"	p	class:gnote::NoteManagerBase	access:private	signature:() const
gnote::NoteManagerBase::create_trie_controller	src/notemanagerbase.cpp	/^TrieController *NoteManagerBase::create_trie_controller()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::create_trie_controller	src/notemanagerbase.hpp	/^  TrieController *create_trie_controller();$/;"	p	class:gnote::NoteManagerBase	access:private	signature:()
gnote::NoteManagerBase::create_with_guid	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::create_with_guid(const Glib::ustring & title, const std::string & guid)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title, const std::string & guid)
gnote::NoteManagerBase::create_with_guid	src/notemanagerbase.hpp	/^  NoteBase::Ptr create_with_guid(const Glib::ustring & title, const std::string & guid);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title, const std::string & guid)
gnote::NoteManagerBase::delete_note	src/notemanagerbase.cpp	/^void NoteManagerBase::delete_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
gnote::NoteManagerBase::delete_note	src/notemanagerbase.hpp	/^  void delete_note(const NoteBase::Ptr & note);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const NoteBase::Ptr & note)
gnote::NoteManagerBase::find	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find(const Glib::ustring & linked_title) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & linked_title) const
gnote::NoteManagerBase::find	src/notemanagerbase.hpp	/^  NoteBase::Ptr find(const Glib::ustring &) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring &) const
gnote::NoteManagerBase::find_by_uri	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find_by_uri(const std::string & uri) const$/;"	f	class:gnote::NoteManagerBase	signature:(const std::string & uri) const
gnote::NoteManagerBase::find_by_uri	src/notemanagerbase.hpp	/^  NoteBase::Ptr find_by_uri(const std::string &) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const std::string &) const
gnote::NoteManagerBase::find_template_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::find_template_note() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
gnote::NoteManagerBase::find_template_note	src/notemanagerbase.hpp	/^  NoteBase::Ptr find_template_note() const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:() const
gnote::NoteManagerBase::find_trie_matches	src/notemanagerbase.cpp	/^TrieHit<NoteBase::WeakPtr>::ListPtr NoteManagerBase::find_trie_matches(const Glib::ustring & match)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & match)
gnote::NoteManagerBase::find_trie_matches	src/notemanagerbase.hpp	/^  TrieHit<NoteBase::WeakPtr>::ListPtr find_trie_matches(const Glib::ustring &);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring &)
gnote::NoteManagerBase::first_run	src/notemanagerbase.cpp	/^bool NoteManagerBase::first_run() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
gnote::NoteManagerBase::first_run	src/notemanagerbase.hpp	/^  bool first_run() const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:() const
gnote::NoteManagerBase::get_note_template_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::get_note_template_content(const Glib::ustring & title)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title)
gnote::NoteManagerBase::get_note_template_content	src/notemanagerbase.hpp	/^  static Glib::ustring get_note_template_content(const Glib::ustring & title);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title)
gnote::NoteManagerBase::get_notes	src/notemanagerbase.hpp	/^  const NoteBase::List & get_notes() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
gnote::NoteManagerBase::get_notes_linking_to	src/notemanagerbase.cpp	/^NoteBase::List NoteManagerBase::get_notes_linking_to(const Glib::ustring & title) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & title) const
gnote::NoteManagerBase::get_notes_linking_to	src/notemanagerbase.hpp	/^  NoteBase::List get_notes_linking_to(const Glib::ustring & title) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & title) const
gnote::NoteManagerBase::get_or_create_template_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::get_or_create_template_note()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::get_or_create_template_note	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr get_or_create_template_note();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
gnote::NoteManagerBase::get_unique_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::get_unique_name(const Glib::ustring & basename) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & basename) const
gnote::NoteManagerBase::get_unique_name	src/notemanagerbase.hpp	/^  Glib::ustring get_unique_name(const Glib::ustring & basename) const;$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & basename) const
gnote::NoteManagerBase::import_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::import_note(const Glib::ustring & file_path)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & file_path)
gnote::NoteManagerBase::import_note	src/notemanagerbase.hpp	/^  NoteBase::Ptr import_note(const Glib::ustring & file_path);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & file_path)
gnote::NoteManagerBase::m_backup_dir	src/notemanagerbase.hpp	/^  Glib::ustring m_backup_dir;$/;"	m	class:gnote::NoteManagerBase	access:protected
gnote::NoteManagerBase::m_default_note_template_title	src/notemanagerbase.hpp	/^  Glib::ustring m_default_note_template_title;$/;"	m	class:gnote::NoteManagerBase	access:protected
gnote::NoteManagerBase::m_notes	src/notemanagerbase.hpp	/^  NoteBase::List m_notes;$/;"	m	class:gnote::NoteManagerBase	access:protected
gnote::NoteManagerBase::m_notes_dir	src/notemanagerbase.hpp	/^  Glib::ustring m_notes_dir;$/;"	m	class:gnote::NoteManagerBase	access:private
gnote::NoteManagerBase::m_read_only	src/notemanagerbase.hpp	/^  bool m_read_only;$/;"	m	class:gnote::NoteManagerBase	access:private
gnote::NoteManagerBase::m_start_note_uri	src/notemanagerbase.hpp	/^  std::string m_start_note_uri;$/;"	m	class:gnote::NoteManagerBase	access:protected
gnote::NoteManagerBase::m_trie_controller	src/notemanagerbase.hpp	/^  TrieController *m_trie_controller;$/;"	m	class:gnote::NoteManagerBase	access:private
gnote::NoteManagerBase::make_new_file_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::make_new_file_name() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
gnote::NoteManagerBase::make_new_file_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::make_new_file_name(const Glib::ustring & guid) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & guid) const
gnote::NoteManagerBase::make_new_file_name	src/notemanagerbase.hpp	/^  Glib::ustring make_new_file_name() const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:() const
gnote::NoteManagerBase::make_new_file_name	src/notemanagerbase.hpp	/^  Glib::ustring make_new_file_name(const Glib::ustring & guid) const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & guid) const
gnote::NoteManagerBase::migrate_notes	src/notemanagerbase.cpp	/^void NoteManagerBase::migrate_notes(const std::string & \/*old_note_dir*\/)$/;"	f	class:gnote::NoteManagerBase	signature:(const std::string & )
gnote::NoteManagerBase::migrate_notes	src/notemanagerbase.hpp	/^  virtual void migrate_notes(const std::string & old_note_dir);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const std::string & old_note_dir)
gnote::NoteManagerBase::note_create_new	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) = 0;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
gnote::NoteManagerBase::note_load	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr note_load(const Glib::ustring & file_name) = 0;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & file_name)
gnote::NoteManagerBase::notes_dir	src/notemanagerbase.hpp	/^  const Glib::ustring & notes_dir() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
gnote::NoteManagerBase::on_note_rename	src/notemanagerbase.cpp	/^void NoteManagerBase::on_note_rename(const NoteBase::Ptr & note, const Glib::ustring & old_title)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note, const Glib::ustring & old_title)
gnote::NoteManagerBase::on_note_rename	src/notemanagerbase.hpp	/^  void on_note_rename(const NoteBase::Ptr & note, const Glib::ustring & old_title);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr & note, const Glib::ustring & old_title)
gnote::NoteManagerBase::on_note_save	src/notemanagerbase.cpp	/^void NoteManagerBase::on_note_save (const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
gnote::NoteManagerBase::on_note_save	src/notemanagerbase.hpp	/^  void on_note_save(const NoteBase::Ptr & note);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr & note)
gnote::NoteManagerBase::post_load	src/notemanagerbase.cpp	/^void NoteManagerBase::post_load()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::post_load	src/notemanagerbase.hpp	/^  virtual void post_load();$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:()
gnote::NoteManagerBase::read_only	src/notemanagerbase.hpp	/^  bool read_only() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
gnote::NoteManagerBase::read_only	src/notemanagerbase.hpp	/^  void read_only(bool ro)$/;"	f	class:gnote::NoteManagerBase	access:public	signature:(bool ro)
gnote::NoteManagerBase::sanitize_xml_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::sanitize_xml_content(const Glib::ustring & xml_content)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & xml_content)
gnote::NoteManagerBase::sanitize_xml_content	src/notemanagerbase.hpp	/^  static Glib::ustring sanitize_xml_content(const Glib::ustring & xml_content);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & xml_content)
gnote::NoteManagerBase::signal_note_added	src/notemanagerbase.hpp	/^  ChangedHandler signal_note_added;$/;"	m	class:gnote::NoteManagerBase	access:public
gnote::NoteManagerBase::signal_note_deleted	src/notemanagerbase.hpp	/^  ChangedHandler signal_note_deleted;$/;"	m	class:gnote::NoteManagerBase	access:public
gnote::NoteManagerBase::signal_note_renamed	src/notemanagerbase.hpp	/^  NoteBase::RenamedHandler signal_note_renamed;$/;"	m	class:gnote::NoteManagerBase	access:public
gnote::NoteManagerBase::signal_note_saved	src/notemanagerbase.hpp	/^  NoteBase::SavedHandler signal_note_saved;$/;"	m	class:gnote::NoteManagerBase	access:public
gnote::NoteManagerBase::split_title_from_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::split_title_from_content(Glib::ustring title, Glib::ustring & body)$/;"	f	class:gnote::NoteManagerBase	signature:(Glib::ustring title, Glib::ustring & body)
gnote::NoteManagerBase::split_title_from_content	src/notemanagerbase.hpp	/^  static Glib::ustring split_title_from_content(Glib::ustring title, Glib::ustring & body);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(Glib::ustring title, Glib::ustring & body)
gnote::NoteManagerBase::start_note_uri	src/notemanagerbase.hpp	/^  const std::string & start_note_uri() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
gnote::NoteManagerBase::trie_max_length	src/notemanagerbase.cpp	/^size_t NoteManagerBase::trie_max_length()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::trie_max_length	src/notemanagerbase.hpp	/^  size_t trie_max_length();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
gnote::NoteManagerBase::~NoteManagerBase	src/notemanagerbase.cpp	/^NoteManagerBase::~NoteManagerBase()$/;"	f	class:gnote::NoteManagerBase	signature:()
gnote::NoteManagerBase::~NoteManagerBase	src/notemanagerbase.hpp	/^  virtual ~NoteManagerBase();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
gnote::NoteMenuItem	src/tray.hpp	/^class NoteMenuItem $/;"	c	namespace:gnote	inherits:Gtk::ImageMenuItem
gnote::NoteMenuItem::NoteMenuItem	src/tray.cpp	/^  NoteMenuItem::NoteMenuItem(const Note::Ptr & note, bool show_pin)$/;"	f	class:gnote::NoteMenuItem	signature:(const Note::Ptr & note, bool show_pin)
gnote::NoteMenuItem::NoteMenuItem	src/tray.hpp	/^  NoteMenuItem(const Note::Ptr & note, bool show_pin);$/;"	p	class:gnote::NoteMenuItem	access:public	signature:(const Note::Ptr & note, bool show_pin)
gnote::NoteMenuItem::ellipsify	src/tray.cpp	/^  std::string NoteMenuItem::ellipsify (const std::string & str, size_t max)$/;"	f	class:gnote::NoteMenuItem	signature:(const std::string & str, size_t max)
gnote::NoteMenuItem::ellipsify	src/tray.hpp	/^  static std::string ellipsify (const std::string & str, size_t max);$/;"	p	class:gnote::NoteMenuItem	access:private	signature:(const std::string & str, size_t max)
gnote::NoteMenuItem::get_display_name	src/tray.cpp	/^  std::string NoteMenuItem::get_display_name(const Note::Ptr & note)$/;"	f	class:gnote::NoteMenuItem	signature:(const Note::Ptr & note)
gnote::NoteMenuItem::get_display_name	src/tray.hpp	/^  static std::string get_display_name(const Note::Ptr & n);$/;"	p	class:gnote::NoteMenuItem	access:private	signature:(const Note::Ptr & n)
gnote::NoteMenuItem::get_pindown_icon	src/tray.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteMenuItem::get_pindown_icon()$/;"	f	class:gnote::NoteMenuItem	signature:()
gnote::NoteMenuItem::get_pindown_icon	src/tray.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_pindown_icon();$/;"	p	class:gnote::NoteMenuItem	access:private	signature:()
gnote::NoteMenuItem::get_pinup_icon	src/tray.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteMenuItem::get_pinup_icon()$/;"	f	class:gnote::NoteMenuItem	signature:()
gnote::NoteMenuItem::get_pinup_icon	src/tray.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_pinup_icon();$/;"	p	class:gnote::NoteMenuItem	access:private	signature:()
gnote::NoteMenuItem::m_inhibit_activate	src/tray.hpp	/^  bool        m_inhibit_activate;$/;"	m	class:gnote::NoteMenuItem	access:private
gnote::NoteMenuItem::m_note	src/tray.hpp	/^  Note::Ptr   m_note;$/;"	m	class:gnote::NoteMenuItem	access:private
gnote::NoteMenuItem::m_pin_img	src/tray.hpp	/^  Gtk::Image *m_pin_img;$/;"	m	class:gnote::NoteMenuItem	access:private
gnote::NoteMenuItem::m_pinned	src/tray.hpp	/^  bool        m_pinned;$/;"	m	class:gnote::NoteMenuItem	access:private
gnote::NoteMenuItem::on_activate	src/tray.cpp	/^  void NoteMenuItem::on_activate()$/;"	f	class:gnote::NoteMenuItem	signature:()
gnote::NoteMenuItem::on_button_press_event	src/tray.cpp	/^  bool NoteMenuItem::on_button_press_event(GdkEventButton *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventButton *ev)
gnote::NoteMenuItem::on_button_release_event	src/tray.cpp	/^  bool NoteMenuItem::on_button_release_event(GdkEventButton *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventButton *ev)
gnote::NoteMenuItem::on_leave_notify_event	src/tray.cpp	/^  bool NoteMenuItem::on_leave_notify_event(GdkEventCrossing *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventCrossing *ev)
gnote::NoteMenuItem::on_motion_notify_event	src/tray.cpp	/^  bool NoteMenuItem::on_motion_notify_event(GdkEventMotion *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventMotion *ev)
gnote::NoteMenuItem::override	src/tray.hpp	/^  virtual bool on_button_press_event(GdkEventButton *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
gnote::NoteMenuItem::override	src/tray.hpp	/^  virtual bool on_button_release_event(GdkEventButton *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
gnote::NoteMenuItem::override	src/tray.hpp	/^  virtual bool on_leave_notify_event(GdkEventCrossing *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
gnote::NoteMenuItem::override	src/tray.hpp	/^  virtual bool on_motion_notify_event(GdkEventMotion *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
gnote::NoteMenuItem::override	src/tray.hpp	/^  virtual void on_activate() override;$/;"	m	class:gnote::NoteMenuItem	access:protected
gnote::NoteRecentChanges	src/recentchanges.hpp	/^class NoteRecentChanges$/;"	c	namespace:gnote	inherits:MainWindow
gnote::NoteRecentChanges::NoteRecentChanges	src/recentchanges.cpp	/^  NoteRecentChanges::NoteRecentChanges(NoteManager& m)$/;"	f	class:gnote::NoteRecentChanges	signature:(NoteManager& m)
gnote::NoteRecentChanges::NoteRecentChanges	src/recentchanges.hpp	/^  NoteRecentChanges(NoteManager& m);$/;"	p	class:gnote::NoteRecentChanges	access:public	signature:(NoteManager& m)
gnote::NoteRecentChanges::background_embedded	src/recentchanges.cpp	/^  void NoteRecentChanges::background_embedded(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::close_window	src/recentchanges.cpp	/^  void NoteRecentChanges::close_window()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::contains	src/recentchanges.cpp	/^  bool NoteRecentChanges::contains(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::currently_embedded	src/recentchanges.cpp	/^  EmbeddableWidget *NoteRecentChanges::currently_embedded()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::currently_embedded	src/recentchanges.hpp	/^  EmbeddableWidget *currently_embedded();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::embed_widget	src/recentchanges.cpp	/^  void NoteRecentChanges::embed_widget(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::entry_changed_timeout	src/recentchanges.cpp	/^  void NoteRecentChanges::entry_changed_timeout()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::entry_changed_timeout	src/recentchanges.hpp	/^  void entry_changed_timeout();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::foreground_embedded	src/recentchanges.cpp	/^  void NoteRecentChanges::foreground_embedded(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::get_search_text	src/recentchanges.cpp	/^  std::string NoteRecentChanges::get_search_text()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::get_search_text	src/recentchanges.hpp	/^  std::string get_search_text();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::is_foreground	src/recentchanges.cpp	/^  bool NoteRecentChanges::is_foreground(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::m_all_notes_button	src/recentchanges.hpp	/^  Gtk::Button        *m_all_notes_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_close_note_on_escape	src/recentchanges.hpp	/^  bool                m_close_note_on_escape;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_content_vbox	src/recentchanges.hpp	/^  Gtk::Grid           m_content_vbox;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_current_embedded_actions_slot	src/recentchanges.hpp	/^  sigc::connection    m_current_embedded_actions_slot;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_current_embedded_name_slot	src/recentchanges.hpp	/^  sigc::connection    m_current_embedded_name_slot;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_embed_box	src/recentchanges.hpp	/^  Gtk::Grid           m_embed_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_embedded_toolbar	src/recentchanges.hpp	/^  Gtk::Alignment      m_embedded_toolbar;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_embedded_widgets	src/recentchanges.hpp	/^  std::list<EmbeddableWidget*> m_embedded_widgets;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_entry_changed_timeout	src/recentchanges.hpp	/^  utils::InterruptableTimeout *m_entry_changed_timeout;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_find_next_prev_box	src/recentchanges.hpp	/^  Gtk::Grid           m_find_next_prev_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_header_bar	src/recentchanges.hpp	/^  Gtk::HeaderBar      m_header_bar;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_keybinder	src/recentchanges.hpp	/^  utils::GlobalKeybinder m_keybinder;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_mapped	src/recentchanges.hpp	/^  bool                m_mapped;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_new_note_button	src/recentchanges.hpp	/^  Gtk::Button        *m_new_note_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_note_manager	src/recentchanges.hpp	/^  NoteManager        &m_note_manager;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_open_notes_in_new_window	src/recentchanges.hpp	/^  bool                m_open_notes_in_new_window;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_search_box	src/recentchanges.hpp	/^  Gtk::Alignment      m_search_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_search_button	src/recentchanges.hpp	/^  Gtk::ToggleButton   m_search_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_search_entry	src/recentchanges.hpp	/^  Gtk::SearchEntry    m_search_entry;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_search_notes_widget	src/recentchanges.hpp	/^  SearchNotesWidget   m_search_notes_widget;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_window_actions_button	src/recentchanges.hpp	/^  Gtk::Button        *m_window_actions_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_window_menu_default	src/recentchanges.hpp	/^  Gtk::Menu          *m_window_menu_default;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::m_window_menu_embedded	src/recentchanges.hpp	/^  Gtk::Menu          *m_window_menu_embedded;$/;"	m	class:gnote::NoteRecentChanges	access:private
gnote::NoteRecentChanges::make_header_bar	src/recentchanges.cpp	/^  void NoteRecentChanges::make_header_bar()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::make_header_bar	src/recentchanges.hpp	/^  void make_header_bar();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::make_menu_items	src/recentchanges.cpp	/^  std::vector<Gtk::MenuItem*> & NoteRecentChanges::make_menu_items(std::vector<Gtk::MenuItem*> & items,$/;"	f	class:gnote::NoteRecentChanges	signature:(std::vector<Gtk::MenuItem*> & items, const std::vector<Glib::RefPtr<Gtk::Action> > & actions)
gnote::NoteRecentChanges::make_menu_items	src/recentchanges.hpp	/^  std::vector<Gtk::MenuItem*> & make_menu_items(std::vector<Gtk::MenuItem*> & items,$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(std::vector<Gtk::MenuItem*> & items, const std::vector<Glib::RefPtr<Gtk::Action> > & actions)
gnote::NoteRecentChanges::make_search_box	src/recentchanges.cpp	/^  void NoteRecentChanges::make_search_box()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::make_search_box	src/recentchanges.hpp	/^  void make_search_box();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::make_window_menu	src/recentchanges.cpp	/^  Gtk::Menu *NoteRecentChanges::make_window_menu(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)$/;"	f	class:gnote::NoteRecentChanges	signature:(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)
gnote::NoteRecentChanges::make_window_menu	src/recentchanges.hpp	/^  Gtk::Menu *make_window_menu(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)
gnote::NoteRecentChanges::new_note	src/recentchanges.cpp	/^  void NoteRecentChanges::new_note()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_all_notes_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_all_notes_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_all_notes_button_clicked	src/recentchanges.hpp	/^  void on_all_notes_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_delete	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_delete(GdkEventAny *)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventAny *)
gnote::NoteRecentChanges::on_delete	src/recentchanges.hpp	/^  bool on_delete(GdkEventAny *);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventAny *)
gnote::NoteRecentChanges::on_delete_note	src/recentchanges.cpp	/^  void NoteRecentChanges::on_delete_note()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_delete_note	src/recentchanges.hpp	/^  void on_delete_note();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_embedded_name_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_embedded_name_changed(const std::string & name)$/;"	f	class:gnote::NoteRecentChanges	signature:(const std::string & name)
gnote::NoteRecentChanges::on_embedded_name_changed	src/recentchanges.hpp	/^  void on_embedded_name_changed(const std::string & name);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const std::string & name)
gnote::NoteRecentChanges::on_entry_activated	src/recentchanges.cpp	/^  void NoteRecentChanges::on_entry_activated()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_entry_activated	src/recentchanges.hpp	/^  void on_entry_activated();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_entry_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_entry_changed()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_entry_changed	src/recentchanges.hpp	/^  void on_entry_changed();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_find_next_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_find_next_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_find_next_button_clicked	src/recentchanges.hpp	/^  void on_find_next_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_find_prev_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_find_prev_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_find_prev_button_clicked	src/recentchanges.hpp	/^  void on_find_prev_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_key_pressed	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_key_pressed(GdkEventKey * ev)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventKey * ev)
gnote::NoteRecentChanges::on_key_pressed	src/recentchanges.hpp	/^  bool on_key_pressed(GdkEventKey *);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventKey *)
gnote::NoteRecentChanges::on_main_window_actions_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_main_window_actions_changed(Gtk::Menu **menu)$/;"	f	class:gnote::NoteRecentChanges	signature:(Gtk::Menu **menu)
gnote::NoteRecentChanges::on_main_window_actions_changed	src/recentchanges.hpp	/^  void on_main_window_actions_changed(Gtk::Menu **menu);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(Gtk::Menu **menu)
gnote::NoteRecentChanges::on_map_event	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_map_event(GdkEventAny *evt)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventAny *evt)
gnote::NoteRecentChanges::on_notes_widget_key_press	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_notes_widget_key_press(GdkEventKey *evt)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventKey *evt)
gnote::NoteRecentChanges::on_notes_widget_key_press	src/recentchanges.hpp	/^  bool on_notes_widget_key_press(GdkEventKey*);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventKey*)
gnote::NoteRecentChanges::on_open_note	src/recentchanges.cpp	/^  void NoteRecentChanges::on_open_note(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
gnote::NoteRecentChanges::on_open_note	src/recentchanges.hpp	/^  void on_open_note(const Note::Ptr &);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Note::Ptr &)
gnote::NoteRecentChanges::on_open_note_new_window	src/recentchanges.cpp	/^  void NoteRecentChanges::on_open_note_new_window(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
gnote::NoteRecentChanges::on_open_note_new_window	src/recentchanges.hpp	/^  void on_open_note_new_window(const Note::Ptr &);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Note::Ptr &)
gnote::NoteRecentChanges::on_search_button_toggled	src/recentchanges.cpp	/^  void NoteRecentChanges::on_search_button_toggled()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_search_button_toggled	src/recentchanges.hpp	/^  void on_search_button_toggled();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::on_settings_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_settings_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Glib::ustring & key)
gnote::NoteRecentChanges::on_settings_changed	src/recentchanges.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Glib::ustring & key)
gnote::NoteRecentChanges::on_show	src/recentchanges.cpp	/^  void NoteRecentChanges::on_show()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_show_window_menu	src/recentchanges.cpp	/^  void NoteRecentChanges::on_show_window_menu()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::on_show_window_menu	src/recentchanges.hpp	/^  void on_show_window_menu();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual bool contains(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual bool is_foreground(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual bool on_map_event(GdkEventAny *evt) override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void background_embedded(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void close_window() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void embed_widget(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void foreground_embedded(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void new_note() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void on_show() override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void present_note(const Note::Ptr & note) override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void present_search() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void set_search_text(const std::string & value) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void show_search_bar(bool grab_focus = true) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::override	src/recentchanges.hpp	/^  virtual void unembed_widget(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
gnote::NoteRecentChanges::present_note	src/recentchanges.cpp	/^  void NoteRecentChanges::present_note(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
gnote::NoteRecentChanges::present_search	src/recentchanges.cpp	/^  void NoteRecentChanges::present_search()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::running	src/recentchanges.hpp	/^  virtual bool running()$/;"	f	class:gnote::NoteRecentChanges	access:public	signature:()
gnote::NoteRecentChanges::set_search_text	src/recentchanges.cpp	/^  void NoteRecentChanges::set_search_text(const std::string & value)$/;"	f	class:gnote::NoteRecentChanges	signature:(const std::string & value)
gnote::NoteRecentChanges::show_search_bar	src/recentchanges.cpp	/^  void NoteRecentChanges::show_search_bar(bool focus)$/;"	f	class:gnote::NoteRecentChanges	signature:(bool focus)
gnote::NoteRecentChanges::unembed_widget	src/recentchanges.cpp	/^  void NoteRecentChanges::unembed_widget(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::update_toolbar	src/recentchanges.cpp	/^  void NoteRecentChanges::update_toolbar(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::update_toolbar	src/recentchanges.hpp	/^  void update_toolbar(EmbeddableWidget & widget);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(EmbeddableWidget & widget)
gnote::NoteRecentChanges::~NoteRecentChanges	src/recentchanges.cpp	/^  NoteRecentChanges::~NoteRecentChanges()$/;"	f	class:gnote::NoteRecentChanges	signature:()
gnote::NoteRecentChanges::~NoteRecentChanges	src/recentchanges.hpp	/^  virtual ~NoteRecentChanges();$/;"	p	class:gnote::NoteRecentChanges	access:public	signature:()
gnote::NoteRenameBehavior	src/noterenamedialog.hpp	/^enum NoteRenameBehavior {$/;"	g	namespace:gnote
gnote::NoteRenameDialog	src/noterenamedialog.hpp	/^class NoteRenameDialog$/;"	c	namespace:gnote	inherits:Gtk::Dialog
gnote::NoteRenameDialog::MapPtr	src/noterenamedialog.hpp	/^  typedef shared_ptr<std::map<NoteBase::Ptr, bool> > MapPtr;$/;"	t	class:gnote::NoteRenameDialog	access:public
gnote::NoteRenameDialog::NoteRenameDialog	src/noterenamedialog.cpp	/^NoteRenameDialog::NoteRenameDialog(const NoteBase::List & notes,$/;"	f	class:gnote::NoteRenameDialog	signature:(const NoteBase::List & notes, const std::string & old_title, const NoteBase::Ptr & renamed_note)
gnote::NoteRenameDialog::NoteRenameDialog	src/noterenamedialog.hpp	/^  NoteRenameDialog(const NoteBase::List & notes,$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:(const NoteBase::List & notes, const std::string & old_title, const NoteBase::Ptr & renamed_note)
gnote::NoteRenameDialog::get_notes	src/noterenamedialog.cpp	/^NoteRenameDialog::MapPtr NoteRenameDialog::get_notes() const$/;"	f	class:gnote::NoteRenameDialog	signature:() const
gnote::NoteRenameDialog::get_notes	src/noterenamedialog.hpp	/^  MapPtr get_notes() const;$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:() const
gnote::NoteRenameDialog::get_selected_behavior	src/noterenamedialog.cpp	/^NoteRenameBehavior NoteRenameDialog::get_selected_behavior() const$/;"	f	class:gnote::NoteRenameDialog	signature:() const
gnote::NoteRenameDialog::get_selected_behavior	src/noterenamedialog.hpp	/^  NoteRenameBehavior get_selected_behavior() const;$/;"	p	class:gnote::NoteRenameDialog	access:public	signature:() const
gnote::NoteRenameDialog::m_always_rename_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_always_rename_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_always_show_dlg_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_always_show_dlg_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_dont_rename_button	src/noterenamedialog.hpp	/^  Gtk::Button m_dont_rename_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_model_column_record	src/noterenamedialog.hpp	/^  ModelColumnRecord m_model_column_record;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_never_rename_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_never_rename_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_notes_box	src/noterenamedialog.hpp	/^  Gtk::Grid m_notes_box;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_notes_model	src/noterenamedialog.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_notes_model;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_rename_button	src/noterenamedialog.hpp	/^  Gtk::Button m_rename_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_select_all_button	src/noterenamedialog.hpp	/^  Gtk::Button m_select_all_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::m_select_none_button	src/noterenamedialog.hpp	/^  Gtk::Button m_select_none_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
gnote::NoteRenameDialog::on_advanced_expander_changed	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_advanced_expander_changed(bool expanded)$/;"	f	class:gnote::NoteRenameDialog	signature:(bool expanded)
gnote::NoteRenameDialog::on_advanced_expander_changed	src/noterenamedialog.hpp	/^  void on_advanced_expander_changed(bool expanded);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(bool expanded)
gnote::NoteRenameDialog::on_always_rename_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_always_rename_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
gnote::NoteRenameDialog::on_always_rename_clicked	src/noterenamedialog.hpp	/^  void on_always_rename_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
gnote::NoteRenameDialog::on_always_show_dlg_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_always_show_dlg_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
gnote::NoteRenameDialog::on_always_show_dlg_clicked	src/noterenamedialog.hpp	/^  void on_always_show_dlg_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
gnote::NoteRenameDialog::on_never_rename_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_never_rename_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
gnote::NoteRenameDialog::on_never_rename_clicked	src/noterenamedialog.hpp	/^  void on_never_rename_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
gnote::NoteRenameDialog::on_notes_model_foreach_iter_accumulate	src/noterenamedialog.cpp	/^bool NoteRenameDialog::on_notes_model_foreach_iter_accumulate($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreeIter & iter, const MapPtr & notes) const
gnote::NoteRenameDialog::on_notes_model_foreach_iter_accumulate	src/noterenamedialog.hpp	/^  bool on_notes_model_foreach_iter_accumulate($/;"	p	class:gnote::NoteRenameDialog	access:private	signature:( const Gtk::TreeIter & iter, const MapPtr & notes) const
gnote::NoteRenameDialog::on_notes_model_foreach_iter_select	src/noterenamedialog.cpp	/^bool NoteRenameDialog::on_notes_model_foreach_iter_select($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreeIter & iter, bool select)
gnote::NoteRenameDialog::on_notes_model_foreach_iter_select	src/noterenamedialog.hpp	/^  bool on_notes_model_foreach_iter_select(const Gtk::TreeIter & iter,$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const Gtk::TreeIter & iter, bool select)
gnote::NoteRenameDialog::on_notes_view_row_activated	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_notes_view_row_activated($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreePath & p, Gtk::TreeView::Column *, const std::string & old_title)
gnote::NoteRenameDialog::on_notes_view_row_activated	src/noterenamedialog.hpp	/^  void on_notes_view_row_activated(const Gtk::TreeModel::Path & p,$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const Gtk::TreeModel::Path & p, Gtk::TreeView::Column *, const std::string & old_title)
gnote::NoteRenameDialog::on_select_all_button_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_select_all_button_clicked(bool select)$/;"	f	class:gnote::NoteRenameDialog	signature:(bool select)
gnote::NoteRenameDialog::on_select_all_button_clicked	src/noterenamedialog.hpp	/^  void on_select_all_button_clicked(bool select);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(bool select)
gnote::NoteRenameDialog::on_toggle_cell_toggled	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_toggle_cell_toggled(const std::string & p)$/;"	f	class:gnote::NoteRenameDialog	signature:(const std::string & p)
gnote::NoteRenameDialog::on_toggle_cell_toggled	src/noterenamedialog.hpp	/^  void on_toggle_cell_toggled(const std::string & p);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const std::string & p)
gnote::NoteRenameWatcher	src/watchers.hpp	/^  class NoteRenameWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteRenameWatcher::NoteRenameWatcher	src/watchers.hpp	/^    NoteRenameWatcher()$/;"	f	class:gnote::NoteRenameWatcher	access:protected	signature:()
gnote::NoteRenameWatcher::changed	src/watchers.cpp	/^  void NoteRenameWatcher::changed()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::changed	src/watchers.hpp	/^    void changed();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
gnote::NoteRenameWatcher::create	src/watchers.cpp	/^  NoteAddin * NoteRenameWatcher::create() $/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::NoteRenameWatcher	access:public	signature:()
gnote::NoteRenameWatcher::get_title_end	src/watchers.cpp	/^  Gtk::TextIter NoteRenameWatcher::get_title_end() const$/;"	f	class:gnote::NoteRenameWatcher	signature:() const
gnote::NoteRenameWatcher::get_title_end	src/watchers.hpp	/^    Gtk::TextIter get_title_end() const;$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:() const
gnote::NoteRenameWatcher::get_title_start	src/watchers.cpp	/^  Gtk::TextIter NoteRenameWatcher::get_title_start() const$/;"	f	class:gnote::NoteRenameWatcher	signature:() const
gnote::NoteRenameWatcher::get_title_start	src/watchers.hpp	/^    Gtk::TextIter get_title_start() const;$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:() const
gnote::NoteRenameWatcher::get_unique_untitled	src/watchers.cpp	/^  std::string NoteRenameWatcher::get_unique_untitled()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::get_unique_untitled	src/watchers.hpp	/^    std::string get_unique_untitled();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
gnote::NoteRenameWatcher::initialize	src/watchers.cpp	/^  void NoteRenameWatcher::initialize ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::m_editing_title	src/watchers.hpp	/^    bool                       m_editing_title;$/;"	m	class:gnote::NoteRenameWatcher	access:private
gnote::NoteRenameWatcher::m_title_tag	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_title_tag;$/;"	m	class:gnote::NoteRenameWatcher	access:private
gnote::NoteRenameWatcher::m_title_taken_dialog	src/watchers.hpp	/^    utils::HIGMessageDialog   *m_title_taken_dialog;$/;"	m	class:gnote::NoteRenameWatcher	access:private
gnote::NoteRenameWatcher::on_delete_range	src/watchers.cpp	/^  void NoteRenameWatcher::on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteRenameWatcher::on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteRenameWatcher::on_dialog_response	src/watchers.cpp	/^  void NoteRenameWatcher::on_dialog_response(int)$/;"	f	class:gnote::NoteRenameWatcher	signature:(int)
gnote::NoteRenameWatcher::on_dialog_response	src/watchers.hpp	/^    void on_dialog_response(int);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(int)
gnote::NoteRenameWatcher::on_editor_focus_out	src/watchers.cpp	/^  bool NoteRenameWatcher::on_editor_focus_out(GdkEventFocus *)$/;"	f	class:gnote::NoteRenameWatcher	signature:(GdkEventFocus *)
gnote::NoteRenameWatcher::on_editor_focus_out	src/watchers.hpp	/^    bool on_editor_focus_out(GdkEventFocus *);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(GdkEventFocus *)
gnote::NoteRenameWatcher::on_insert_text	src/watchers.cpp	/^  void NoteRenameWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, int)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int)
gnote::NoteRenameWatcher::on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
gnote::NoteRenameWatcher::on_mark_set	src/watchers.cpp	/^  void NoteRenameWatcher::on_mark_set(const Gtk::TextIter &, $/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>& mark)
gnote::NoteRenameWatcher::on_mark_set	src/watchers.hpp	/^    void on_mark_set(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>&);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>&)
gnote::NoteRenameWatcher::on_note_opened	src/watchers.cpp	/^  void NoteRenameWatcher::on_note_opened ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::on_window_backgrounded	src/watchers.cpp	/^  void NoteRenameWatcher::on_window_backgrounded()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::on_window_backgrounded	src/watchers.hpp	/^    void on_window_backgrounded();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
gnote::NoteRenameWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
gnote::NoteRenameWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
gnote::NoteRenameWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
gnote::NoteRenameWatcher::show_name_clash_error	src/watchers.cpp	/^  void NoteRenameWatcher::show_name_clash_error(const std::string & title, bool only_warn)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const std::string & title, bool only_warn)
gnote::NoteRenameWatcher::show_name_clash_error	src/watchers.hpp	/^    void show_name_clash_error(const std::string &, bool);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const std::string &, bool)
gnote::NoteRenameWatcher::shutdown	src/watchers.cpp	/^  void NoteRenameWatcher::shutdown ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::update	src/watchers.cpp	/^  void NoteRenameWatcher::update()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::update	src/watchers.hpp	/^    void update();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
gnote::NoteRenameWatcher::update_note_title	src/watchers.cpp	/^  bool NoteRenameWatcher::update_note_title(bool only_warn)$/;"	f	class:gnote::NoteRenameWatcher	signature:(bool only_warn)
gnote::NoteRenameWatcher::update_note_title	src/watchers.hpp	/^    bool update_note_title(bool only_warn);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(bool only_warn)
gnote::NoteRenameWatcher::~NoteRenameWatcher	src/watchers.cpp	/^  NoteRenameWatcher::~NoteRenameWatcher()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
gnote::NoteRenameWatcher::~NoteRenameWatcher	src/watchers.hpp	/^    ~NoteRenameWatcher();$/;"	p	class:gnote::NoteRenameWatcher	access:public	signature:()
gnote::NoteSpellChecker	src/watchers.hpp	/^  class NoteSpellChecker $/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteSpellChecker::LANG_DISABLED	src/watchers.cpp	/^  const char *NoteSpellChecker::LANG_DISABLED = "disabled";$/;"	m	class:gnote::NoteSpellChecker	file:
gnote::NoteSpellChecker::LANG_DISABLED	src/watchers.hpp	/^    static const char *LANG_DISABLED;$/;"	m	class:gnote::NoteSpellChecker	access:private
gnote::NoteSpellChecker::LANG_PREFIX	src/watchers.cpp	/^  const char *NoteSpellChecker::LANG_PREFIX = "spellchecklang:";$/;"	m	class:gnote::NoteSpellChecker	file:
gnote::NoteSpellChecker::LANG_PREFIX	src/watchers.hpp	/^    static const char *LANG_PREFIX;$/;"	m	class:gnote::NoteSpellChecker	access:private
gnote::NoteSpellChecker::NoteSpellChecker	src/watchers.hpp	/^    NoteSpellChecker()$/;"	f	class:gnote::NoteSpellChecker	access:protected	signature:()
gnote::NoteSpellChecker::attach	src/watchers.cpp	/^  void NoteSpellChecker::attach ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::attach	src/watchers.hpp	/^    void attach();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::attach_checker	src/watchers.cpp	/^  void NoteSpellChecker::attach_checker()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::attach_checker	src/watchers.hpp	/^    void attach_checker();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::create	src/watchers.cpp	/^  NoteAddin * NoteSpellChecker::create()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteSpellChecker	access:public	signature:()
gnote::NoteSpellChecker::detach	src/watchers.cpp	/^  void NoteSpellChecker::detach ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::detach	src/watchers.hpp	/^    void detach();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::detach_checker	src/watchers.cpp	/^  void NoteSpellChecker::detach_checker()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::detach_checker	src/watchers.hpp	/^    void detach_checker();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::get_language	src/watchers.cpp	/^  std::string NoteSpellChecker::get_language()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::get_language	src/watchers.hpp	/^    std::string get_language();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::get_language_tag	src/watchers.cpp	/^  Tag::Ptr NoteSpellChecker::get_language_tag()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::get_language_tag	src/watchers.hpp	/^    Tag::Ptr get_language_tag();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::gtk_spell_available	src/watchers.hpp	/^    static bool gtk_spell_available()$/;"	f	class:gnote::NoteSpellChecker	access:public	signature:()
gnote::NoteSpellChecker::initialize	src/watchers.cpp	/^  void NoteSpellChecker::initialize ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::language_changed	src/watchers.cpp	/^  void NoteSpellChecker::language_changed(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)$/;"	f	class:gnote::NoteSpellChecker	signature:(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)
gnote::NoteSpellChecker::language_changed	src/watchers.hpp	/^    static void language_changed(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)
gnote::NoteSpellChecker::m_enable_action	src/watchers.hpp	/^    utils::CheckAction::Ptr m_enable_action;$/;"	m	class:gnote::NoteSpellChecker	access:private
gnote::NoteSpellChecker::m_obj_ptr	src/watchers.hpp	/^    GtkSpellChecker *m_obj_ptr;$/;"	m	class:gnote::NoteSpellChecker	access:private
gnote::NoteSpellChecker::m_tag_applied_cid	src/watchers.hpp	/^    sigc::connection  m_tag_applied_cid;$/;"	m	class:gnote::NoteSpellChecker	access:private
gnote::NoteSpellChecker::on_enable_spellcheck_changed	src/watchers.cpp	/^  void NoteSpellChecker::on_enable_spellcheck_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteSpellChecker	signature:(const Glib::ustring & key)
gnote::NoteSpellChecker::on_enable_spellcheck_changed	src/watchers.hpp	/^    void on_enable_spellcheck_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const Glib::ustring & key)
gnote::NoteSpellChecker::on_language_changed	src/watchers.cpp	/^  void NoteSpellChecker::on_language_changed(const gchar *lang)$/;"	f	class:gnote::NoteSpellChecker	signature:(const gchar *lang)
gnote::NoteSpellChecker::on_language_changed	src/watchers.hpp	/^    void on_language_changed(const gchar *lang);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const gchar *lang)
gnote::NoteSpellChecker::on_note_opened	src/watchers.cpp	/^  void NoteSpellChecker::on_note_opened ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::on_spell_check_enable_action	src/watchers.cpp	/^  void NoteSpellChecker::on_spell_check_enable_action()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::on_spell_check_enable_action	src/watchers.hpp	/^    void on_spell_check_enable_action();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
gnote::NoteSpellChecker::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
gnote::NoteSpellChecker::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
gnote::NoteSpellChecker::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
gnote::NoteSpellChecker::shutdown	src/watchers.cpp	/^  void NoteSpellChecker::shutdown ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
gnote::NoteSpellChecker::tag_applied	src/watchers.cpp	/^  void NoteSpellChecker::tag_applied(const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteSpellChecker	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
gnote::NoteSpellChecker::tag_applied	src/watchers.hpp	/^    void tag_applied(const Glib::RefPtr<const Gtk::TextTag> &,$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteTag	src/notetag.hpp	/^class NoteTag$/;"	c	namespace:gnote	inherits:Gtk::TextTag
gnote::NoteTag::CAN_ACTIVATE	src/notetag.hpp	/^    CAN_ACTIVATE  = 16,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::CAN_GROW	src/notetag.hpp	/^    CAN_GROW      = 4,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::CAN_SERIALIZE	src/notetag.hpp	/^    CAN_SERIALIZE = 1,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::CAN_SPELL_CHECK	src/notetag.hpp	/^    CAN_SPELL_CHECK = 8,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::CAN_SPLIT	src/notetag.hpp	/^    CAN_SPLIT     = 32$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::CAN_UNDO	src/notetag.hpp	/^    CAN_UNDO      = 2,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::ConstPtr	src/notetag.hpp	/^  typedef Glib::RefPtr<const NoteTag> ConstPtr;$/;"	t	class:gnote::NoteTag	access:public
gnote::NoteTag::NO_FLAG	src/notetag.hpp	/^    NO_FLAG       = 0,$/;"	e	enum:gnote::NoteTag::TagFlags
gnote::NoteTag::NoteTag	src/notetag.cpp	/^  NoteTag::NoteTag()$/;"	f	class:gnote::NoteTag	signature:()
gnote::NoteTag::NoteTag	src/notetag.cpp	/^  NoteTag::NoteTag(const std::string & tag_name, int flags) throw(sharp::Exception)$/;"	f	class:gnote::NoteTag	signature:(const std::string & tag_name, int flags)
gnote::NoteTag::NoteTag	src/notetag.hpp	/^  NoteTag();$/;"	p	class:gnote::NoteTag	access:protected	signature:()
gnote::NoteTag::NoteTag	src/notetag.hpp	/^  NoteTag(const std::string & tag_name, int flags = 0) throw(sharp::Exception);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const std::string & tag_name, int flags = 0)
gnote::NoteTag::Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<NoteTag> Ptr;$/;"	t	class:gnote::NoteTag	access:public
gnote::NoteTag::TagActivatedHandler	src/notetag.hpp	/^                       const Gtk::TextIter &, const Gtk::TextIter &> TagActivatedHandler;$/;"	t	class:gnote::NoteTag	access:public
gnote::NoteTag::TagFlags	src/notetag.hpp	/^  enum TagFlags {$/;"	g	class:gnote::NoteTag	access:public
gnote::NoteTag::can_activate	src/notetag.hpp	/^  bool can_activate() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::can_grow	src/notetag.hpp	/^  bool can_grow() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::can_serialize	src/notetag.hpp	/^  bool can_serialize() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::can_spell_check	src/notetag.hpp	/^  bool can_spell_check() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::can_split	src/notetag.hpp	/^  bool can_split() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::can_undo	src/notetag.hpp	/^  bool can_undo() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::create	src/notetag.hpp	/^  static Ptr create(const std::string & tag_name, int flags) throw(sharp::Exception)$/;"	f	class:gnote::NoteTag	access:public	signature:(const std::string & tag_name, int flags)
gnote::NoteTag::get_background	src/notetag.cpp	/^  Gdk::Color NoteTag::get_background() const$/;"	f	class:gnote::NoteTag	signature:() const
gnote::NoteTag::get_background	src/notetag.hpp	/^  Gdk::Color get_background() const;$/;"	p	class:gnote::NoteTag	access:private	signature:() const
gnote::NoteTag::get_element_name	src/notetag.hpp	/^  const std::string & get_element_name() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::get_extents	src/notetag.cpp	/^  void NoteTag::get_extents(const Gtk::TextIter & iter, Gtk::TextIter & start,$/;"	f	class:gnote::NoteTag	signature:(const Gtk::TextIter & iter, Gtk::TextIter & start, Gtk::TextIter & end)
gnote::NoteTag::get_extents	src/notetag.hpp	/^  void get_extents(const Gtk::TextIter & iter, Gtk::TextIter & start,$/;"	p	class:gnote::NoteTag	access:public	signature:(const Gtk::TextIter & iter, Gtk::TextIter & start, Gtk::TextIter & end)
gnote::NoteTag::get_image	src/notetag.cpp	/^  Glib::RefPtr<Gdk::Pixbuf> NoteTag::get_image() const$/;"	f	class:gnote::NoteTag	signature:() const
gnote::NoteTag::get_image	src/notetag.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_image() const;$/;"	p	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::get_palette_foreground	src/notetag.hpp	/^  ContrastPaletteColor get_palette_foreground() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::get_widget	src/notetag.hpp	/^  virtual Gtk::Widget * get_widget() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::get_widget_location	src/notetag.hpp	/^  const Glib::RefPtr<Gtk::TextMark> & get_widget_location() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::initialize	src/notetag.cpp	/^  void NoteTag::initialize(const std::string & element_name)$/;"	f	class:gnote::NoteTag	signature:(const std::string & element_name)
gnote::NoteTag::initialize	src/notetag.hpp	/^  virtual void initialize(const std::string & element_name);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const std::string & element_name)
gnote::NoteTag::m_allow_middle_activate	src/notetag.hpp	/^  bool                m_allow_middle_activate;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_element_name	src/notetag.hpp	/^  std::string         m_element_name;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_flags	src/notetag.hpp	/^  int                 m_flags;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_palette_foreground	src/notetag.hpp	/^  ContrastPaletteColor m_palette_foreground;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_save_type	src/notetag.hpp	/^  TagSaveType         m_save_type;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_signal_activate	src/notetag.hpp	/^  TagActivatedHandler m_signal_activate;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_signal_changed	src/notetag.hpp	/^  sigc::signal<void,const Gtk::TextTag&,bool> m_signal_changed;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_widget	src/notetag.hpp	/^  Gtk::Widget       * m_widget;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::m_widget_location	src/notetag.hpp	/^  Glib::RefPtr<Gtk::TextMark> m_widget_location;$/;"	m	class:gnote::NoteTag	access:private
gnote::NoteTag::on_activate	src/notetag.cpp	/^  bool NoteTag::on_activate(const NoteEditor & editor , const Gtk::TextIter & start, $/;"	f	class:gnote::NoteTag	signature:(const NoteEditor & editor , const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteTag::on_activate	src/notetag.hpp	/^  virtual bool on_activate(const NoteEditor & , const Gtk::TextIter &, const Gtk::TextIter &);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const NoteEditor & , const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteTag::on_event	src/notetag.cpp	/^  bool NoteTag::on_event(const Glib::RefPtr<Glib::Object> & sender, $/;"	f	class:gnote::NoteTag	signature:(const Glib::RefPtr<Glib::Object> & sender, GdkEvent * ev, const Gtk::TextIter & iter)
gnote::NoteTag::override	src/notetag.hpp	/^  virtual bool on_event(const Glib::RefPtr<Glib::Object> &, GdkEvent *, const Gtk::TextIter & ) override;$/;"	m	class:gnote::NoteTag	access:protected
gnote::NoteTag::read	src/notetag.cpp	/^  void NoteTag::read(sharp::XmlReader & xml, bool start)$/;"	f	class:gnote::NoteTag	signature:(sharp::XmlReader & xml, bool start)
gnote::NoteTag::read	src/notetag.hpp	/^  virtual void read(sharp::XmlReader &, bool);$/;"	p	class:gnote::NoteTag	access:public	signature:(sharp::XmlReader &, bool)
gnote::NoteTag::render_foreground	src/notetag.cpp	/^  Gdk::Color NoteTag::render_foreground(ContrastPaletteColor symbol)$/;"	f	class:gnote::NoteTag	signature:(ContrastPaletteColor symbol)
gnote::NoteTag::render_foreground	src/notetag.hpp	/^  Gdk::Color render_foreground(ContrastPaletteColor symbol);$/;"	p	class:gnote::NoteTag	access:private	signature:(ContrastPaletteColor symbol)
gnote::NoteTag::save_type	src/notetag.hpp	/^  TagSaveType save_type() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
gnote::NoteTag::set_can_activate	src/notetag.cpp	/^  void NoteTag::set_can_activate(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_activate	src/notetag.hpp	/^  void set_can_activate(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_can_grow	src/notetag.cpp	/^  void NoteTag::set_can_grow(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_grow	src/notetag.hpp	/^  void set_can_grow(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_can_serialize	src/notetag.cpp	/^  void NoteTag::set_can_serialize(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_serialize	src/notetag.hpp	/^  void set_can_serialize(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_can_spell_check	src/notetag.cpp	/^  void NoteTag::set_can_spell_check(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_spell_check	src/notetag.hpp	/^  void set_can_spell_check(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_can_split	src/notetag.cpp	/^  void NoteTag::set_can_split(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_split	src/notetag.hpp	/^  void set_can_split(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_can_undo	src/notetag.cpp	/^  void NoteTag::set_can_undo(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
gnote::NoteTag::set_can_undo	src/notetag.hpp	/^  void set_can_undo(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
gnote::NoteTag::set_image	src/notetag.cpp	/^  void NoteTag::set_image(const Glib::RefPtr<Gdk::Pixbuf> & value)$/;"	f	class:gnote::NoteTag	signature:(const Glib::RefPtr<Gdk::Pixbuf> & value)
gnote::NoteTag::set_image	src/notetag.hpp	/^  virtual void set_image(const Glib::RefPtr<Gdk::Pixbuf> &);$/;"	p	class:gnote::NoteTag	access:public	signature:(const Glib::RefPtr<Gdk::Pixbuf> &)
gnote::NoteTag::set_palette_foreground	src/notetag.hpp	/^  void set_palette_foreground(ContrastPaletteColor value)$/;"	f	class:gnote::NoteTag	access:public	signature:(ContrastPaletteColor value)
gnote::NoteTag::set_save_type	src/notetag.hpp	/^  void set_save_type(TagSaveType type)$/;"	f	class:gnote::NoteTag	access:public	signature:(TagSaveType type)
gnote::NoteTag::set_widget	src/notetag.cpp	/^  void NoteTag::set_widget(Gtk::Widget * value)$/;"	f	class:gnote::NoteTag	signature:(Gtk::Widget * value)
gnote::NoteTag::set_widget	src/notetag.hpp	/^  virtual void set_widget(Gtk::Widget *);$/;"	p	class:gnote::NoteTag	access:public	signature:(Gtk::Widget *)
gnote::NoteTag::set_widget_location	src/notetag.hpp	/^  void set_widget_location(const Glib::RefPtr<Gtk::TextMark> & value)$/;"	f	class:gnote::NoteTag	access:public	signature:(const Glib::RefPtr<Gtk::TextMark> & value)
gnote::NoteTag::signal_activate	src/notetag.hpp	/^  TagActivatedHandler & signal_activate()$/;"	f	class:gnote::NoteTag	access:public	signature:()
gnote::NoteTag::signal_changed	src/notetag.hpp	/^  sigc::signal<void,const Gtk::TextTag&,bool> & signal_changed()$/;"	f	class:gnote::NoteTag	access:public	signature:()
gnote::NoteTag::write	src/notetag.cpp	/^  void NoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::NoteTag	signature:(sharp::XmlWriter & xml, bool start) const
gnote::NoteTag::write	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const;$/;"	p	class:gnote::NoteTag	access:public	signature:(sharp::XmlWriter &, bool) const
gnote::NoteTagTable	src/notetag.hpp	/^class NoteTagTable$/;"	c	namespace:gnote	inherits:Gtk::TextTagTable
gnote::NoteTagTable::Factory	src/notetag.hpp	/^  typedef sigc::slot<DynamicNoteTag::Ptr> Factory;$/;"	t	class:gnote::NoteTagTable	access:public
gnote::NoteTagTable::NoteTagTable	src/notetag.hpp	/^  NoteTagTable()$/;"	f	class:gnote::NoteTagTable	access:protected	signature:()
gnote::NoteTagTable::Ptr	src/notetag.hpp	/^  typedef Glib::RefPtr<NoteTagTable> Ptr;$/;"	t	class:gnote::NoteTagTable	access:public
gnote::NoteTagTable::_init_common_tags	src/notetag.cpp	/^  void NoteTagTable::_init_common_tags()$/;"	f	class:gnote::NoteTagTable	signature:()
gnote::NoteTagTable::_init_common_tags	src/notetag.hpp	/^  void _init_common_tags();$/;"	p	class:gnote::NoteTagTable	access:private	signature:()
gnote::NoteTagTable::create_dynamic_tag	src/notetag.cpp	/^  DynamicNoteTag::Ptr NoteTagTable::create_dynamic_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name)
gnote::NoteTagTable::create_dynamic_tag	src/notetag.hpp	/^  DynamicNoteTag::Ptr create_dynamic_tag(const std::string & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string & )
gnote::NoteTagTable::get_broken_link_tag	src/notetag.hpp	/^  NoteTag::Ptr get_broken_link_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
gnote::NoteTagTable::get_change_type	src/notetag.cpp	/^  ChangeType NoteTagTable::get_change_type(const Glib::RefPtr<Gtk::TextTag> &tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> &tag)
gnote::NoteTagTable::get_change_type	src/notetag.hpp	/^  ChangeType get_change_type(const Glib::RefPtr<Gtk::TextTag> &tag);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &tag)
gnote::NoteTagTable::get_depth_tag	src/notetag.cpp	/^  DepthNoteTag::Ptr NoteTagTable::get_depth_tag(int depth, Pango::Direction direction)$/;"	f	class:gnote::NoteTagTable	signature:(int depth, Pango::Direction direction)
gnote::NoteTagTable::get_depth_tag	src/notetag.hpp	/^  DepthNoteTag::Ptr get_depth_tag(int depth, Pango::Direction direction);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(int depth, Pango::Direction direction)
gnote::NoteTagTable::get_link_tag	src/notetag.hpp	/^  NoteTag::Ptr get_link_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
gnote::NoteTagTable::get_url_tag	src/notetag.hpp	/^  NoteTag::Ptr get_url_tag() const$/;"	f	class:gnote::NoteTagTable	access:public	signature:() const
gnote::NoteTagTable::has_link_tag	src/notetag.cpp	/^  bool NoteTagTable::has_link_tag(const Gtk::TextIter & iter)$/;"	f	class:gnote::NoteTagTable	signature:(const Gtk::TextIter & iter)
gnote::NoteTagTable::has_link_tag	src/notetag.hpp	/^  bool has_link_tag(const Gtk::TextIter & iter);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Gtk::TextIter & iter)
gnote::NoteTagTable::instance	src/notetag.hpp	/^  static const NoteTagTable::Ptr & instance() $/;"	f	class:gnote::NoteTagTable	access:public	signature:()
gnote::NoteTagTable::is_dynamic_tag_registered	src/notetag.cpp	/^  bool NoteTagTable::is_dynamic_tag_registered(const std::string & tag_name)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name)
gnote::NoteTagTable::is_dynamic_tag_registered	src/notetag.hpp	/^  bool is_dynamic_tag_registered(const std::string &);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string &)
gnote::NoteTagTable::m_added_tags	src/notetag.hpp	/^  std::list<Glib::RefPtr<Gtk::TextTag> > m_added_tags;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::m_broken_link_tag	src/notetag.hpp	/^  NoteTag::Ptr m_broken_link_tag;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::m_link_tag	src/notetag.hpp	/^  NoteTag::Ptr m_link_tag;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::m_tag_types	src/notetag.hpp	/^  std::map<std::string, Factory>     m_tag_types;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::m_url_tag	src/notetag.hpp	/^  NoteTag::Ptr m_url_tag;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::on_tag_added	src/notetag.cpp	/^  void NoteTagTable::on_tag_added(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::NoteTagTable::on_tag_removed	src/notetag.cpp	/^  void NoteTagTable::on_tag_removed(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::NoteTagTable::override	src/notetag.hpp	/^  virtual void on_tag_added(const Glib::RefPtr<Gtk::TextTag> &) override;$/;"	m	class:gnote::NoteTagTable	access:protected
gnote::NoteTagTable::override	src/notetag.hpp	/^  virtual void on_tag_removed(const Glib::RefPtr<Gtk::TextTag> &) override;$/;"	m	class:gnote::NoteTagTable	access:protected
gnote::NoteTagTable::register_dynamic_tag	src/notetag.cpp	/^  void NoteTagTable::register_dynamic_tag(const std::string & tag_name, const Factory & factory)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name, const Factory & factory)
gnote::NoteTagTable::register_dynamic_tag	src/notetag.hpp	/^  void register_dynamic_tag (const std::string & tag_name, const Factory & factory);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string & tag_name, const Factory & factory)
gnote::NoteTagTable::s_instance	src/notetag.cpp	/^  NoteTagTable::Ptr NoteTagTable::s_instance;$/;"	m	class:gnote::NoteTagTable	file:
gnote::NoteTagTable::s_instance	src/notetag.hpp	/^  static NoteTagTable::Ptr           s_instance;$/;"	m	class:gnote::NoteTagTable	access:private
gnote::NoteTagTable::tag_has_depth	src/notetag.cpp	/^  bool NoteTagTable::tag_has_depth(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag)
gnote::NoteTagTable::tag_has_depth	src/notetag.hpp	/^  static bool tag_has_depth(const Glib::RefPtr<Gtk::TextBuffer::Tag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & )
gnote::NoteTagTable::tag_is_activatable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_activatable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::NoteTagTable::tag_is_activatable	src/notetag.hpp	/^  static bool tag_is_activatable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
gnote::NoteTagTable::tag_is_growable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_growable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::NoteTagTable::tag_is_growable	src/notetag.hpp	/^  static bool tag_is_growable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
gnote::NoteTagTable::tag_is_serializable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_serializable(const Glib::RefPtr<const Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag)
gnote::NoteTagTable::tag_is_serializable	src/notetag.hpp	/^  static bool tag_is_serializable(const Glib::RefPtr<const Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<const Gtk::TextTag> & )
gnote::NoteTagTable::tag_is_spell_checkable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_spell_checkable(const Glib::RefPtr<const Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag)
gnote::NoteTagTable::tag_is_spell_checkable	src/notetag.hpp	/^  static bool tag_is_spell_checkable(const Glib::RefPtr<const Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<const Gtk::TextTag> & )
gnote::NoteTagTable::tag_is_undoable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_undoable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::NoteTagTable::tag_is_undoable	src/notetag.hpp	/^  static bool tag_is_undoable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
gnote::NoteTagsWatcher	src/watchers.hpp	/^  class NoteTagsWatcher $/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteTagsWatcher::DBG	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_added(const NoteBase& DBG(note), const Tag::Ptr& DBG(tag))$/;"	p	class:gnote::NoteTagsWatcher	file:	signature:(note)
gnote::NoteTagsWatcher::create	src/watchers.cpp	/^  NoteAddin * NoteTagsWatcher::create()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
gnote::NoteTagsWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::NoteTagsWatcher	access:public	signature:()
gnote::NoteTagsWatcher::initialize	src/watchers.cpp	/^  void NoteTagsWatcher::initialize ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
gnote::NoteTagsWatcher::m_on_tag_added_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_added_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
gnote::NoteTagsWatcher::m_on_tag_removed_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_removed_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
gnote::NoteTagsWatcher::m_on_tag_removing_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_removing_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
gnote::NoteTagsWatcher::on_note_opened	src/watchers.cpp	/^  void NoteTagsWatcher::on_note_opened ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
gnote::NoteTagsWatcher::on_tag_added	src/watchers.hpp	/^    void on_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase&, const Tag::Ptr&)
gnote::NoteTagsWatcher::on_tag_removed	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_removed(const NoteBase::Ptr&, const std::string& tag_name)$/;"	f	class:gnote::NoteTagsWatcher	signature:(const NoteBase::Ptr&, const std::string& tag_name)
gnote::NoteTagsWatcher::on_tag_removed	src/watchers.hpp	/^    void on_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase::Ptr&, const std::string&)
gnote::NoteTagsWatcher::on_tag_removing	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_removing(const NoteBase& note, const Tag & tag)$/;"	f	class:gnote::NoteTagsWatcher	signature:(const NoteBase& note, const Tag & tag)
gnote::NoteTagsWatcher::on_tag_removing	src/watchers.hpp	/^    void on_tag_removing(const NoteBase&, const Tag &);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase&, const Tag &)
gnote::NoteTagsWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
gnote::NoteTagsWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
gnote::NoteTagsWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
gnote::NoteTagsWatcher::shutdown	src/watchers.cpp	/^  void NoteTagsWatcher::shutdown ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
gnote::NoteTextMenu	src/notewindow.hpp	/^class NoteTextMenu$/;"	c	namespace:gnote	inherits:Gtk::Menu
gnote::NoteTextMenu::NoteTextMenu	src/notewindow.cpp	/^  NoteTextMenu::NoteTextMenu(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager & undo_manager)$/;"	f	class:gnote::NoteTextMenu	signature:(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager & undo_manager)
gnote::NoteTextMenu::NoteTextMenu	src/notewindow.hpp	/^  NoteTextMenu(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager& undo_manager);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(const Glib::RefPtr<NoteBuffer> & buffer, UndoManager& undo_manager)
gnote::NoteTextMenu::decrease_font_clicked	src/notewindow.cpp	/^  void NoteTextMenu::decrease_font_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::decrease_font_clicked	src/notewindow.hpp	/^  void decrease_font_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::decrease_indent_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::decrease_indent_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::decrease_indent_clicked	src/notewindow.hpp	/^  void decrease_indent_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::font_size_activated	src/notewindow.cpp	/^  void NoteTextMenu::font_size_activated(Gtk::RadioMenuItem *item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::RadioMenuItem *item)
gnote::NoteTextMenu::font_size_activated	src/notewindow.hpp	/^  void font_size_activated(Gtk::RadioMenuItem *item);$/;"	p	class:gnote::NoteTextMenu	access:private	signature:(Gtk::RadioMenuItem *item)
gnote::NoteTextMenu::font_style_clicked	src/notewindow.cpp	/^  void NoteTextMenu::font_style_clicked(Gtk::CheckMenuItem * item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::CheckMenuItem * item)
gnote::NoteTextMenu::font_style_clicked	src/notewindow.hpp	/^  void font_style_clicked(Gtk::CheckMenuItem * item);$/;"	p	class:gnote::NoteTextMenu	access:private	signature:(Gtk::CheckMenuItem * item)
gnote::NoteTextMenu::increase_font_clicked	src/notewindow.cpp	/^  void NoteTextMenu::increase_font_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::increase_font_clicked	src/notewindow.hpp	/^  void increase_font_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::increase_indent_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::increase_indent_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::increase_indent_clicked	src/notewindow.hpp	/^  void increase_indent_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::link_clicked	src/notewindow.cpp	/^  void NoteTextMenu::link_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::link_clicked	src/notewindow.hpp	/^  void link_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::m_bold	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_bold;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_buffer	src/notewindow.hpp	/^  Glib::RefPtr<NoteBuffer> m_buffer;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_bullets	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_bullets;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_bullets_clicked_cid	src/notewindow.hpp	/^  sigc::connection      m_bullets_clicked_cid;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_decrease_indent	src/notewindow.hpp	/^  Gtk::ImageMenuItem    m_decrease_indent;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_event_freeze	src/notewindow.hpp	/^  bool                  m_event_freeze;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_fontsize_group	src/notewindow.hpp	/^  Gtk::RadioButtonGroup m_fontsize_group;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_hidden_no_size	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_hidden_no_size;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_highlight	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_highlight;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_huge	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_huge;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_increase_indent	src/notewindow.hpp	/^  Gtk::ImageMenuItem    m_increase_indent;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_italic	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_italic;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_large	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_large;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_link	src/notewindow.hpp	/^  Gtk::MenuItem         m_link;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_normal	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_normal;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_redo	src/notewindow.hpp	/^  Gtk::ImageMenuItem   *m_redo;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_small	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_small;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_strikeout	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_strikeout;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_undo	src/notewindow.hpp	/^  Gtk::ImageMenuItem   *m_undo;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::m_undo_manager	src/notewindow.hpp	/^  UndoManager          &m_undo_manager;$/;"	m	class:gnote::NoteTextMenu	access:private
gnote::NoteTextMenu::markup_label	src/notewindow.cpp	/^  void NoteTextMenu::markup_label (Gtk::MenuItem & item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::MenuItem & item)
gnote::NoteTextMenu::markup_label	src/notewindow.hpp	/^  static void markup_label (Gtk::MenuItem & item);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(Gtk::MenuItem & item)
gnote::NoteTextMenu::on_show	src/notewindow.cpp	/^  void NoteTextMenu::on_show()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::override	src/notewindow.hpp	/^  virtual void on_show() override;$/;"	m	class:gnote::NoteTextMenu	access:protected
gnote::NoteTextMenu::redo_clicked	src/notewindow.cpp	/^  void NoteTextMenu::redo_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::redo_clicked	src/notewindow.hpp	/^  void redo_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::refresh_sizing_state	src/notewindow.cpp	/^  void NoteTextMenu::refresh_sizing_state()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::refresh_sizing_state	src/notewindow.hpp	/^  void refresh_sizing_state();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::refresh_state	src/notewindow.cpp	/^  void NoteTextMenu::refresh_state ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::refresh_state	src/notewindow.hpp	/^  void refresh_state();$/;"	p	class:gnote::NoteTextMenu	access:public	signature:()
gnote::NoteTextMenu::set_accels	src/notewindow.cpp	/^  void NoteTextMenu::set_accels(utils::GlobalKeybinder & keybinder,$/;"	f	class:gnote::NoteTextMenu	signature:(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> & accel_group)
gnote::NoteTextMenu::set_accels	src/notewindow.hpp	/^  void set_accels(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> &);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> &)
gnote::NoteTextMenu::toggle_bullets_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::toggle_bullets_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::toggle_bullets_clicked	src/notewindow.hpp	/^  void toggle_bullets_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::undo_changed	src/notewindow.cpp	/^  void NoteTextMenu::undo_changed ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::undo_changed	src/notewindow.hpp	/^  void undo_changed();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteTextMenu::undo_clicked	src/notewindow.cpp	/^  void NoteTextMenu::undo_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
gnote::NoteTextMenu::undo_clicked	src/notewindow.hpp	/^  void undo_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
gnote::NoteUrlWatcher	src/watchers.hpp	/^  class NoteUrlWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteUrlWatcher::NoteUrlWatcher	src/watchers.cpp	/^  NoteUrlWatcher::NoteUrlWatcher()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::NoteUrlWatcher	src/watchers.hpp	/^    NoteUrlWatcher();$/;"	p	class:gnote::NoteUrlWatcher	access:protected	signature:()
gnote::NoteUrlWatcher::URL_REGEX	src/watchers.cpp	/^  const char * NoteUrlWatcher::URL_REGEX = "((\\\\b((news|http|https|ftp|file|irc):\/\/|mailto:|(www|ftp)\\\\.|\\\\S*@\\\\S*\\\\.)|(?<=^|\\\\s)\/\\\\S+\/|(?<=^|\\\\s)~\/\\\\S+)\\\\S*\\\\b\/?)";$/;"	m	class:gnote::NoteUrlWatcher	file:
gnote::NoteUrlWatcher::URL_REGEX	src/watchers.hpp	/^    static const char * URL_REGEX;$/;"	m	class:gnote::NoteUrlWatcher	access:private
gnote::NoteUrlWatcher::apply_url_to_block	src/watchers.cpp	/^  void NoteUrlWatcher::apply_url_to_block (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(Gtk::TextIter start, Gtk::TextIter end)
gnote::NoteUrlWatcher::apply_url_to_block	src/watchers.hpp	/^    void apply_url_to_block (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
gnote::NoteUrlWatcher::copy_link_activate	src/watchers.cpp	/^  void NoteUrlWatcher::copy_link_activate()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::copy_link_activate	src/watchers.hpp	/^    void copy_link_activate();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
gnote::NoteUrlWatcher::create	src/watchers.cpp	/^  NoteAddin * NoteUrlWatcher::create()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteUrlWatcher	access:public	signature:()
gnote::NoteUrlWatcher::get_url	src/watchers.cpp	/^  std::string NoteUrlWatcher::get_url(const Gtk::TextIter & start, const Gtk::TextIter & end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteUrlWatcher::get_url	src/watchers.hpp	/^    std::string get_url(const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteUrlWatcher::initialize	src/watchers.cpp	/^  void NoteUrlWatcher::initialize ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::m_click_mark	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextMark> m_click_mark;$/;"	m	class:gnote::NoteUrlWatcher	access:private
gnote::NoteUrlWatcher::m_regex	src/watchers.hpp	/^    Glib::RefPtr<Glib::Regex>   m_regex;$/;"	m	class:gnote::NoteUrlWatcher	access:private
gnote::NoteUrlWatcher::m_url_tag	src/watchers.hpp	/^    NoteTag::Ptr                m_url_tag;$/;"	m	class:gnote::NoteUrlWatcher	access:private
gnote::NoteUrlWatcher::on_apply_tag	src/watchers.cpp	/^  void NoteUrlWatcher::on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteUrlWatcher::on_apply_tag	src/watchers.hpp	/^    void on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
gnote::NoteUrlWatcher::on_button_press	src/watchers.cpp	/^  bool NoteUrlWatcher::on_button_press(GdkEventButton *ev)$/;"	f	class:gnote::NoteUrlWatcher	signature:(GdkEventButton *ev)
gnote::NoteUrlWatcher::on_button_press	src/watchers.hpp	/^    bool on_button_press(GdkEventButton *);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(GdkEventButton *)
gnote::NoteUrlWatcher::on_delete_range	src/watchers.cpp	/^  void NoteUrlWatcher::on_delete_range(const Gtk::TextIter & start, const Gtk::TextIter &end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter &end)
gnote::NoteUrlWatcher::on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteUrlWatcher::on_insert_text	src/watchers.cpp	/^  void NoteUrlWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, int len)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int len)
gnote::NoteUrlWatcher::on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
gnote::NoteUrlWatcher::on_note_opened	src/watchers.cpp	/^  void NoteUrlWatcher::on_note_opened ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::on_populate_popup	src/watchers.cpp	/^  void NoteUrlWatcher::on_populate_popup(Gtk::Menu *menu)$/;"	f	class:gnote::NoteUrlWatcher	signature:(Gtk::Menu *menu)
gnote::NoteUrlWatcher::on_populate_popup	src/watchers.hpp	/^    void on_populate_popup(Gtk::Menu *);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(Gtk::Menu *)
gnote::NoteUrlWatcher::on_popup_menu	src/watchers.cpp	/^  bool NoteUrlWatcher::on_popup_menu()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::on_popup_menu	src/watchers.hpp	/^    bool on_popup_menu();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
gnote::NoteUrlWatcher::on_url_tag_activated	src/watchers.cpp	/^  bool NoteUrlWatcher::on_url_tag_activated(const NoteEditor &,$/;"	f	class:gnote::NoteUrlWatcher	signature:(const NoteEditor &, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteUrlWatcher::on_url_tag_activated	src/watchers.hpp	/^    bool on_url_tag_activated(const NoteEditor &,$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::NoteUrlWatcher::open_link_activate	src/watchers.cpp	/^  void NoteUrlWatcher::open_link_activate()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteUrlWatcher::open_link_activate	src/watchers.hpp	/^    void open_link_activate();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
gnote::NoteUrlWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
gnote::NoteUrlWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
gnote::NoteUrlWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
gnote::NoteUrlWatcher::s_text_event_connected	src/watchers.cpp	/^  bool NoteUrlWatcher::s_text_event_connected = false;$/;"	m	class:gnote::NoteUrlWatcher	file:
gnote::NoteUrlWatcher::s_text_event_connected	src/watchers.hpp	/^    static bool  s_text_event_connected;$/;"	m	class:gnote::NoteUrlWatcher	access:private
gnote::NoteUrlWatcher::shutdown	src/watchers.cpp	/^  void NoteUrlWatcher::shutdown ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
gnote::NoteWikiWatcher	src/watchers.hpp	/^  class NoteWikiWatcher$/;"	c	namespace:gnote	inherits:NoteAddin
gnote::NoteWikiWatcher::NoteWikiWatcher	src/watchers.hpp	/^    NoteWikiWatcher()$/;"	f	class:gnote::NoteWikiWatcher	access:protected	signature:()
gnote::NoteWikiWatcher::WIKIWORD_REGEX	src/watchers.cpp	/^  const char * NoteWikiWatcher::WIKIWORD_REGEX = "\\\\b((\\\\p{Lu}+[\\\\p{Ll}0-9]+){2}([\\\\p{Lu}\\\\p{Ll}0-9])*)\\\\b";$/;"	m	class:gnote::NoteWikiWatcher	file:
gnote::NoteWikiWatcher::WIKIWORD_REGEX	src/watchers.hpp	/^    static const char * WIKIWORD_REGEX;$/;"	m	class:gnote::NoteWikiWatcher	access:private
gnote::NoteWikiWatcher::apply_wikiword_to_block	src/watchers.cpp	/^  void NoteWikiWatcher::apply_wikiword_to_block (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:gnote::NoteWikiWatcher	signature:(Gtk::TextIter start, Gtk::TextIter end)
gnote::NoteWikiWatcher::apply_wikiword_to_block	src/watchers.hpp	/^    void apply_wikiword_to_block (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
gnote::NoteWikiWatcher::create	src/watchers.cpp	/^  NoteAddin * NoteWikiWatcher::create()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
gnote::NoteWikiWatcher::create	src/watchers.hpp	/^    static NoteAddin * create();    $/;"	p	class:gnote::NoteWikiWatcher	access:public	signature:()
gnote::NoteWikiWatcher::initialize	src/watchers.cpp	/^  void NoteWikiWatcher::initialize ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
gnote::NoteWikiWatcher::m_broken_link_tag	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextTag>   m_broken_link_tag;$/;"	m	class:gnote::NoteWikiWatcher	access:private
gnote::NoteWikiWatcher::m_regex	src/watchers.hpp	/^    Glib::RefPtr<Glib::Regex>    m_regex;$/;"	m	class:gnote::NoteWikiWatcher	access:private
gnote::NoteWikiWatcher::on_delete_range	src/watchers.cpp	/^  void NoteWikiWatcher::on_delete_range(const Gtk::TextIter & start, const Gtk::TextIter & end)$/;"	f	class:gnote::NoteWikiWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::NoteWikiWatcher::on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
gnote::NoteWikiWatcher::on_insert_text	src/watchers.cpp	/^  void NoteWikiWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, $/;"	f	class:gnote::NoteWikiWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int length)
gnote::NoteWikiWatcher::on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
gnote::NoteWikiWatcher::on_note_opened	src/watchers.cpp	/^  void NoteWikiWatcher::on_note_opened ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
gnote::NoteWikiWatcher::override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
gnote::NoteWikiWatcher::override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
gnote::NoteWikiWatcher::override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
gnote::NoteWikiWatcher::shutdown	src/watchers.cpp	/^  void NoteWikiWatcher::shutdown ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
gnote::NoteWindow	src/notewindow.hpp	/^class NoteWindow $/;"	c	namespace:gnote	inherits:Gtk::Grid,EmbeddableWidget,SearchableItem,HasEmbeddableToolbar,HasActions
gnote::NoteWindow::NonModifyingAction	src/notewindow.hpp	/^  class NonModifyingAction$/;"	c	class:gnote::NoteWindow	inherits:Gtk::Action,NonModifyingNoteAction	access:public
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction()$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:()
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label, const Glib::ustring & tooltip)
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.cpp	/^  NoteWindow::NonModifyingAction::NonModifyingAction(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id, const Glib::ustring & label, const Glib::ustring & tooltip)
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.hpp	/^    NonModifyingAction();$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:()
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.hpp	/^    NonModifyingAction(const Glib::ustring & name, const Glib::ustring & icon_name,$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
gnote::NoteWindow::NonModifyingAction::NonModifyingAction	src/notewindow.hpp	/^    explicit NonModifyingAction(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(),$/;"	p	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(), const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
gnote::NoteWindow::NonModifyingAction::create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create()$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:()
gnote::NoteWindow::NonModifyingAction::create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Glib::ustring & icon_name, const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
gnote::NoteWindow::NonModifyingAction::create	src/notewindow.hpp	/^    static Glib::RefPtr<NonModifyingAction> create(const Glib::ustring & name,$/;"	f	class:gnote::NoteWindow::NonModifyingAction	access:public	signature:(const Glib::ustring & name, const Gtk::StockID & stock_id = Gtk::StockID(), const Glib::ustring & label = Glib::ustring(), const Glib::ustring & tooltip = Glib::ustring())
gnote::NoteWindow::NonModifyingAction::override	src/notewindow.hpp	/^    virtual void reference() const override;$/;"	m	class:gnote::NoteWindow::NonModifyingAction	access:public
gnote::NoteWindow::NonModifyingAction::override	src/notewindow.hpp	/^    virtual void unreference() const override;$/;"	m	class:gnote::NoteWindow::NonModifyingAction	access:public
gnote::NoteWindow::NonModifyingAction::reference	src/notewindow.cpp	/^  void NoteWindow::NonModifyingAction::reference() const$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:() const
gnote::NoteWindow::NonModifyingAction::unreference	src/notewindow.cpp	/^  void NoteWindow::NonModifyingAction::unreference() const$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:() const
gnote::NoteWindow::NonModifyingNoteAction	src/notewindow.hpp	/^  class NonModifyingNoteAction$/;"	c	class:gnote::NoteWindow	access:public
gnote::NoteWindow::NonModifyingNoteAction::reference	src/notewindow.hpp	/^    virtual void reference() const = 0;$/;"	p	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:() const
gnote::NoteWindow::NonModifyingNoteAction::unreference	src/notewindow.hpp	/^    virtual void unreference() const = 0;$/;"	p	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:() const
gnote::NoteWindow::NonModifyingNoteAction::~NonModifyingNoteAction	src/notewindow.hpp	/^    virtual ~NonModifyingNoteAction() {}$/;"	f	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:()
gnote::NoteWindow::NoteWindow	src/notewindow.cpp	/^  NoteWindow::NoteWindow(Note & note)$/;"	f	class:gnote::NoteWindow	signature:(Note & note)
gnote::NoteWindow::NoteWindow	src/notewindow.hpp	/^  NoteWindow(Note &);$/;"	p	class:gnote::NoteWindow	access:public	signature:(Note &)
gnote::NoteWindow::add_accel_group	src/notewindow.cpp	/^  void NoteWindow::add_accel_group(Gtk::Window & window)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Window & window)
gnote::NoteWindow::add_accel_group	src/notewindow.hpp	/^  void add_accel_group(Gtk::Window &);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Window &)
gnote::NoteWindow::add_widget_action	src/notewindow.cpp	/^  void NoteWindow::add_widget_action(const Glib::RefPtr<Gtk::Action> & action, int order)$/;"	f	class:gnote::NoteWindow	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::NoteWindow::add_widget_action	src/notewindow.hpp	/^  void add_widget_action(const Glib::RefPtr<Gtk::Action> & action, int order);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const Glib::RefPtr<Gtk::Action> & action, int order)
gnote::NoteWindow::background	src/notewindow.cpp	/^  void NoteWindow::background()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::change_depth_left_handler	src/notewindow.cpp	/^  void NoteWindow::change_depth_left_handler()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::change_depth_left_handler	src/notewindow.hpp	/^  void change_depth_left_handler();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::change_depth_right_handler	src/notewindow.cpp	/^  void NoteWindow::change_depth_right_handler()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::change_depth_right_handler	src/notewindow.hpp	/^  void change_depth_right_handler();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::editor	src/notewindow.hpp	/^  Gtk::TextView * editor() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
gnote::NoteWindow::embeddable_toolbar	src/notewindow.cpp	/^  Gtk::Grid *NoteWindow::embeddable_toolbar()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::enabled	src/notewindow.cpp	/^  void NoteWindow::enabled(bool enable)$/;"	f	class:gnote::NoteWindow	signature:(bool enable)
gnote::NoteWindow::enabled	src/notewindow.hpp	/^  bool enabled() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
gnote::NoteWindow::enabled	src/notewindow.hpp	/^  void enabled(bool enable);$/;"	p	class:gnote::NoteWindow	access:public	signature:(bool enable)
gnote::NoteWindow::foreground	src/notewindow.cpp	/^  void NoteWindow::foreground()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::get_accel_group	src/notewindow.hpp	/^  const Glib::RefPtr<Gtk::AccelGroup> & get_accel_group()$/;"	f	class:gnote::NoteWindow	access:public	signature:()
gnote::NoteWindow::get_find_handler	src/notewindow.hpp	/^  NoteFindHandler & get_find_handler()$/;"	f	class:gnote::NoteWindow	access:public	signature:()
gnote::NoteWindow::get_icon_pin_active	src/notewindow.cpp	/^  Glib::RefPtr<Gio::Icon> NoteWindow::get_icon_pin_active()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::get_icon_pin_active	src/notewindow.hpp	/^  static Glib::RefPtr<Gio::Icon> get_icon_pin_active();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::get_icon_pin_down	src/notewindow.cpp	/^  Glib::RefPtr<Gio::Icon> NoteWindow::get_icon_pin_down()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::get_icon_pin_down	src/notewindow.hpp	/^  static Glib::RefPtr<Gio::Icon> get_icon_pin_down();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::get_name	src/notewindow.cpp	/^  std::string NoteWindow::get_name() const$/;"	f	class:gnote::NoteWindow	signature:() const
gnote::NoteWindow::get_widget_actions	src/notewindow.cpp	/^  std::vector<Glib::RefPtr<Gtk::Action> > NoteWindow::get_widget_actions()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::goto_next_result	src/notewindow.cpp	/^  bool NoteWindow::goto_next_result()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::goto_previous_result	src/notewindow.cpp	/^  bool NoteWindow::goto_previous_result()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::hint_size	src/notewindow.cpp	/^  void NoteWindow::hint_size(int & width, int & height)$/;"	f	class:gnote::NoteWindow	signature:(int & width, int & height)
gnote::NoteWindow::link_button_clicked	src/notewindow.cpp	/^  void NoteWindow::link_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::link_button_clicked	src/notewindow.hpp	/^  void link_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::m_accel_group	src/notewindow.hpp	/^  Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_delete_action	src/notewindow.hpp	/^  Glib::RefPtr<Gtk::Action>     m_delete_action;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_editor	src/notewindow.hpp	/^  Gtk::TextView                *m_editor;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_editor_window	src/notewindow.hpp	/^  Gtk::ScrolledWindow          *m_editor_window;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_embeddable_toolbar	src/notewindow.hpp	/^  Gtk::Grid                    *m_embeddable_toolbar;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_enabled	src/notewindow.hpp	/^  bool                         m_enabled;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_find_handler	src/notewindow.hpp	/^  NoteFindHandler              m_find_handler;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_global_keys	src/notewindow.hpp	/^  utils::GlobalKeybinder       *m_global_keys;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_height	src/notewindow.hpp	/^  int                           m_height;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_important_action	src/notewindow.hpp	/^  utils::CheckAction::Ptr       m_important_action;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_mark_set_timeout	src/notewindow.hpp	/^  utils::InterruptableTimeout  *m_mark_set_timeout;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_name	src/notewindow.hpp	/^  std::string                   m_name;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_note	src/notewindow.hpp	/^  Note                        & m_note;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_save_selection_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_selection_check_button;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_save_size_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_size_check_button;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_save_title_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_title_check_button;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_signal_actions_changed	src/notewindow.hpp	/^  sigc::signal<void> m_signal_actions_changed;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_template_save_selection_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_selection_tag;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_template_save_size_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_size_tag;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_template_save_title_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_title_tag;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_template_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_tag;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_template_widget	src/notewindow.hpp	/^  Gtk::Grid                    *m_template_widget;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_text_menu	src/notewindow.hpp	/^  NoteTextMenu                 *m_text_menu;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_widget_actions	src/notewindow.hpp	/^  std::map<int, Glib::RefPtr<Gtk::Action> > m_widget_actions;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::m_width	src/notewindow.hpp	/^  int                           m_width;$/;"	m	class:gnote::NoteWindow	access:private
gnote::NoteWindow::make_template_bar	src/notewindow.cpp	/^  Gtk::Grid * NoteWindow::make_template_bar()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::make_template_bar	src/notewindow.hpp	/^  Gtk::Grid * make_template_bar();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::make_toolbar	src/notewindow.cpp	/^  Gtk::Grid *NoteWindow::make_toolbar()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::make_toolbar	src/notewindow.hpp	/^  Gtk::Grid *make_toolbar();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_delete_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_delete_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_delete_button_clicked	src/notewindow.hpp	/^  void on_delete_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_note_tag_added	src/notewindow.cpp	/^  void NoteWindow::on_note_tag_added(const NoteBase&, const Tag::Ptr & tag)$/;"	f	class:gnote::NoteWindow	signature:(const NoteBase&, const Tag::Ptr & tag)
gnote::NoteWindow::on_note_tag_added	src/notewindow.hpp	/^  void on_note_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const NoteBase&, const Tag::Ptr&)
gnote::NoteWindow::on_note_tag_removed	src/notewindow.cpp	/^  void NoteWindow::on_note_tag_removed(const NoteBase::Ptr&, const std::string & tag)$/;"	f	class:gnote::NoteWindow	signature:(const NoteBase::Ptr&, const std::string & tag)
gnote::NoteWindow::on_note_tag_removed	src/notewindow.hpp	/^  void on_note_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const NoteBase::Ptr&, const std::string&)
gnote::NoteWindow::on_pin_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_pin_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_pin_button_clicked	src/notewindow.hpp	/^  void on_pin_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_pin_status_changed	src/notewindow.cpp	/^  void NoteWindow::on_pin_status_changed(const Note & note, bool pinned)$/;"	f	class:gnote::NoteWindow	signature:(const Note & note, bool pinned)
gnote::NoteWindow::on_pin_status_changed	src/notewindow.hpp	/^  void on_pin_status_changed(const Note &, bool);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const Note &, bool)
gnote::NoteWindow::on_populate_popup	src/notewindow.cpp	/^  void NoteWindow::on_populate_popup(Gtk::Menu* menu)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Menu* menu)
gnote::NoteWindow::on_populate_popup	src/notewindow.hpp	/^  void on_populate_popup(Gtk::Menu*);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Menu*)
gnote::NoteWindow::on_save_selection_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_selection_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_save_selection_check_button_toggled	src/notewindow.hpp	/^  void on_save_selection_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_save_size_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_size_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_save_size_check_button_toggled	src/notewindow.hpp	/^  void on_save_size_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_save_title_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_title_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_save_title_check_button_toggled	src/notewindow.hpp	/^  void on_save_title_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_selection_mark_set	src/notewindow.cpp	/^  void NoteWindow::on_selection_mark_set(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)$/;"	f	class:gnote::NoteWindow	signature:(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)
gnote::NoteWindow::on_selection_mark_set	src/notewindow.hpp	/^  void on_selection_mark_set(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)
gnote::NoteWindow::on_text_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_text_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_text_button_clicked	src/notewindow.hpp	/^  void on_text_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::on_untemplate_button_click	src/notewindow.cpp	/^  void NoteWindow::on_untemplate_button_click()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::on_untemplate_button_click	src/notewindow.hpp	/^  void on_untemplate_button_click();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::open_help_activate	src/notewindow.cpp	/^  void NoteWindow::open_help_activate()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::open_help_activate	src/notewindow.hpp	/^  void open_help_activate();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual Gtk::Grid *embeddable_toolbar() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual bool goto_next_result() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual bool goto_previous_result() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual bool supports_goto_result() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual void background() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual void foreground() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual void hint_size(int & width, int & height) override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual void perform_search(const std::string & text) override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::override	src/notewindow.hpp	/^  virtual void size_internals() override;$/;"	m	class:gnote::NoteWindow	access:public
gnote::NoteWindow::perform_search	src/notewindow.cpp	/^  void NoteWindow::perform_search(const std::string & text)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & text)
gnote::NoteWindow::remove_accel_group	src/notewindow.cpp	/^  void NoteWindow::remove_accel_group(Gtk::Window & window)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Window & window)
gnote::NoteWindow::remove_accel_group	src/notewindow.hpp	/^  void remove_accel_group(Gtk::Window &);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Window &)
gnote::NoteWindow::remove_widget_action	src/notewindow.cpp	/^  void NoteWindow::remove_widget_action(const std::string & name)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & name)
gnote::NoteWindow::remove_widget_action	src/notewindow.hpp	/^  void remove_widget_action(const std::string & name);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const std::string & name)
gnote::NoteWindow::set_name	src/notewindow.cpp	/^  void NoteWindow::set_name(const std::string & name)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & name)
gnote::NoteWindow::set_name	src/notewindow.hpp	/^  void set_name(const std::string & name);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const std::string & name)
gnote::NoteWindow::set_size	src/notewindow.hpp	/^  void set_size(int width, int height)$/;"	f	class:gnote::NoteWindow	access:public	signature:(int width, int height)
gnote::NoteWindow::signal_actions_changed	src/notewindow.cpp	/^  sigc::signal<void> & NoteWindow::signal_actions_changed()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::size_internals	src/notewindow.cpp	/^  void NoteWindow::size_internals()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::supports_goto_result	src/notewindow.cpp	/^  bool NoteWindow::supports_goto_result()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::text_menu	src/notewindow.hpp	/^  Gtk::Menu * text_menu() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
gnote::NoteWindow::~NoteWindow	src/notewindow.cpp	/^  NoteWindow::~NoteWindow()$/;"	f	class:gnote::NoteWindow	signature:()
gnote::NoteWindow::~NoteWindow	src/notewindow.hpp	/^  ~NoteWindow();$/;"	p	class:gnote::NoteWindow	access:public	signature:()
gnote::OTHER_DATA_CHANGED	src/tag.hpp	/^    OTHER_DATA_CHANGED$/;"	e	enum:gnote::ChangeType
gnote::PRINT_ORDER	src/iactionmanager.hpp	/^  PRINT_ORDER = 400,$/;"	e	enum:gnote::NoteActionOrder
gnote::PreferenceTabAddin	src/preferencetabaddin.hpp	/^  class PreferenceTabAddin $/;"	c	namespace:gnote	inherits:AbstractAddin
gnote::PreferenceTabAddin::get_preference_tab_widget	src/preferencetabaddin.hpp	/^    virtual bool get_preference_tab_widget ($/;"	p	class:gnote::PreferenceTabAddin	access:public	signature:( Gtk::Dialog * parent, std::string & tabLabel, Gtk::Widget * preferenceWidget)
gnote::Preferences	src/preferences.hpp	/^  class Preferences $/;"	c	namespace:gnote	inherits:base::Singleton
gnote::Preferences::AUTOSIZE_NOTE_WINDOW	src/preferences.cpp	/^  const char * Preferences::AUTOSIZE_NOTE_WINDOW = "autosize-note-window";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::AUTOSIZE_NOTE_WINDOW	src/preferences.hpp	/^    static const char *AUTOSIZE_NOTE_WINDOW;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::CUSTOM_FONT_FACE	src/preferences.cpp	/^  const char * Preferences::CUSTOM_FONT_FACE = "custom-font-face";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::CUSTOM_FONT_FACE	src/preferences.hpp	/^    static const char *CUSTOM_FONT_FACE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::DESKTOP_GNOME_CLOCK_FORMAT	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_CLOCK_FORMAT = "clock-format";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::DESKTOP_GNOME_CLOCK_FORMAT	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_CLOCK_FORMAT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::DESKTOP_GNOME_FONT	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_FONT = "document-font-name";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::DESKTOP_GNOME_FONT	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_FONT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::DESKTOP_GNOME_KEY_THEME	src/preferences.cpp	/^  const char * Preferences::DESKTOP_GNOME_KEY_THEME = "gtk-key-theme";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::DESKTOP_GNOME_KEY_THEME	src/preferences.hpp	/^    static const char *DESKTOP_GNOME_KEY_THEME;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_AUTO_BULLETED_LISTS	src/preferences.cpp	/^  const char * Preferences::ENABLE_AUTO_BULLETED_LISTS = "enable-bulleted-lists";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_AUTO_BULLETED_LISTS	src/preferences.hpp	/^    static const char *ENABLE_AUTO_BULLETED_LISTS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_AUTO_LINKS	src/preferences.cpp	/^  const char * Preferences::ENABLE_AUTO_LINKS = "enable-auto-links";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_AUTO_LINKS	src/preferences.hpp	/^    static const char *ENABLE_AUTO_LINKS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_CLOSE_NOTE_ON_ESCAPE	src/preferences.cpp	/^  const char * Preferences::ENABLE_CLOSE_NOTE_ON_ESCAPE = "enable-close-note-on-escape";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_CLOSE_NOTE_ON_ESCAPE	src/preferences.hpp	/^    static const char *ENABLE_CLOSE_NOTE_ON_ESCAPE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_CUSTOM_FONT	src/preferences.cpp	/^  const char * Preferences::ENABLE_CUSTOM_FONT = "enable-custom-font";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_CUSTOM_FONT	src/preferences.hpp	/^    static const char *ENABLE_CUSTOM_FONT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_ICON_PASTE	src/preferences.cpp	/^  const char * Preferences::ENABLE_ICON_PASTE = "enable-icon-paste";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_ICON_PASTE	src/preferences.hpp	/^    static const char *ENABLE_ICON_PASTE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_KEYBINDINGS	src/preferences.cpp	/^  const char * Preferences::ENABLE_KEYBINDINGS = "enable-keybindings";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_KEYBINDINGS	src/preferences.hpp	/^    static const char *ENABLE_KEYBINDINGS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_SPELLCHECKING	src/preferences.cpp	/^  const char * Preferences::ENABLE_SPELLCHECKING = "enable-spellchecking";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_SPELLCHECKING	src/preferences.hpp	/^    static const char *ENABLE_SPELLCHECKING;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_URL_LINKS	src/preferences.cpp	/^  const char * Preferences::ENABLE_URL_LINKS = "enable-url-links";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_URL_LINKS	src/preferences.hpp	/^    static const char *ENABLE_URL_LINKS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::ENABLE_WIKIWORDS	src/preferences.cpp	/^  const char * Preferences::ENABLE_WIKIWORDS = "enable-wikiwords";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::ENABLE_WIKIWORDS	src/preferences.hpp	/^    static const char *ENABLE_WIKIWORDS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::KEYBINDING_CREATE_NEW_NOTE	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_CREATE_NEW_NOTE = "create-new-note";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::KEYBINDING_CREATE_NEW_NOTE	src/preferences.hpp	/^    static const char *KEYBINDING_CREATE_NEW_NOTE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::KEYBINDING_OPEN_RECENT_CHANGES	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_RECENT_CHANGES = "open-recent-changes";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::KEYBINDING_OPEN_RECENT_CHANGES	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_RECENT_CHANGES;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::KEYBINDING_OPEN_SEARCH	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_SEARCH = "open-search";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::KEYBINDING_OPEN_SEARCH	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_SEARCH;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::KEYBINDING_OPEN_START_HERE	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_OPEN_START_HERE = "open-start-here";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::KEYBINDING_OPEN_START_HERE	src/preferences.hpp	/^    static const char *KEYBINDING_OPEN_START_HERE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::KEYBINDING_SHOW_NOTE_MENU	src/preferences.cpp	/^  const char * Preferences::KEYBINDING_SHOW_NOTE_MENU = "show-note-menu";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::KEYBINDING_SHOW_NOTE_MENU	src/preferences.hpp	/^    static const char *KEYBINDING_SHOW_NOTE_MENU;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::MAIN_WINDOW_MAXIMIZED	src/preferences.cpp	/^  const char * Preferences::MAIN_WINDOW_MAXIMIZED = "main-window-maximized";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::MAIN_WINDOW_MAXIMIZED	src/preferences.hpp	/^    static const char *MAIN_WINDOW_MAXIMIZED;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::MENU_NOTE_COUNT	src/preferences.cpp	/^  const char * Preferences::MENU_NOTE_COUNT = "menu-note-count";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::MENU_NOTE_COUNT	src/preferences.hpp	/^    static const char *MENU_NOTE_COUNT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::MENU_PINNED_NOTES	src/preferences.cpp	/^  const char * Preferences::MENU_PINNED_NOTES = "menu-pinned-notes";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::MENU_PINNED_NOTES	src/preferences.hpp	/^    static const char *MENU_PINNED_NOTES;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::NOTE_RENAME_BEHAVIOR	src/preferences.cpp	/^  const char * Preferences::NOTE_RENAME_BEHAVIOR = "note-rename-behavior";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::NOTE_RENAME_BEHAVIOR	src/preferences.hpp	/^    static const char *NOTE_RENAME_BEHAVIOR;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::OPEN_NOTES_IN_NEW_WINDOW	src/preferences.cpp	/^  const char * Preferences::OPEN_NOTES_IN_NEW_WINDOW = "open-notes-in-new-window";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::OPEN_NOTES_IN_NEW_WINDOW	src/preferences.hpp	/^    static const char *OPEN_NOTES_IN_NEW_WINDOW;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::Preferences	src/preferences.cpp	/^  Preferences::Preferences()$/;"	f	class:gnote::Preferences	signature:()
gnote::Preferences::Preferences	src/preferences.hpp	/^    Preferences();$/;"	p	class:gnote::Preferences	access:public	signature:()
gnote::Preferences::Preferences	src/preferences.hpp	/^    Preferences(const Preferences &); \/\/ non implemented$/;"	p	class:gnote::Preferences	access:private	signature:(const Preferences &)
gnote::Preferences::SCHEMA_DESKTOP_GNOME_INTERFACE	src/preferences.cpp	/^  const char * Preferences::SCHEMA_DESKTOP_GNOME_INTERFACE = "org.gnome.desktop.interface";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SCHEMA_DESKTOP_GNOME_INTERFACE	src/preferences.hpp	/^    static const char *SCHEMA_DESKTOP_GNOME_INTERFACE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SCHEMA_GNOTE	src/preferences.cpp	/^  const char * Preferences::SCHEMA_GNOTE = "org.gnome.gnote";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SCHEMA_GNOTE	src/preferences.hpp	/^    static const char *SCHEMA_GNOTE;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SCHEMA_KEYBINDINGS	src/preferences.cpp	/^  const char * Preferences::SCHEMA_KEYBINDINGS = "org.gnome.gnote.global-keybindings";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SCHEMA_KEYBINDINGS	src/preferences.hpp	/^    static const char *SCHEMA_KEYBINDINGS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SCHEMA_SYNC	src/preferences.cpp	/^  const char * Preferences::SCHEMA_SYNC = "org.gnome.gnote.sync";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SCHEMA_SYNC	src/preferences.hpp	/^    static const char *SCHEMA_SYNC;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SCHEMA_SYNC_WDFS	src/preferences.cpp	/^  const char * Preferences::SCHEMA_SYNC_WDFS = "org.gnome.gnote.sync.wdfs";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SCHEMA_SYNC_WDFS	src/preferences.hpp	/^    static const char *SCHEMA_SYNC_WDFS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SEARCH_SORTING	src/preferences.cpp	/^  const char * Preferences::SEARCH_SORTING = "search-sorting";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SEARCH_SORTING	src/preferences.hpp	/^    static const char *SEARCH_SORTING;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SEARCH_WINDOW_HEIGHT	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_HEIGHT = "search-window-height";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SEARCH_WINDOW_HEIGHT	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_HEIGHT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SEARCH_WINDOW_SPLITTER_POS	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_SPLITTER_POS = "search-window-splitter-pos";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SEARCH_WINDOW_SPLITTER_POS	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_SPLITTER_POS;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SEARCH_WINDOW_WIDTH	src/preferences.cpp	/^  const char * Preferences::SEARCH_WINDOW_WIDTH = "search-window-width";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SEARCH_WINDOW_WIDTH	src/preferences.hpp	/^    static const char *SEARCH_WINDOW_WIDTH;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::START_NOTE_URI	src/preferences.cpp	/^  const char * Preferences::START_NOTE_URI = "start-note";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::START_NOTE_URI	src/preferences.hpp	/^    static const char *START_NOTE_URI;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_AUTOSYNC_TIMEOUT	src/preferences.cpp	/^  const char * Preferences::SYNC_AUTOSYNC_TIMEOUT = "autosync-timeout";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_AUTOSYNC_TIMEOUT	src/preferences.hpp	/^    static const char *SYNC_AUTOSYNC_TIMEOUT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_CLIENT_ID	src/preferences.cpp	/^  const char * Preferences::SYNC_CLIENT_ID = "sync-guid";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_CLIENT_ID	src/preferences.hpp	/^    static const char *SYNC_CLIENT_ID;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_CONFIGURED_CONFLICT_BEHAVIOR	src/preferences.cpp	/^  const char * Preferences::SYNC_CONFIGURED_CONFLICT_BEHAVIOR = "sync-conflict-behavior";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_CONFIGURED_CONFLICT_BEHAVIOR	src/preferences.hpp	/^    static const char *SYNC_CONFIGURED_CONFLICT_BEHAVIOR;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_FUSE_MOUNT_TIMEOUT	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_MOUNT_TIMEOUT = "sync-fuse-mount-timeout-ms";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_FUSE_MOUNT_TIMEOUT	src/preferences.hpp	/^    static const char *SYNC_FUSE_MOUNT_TIMEOUT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_FUSE_WDFS_ACCEPT_SSLCERT	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_ACCEPT_SSLCERT = "accept-sslcert";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_FUSE_WDFS_ACCEPT_SSLCERT	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_ACCEPT_SSLCERT;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_FUSE_WDFS_URL	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_URL = "url";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_FUSE_WDFS_URL	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_URL;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_FUSE_WDFS_USERNAME	src/preferences.cpp	/^  const char * Preferences::SYNC_FUSE_WDFS_USERNAME = "username";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_FUSE_WDFS_USERNAME	src/preferences.hpp	/^    static const char *SYNC_FUSE_WDFS_USERNAME;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_LOCAL_PATH	src/preferences.cpp	/^  const char * Preferences::SYNC_LOCAL_PATH = "sync-local-path";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_LOCAL_PATH	src/preferences.hpp	/^    static const char *SYNC_LOCAL_PATH;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::SYNC_SELECTED_SERVICE_ADDIN	src/preferences.cpp	/^  const char * Preferences::SYNC_SELECTED_SERVICE_ADDIN = "sync-selected-service-addin";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::SYNC_SELECTED_SERVICE_ADDIN	src/preferences.hpp	/^    static const char *SYNC_SELECTED_SERVICE_ADDIN;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::USE_STATUS_ICON	src/preferences.cpp	/^  const char * Preferences::USE_STATUS_ICON = "use-status-icon";$/;"	m	class:gnote::Preferences	file:
gnote::Preferences::USE_STATUS_ICON	src/preferences.hpp	/^    static const char *USE_STATUS_ICON;$/;"	m	class:gnote::Preferences	access:public
gnote::Preferences::get_schema_settings	src/preferences.cpp	/^  Glib::RefPtr<Gio::Settings> Preferences::get_schema_settings(const std::string & schema)$/;"	f	class:gnote::Preferences	signature:(const std::string & schema)
gnote::Preferences::get_schema_settings	src/preferences.hpp	/^    Glib::RefPtr<Gio::Settings> get_schema_settings(const std::string & schema);$/;"	p	class:gnote::Preferences	access:public	signature:(const std::string & schema)
gnote::Preferences::m_schemas	src/preferences.hpp	/^    std::map<std::string, Glib::RefPtr<Gio::Settings> > m_schemas;$/;"	m	class:gnote::Preferences	access:private
gnote::PreferencesDialog	src/preferencesdialog.hpp	/^class PreferencesDialog$/;"	c	namespace:gnote	inherits:Gtk::Dialog
gnote::PreferencesDialog::PreferencesDialog	src/preferencesdialog.cpp	/^  PreferencesDialog::PreferencesDialog(NoteManager & note_manager)$/;"	f	class:gnote::PreferencesDialog	signature:(NoteManager & note_manager)
gnote::PreferencesDialog::PreferencesDialog	src/preferencesdialog.hpp	/^  explicit PreferencesDialog(NoteManager & note_manager);$/;"	p	class:gnote::PreferencesDialog	access:public	signature:(NoteManager & note_manager)
gnote::PreferencesDialog::SyncStoreModel	src/preferencesdialog.hpp	/^  class SyncStoreModel$/;"	c	class:gnote::PreferencesDialog	inherits:Gtk::TreeModelColumnRecord	access:private
gnote::PreferencesDialog::SyncStoreModel::SyncStoreModel	src/preferencesdialog.hpp	/^    SyncStoreModel()$/;"	f	class:gnote::PreferencesDialog::SyncStoreModel	access:public	signature:()
gnote::PreferencesDialog::SyncStoreModel::m_col1	src/preferencesdialog.hpp	/^    Gtk::TreeModelColumn<sync::SyncServiceAddin*> m_col1;$/;"	m	class:gnote::PreferencesDialog::SyncStoreModel	access:public
gnote::PreferencesDialog::addin_info_button	src/preferencesdialog.hpp	/^  Gtk::Button *addin_info_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::addin_info_dialog_deleted	src/preferencesdialog.cpp	/^  bool PreferencesDialog::addin_info_dialog_deleted(GdkEventAny*, $/;"	f	class:gnote::PreferencesDialog	signature:(GdkEventAny*, Gtk::Dialog* dialog)
gnote::PreferencesDialog::addin_info_dialog_deleted	src/preferencesdialog.hpp	/^  bool addin_info_dialog_deleted(GdkEventAny*, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(GdkEventAny*, Gtk::Dialog*)
gnote::PreferencesDialog::addin_info_dialog_response	src/preferencesdialog.cpp	/^  void PreferencesDialog::addin_info_dialog_response(int, Gtk::Dialog* dlg)$/;"	f	class:gnote::PreferencesDialog	signature:(int, Gtk::Dialog* dlg)
gnote::PreferencesDialog::addin_info_dialog_response	src/preferencesdialog.hpp	/^  void addin_info_dialog_response(int, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(int, Gtk::Dialog*)
gnote::PreferencesDialog::addin_info_dialogs	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::Dialog* > addin_info_dialogs;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::addin_pref_dialog_deleted	src/preferencesdialog.cpp	/^  bool PreferencesDialog::addin_pref_dialog_deleted(GdkEventAny*, $/;"	f	class:gnote::PreferencesDialog	signature:(GdkEventAny*, Gtk::Dialog* dialog)
gnote::PreferencesDialog::addin_pref_dialog_deleted	src/preferencesdialog.hpp	/^  bool addin_pref_dialog_deleted(GdkEventAny*, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(GdkEventAny*, Gtk::Dialog*)
gnote::PreferencesDialog::addin_pref_dialog_response	src/preferencesdialog.cpp	/^  void PreferencesDialog::addin_pref_dialog_response(int, Gtk::Dialog* dialog)$/;"	f	class:gnote::PreferencesDialog	signature:(int, Gtk::Dialog* dialog)
gnote::PreferencesDialog::addin_pref_dialog_response	src/preferencesdialog.hpp	/^  void addin_pref_dialog_response(int, Gtk::Dialog*);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(int, Gtk::Dialog*)
gnote::PreferencesDialog::addin_prefs_button	src/preferencesdialog.hpp	/^  Gtk::Button *addin_prefs_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::addin_prefs_dialogs	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::Dialog* > addin_prefs_dialogs;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::combo_box_text_data_func	src/preferencesdialog.cpp	/^  void PreferencesDialog::combo_box_text_data_func(const Gtk::TreeIter & iter)$/;"	f	class:gnote::PreferencesDialog	signature:(const Gtk::TreeIter & iter)
gnote::PreferencesDialog::combo_box_text_data_func	src/preferencesdialog.hpp	/^  void combo_box_text_data_func(const Gtk::TreeIter & iter);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const Gtk::TreeIter & iter)
gnote::PreferencesDialog::conflictRadioGroup	src/preferencesdialog.hpp	/^  Gtk::RadioButton::Group conflictRadioGroup;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::disable_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *disable_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::enable_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::enable_addin(T *addin, bool enable)$/;"	f	class:gnote::PreferencesDialog	signature:(T *addin, bool enable)
gnote::PreferencesDialog::enable_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::enable_addin(bool enable)$/;"	f	class:gnote::PreferencesDialog	signature:(bool enable)
gnote::PreferencesDialog::enable_addin	src/preferencesdialog.hpp	/^  void enable_addin(T *addin, bool enable);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(T *addin, bool enable)
gnote::PreferencesDialog::enable_addin	src/preferencesdialog.hpp	/^  void enable_addin(bool enable);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(bool enable)
gnote::PreferencesDialog::enable_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *enable_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::font_button	src/preferencesdialog.hpp	/^  Gtk::Button *font_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::font_face	src/preferencesdialog.hpp	/^  Gtk::Label  *font_face;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::font_size	src/preferencesdialog.hpp	/^  Gtk::Label  *font_size;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::get_selected_addin	src/preferencesdialog.cpp	/^  std::string PreferencesDialog::get_selected_addin()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::get_selected_addin	src/preferencesdialog.hpp	/^  std::string get_selected_addin();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::load_addins	src/preferencesdialog.cpp	/^  void PreferencesDialog::load_addins()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::load_addins	src/preferencesdialog.hpp	/^  void load_addins();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::m_addin_manager	src/preferencesdialog.hpp	/^  AddinManager &m_addin_manager;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_addin_tree	src/preferencesdialog.hpp	/^  Gtk::TreeView              *m_addin_tree;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_addin_tree_model	src/preferencesdialog.hpp	/^  sharp::AddinsTreeModel::Ptr m_addin_tree_model;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_autosync_check	src/preferencesdialog.hpp	/^  Gtk::CheckButton *m_autosync_check;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_autosync_spinner	src/preferencesdialog.hpp	/^  Gtk::SpinButton *m_autosync_spinner;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_note_manager	src/preferencesdialog.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_rename_behavior_combo	src/preferencesdialog.hpp	/^  Gtk::ComboBoxText *m_rename_behavior_combo;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_reset_sync_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *m_reset_sync_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_save_sync_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *m_save_sync_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_selected_sync_addin	src/preferencesdialog.hpp	/^  sync::SyncServiceAddin *m_selected_sync_addin;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_combo	src/preferencesdialog.hpp	/^  Gtk::ComboBox *m_sync_addin_combo;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_iters	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::TreeIter> m_sync_addin_iters;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_prefs_container	src/preferencesdialog.hpp	/^  Gtk::Grid   *m_sync_addin_prefs_container;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_prefs_widget	src/preferencesdialog.hpp	/^  Gtk::Widget *m_sync_addin_prefs_widget;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_store	src/preferencesdialog.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_sync_addin_store;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::m_sync_addin_store_record	src/preferencesdialog.hpp	/^  SyncStoreModel m_sync_addin_store_record;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::make_addins_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_addins_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_addins_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_addins_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
gnote::PreferencesDialog::make_check_button	src/preferencesdialog.cpp	/^  Gtk::CheckButton *PreferencesDialog::make_check_button (const std::string & label_text)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & label_text)
gnote::PreferencesDialog::make_check_button	src/preferencesdialog.hpp	/^  Gtk::CheckButton *make_check_button (const std::string & label_text);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & label_text)
gnote::PreferencesDialog::make_editing_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_editing_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_editing_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_editing_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
gnote::PreferencesDialog::make_font_button	src/preferencesdialog.cpp	/^  Gtk::Button *PreferencesDialog::make_font_button ()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_font_button	src/preferencesdialog.hpp	/^  Gtk::Button *make_font_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::make_hotkeys_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_hotkeys_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_hotkeys_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_hotkeys_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
gnote::PreferencesDialog::make_label	src/preferencesdialog.cpp	/^  Gtk::Label *PreferencesDialog::make_label (const std::string & label_text\/*, params object[] args*\/)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & label_text )
gnote::PreferencesDialog::make_label	src/preferencesdialog.hpp	/^  Gtk::Label *make_label (const std::string & label_text\/*, params object[] args*\/);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & label_text )
gnote::PreferencesDialog::make_links_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_links_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_links_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_links_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
gnote::PreferencesDialog::make_sync_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_sync_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::make_sync_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_sync_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
gnote::PreferencesDialog::on_addin_info_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_info_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_addin_info_button	src/preferencesdialog.hpp	/^  void on_addin_info_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_addin_prefs_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_prefs_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_addin_prefs_button	src/preferencesdialog.hpp	/^  void on_addin_prefs_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_addin_tree_selection_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_tree_selection_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_addin_tree_selection_changed	src/preferencesdialog.hpp	/^  void on_addin_tree_selection_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_advanced_sync_config_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_advanced_sync_config_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_advanced_sync_config_button	src/preferencesdialog.hpp	/^  void on_advanced_sync_config_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_autosync_check_toggled	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_autosync_check_toggled()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_autosync_check_toggled	src/preferencesdialog.hpp	/^  void on_autosync_check_toggled();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_conflict_option_toggle	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_conflict_option_toggle()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_conflict_option_toggle	src/preferencesdialog.hpp	/^  void on_conflict_option_toggle();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_disable_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_disable_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_disable_addin_button	src/preferencesdialog.hpp	/^  void on_disable_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_enable_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_enable_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_enable_addin_button	src/preferencesdialog.hpp	/^  void on_enable_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_font_button_clicked	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_font_button_clicked()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_font_button_clicked	src/preferencesdialog.hpp	/^  void on_font_button_clicked();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_preferences_setting_changed	src/preferencesdialog.cpp	/^  void  PreferencesDialog::on_preferences_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::PreferencesDialog	signature:(const Glib::ustring & key)
gnote::PreferencesDialog::on_preferences_setting_changed	src/preferencesdialog.hpp	/^  void on_preferences_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const Glib::ustring & key)
gnote::PreferencesDialog::on_rename_behavior_changed	src/preferencesdialog.cpp	/^  void  PreferencesDialog::on_rename_behavior_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_rename_behavior_changed	src/preferencesdialog.hpp	/^  void on_rename_behavior_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_reset_sync_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_reset_sync_addin_button(bool signal)$/;"	f	class:gnote::PreferencesDialog	signature:(bool signal)
gnote::PreferencesDialog::on_reset_sync_addin_button	src/preferencesdialog.hpp	/^  void on_reset_sync_addin_button(bool signal);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(bool signal)
gnote::PreferencesDialog::on_save_sync_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_save_sync_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_save_sync_addin_button	src/preferencesdialog.hpp	/^  void on_save_sync_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_sync_addin_combo_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_sync_addin_combo_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_sync_addin_combo_changed	src/preferencesdialog.hpp	/^  void on_sync_addin_combo_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::on_sync_addin_prefs_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_sync_addin_prefs_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::on_sync_addin_prefs_changed	src/preferencesdialog.hpp	/^  void on_sync_addin_prefs_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::open_template_button_clicked	src/preferencesdialog.cpp	/^  void  PreferencesDialog::open_template_button_clicked()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::open_template_button_clicked	src/preferencesdialog.hpp	/^  void open_template_button_clicked();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::overwriteOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *overwriteOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::promptOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *promptOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::renameOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *renameOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
gnote::PreferencesDialog::set_module_for_selected_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::set_module_for_selected_addin(sharp::DynamicModule * module)$/;"	f	class:gnote::PreferencesDialog	signature:(sharp::DynamicModule * module)
gnote::PreferencesDialog::set_module_for_selected_addin	src/preferencesdialog.hpp	/^  void set_module_for_selected_addin(sharp::DynamicModule * module);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(sharp::DynamicModule * module)
gnote::PreferencesDialog::set_widget_tooltip	src/preferencesdialog.cpp	/^  void PreferencesDialog::set_widget_tooltip(Gtk::Widget & widget, std::string label_text)$/;"	f	class:gnote::PreferencesDialog	signature:(Gtk::Widget & widget, std::string label_text)
gnote::PreferencesDialog::set_widget_tooltip	src/preferencesdialog.hpp	/^  void set_widget_tooltip(Gtk::Widget & widget, std::string label_text);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(Gtk::Widget & widget, std::string label_text)
gnote::PreferencesDialog::update_addin_buttons	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_addin_buttons()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::update_addin_buttons	src/preferencesdialog.hpp	/^  void update_addin_buttons();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::update_font_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_font_button (const std::string & font_desc)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & font_desc)
gnote::PreferencesDialog::update_font_button	src/preferencesdialog.hpp	/^  void update_font_button(const std::string & font_desc);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & font_desc)
gnote::PreferencesDialog::update_sync_services	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_sync_services()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::update_sync_services	src/preferencesdialog.hpp	/^  void update_sync_services();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PreferencesDialog::update_timeout_pref	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_timeout_pref()$/;"	f	class:gnote::PreferencesDialog	signature:()
gnote::PreferencesDialog::update_timeout_pref	src/preferencesdialog.hpp	/^  void update_timeout_pref();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
gnote::PrefsKeybinder	src/prefskeybinder.hpp	/^class PrefsKeybinder : public sigc::trackable$/;"	c	namespace:gnote	inherits:sigc::trackable
gnote::PrefsKeybinder::Binding	src/prefskeybinder.cpp	/^  class PrefsKeybinder::Binding$/;"	c	class:gnote::PrefsKeybinder	file:
gnote::PrefsKeybinder::Binding::Binding	src/prefskeybinder.cpp	/^    Binding(const std::string & pref_path, const std::string & default_binding,$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler, IKeybinder & native_keybinder)
gnote::PrefsKeybinder::Binding::Binding	src/prefskeybinder.cpp	/^  PrefsKeybinder::Binding::Binding(const std::string & pref_path, $/;"	f	class:gnote::PrefsKeybinder::Binding	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler, IKeybinder & native_keybinder)
gnote::PrefsKeybinder::Binding::m_handler	src/prefskeybinder.cpp	/^    sigc::slot<void> m_handler;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
gnote::PrefsKeybinder::Binding::m_key_sequence	src/prefskeybinder.cpp	/^    std::string m_key_sequence;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
gnote::PrefsKeybinder::Binding::m_native_keybinder	src/prefskeybinder.cpp	/^    IKeybinder  & m_native_keybinder;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
gnote::PrefsKeybinder::Binding::m_notify_cnx	src/prefskeybinder.cpp	/^    guint         m_notify_cnx;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
gnote::PrefsKeybinder::Binding::m_pref_path	src/prefskeybinder.cpp	/^    std::string m_pref_path;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
gnote::PrefsKeybinder::Binding::on_binding_changed	src/prefskeybinder.cpp	/^    void on_binding_changed(const Glib::ustring & key);$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:private	signature:(const Glib::ustring & key)
gnote::PrefsKeybinder::Binding::on_binding_changed	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::on_binding_changed(const Glib::ustring & key)$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:(const Glib::ustring & key)
gnote::PrefsKeybinder::Binding::set_binding	src/prefskeybinder.cpp	/^    void set_binding();$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:()
gnote::PrefsKeybinder::Binding::set_binding	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::set_binding()$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:()
gnote::PrefsKeybinder::Binding::unset_binding	src/prefskeybinder.cpp	/^    void unset_binding();$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:()
gnote::PrefsKeybinder::Binding::unset_binding	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::unset_binding()$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:()
gnote::PrefsKeybinder::PrefsKeybinder	src/prefskeybinder.cpp	/^  PrefsKeybinder::PrefsKeybinder(IKeybinder & keybinder)$/;"	f	class:gnote::PrefsKeybinder	signature:(IKeybinder & keybinder)
gnote::PrefsKeybinder::PrefsKeybinder	src/prefskeybinder.hpp	/^  PrefsKeybinder(IKeybinder &);$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:(IKeybinder &)
gnote::PrefsKeybinder::bind	src/prefskeybinder.cpp	/^  void PrefsKeybinder::bind(const std::string & pref_path, const std::string & default_binding, $/;"	f	class:gnote::PrefsKeybinder	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler)
gnote::PrefsKeybinder::bind	src/prefskeybinder.hpp	/^  void bind(const std::string & pref_path, const std::string & default_binding, $/;"	p	class:gnote::PrefsKeybinder	access:public	signature:(const std::string & pref_path, const std::string & default_binding, const sigc::slot<void> & handler)
gnote::PrefsKeybinder::m_bindings	src/prefskeybinder.hpp	/^  std::list<Binding*> m_bindings;$/;"	m	class:gnote::PrefsKeybinder	access:private
gnote::PrefsKeybinder::m_native_keybinder	src/prefskeybinder.hpp	/^  IKeybinder & m_native_keybinder;$/;"	m	class:gnote::PrefsKeybinder	access:private
gnote::PrefsKeybinder::unbind_all	src/prefskeybinder.cpp	/^  void PrefsKeybinder::unbind_all()$/;"	f	class:gnote::PrefsKeybinder	signature:()
gnote::PrefsKeybinder::unbind_all	src/prefskeybinder.hpp	/^  void unbind_all();$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:()
gnote::PrefsKeybinder::~PrefsKeybinder	src/prefskeybinder.cpp	/^  PrefsKeybinder::~PrefsKeybinder()$/;"	f	class:gnote::PrefsKeybinder	signature:()
gnote::PrefsKeybinder::~PrefsKeybinder	src/prefskeybinder.hpp	/^  virtual ~PrefsKeybinder();$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:()
gnote::READ_ONLY_ORDER	src/iactionmanager.hpp	/^  READ_ONLY_ORDER = 700,$/;"	e	enum:gnote::NoteActionOrder
gnote::REPLACE_TITLE_ORDER	src/iactionmanager.hpp	/^  REPLACE_TITLE_ORDER = 500,$/;"	e	enum:gnote::NoteActionOrder
gnote::RecentTreeView	src/recenttreeview.hpp	/^class RecentTreeView$/;"	c	namespace:gnote	inherits:Gtk::TreeView
gnote::RecentTreeView::RecentTreeView	src/recenttreeview.hpp	/^  RecentTreeView()$/;"	f	class:gnote::RecentTreeView	access:public	signature:()
gnote::RemoteControl	src/dbus/remotecontrol.hpp	/^class RemoteControl$/;"	c	namespace:gnote	inherits:IRemoteControl
gnote::RemoteControl::AddTagToNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::AddTagToNote(const std::string& uri, const std::string& tag_name)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& tag_name)
gnote::RemoteControl::CreateNamedNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::CreateNamedNote(const std::string& linked_title)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& linked_title)
gnote::RemoteControl::CreateNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::CreateNote()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::DeleteNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DeleteNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::DisplayNote	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DisplayNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::DisplayNoteWithSearch	src/dbus/remotecontrol.cpp	/^  bool RemoteControl::DisplayNoteWithSearch(const std::string& uri, const std::string& search)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& search)
gnote::RemoteControl::DisplaySearch	src/dbus/remotecontrol.cpp	/^  void RemoteControl::DisplaySearch()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::DisplaySearchWithText	src/dbus/remotecontrol.cpp	/^  void RemoteControl::DisplaySearchWithText(const std::string& search_text)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& search_text)
gnote::RemoteControl::FindNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::FindNote(const std::string& linked_title)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& linked_title)
gnote::RemoteControl::FindStartHereNote	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::FindStartHereNote()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::GetAllNotesWithTag	src/dbus/remotecontrol.cpp	/^  std::vector< std::string > RemoteControl::GetAllNotesWithTag(const std::string& tag_name)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& tag_name)
gnote::RemoteControl::GetNoteChangeDate	src/dbus/remotecontrol.cpp	/^  int32_t RemoteControl::GetNoteChangeDate(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetNoteCompleteXml	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteCompleteXml(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetNoteContents	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteContents(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetNoteContentsXml	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteContentsXml(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetNoteCreateDate	src/dbus/remotecontrol.cpp	/^  int32_t RemoteControl::GetNoteCreateDate(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetNoteTitle	src/dbus/remotecontrol.cpp	/^  std::string RemoteControl::GetNoteTitle(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::GetTagsForNote	src/dbus/remotecontrol.cpp	/^  std::vector< std::string > RemoteControl::GetTagsForNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::HideNote	src/dbus/remotecontrol.cpp	/^bool RemoteControl::HideNote(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::ListAllNotes	src/dbus/remotecontrol.cpp	/^std::vector< std::string > RemoteControl::ListAllNotes()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::NoteExists	src/dbus/remotecontrol.cpp	/^bool RemoteControl::NoteExists(const std::string& uri)$/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri)
gnote::RemoteControl::RemoteControl	src/dbus/remotecontrol.cpp	/^  RemoteControl::RemoteControl(const Glib::RefPtr<Gio::DBus::Connection> & cnx, NoteManager& manager,$/;"	f	class:gnote::RemoteControl	signature:(const Glib::RefPtr<Gio::DBus::Connection> & cnx, NoteManager& manager, const char * path, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
gnote::RemoteControl::RemoteControl	src/dbus/remotecontrol.hpp	/^  RemoteControl(const Glib::RefPtr<Gio::DBus::Connection> &, gnote::NoteManager&, const char *, const char *,$/;"	p	class:gnote::RemoteControl	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, gnote::NoteManager&, const char *, const char *, const Glib::RefPtr<Gio::DBus::InterfaceInfo> &)
gnote::RemoteControl::RemoveTagFromNote	src/dbus/remotecontrol.cpp	/^bool RemoteControl::RemoveTagFromNote(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& tag_name)
gnote::RemoteControl::SearchNotes	src/dbus/remotecontrol.cpp	/^std::vector< std::string > RemoteControl::SearchNotes(const std::string& query,$/;"	f	class:gnote::RemoteControl	signature:(const std::string& query, const bool& case_sensitive)
gnote::RemoteControl::SetNoteCompleteXml	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteCompleteXml(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& xml_contents)
gnote::RemoteControl::SetNoteContents	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteContents(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& text_contents)
gnote::RemoteControl::SetNoteContentsXml	src/dbus/remotecontrol.cpp	/^bool RemoteControl::SetNoteContentsXml(const std::string& uri, $/;"	f	class:gnote::RemoteControl	signature:(const std::string& uri, const std::string& xml_contents)
gnote::RemoteControl::Version	src/dbus/remotecontrol.cpp	/^std::string RemoteControl::Version()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::m_manager	src/dbus/remotecontrol.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::RemoteControl	access:private
gnote::RemoteControl::on_note_added	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
gnote::RemoteControl::on_note_added	src/dbus/remotecontrol.hpp	/^  void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
gnote::RemoteControl::on_note_deleted	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
gnote::RemoteControl::on_note_deleted	src/dbus/remotecontrol.hpp	/^  void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
gnote::RemoteControl::on_note_saved	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_saved(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
gnote::RemoteControl::on_note_saved	src/dbus/remotecontrol.hpp	/^  void on_note_saved(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool AddTagToNote(const std::string& uri, const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool DeleteNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool DisplayNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool DisplayNoteWithSearch(const std::string& uri, const std::string& search) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool HideNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool NoteExists(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool RemoveTagFromNote(const std::string& uri, const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteCompleteXml(const std::string& uri, const std::string& xml_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteContents(const std::string& uri, const std::string& text_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteContentsXml(const std::string& uri, const std::string& xml_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual int32_t GetNoteChangeDate(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual int32_t GetNoteCreateDate(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string CreateNamedNote(const std::string& linked_title) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string CreateNote() override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string FindNote(const std::string& linked_title) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string FindStartHereNote() override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteCompleteXml(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteContents(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteContentsXml(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteTitle(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::string Version() override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > GetAllNotesWithTag(const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > GetTagsForNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > ListAllNotes() override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > SearchNotes(const std::string& query, const bool& case_sensitive) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual void DisplaySearch() override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::override	src/dbus/remotecontrol.hpp	/^  virtual void DisplaySearchWithText(const std::string& search_text) override;$/;"	m	class:gnote::RemoteControl	access:public
gnote::RemoteControl::present_note	src/dbus/remotecontrol.cpp	/^MainWindow & RemoteControl::present_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
gnote::RemoteControl::present_note	src/dbus/remotecontrol.hpp	/^  MainWindow & present_note(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
gnote::RemoteControl::~RemoteControl	src/dbus/remotecontrol.cpp	/^  RemoteControl::~RemoteControl()$/;"	f	class:gnote::RemoteControl	signature:()
gnote::RemoteControl::~RemoteControl	src/dbus/remotecontrol.hpp	/^  virtual ~RemoteControl();$/;"	p	class:gnote::RemoteControl	access:public	signature:()
gnote::RemoteControlClient	src/dbus/remotecontrolclient.hpp	/^class RemoteControlClient$/;"	c	namespace:gnote	inherits:org::gnome::Gnote::RemoteControl_proxy
gnote::RemoteControlClient::NoteAdded	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteAdded(const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&)
gnote::RemoteControlClient::NoteDeleted	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteDeleted(const std::string&, const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&, const std::string&)
gnote::RemoteControlClient::NoteSaved	src/dbus/remotecontrolclient.hpp	/^  virtual void NoteSaved(const std::string&) {}$/;"	f	class:gnote::RemoteControlClient	access:public	signature:(const std::string&)
gnote::RemoteControlClient::RemoteControlClient	src/dbus/remotecontrolclient.cpp	/^  RemoteControlClient::RemoteControlClient(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	f	class:gnote::RemoteControlClient	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path, const char *name, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
gnote::RemoteControlClient::RemoteControlClient	src/dbus/remotecontrolclient.hpp	/^  RemoteControlClient(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path,$/;"	p	class:gnote::RemoteControlClient	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char *path, const char *name, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
gnote::RemoteControlProxy	src/remotecontrolproxy.hpp	/^class RemoteControlProxy $/;"	c	namespace:gnote
gnote::RemoteControlProxy::GNOTE_INTERFACE_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_INTERFACE_NAME = "org.gnome.Gnote.RemoteControl";$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::GNOTE_INTERFACE_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_INTERFACE_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::GNOTE_SEARCH_PROVIDER_INTERFACE_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SEARCH_PROVIDER_INTERFACE_NAME = "org.gnome.Shell.SearchProvider2";$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::GNOTE_SEARCH_PROVIDER_INTERFACE_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SEARCH_PROVIDER_INTERFACE_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::GNOTE_SEARCH_PROVIDER_PATH	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SEARCH_PROVIDER_PATH = "\/org\/gnome\/Gnote\/SearchProvider";$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::GNOTE_SEARCH_PROVIDER_PATH	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SEARCH_PROVIDER_PATH;$/;"	m	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::GNOTE_SERVER_NAME	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SERVER_NAME = "org.gnome.Gnote";$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::GNOTE_SERVER_NAME	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SERVER_NAME;$/;"	m	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::GNOTE_SERVER_PATH	src/remotecontrolproxy.cpp	/^const char *RemoteControlProxy::GNOTE_SERVER_PATH = "\/org\/gnome\/Gnote\/RemoteControl";$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::GNOTE_SERVER_PATH	src/remotecontrolproxy.hpp	/^  static const char *GNOTE_SERVER_PATH;$/;"	m	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::get_instance	src/remotecontrolproxy.cpp	/^Glib::RefPtr<RemoteControlClient> RemoteControlProxy::get_instance()$/;"	f	class:gnote::RemoteControlProxy	signature:()
gnote::RemoteControlProxy::get_instance	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<RemoteControlClient> get_instance();$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:()
gnote::RemoteControlProxy::get_remote_control	src/remotecontrolproxy.cpp	/^RemoteControl *RemoteControlProxy::get_remote_control()$/;"	f	class:gnote::RemoteControlProxy	signature:()
gnote::RemoteControlProxy::get_remote_control	src/remotecontrolproxy.hpp	/^  static RemoteControl *get_remote_control();$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:()
gnote::RemoteControlProxy::load_introspection_xml	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::load_introspection_xml()$/;"	f	class:gnote::RemoteControlProxy	signature:()
gnote::RemoteControlProxy::load_introspection_xml	src/remotecontrolproxy.hpp	/^  static void load_introspection_xml();$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:()
gnote::RemoteControlProxy::on_bus_acquired	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_bus_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)
gnote::RemoteControlProxy::on_bus_acquired	src/remotecontrolproxy.hpp	/^  static void on_bus_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
gnote::RemoteControlProxy::on_name_acquired	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_name_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)
gnote::RemoteControlProxy::on_name_acquired	src/remotecontrolproxy.hpp	/^  static void on_name_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
gnote::RemoteControlProxy::on_name_lost	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_name_lost(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &)
gnote::RemoteControlProxy::on_name_lost	src/remotecontrolproxy.hpp	/^  static void on_name_lost(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
gnote::RemoteControlProxy::register_object	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::register_object(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager,$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager, const slot_name_acquire_finish & on_finish)
gnote::RemoteControlProxy::register_object	src/remotecontrolproxy.hpp	/^  static void register_object(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager,$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager, const slot_name_acquire_finish & on_finish)
gnote::RemoteControlProxy::register_remote	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::register_remote(NoteManager & manager, const slot_name_acquire_finish & on_finish)$/;"	f	class:gnote::RemoteControlProxy	signature:(NoteManager & manager, const slot_name_acquire_finish & on_finish)
gnote::RemoteControlProxy::register_remote	src/remotecontrolproxy.hpp	/^  static void register_remote(NoteManager & manager, const slot_name_acquire_finish & on_finish);$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:(NoteManager & manager, const slot_name_acquire_finish & on_finish)
gnote::RemoteControlProxy::s_bus_acquired	src/remotecontrolproxy.cpp	/^bool RemoteControlProxy::s_bus_acquired;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_bus_acquired	src/remotecontrolproxy.hpp	/^  static bool s_bus_acquired;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_connection	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::Connection> RemoteControlProxy::s_connection;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_connection	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::Connection> s_connection;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_gnote_interface	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> RemoteControlProxy::s_gnote_interface;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_gnote_interface	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_gnote_interface;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_manager	src/remotecontrolproxy.cpp	/^NoteManager *RemoteControlProxy::s_manager;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_manager	src/remotecontrolproxy.hpp	/^  static NoteManager * s_manager;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_on_name_acquire_finish	src/remotecontrolproxy.cpp	/^RemoteControlProxy::slot_name_acquire_finish RemoteControlProxy::s_on_name_acquire_finish;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_on_name_acquire_finish	src/remotecontrolproxy.hpp	/^  static slot_name_acquire_finish s_on_name_acquire_finish;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_remote_control	src/remotecontrolproxy.cpp	/^RemoteControl *RemoteControlProxy::s_remote_control;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_remote_control	src/remotecontrolproxy.hpp	/^  static RemoteControl * s_remote_control;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_remote_control_proxy	src/remotecontrolproxy.cpp	/^Glib::RefPtr<RemoteControlClient> RemoteControlProxy::s_remote_control_proxy;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_remote_control_proxy	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<RemoteControlClient> s_remote_control_proxy;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_search_provider	src/remotecontrolproxy.cpp	/^org::gnome::Gnote::SearchProvider *RemoteControlProxy::s_search_provider;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_search_provider	src/remotecontrolproxy.hpp	/^  static org::gnome::Gnote::SearchProvider * s_search_provider;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::s_search_provider_interface	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> RemoteControlProxy::s_search_provider_interface;$/;"	m	class:gnote::RemoteControlProxy	file:
gnote::RemoteControlProxy::s_search_provider_interface	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_search_provider_interface;$/;"	m	class:gnote::RemoteControlProxy	access:private
gnote::RemoteControlProxy::slot_connected	src/remotecontrolproxy.hpp	/^  typedef sigc::slot<void> slot_connected;$/;"	t	class:gnote::RemoteControlProxy	access:public
gnote::RemoteControlProxy::slot_name_acquire_finish	src/remotecontrolproxy.hpp	/^  typedef sigc::slot<void, bool, bool> slot_name_acquire_finish;$/;"	t	class:gnote::RemoteControlProxy	access:public
gnote::Search	src/search.hpp	/^class Search $/;"	c	namespace:gnote
gnote::Search::Results	src/search.hpp	/^  typedef std::multimap<int,Note::Ptr> Results;$/;"	t	class:gnote::Search	access:public
gnote::Search::ResultsPtr	src/search.hpp	/^  typedef shared_ptr<Results> ResultsPtr;$/;"	t	class:gnote::Search	access:public
gnote::Search::Search	src/search.cpp	/^  Search::Search(NoteManager & manager)$/;"	f	class:gnote::Search	signature:(NoteManager & manager)
gnote::Search::Search	src/search.hpp	/^  Search(NoteManager &);$/;"	p	class:gnote::Search	access:public	signature:(NoteManager &)
gnote::Search::check_note_has_match	src/search.cpp	/^  bool Search::check_note_has_match(const Note::Ptr & note, $/;"	f	class:gnote::Search	signature:(const Note::Ptr & note, const std::vector<std::string> & encoded_words, bool match_case)
gnote::Search::check_note_has_match	src/search.hpp	/^  bool check_note_has_match(const Note::Ptr & note, const std::vector<std::string> & ,$/;"	p	class:gnote::Search	access:public	signature:(const Note::Ptr & note, const std::vector<std::string> & , bool match_case)
gnote::Search::find_match_count_in_note	src/search.cpp	/^  int Search::find_match_count_in_note(Glib::ustring note_text,$/;"	f	class:gnote::Search	signature:(Glib::ustring note_text, const std::vector<std::string> & words, bool match_case)
gnote::Search::find_match_count_in_note	src/search.hpp	/^  int find_match_count_in_note(Glib::ustring note_text, const std::vector<std::string> &,$/;"	p	class:gnote::Search	access:public	signature:(Glib::ustring note_text, const std::vector<std::string> &, bool match_case)
gnote::Search::m_manager	src/search.hpp	/^  NoteManager &m_manager;$/;"	m	class:gnote::Search	access:private
gnote::Search::search_notes	src/search.cpp	/^  Search::ResultsPtr Search::search_notes(const std::string & query, bool case_sensitive, $/;"	f	class:gnote::Search	signature:(const std::string & query, bool case_sensitive, const notebooks::Notebook::Ptr & selected_notebook)
gnote::Search::search_notes	src/search.hpp	/^  ResultsPtr search_notes(const std::string &, bool, $/;"	p	class:gnote::Search	access:public	signature:(const std::string &, bool, const notebooks::Notebook::Ptr & )
gnote::Search::split_watching_quotes	src/search.hpp	/^  static void split_watching_quotes(std::vector<T> & split,$/;"	p	class:gnote::Search	access:public	signature:(std::vector<T> & split, const T & source)
gnote::Search::split_watching_quotes	src/search.hpp	/^void Search::split_watching_quotes(std::vector<T> & split,$/;"	f	class:gnote::Search	signature:(std::vector<T> & split, const T & source)
gnote::SearchNotesWidget	src/searchnoteswidget.hpp	/^class SearchNotesWidget$/;"	c	namespace:gnote	inherits:Gtk::HPaned,EmbeddableWidget,SearchableItem,HasActions
gnote::SearchNotesWidget::RecentNotesColumnTypes	src/searchnoteswidget.hpp	/^  class RecentNotesColumnTypes$/;"	c	class:gnote::SearchNotesWidget	inherits:Gtk::TreeModelColumnRecord	access:private
gnote::SearchNotesWidget::RecentNotesColumnTypes::RecentNotesColumnTypes	src/searchnoteswidget.hpp	/^    RecentNotesColumnTypes()$/;"	f	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public	signature:()
gnote::SearchNotesWidget::RecentNotesColumnTypes::change_date	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<std::string> change_date;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
gnote::SearchNotesWidget::RecentNotesColumnTypes::icon	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
gnote::SearchNotesWidget::RecentNotesColumnTypes::note	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Note::Ptr> note;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
gnote::SearchNotesWidget::RecentNotesColumnTypes::title	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<std::string> title;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
gnote::SearchNotesWidget::RecentSearchColumnTypes	src/searchnoteswidget.hpp	/^  class RecentSearchColumnTypes$/;"	c	class:gnote::SearchNotesWidget	inherits:Gtk::TreeModelColumnRecord	access:private
gnote::SearchNotesWidget::RecentSearchColumnTypes::RecentSearchColumnTypes	src/searchnoteswidget.hpp	/^    RecentSearchColumnTypes()$/;"	f	class:gnote::SearchNotesWidget::RecentSearchColumnTypes	access:public	signature:()
gnote::SearchNotesWidget::RecentSearchColumnTypes::text	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Glib::ustring> text;$/;"	m	class:gnote::SearchNotesWidget::RecentSearchColumnTypes	access:public
gnote::SearchNotesWidget::SearchNotesWidget	src/searchnoteswidget.cpp	/^SearchNotesWidget::SearchNotesWidget(NoteManager & m)$/;"	f	class:gnote::SearchNotesWidget	signature:(NoteManager & m)
gnote::SearchNotesWidget::SearchNotesWidget	src/searchnoteswidget.hpp	/^  SearchNotesWidget(NoteManager & m);$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:(NoteManager & m)
gnote::SearchNotesWidget::add_matches_column	src/searchnoteswidget.cpp	/^void SearchNotesWidget::add_matches_column()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::add_matches_column	src/searchnoteswidget.hpp	/^  void add_matches_column();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::add_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::add_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::add_note	src/searchnoteswidget.hpp	/^  void add_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::background	src/searchnoteswidget.cpp	/^void SearchNotesWidget::background()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::compare_dates	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_dates(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
gnote::SearchNotesWidget::compare_dates	src/searchnoteswidget.hpp	/^  int compare_dates(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
gnote::SearchNotesWidget::compare_search_hits	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_search_hits(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
gnote::SearchNotesWidget::compare_search_hits	src/searchnoteswidget.hpp	/^  int compare_search_hits(const Gtk::TreeIter & , const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter & , const Gtk::TreeIter &)
gnote::SearchNotesWidget::compare_titles	src/searchnoteswidget.cpp	/^int SearchNotesWidget::compare_titles(const Gtk::TreeIter & a, const Gtk::TreeIter & b)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
gnote::SearchNotesWidget::compare_titles	src/searchnoteswidget.hpp	/^  int compare_titles(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
gnote::SearchNotesWidget::delete_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::delete_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::delete_note	src/searchnoteswidget.hpp	/^  void delete_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::delete_selected_notes	src/searchnoteswidget.cpp	/^void SearchNotesWidget::delete_selected_notes()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::delete_selected_notes	src/searchnoteswidget.hpp	/^  void delete_selected_notes();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
gnote::SearchNotesWidget::filter_by_search	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_by_search(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::filter_by_search	src/searchnoteswidget.hpp	/^  bool filter_by_search(const Note::Ptr &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr &)
gnote::SearchNotesWidget::filter_by_tag	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_by_tag(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::filter_by_tag	src/searchnoteswidget.hpp	/^  bool filter_by_tag(const Note::Ptr &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr &)
gnote::SearchNotesWidget::filter_notes	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::filter_notes(const Gtk::TreeIter & iter)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreeIter & iter)
gnote::SearchNotesWidget::filter_notes	src/searchnoteswidget.hpp	/^  bool filter_notes(const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreeIter &)
gnote::SearchNotesWidget::foreground	src/searchnoteswidget.cpp	/^void SearchNotesWidget::foreground()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_name	src/searchnoteswidget.cpp	/^std::string SearchNotesWidget::get_name() const$/;"	f	class:gnote::SearchNotesWidget	signature:() const
gnote::SearchNotesWidget::get_note	src/searchnoteswidget.cpp	/^Note::Ptr SearchNotesWidget::get_note(const Gtk::TreePath & p)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath & p)
gnote::SearchNotesWidget::get_note	src/searchnoteswidget.hpp	/^  Note::Ptr get_note(const Gtk::TreePath & p);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath & p)
gnote::SearchNotesWidget::get_note_icon	src/searchnoteswidget.cpp	/^Glib::RefPtr<Gdk::Pixbuf> SearchNotesWidget::get_note_icon()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_note_icon	src/searchnoteswidget.hpp	/^  static Glib::RefPtr<Gdk::Pixbuf> get_note_icon();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::get_note_list_context_menu	src/searchnoteswidget.cpp	/^Gtk::Menu *SearchNotesWidget::get_note_list_context_menu()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_note_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *get_note_list_context_menu();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::get_notebook_list_context_menu	src/searchnoteswidget.cpp	/^Gtk::Menu *SearchNotesWidget::get_notebook_list_context_menu()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_notebook_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *get_notebook_list_context_menu();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::get_owning_window	src/searchnoteswidget.cpp	/^Gtk::Window *SearchNotesWidget::get_owning_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_owning_window	src/searchnoteswidget.hpp	/^  Gtk::Window *get_owning_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::get_selected_notebook	src/searchnoteswidget.cpp	/^notebooks::Notebook::Ptr SearchNotesWidget::get_selected_notebook() const$/;"	f	class:gnote::SearchNotesWidget	signature:() const
gnote::SearchNotesWidget::get_selected_notebook	src/searchnoteswidget.hpp	/^  notebooks::Notebook::Ptr get_selected_notebook() const;$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:() const
gnote::SearchNotesWidget::get_selected_notes	src/searchnoteswidget.cpp	/^Note::List SearchNotesWidget::get_selected_notes()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::get_selected_notes	src/searchnoteswidget.hpp	/^  Note::List get_selected_notes();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::get_widget_actions	src/searchnoteswidget.cpp	/^std::vector<Glib::RefPtr<Gtk::Action> > SearchNotesWidget::get_widget_actions()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::hint_size	src/searchnoteswidget.cpp	/^void SearchNotesWidget::hint_size(int & width, int & height)$/;"	f	class:gnote::SearchNotesWidget	signature:(int & width, int & height)
gnote::SearchNotesWidget::m_accel_group	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_clickX	src/searchnoteswidget.hpp	/^  int m_clickX, m_clickY;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_clickY	src/searchnoteswidget.hpp	/^  int m_clickX, m_clickY;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_column_types	src/searchnoteswidget.hpp	/^  RecentNotesColumnTypes m_column_types;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_current_matches	src/searchnoteswidget.hpp	/^  std::map<std::string, int> m_current_matches;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_delete_note_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_delete_note_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_delete_notebook_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_delete_notebook_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_find_combo_columns	src/searchnoteswidget.hpp	/^  RecentSearchColumnTypes m_find_combo_columns;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_initial_position_restored	src/searchnoteswidget.hpp	/^  bool m_initial_position_restored;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_manager	src/searchnoteswidget.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_matches_column	src/searchnoteswidget.hpp	/^  Gtk::TreeViewColumn *m_matches_column;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_matches_window	src/searchnoteswidget.hpp	/^  Gtk::ScrolledWindow m_matches_window;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_no_matches_box	src/searchnoteswidget.hpp	/^  Gtk::Grid *m_no_matches_box;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_note_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *m_note_list_context_menu;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_notebook_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *m_notebook_list_context_menu;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_notebooksTree	src/searchnoteswidget.hpp	/^  notebooks::NotebooksTreeView *m_notebooksTree;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_on_notebook_selection_changed_cid	src/searchnoteswidget.hpp	/^  sigc::connection m_on_notebook_selection_changed_cid;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_open_note_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_open_note_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_open_note_new_window_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_open_note_new_window_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_rename_notebook_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_rename_notebook_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_search_text	src/searchnoteswidget.hpp	/^  std::string m_search_text;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_selected_tags	src/searchnoteswidget.hpp	/^  std::set<Tag::Ptr>  m_selected_tags;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_sort_column_id	src/searchnoteswidget.hpp	/^  int m_sort_column_id;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_sort_column_order	src/searchnoteswidget.hpp	/^  Gtk::SortType m_sort_column_order;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_store	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_store;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_store_filter	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter> m_store_filter;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_store_sort	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort> m_store_sort;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_targets	src/searchnoteswidget.hpp	/^  std::vector<Gtk::TargetEntry> m_targets;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::m_tree	src/searchnoteswidget.hpp	/^  Gtk::TreeView *m_tree;$/;"	m	class:gnote::SearchNotesWidget	access:private
gnote::SearchNotesWidget::make_actions	src/searchnoteswidget.cpp	/^void SearchNotesWidget::make_actions()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::make_actions	src/searchnoteswidget.hpp	/^  void make_actions();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::make_notebooks_pane	src/searchnoteswidget.cpp	/^Gtk::Widget *SearchNotesWidget::make_notebooks_pane()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::make_notebooks_pane	src/searchnoteswidget.hpp	/^  Gtk::Widget *make_notebooks_pane();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::make_recent_tree	src/searchnoteswidget.cpp	/^void SearchNotesWidget::make_recent_tree()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::make_recent_tree	src/searchnoteswidget.hpp	/^  void make_recent_tree();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::matches_column_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::matches_column_data_func(Gtk::CellRenderer * cell,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * cell, const Gtk::TreeIter & iter)
gnote::SearchNotesWidget::matches_column_data_func	src/searchnoteswidget.hpp	/^  void matches_column_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
gnote::SearchNotesWidget::new_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::new_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::new_note	src/searchnoteswidget.hpp	/^  void new_note();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
gnote::SearchNotesWidget::no_matches_found_action	src/searchnoteswidget.cpp	/^void SearchNotesWidget::no_matches_found_action()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::no_matches_found_action	src/searchnoteswidget.hpp	/^  void no_matches_found_action();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::notebook_pixbuf_cell_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::notebook_pixbuf_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
gnote::SearchNotesWidget::notebook_pixbuf_cell_data_func	src/searchnoteswidget.hpp	/^  void notebook_pixbuf_cell_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
gnote::SearchNotesWidget::notebook_text_cell_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::notebook_text_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
gnote::SearchNotesWidget::notebook_text_cell_data_func	src/searchnoteswidget.hpp	/^  void notebook_text_cell_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
gnote::SearchNotesWidget::notes_widget	src/searchnoteswidget.hpp	/^  Gtk::Widget & notes_widget() const$/;"	f	class:gnote::SearchNotesWidget	access:public	signature:() const
gnote::SearchNotesWidget::on_delete_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_delete_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_delete_notebook	src/searchnoteswidget.hpp	/^  void on_delete_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_new_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_new_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_new_notebook	src/searchnoteswidget.hpp	/^  void on_new_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_note_added	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note)
gnote::SearchNotesWidget::on_note_added	src/searchnoteswidget.hpp	/^  void on_note_added(const NoteBase::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr & note)
gnote::SearchNotesWidget::on_note_added_to_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_added_to_notebook(const Note &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, const notebooks::Notebook::Ptr &)
gnote::SearchNotesWidget::on_note_added_to_notebook	src/searchnoteswidget.hpp	/^  void on_note_added_to_notebook(const Note & note, const notebooks::Notebook::Ptr & notebook);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note & note, const notebooks::Notebook::Ptr & notebook)
gnote::SearchNotesWidget::on_note_deleted	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note)
gnote::SearchNotesWidget::on_note_deleted	src/searchnoteswidget.hpp	/^  void on_note_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr & note)
gnote::SearchNotesWidget::on_note_pin_status_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_pin_status_changed(const Note &, bool)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, bool)
gnote::SearchNotesWidget::on_note_pin_status_changed	src/searchnoteswidget.hpp	/^  void on_note_pin_status_changed(const Note &, bool);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note &, bool)
gnote::SearchNotesWidget::on_note_removed_from_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_removed_from_notebook(const Note &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, const notebooks::Notebook::Ptr &)
gnote::SearchNotesWidget::on_note_removed_from_notebook	src/searchnoteswidget.hpp	/^  void on_note_removed_from_notebook(const Note & note, const notebooks::Notebook::Ptr & notebook);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note & note, const notebooks::Notebook::Ptr & notebook)
gnote::SearchNotesWidget::on_note_renamed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_renamed(const NoteBase::Ptr & note,$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note, const std::string &)
gnote::SearchNotesWidget::on_note_renamed	src/searchnoteswidget.hpp	/^  void on_note_renamed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr&, const std::string&)
gnote::SearchNotesWidget::on_note_saved	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_saved(const NoteBase::Ptr&)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr&)
gnote::SearchNotesWidget::on_note_saved	src/searchnoteswidget.hpp	/^  void on_note_saved(const NoteBase::Ptr&);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr&)
gnote::SearchNotesWidget::on_notebook_row_activated	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_row_activated(const Gtk::TreePath &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
gnote::SearchNotesWidget::on_notebook_row_activated	src/searchnoteswidget.hpp	/^  void on_notebook_row_activated(const Gtk::TreePath &, Gtk::TreeViewColumn*);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
gnote::SearchNotesWidget::on_notebook_row_edited	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_row_edited(const Glib::ustring& \/*tree_path*\/,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring& , const Glib::ustring& new_text)
gnote::SearchNotesWidget::on_notebook_row_edited	src/searchnoteswidget.hpp	/^  void on_notebook_row_edited(const Glib::ustring& path, const Glib::ustring& new_text);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring& path, const Glib::ustring& new_text)
gnote::SearchNotesWidget::on_notebook_selection_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_selection_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_notebook_selection_changed	src/searchnoteswidget.hpp	/^  void on_notebook_selection_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_notebooks_key_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_notebooks_key_pressed(GdkEventKey *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventKey *ev)
gnote::SearchNotesWidget::on_notebooks_key_pressed	src/searchnoteswidget.hpp	/^  bool on_notebooks_key_pressed(GdkEventKey *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventKey *)
gnote::SearchNotesWidget::on_notebooks_tree_button_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_notebooks_tree_button_pressed(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
gnote::SearchNotesWidget::on_notebooks_tree_button_pressed	src/searchnoteswidget.hpp	/^  bool on_notebooks_tree_button_pressed(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
gnote::SearchNotesWidget::on_open_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_open_note	src/searchnoteswidget.hpp	/^  void on_open_note();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_open_note_new_window	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_note_new_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_open_note_new_window	src/searchnoteswidget.hpp	/^  void on_open_note_new_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_open_notebook_template_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_notebook_template_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_open_notebook_template_note	src/searchnoteswidget.hpp	/^  void on_open_notebook_template_note();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_rename_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_rename_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_rename_notebook	src/searchnoteswidget.hpp	/^  void on_rename_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_row_activated	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_row_activated(const Gtk::TreePath & p, Gtk::TreeViewColumn*)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath & p, Gtk::TreeViewColumn*)
gnote::SearchNotesWidget::on_row_activated	src/searchnoteswidget.hpp	/^  void on_row_activated(const Gtk::TreePath &, Gtk::TreeViewColumn*);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
gnote::SearchNotesWidget::on_selection_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_selection_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_selection_changed	src/searchnoteswidget.hpp	/^  void on_selection_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_settings_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_settings_changed(const Glib::ustring & key)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring & key)
gnote::SearchNotesWidget::on_settings_changed	src/searchnoteswidget.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring & key)
gnote::SearchNotesWidget::on_sorting_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_sorting_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::on_sorting_changed	src/searchnoteswidget.hpp	/^  void on_sorting_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::on_treeview_button_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_button_pressed(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
gnote::SearchNotesWidget::on_treeview_button_pressed	src/searchnoteswidget.hpp	/^  bool on_treeview_button_pressed(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
gnote::SearchNotesWidget::on_treeview_button_released	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_button_released(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
gnote::SearchNotesWidget::on_treeview_button_released	src/searchnoteswidget.hpp	/^  bool on_treeview_button_released(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
gnote::SearchNotesWidget::on_treeview_drag_data_get	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_treeview_drag_data_get(const Glib::RefPtr<Gdk::DragContext> &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::RefPtr<Gdk::DragContext> &, Gtk::SelectionData &selection_data, guint, guint)
gnote::SearchNotesWidget::on_treeview_drag_data_get	src/searchnoteswidget.hpp	/^  void on_treeview_drag_data_get(const Glib::RefPtr<Gdk::DragContext> &,$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::RefPtr<Gdk::DragContext> &, Gtk::SelectionData &, guint, guint)
gnote::SearchNotesWidget::on_treeview_key_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_key_pressed(GdkEventKey * ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventKey * ev)
gnote::SearchNotesWidget::on_treeview_key_pressed	src/searchnoteswidget.hpp	/^  bool on_treeview_key_pressed(GdkEventKey *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventKey *)
gnote::SearchNotesWidget::on_treeview_motion_notify	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_motion_notify(GdkEventMotion *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventMotion *ev)
gnote::SearchNotesWidget::on_treeview_motion_notify	src/searchnoteswidget.hpp	/^  bool on_treeview_motion_notify(GdkEventMotion *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventMotion *)
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual void background() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual void foreground() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual void hint_size(int & width, int & height) override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual void perform_search(const std::string & search_text) override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::override	src/searchnoteswidget.hpp	/^  virtual void size_internals() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::parse_sorting_setting	src/searchnoteswidget.cpp	/^void SearchNotesWidget::parse_sorting_setting(const Glib::ustring & sorting)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring & sorting)
gnote::SearchNotesWidget::parse_sorting_setting	src/searchnoteswidget.hpp	/^  void parse_sorting_setting(const Glib::ustring & sorting);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring & sorting)
gnote::SearchNotesWidget::perform_search	src/searchnoteswidget.cpp	/^void SearchNotesWidget::perform_search()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::perform_search	src/searchnoteswidget.cpp	/^void SearchNotesWidget::perform_search(const std::string & search_text)$/;"	f	class:gnote::SearchNotesWidget	signature:(const std::string & search_text)
gnote::SearchNotesWidget::perform_search	src/searchnoteswidget.hpp	/^  void perform_search();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::popup_context_menu_at_location	src/searchnoteswidget.cpp	/^void SearchNotesWidget::popup_context_menu_at_location(Gtk::Menu *menu, int x, int y)$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::Menu *menu, int x, int y)
gnote::SearchNotesWidget::popup_context_menu_at_location	src/searchnoteswidget.hpp	/^  void popup_context_menu_at_location(Gtk::Menu *, int, int);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::Menu *, int, int)
gnote::SearchNotesWidget::position_context_menu	src/searchnoteswidget.cpp	/^void SearchNotesWidget::position_context_menu(int & x, int & y, bool & push_in)$/;"	f	class:gnote::SearchNotesWidget	signature:(int & x, int & y, bool & push_in)
gnote::SearchNotesWidget::position_context_menu	src/searchnoteswidget.hpp	/^  void position_context_menu(int & x, int & y, bool & push_in);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(int & x, int & y, bool & push_in)
gnote::SearchNotesWidget::remove_matches_column	src/searchnoteswidget.cpp	/^void SearchNotesWidget::remove_matches_column()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::remove_matches_column	src/searchnoteswidget.hpp	/^  void remove_matches_column();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::rename_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::rename_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::rename_note	src/searchnoteswidget.hpp	/^  void rename_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
gnote::SearchNotesWidget::restore_matches_window	src/searchnoteswidget.cpp	/^void SearchNotesWidget::restore_matches_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::restore_matches_window	src/searchnoteswidget.hpp	/^  void restore_matches_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::save_position	src/searchnoteswidget.cpp	/^void SearchNotesWidget::save_position()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::save_position	src/searchnoteswidget.hpp	/^  void save_position();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::select_all_notes_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::select_all_notes_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::select_all_notes_notebook	src/searchnoteswidget.hpp	/^  void select_all_notes_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
gnote::SearchNotesWidget::select_notes	src/searchnoteswidget.cpp	/^void SearchNotesWidget::select_notes(const Note::List & notes)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::List & notes)
gnote::SearchNotesWidget::select_notes	src/searchnoteswidget.hpp	/^  void select_notes(const Note::List &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::List &)
gnote::SearchNotesWidget::show_all_search_results	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::show_all_search_results()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::show_all_search_results	src/searchnoteswidget.hpp	/^  bool show_all_search_results();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::signal_actions_changed	src/searchnoteswidget.cpp	/^sigc::signal<void> & SearchNotesWidget::signal_actions_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::signal_open_note	src/searchnoteswidget.hpp	/^  sigc::signal<void, const Note::Ptr &> signal_open_note;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::signal_open_note_new_window	src/searchnoteswidget.hpp	/^  sigc::signal<void, const Note::Ptr &> signal_open_note_new_window;$/;"	m	class:gnote::SearchNotesWidget	access:public
gnote::SearchNotesWidget::size_internals	src/searchnoteswidget.cpp	/^void SearchNotesWidget::size_internals()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::update_results	src/searchnoteswidget.cpp	/^void SearchNotesWidget::update_results()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::update_results	src/searchnoteswidget.hpp	/^  void update_results();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
gnote::SearchNotesWidget::~SearchNotesWidget	src/searchnoteswidget.cpp	/^SearchNotesWidget::~SearchNotesWidget()$/;"	f	class:gnote::SearchNotesWidget	signature:()
gnote::SearchNotesWidget::~SearchNotesWidget	src/searchnoteswidget.hpp	/^  virtual ~SearchNotesWidget();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
gnote::SearchableItem	src/mainwindowembeds.hpp	/^class SearchableItem$/;"	c	namespace:gnote
gnote::SearchableItem::goto_next_result	src/mainwindowembeds.cpp	/^bool SearchableItem::goto_next_result()$/;"	f	class:gnote::SearchableItem	signature:()
gnote::SearchableItem::goto_next_result	src/mainwindowembeds.hpp	/^  virtual bool goto_next_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
gnote::SearchableItem::goto_previous_result	src/mainwindowembeds.cpp	/^bool SearchableItem::goto_previous_result()$/;"	f	class:gnote::SearchableItem	signature:()
gnote::SearchableItem::goto_previous_result	src/mainwindowembeds.hpp	/^  virtual bool goto_previous_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
gnote::SearchableItem::perform_search	src/mainwindowembeds.hpp	/^  virtual void perform_search(const std::string & search_text) = 0;$/;"	p	class:gnote::SearchableItem	access:public	signature:(const std::string & search_text)
gnote::SearchableItem::supports_goto_result	src/mainwindowembeds.cpp	/^bool SearchableItem::supports_goto_result()$/;"	f	class:gnote::SearchableItem	signature:()
gnote::SearchableItem::supports_goto_result	src/mainwindowembeds.hpp	/^  virtual bool supports_goto_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
gnote::SplitterAction	src/undo.hpp	/^class SplitterAction$/;"	c	namespace:gnote	inherits:EditAction
gnote::SplitterAction::SplitterAction	src/undo.cpp	/^  SplitterAction::SplitterAction()$/;"	f	class:gnote::SplitterAction	signature:()
gnote::SplitterAction::SplitterAction	src/undo.hpp	/^  SplitterAction();$/;"	p	class:gnote::SplitterAction	access:protected	signature:()
gnote::SplitterAction::TagData	src/undo.hpp	/^  struct TagData {$/;"	s	class:gnote::SplitterAction	access:public
gnote::SplitterAction::TagData::end	src/undo.hpp	/^    int end;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
gnote::SplitterAction::TagData::start	src/undo.hpp	/^    int start;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
gnote::SplitterAction::TagData::tag	src/undo.hpp	/^    Glib::RefPtr<Gtk::TextTag> tag;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
gnote::SplitterAction::add_split_tag	src/undo.cpp	/^  void SplitterAction::add_split_tag(const Gtk::TextIter & start, $/;"	f	class:gnote::SplitterAction	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end, const Glib::RefPtr<Gtk::TextTag> tag)
gnote::SplitterAction::add_split_tag	src/undo.hpp	/^  void add_split_tag(const Gtk::TextIter &, const Gtk::TextIter &, $/;"	p	class:gnote::SplitterAction	access:public	signature:(const Gtk::TextIter &, const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextTag> tag)
gnote::SplitterAction::apply_split_tag	src/undo.cpp	/^  void SplitterAction::apply_split_tag(Gtk::TextBuffer * buffer)$/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextBuffer * buffer)
gnote::SplitterAction::apply_split_tag	src/undo.hpp	/^  void apply_split_tag(Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:protected	signature:(Gtk::TextBuffer *)
gnote::SplitterAction::get_chop	src/undo.hpp	/^  const utils::TextRange & get_chop() const$/;"	f	class:gnote::SplitterAction	access:public	signature:() const
gnote::SplitterAction::get_split_offset	src/undo.cpp	/^  int SplitterAction::get_split_offset() const$/;"	f	class:gnote::SplitterAction	signature:() const
gnote::SplitterAction::get_split_offset	src/undo.hpp	/^  int get_split_offset() const;$/;"	p	class:gnote::SplitterAction	access:protected	signature:() const
gnote::SplitterAction::get_split_tags	src/undo.hpp	/^  const std::list<TagData> & get_split_tags() const$/;"	f	class:gnote::SplitterAction	access:public	signature:() const
gnote::SplitterAction::m_chop	src/undo.hpp	/^  utils::TextRange   m_chop;$/;"	m	class:gnote::SplitterAction	access:protected
gnote::SplitterAction::m_splitTags	src/undo.hpp	/^  std::list<TagData> m_splitTags;$/;"	m	class:gnote::SplitterAction	access:protected
gnote::SplitterAction::remove_split_tags	src/undo.cpp	/^  void SplitterAction::remove_split_tags(Gtk::TextBuffer *buffer)$/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextBuffer *buffer)
gnote::SplitterAction::remove_split_tags	src/undo.hpp	/^  void remove_split_tags(Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:protected	signature:(Gtk::TextBuffer *)
gnote::SplitterAction::split	src/undo.cpp	/^  void SplitterAction::split(Gtk::TextIter iter, $/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextIter iter, Gtk::TextBuffer * buffer)
gnote::SplitterAction::split	src/undo.hpp	/^  void split(Gtk::TextIter iter, Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:public	signature:(Gtk::TextIter iter, Gtk::TextBuffer *)
gnote::TABLE_OF_CONTENTS_ORDER	src/iactionmanager.hpp	/^  TABLE_OF_CONTENTS_ORDER = 600,$/;"	e	enum:gnote::NoteActionOrder
gnote::Tag	src/tag.hpp	/^  class Tag $/;"	c	namespace:gnote
gnote::Tag::NoteMap	src/tag.hpp	/^    typedef std::map<std::string, NoteBase*> NoteMap;$/;"	t	class:gnote::Tag	access:private
gnote::Tag::Ptr	src/tag.hpp	/^    typedef shared_ptr<Tag> Ptr;$/;"	t	class:gnote::Tag	access:public
gnote::Tag::SYSTEM_TAG_PREFIX	src/tag.cpp	/^  const char * Tag::SYSTEM_TAG_PREFIX = "system:";$/;"	m	class:gnote::Tag	file:
gnote::Tag::SYSTEM_TAG_PREFIX	src/tag.hpp	/^    static const char * SYSTEM_TAG_PREFIX;$/;"	m	class:gnote::Tag	access:public
gnote::Tag::Tag	src/tag.cpp	/^  Tag::Tag(const std::string & _name)$/;"	f	class:gnote::Tag	signature:(const std::string & _name)
gnote::Tag::Tag	src/tag.hpp	/^    Tag(const std::string & name);$/;"	p	class:gnote::Tag	access:public	signature:(const std::string & name)
gnote::Tag::add_note	src/tag.cpp	/^  void Tag::add_note(NoteBase & note)$/;"	f	class:gnote::Tag	signature:(NoteBase & note)
gnote::Tag::add_note	src/tag.hpp	/^    void add_note(NoteBase & );$/;"	p	class:gnote::Tag	access:public	signature:(NoteBase & )
gnote::Tag::get_notes	src/tag.cpp	/^  void Tag::get_notes(std::list<NoteBase*> & l) const$/;"	f	class:gnote::Tag	signature:(std::list<NoteBase*> & l) const
gnote::Tag::get_notes	src/tag.hpp	/^    void get_notes(std::list<NoteBase*> &) const;$/;"	p	class:gnote::Tag	access:public	signature:(std::list<NoteBase*> &) const
gnote::Tag::is_property	src/tag.hpp	/^    bool is_property() const$/;"	f	class:gnote::Tag	access:public	signature:() const
gnote::Tag::is_system	src/tag.hpp	/^    bool is_system() const$/;"	f	class:gnote::Tag	access:public	signature:() const
gnote::Tag::m_isproperty	src/tag.hpp	/^    bool        m_isproperty;$/;"	m	class:gnote::Tag	access:private
gnote::Tag::m_issystem	src/tag.hpp	/^    bool        m_issystem;$/;"	m	class:gnote::Tag	access:private
gnote::Tag::m_name	src/tag.hpp	/^    std::string m_name;$/;"	m	class:gnote::Tag	access:private
gnote::Tag::m_normalized_name	src/tag.hpp	/^    std::string m_normalized_name;$/;"	m	class:gnote::Tag	access:private
gnote::Tag::m_notes	src/tag.hpp	/^    NoteMap m_notes;$/;"	m	class:gnote::Tag	access:private
gnote::Tag::name	src/tag.hpp	/^    const std::string & name() const$/;"	f	class:gnote::Tag	access:public	signature:() const
gnote::Tag::normalized_name	src/tag.hpp	/^    const std::string & normalized_name() const$/;"	f	class:gnote::Tag	access:public	signature:() const
gnote::Tag::popularity	src/tag.cpp	/^  int Tag::popularity() const$/;"	f	class:gnote::Tag	signature:() const
gnote::Tag::popularity	src/tag.hpp	/^    int popularity() const;$/;"	p	class:gnote::Tag	access:public	signature:() const
gnote::Tag::remove_note	src/tag.cpp	/^  void Tag::remove_note(const NoteBase & note)$/;"	f	class:gnote::Tag	signature:(const NoteBase & note)
gnote::Tag::remove_note	src/tag.hpp	/^    void remove_note(const NoteBase & );$/;"	p	class:gnote::Tag	access:public	signature:(const NoteBase & )
gnote::Tag::set_name	src/tag.cpp	/^  void Tag::set_name(const std::string & value)$/;"	f	class:gnote::Tag	signature:(const std::string & value)
gnote::Tag::set_name	src/tag.hpp	/^    void set_name(const std::string & );$/;"	p	class:gnote::Tag	access:public	signature:(const std::string & )
gnote::TagApplyAction	src/undo.hpp	/^class TagApplyAction$/;"	c	namespace:gnote	inherits:EditAction
gnote::TagApplyAction::TagApplyAction	src/undo.cpp	/^  TagApplyAction::TagApplyAction(const Glib::RefPtr<Gtk::TextTag> & tag, $/;"	f	class:gnote::TagApplyAction	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::TagApplyAction::TagApplyAction	src/undo.hpp	/^  TagApplyAction(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::TagApplyAction	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::TagApplyAction::can_merge	src/undo.cpp	/^  bool TagApplyAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::TagApplyAction	signature:(const EditAction * ) const
gnote::TagApplyAction::destroy	src/undo.cpp	/^  void TagApplyAction::destroy ()$/;"	f	class:gnote::TagApplyAction	signature:()
gnote::TagApplyAction::m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::TagApplyAction	access:private
gnote::TagApplyAction::m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::TagApplyAction	access:private
gnote::TagApplyAction::m_tag	src/undo.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:gnote::TagApplyAction	access:private
gnote::TagApplyAction::merge	src/undo.cpp	/^  void TagApplyAction::merge (EditAction * )$/;"	f	class:gnote::TagApplyAction	signature:(EditAction * )
gnote::TagApplyAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::TagApplyAction	access:public
gnote::TagApplyAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::TagApplyAction	access:public
gnote::TagApplyAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::TagApplyAction	access:public
gnote::TagApplyAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagApplyAction	access:public
gnote::TagApplyAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagApplyAction	access:public
gnote::TagApplyAction::redo	src/undo.cpp	/^  void TagApplyAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagApplyAction	signature:(Gtk::TextBuffer * buffer)
gnote::TagApplyAction::undo	src/undo.cpp	/^  void TagApplyAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagApplyAction	signature:(Gtk::TextBuffer * buffer)
gnote::TagManager	src/tagmanager.hpp	/^class TagManager$/;"	c	namespace:gnote	inherits:ITagManager
gnote::TagManager::ColumnRecord	src/tagmanager.hpp	/^  class ColumnRecord$/;"	c	class:gnote::TagManager	inherits:Gtk::TreeModelColumnRecord	access:private
gnote::TagManager::ColumnRecord::ColumnRecord	src/tagmanager.hpp	/^    ColumnRecord()$/;"	f	class:gnote::TagManager::ColumnRecord	access:public	signature:()
gnote::TagManager::ColumnRecord::m_tag	src/tagmanager.hpp	/^    Gtk::TreeModelColumn<Tag::Ptr> m_tag;$/;"	m	class:gnote::TagManager::ColumnRecord	access:public
gnote::TagManager::InternalMap	src/tagmanager.hpp	/^  typedef std::map<std::string, Tag::Ptr> InternalMap;$/;"	t	class:gnote::TagManager	access:private
gnote::TagManager::TagManager	src/tagmanager.cpp	/^  TagManager::TagManager()$/;"	f	class:gnote::TagManager	signature:()
gnote::TagManager::TagManager	src/tagmanager.hpp	/^  TagManager();$/;"	p	class:gnote::TagManager	access:public	signature:()
gnote::TagManager::TagMap	src/tagmanager.hpp	/^  typedef std::map<std::string, Gtk::TreeIter> TagMap;$/;"	t	class:gnote::TagManager	access:private
gnote::TagManager::all_tags	src/tagmanager.cpp	/^  void TagManager::all_tags(std::list<Tag::Ptr> & tags) const$/;"	f	class:gnote::TagManager	signature:(std::list<Tag::Ptr> & tags) const
gnote::TagManager::get_or_create_system_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_or_create_system_tag (const std::string & tag_name)$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name)
gnote::TagManager::get_or_create_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_or_create_tag(const std::string & tag_name)$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name)
gnote::TagManager::get_system_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_system_tag (const std::string & tag_name) const$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name) const
gnote::TagManager::get_tag	src/tagmanager.cpp	/^  Tag::Ptr TagManager::get_tag (const std::string & tag_name) const$/;"	f	class:gnote::TagManager	signature:(const std::string & tag_name) const
gnote::TagManager::get_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_tags() const$/;"	f	class:gnote::TagManager	access:public	signature:() const
gnote::TagManager::m_columns	src/tagmanager.hpp	/^  ColumnRecord                     m_columns;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_internal_tags	src/tagmanager.hpp	/^  InternalMap                      m_internal_tags;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_locker	src/tagmanager.hpp	/^  mutable Glib::Mutex              m_locker;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_signal_tag_added	src/tagmanager.hpp	/^  sigc::signal<void, Tag::Ptr, const Gtk::TreeIter &> m_signal_tag_added;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_signal_tag_removed	src/tagmanager.hpp	/^  sigc::signal<void, const std::string &> m_signal_tag_removed;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_sorted_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort> m_sorted_tags;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_tag_map	src/tagmanager.hpp	/^  TagMap                           m_tag_map;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::m_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::ListStore>     m_tags;$/;"	m	class:gnote::TagManager	access:private
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_or_create_system_tag(const std::string & name) override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_or_create_tag(const std::string &) override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_system_tag(const std::string & tag_name) const override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_tag(const std::string & tag_name) const override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual void all_tags(std::list<Tag::Ptr> &) const override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::override	src/tagmanager.hpp	/^  virtual void remove_tag(const Tag::Ptr & tag) override;$/;"	m	class:gnote::TagManager	access:public
gnote::TagManager::remove_tag	src/tagmanager.cpp	/^  void TagManager::remove_tag (const Tag::Ptr & tag)$/;"	f	class:gnote::TagManager	signature:(const Tag::Ptr & tag)
gnote::TagRemoveAction	src/undo.hpp	/^class TagRemoveAction$/;"	c	namespace:gnote	inherits:EditAction
gnote::TagRemoveAction::TagRemoveAction	src/undo.cpp	/^  TagRemoveAction::TagRemoveAction(const Glib::RefPtr<Gtk::TextTag> & tag, $/;"	f	class:gnote::TagRemoveAction	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::TagRemoveAction::TagRemoveAction	src/undo.hpp	/^  TagRemoveAction(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end);$/;"	p	class:gnote::TagRemoveAction	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::TagRemoveAction::can_merge	src/undo.cpp	/^  bool TagRemoveAction::can_merge (const EditAction * ) const$/;"	f	class:gnote::TagRemoveAction	signature:(const EditAction * ) const
gnote::TagRemoveAction::destroy	src/undo.cpp	/^  void TagRemoveAction::destroy ()$/;"	f	class:gnote::TagRemoveAction	signature:()
gnote::TagRemoveAction::m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::TagRemoveAction	access:private
gnote::TagRemoveAction::m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::TagRemoveAction	access:private
gnote::TagRemoveAction::m_tag	src/undo.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:gnote::TagRemoveAction	access:private
gnote::TagRemoveAction::merge	src/undo.cpp	/^  void TagRemoveAction::merge (EditAction * )$/;"	f	class:gnote::TagRemoveAction	signature:(EditAction * )
gnote::TagRemoveAction::override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::TagRemoveAction	access:public
gnote::TagRemoveAction::override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::TagRemoveAction	access:public
gnote::TagRemoveAction::override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::TagRemoveAction	access:public
gnote::TagRemoveAction::override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagRemoveAction	access:public
gnote::TagRemoveAction::override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagRemoveAction	access:public
gnote::TagRemoveAction::redo	src/undo.cpp	/^  void TagRemoveAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagRemoveAction	signature:(Gtk::TextBuffer * buffer)
gnote::TagRemoveAction::undo	src/undo.cpp	/^  void TagRemoveAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagRemoveAction	signature:(Gtk::TextBuffer * buffer)
gnote::TagSaveType	src/notetag.hpp	/^enum TagSaveType {$/;"	g	namespace:gnote
gnote::TagStart	src/notebuffer.cpp	/^  struct TagStart $/;"	s	namespace:gnote	file:
gnote::TagStart::TagStart	src/notebuffer.cpp	/^    TagStart()$/;"	f	struct:gnote::TagStart	access:public	signature:()
gnote::TagStart::start	src/notebuffer.cpp	/^    int start;$/;"	m	struct:gnote::TagStart	file:	access:public
gnote::TagStart::tag	src/notebuffer.cpp	/^    Glib::RefPtr<Gtk::TextTag> tag;$/;"	m	struct:gnote::TagStart	file:	access:public
gnote::Tray	src/tray.hpp	/^class Tray$/;"	c	namespace:gnote
gnote::Tray::Ptr	src/tray.hpp	/^  typedef shared_ptr<Tray> Ptr;$/;"	t	class:gnote::Tray	access:public
gnote::Tray::Tray	src/tray.cpp	/^  Tray::Tray(NoteManager & manager, IGnoteTray & trayicon)$/;"	f	class:gnote::Tray	signature:(NoteManager & manager, IGnoteTray & trayicon)
gnote::Tray::Tray	src/tray.cpp	/^  Tray::Tray(NoteManager & manager, IGnoteTray & trayicon, IKeybinder & keybinder)$/;"	f	class:gnote::Tray	signature:(NoteManager & manager, IGnoteTray & trayicon, IKeybinder & keybinder)
gnote::Tray::Tray	src/tray.hpp	/^  Tray(NoteManager &, IGnoteTray &);$/;"	p	class:gnote::Tray	access:public	signature:(NoteManager &, IGnoteTray &)
gnote::Tray::Tray	src/tray.hpp	/^  Tray(NoteManager &, IGnoteTray &, IKeybinder &);$/;"	p	class:gnote::Tray	access:public	signature:(NoteManager &, IGnoteTray &, IKeybinder &)
gnote::Tray::add_recently_changed_notes	src/tray.cpp	/^  void Tray::add_recently_changed_notes()$/;"	f	class:gnote::Tray	signature:()
gnote::Tray::add_recently_changed_notes	src/tray.hpp	/^  void add_recently_changed_notes();$/;"	p	class:gnote::Tray	access:public	signature:()
gnote::Tray::m_keybinder	src/tray.hpp	/^  IKeybinder & m_keybinder;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_manager	src/tray.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_menu_added	src/tray.hpp	/^  bool       m_menu_added;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_new_note_item	src/tray.hpp	/^  Gtk::ImageMenuItem *m_new_note_item;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_search_notes_item	src/tray.hpp	/^  Gtk::ImageMenuItem *m_search_notes_item;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_tray_menu	src/tray.hpp	/^  Gtk::Menu *m_tray_menu;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::m_trayicon	src/tray.hpp	/^  IGnoteTray  & m_trayicon;$/;"	m	class:gnote::Tray	access:private
gnote::Tray::make_tray_notes_menu	src/tray.cpp	/^  Gtk::Menu * Tray::make_tray_notes_menu()$/;"	f	class:gnote::Tray	signature:()
gnote::Tray::make_tray_notes_menu	src/tray.hpp	/^  Gtk::Menu * make_tray_notes_menu();$/;"	p	class:gnote::Tray	access:public	signature:()
gnote::Tray::on_new_note_activate	src/tray.cpp	/^  void Tray::on_new_note_activate()$/;"	f	class:gnote::Tray	signature:()
gnote::Tray::on_new_note_activate	src/tray.hpp	/^  void on_new_note_activate();$/;"	p	class:gnote::Tray	access:private	signature:()
gnote::Tray::on_search_notes_activate	src/tray.cpp	/^  void Tray::on_search_notes_activate()$/;"	f	class:gnote::Tray	signature:()
gnote::Tray::on_search_notes_activate	src/tray.hpp	/^  void on_search_notes_activate();$/;"	p	class:gnote::Tray	access:private	signature:()
gnote::Tray::tray_menu	src/tray.hpp	/^  Gtk::Menu * tray_menu() $/;"	f	class:gnote::Tray	access:public	signature:()
gnote::Tray::update_tray_menu	src/tray.cpp	/^  void Tray::update_tray_menu(Gtk::Widget * parent)$/;"	f	class:gnote::Tray	signature:(Gtk::Widget * parent)
gnote::Tray::update_tray_menu	src/tray.hpp	/^  void update_tray_menu(Gtk::Widget * parent);$/;"	p	class:gnote::Tray	access:public	signature:(Gtk::Widget * parent)
gnote::TrayIcon	src/tray.hpp	/^class TrayIcon$/;"	c	namespace:gnote	inherits:Gtk::StatusIcon,IGnoteTray
gnote::TrayIcon::TrayIcon	src/tray.cpp	/^  TrayIcon::TrayIcon(IKeybinder & keybinder, NoteManager & manager)$/;"	f	class:gnote::TrayIcon	signature:(IKeybinder & keybinder, NoteManager & manager)
gnote::TrayIcon::TrayIcon	src/tray.hpp	/^  TrayIcon(IKeybinder & keybinder, NoteManager & manager);$/;"	p	class:gnote::TrayIcon	access:public	signature:(IKeybinder & keybinder, NoteManager & manager)
gnote::TrayIcon::get_right_click_menu	src/tray.cpp	/^  Gtk::Menu * TrayIcon::get_right_click_menu()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::get_right_click_menu	src/tray.hpp	/^  Gtk::Menu * get_right_click_menu();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::m_context_menu	src/tray.hpp	/^  Gtk::Menu               *m_context_menu;$/;"	m	class:gnote::TrayIcon	access:private
gnote::TrayIcon::m_keybinder	src/tray.hpp	/^  PrefsKeybinder          *m_keybinder;$/;"	m	class:gnote::TrayIcon	access:private
gnote::TrayIcon::m_tray	src/tray.hpp	/^  Tray::Ptr                m_tray;$/;"	m	class:gnote::TrayIcon	access:private
gnote::TrayIcon::menu_opens_upward	src/tray.cpp	/^  bool TrayIcon::menu_opens_upward()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::menu_opens_upward	src/tray.hpp	/^  bool menu_opens_upward();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::on_activate	src/tray.cpp	/^  void TrayIcon::on_activate()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::on_activate	src/tray.hpp	/^  void on_activate();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::on_exit	src/tray.cpp	/^  void TrayIcon::on_exit()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::on_exit	src/tray.hpp	/^  void on_exit();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::on_popup_menu	src/tray.cpp	/^  void TrayIcon::on_popup_menu(guint button, guint32 activate_time)$/;"	f	class:gnote::TrayIcon	signature:(guint button, guint32 activate_time)
gnote::TrayIcon::on_popup_menu	src/tray.hpp	/^  void on_popup_menu(guint button, guint32 activate_time);$/;"	p	class:gnote::TrayIcon	access:public	signature:(guint button, guint32 activate_time)
gnote::TrayIcon::on_size_changed	src/tray.cpp	/^  bool TrayIcon::on_size_changed(int size)$/;"	f	class:gnote::TrayIcon	signature:(int size)
gnote::TrayIcon::override	src/tray.hpp	/^  virtual bool on_size_changed(int size) override;$/;"	m	class:gnote::TrayIcon	access:protected
gnote::TrayIcon::quit	src/tray.cpp	/^  void TrayIcon::quit()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::quit	src/tray.hpp	/^  void quit();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::show_about	src/tray.cpp	/^  void TrayIcon::show_about()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::show_about	src/tray.hpp	/^  void show_about();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::show_help_contents	src/tray.cpp	/^  void TrayIcon::show_help_contents()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::show_help_contents	src/tray.hpp	/^  void show_help_contents();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::show_menu	src/tray.cpp	/^  void TrayIcon::show_menu(bool select_first_item)$/;"	f	class:gnote::TrayIcon	signature:(bool select_first_item)
gnote::TrayIcon::show_menu	src/tray.hpp	/^  void show_menu(bool select_first_item);$/;"	p	class:gnote::TrayIcon	access:public	signature:(bool select_first_item)
gnote::TrayIcon::show_preferences	src/tray.cpp	/^  void TrayIcon::show_preferences()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::show_preferences	src/tray.hpp	/^  void show_preferences();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrayIcon::tray	src/tray.hpp	/^  Tray::Ptr tray() const$/;"	f	class:gnote::TrayIcon	access:public	signature:() const
gnote::TrayIcon::~TrayIcon	src/tray.cpp	/^  TrayIcon::~TrayIcon()$/;"	f	class:gnote::TrayIcon	signature:()
gnote::TrayIcon::~TrayIcon	src/tray.hpp	/^  ~TrayIcon();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
gnote::TrieController	src/notemanagerbase.cpp	/^class TrieController$/;"	c	namespace:gnote	file:
gnote::TrieController::TrieController	src/notemanagerbase.cpp	/^  TrieController(NoteManagerBase &);$/;"	p	class:gnote::TrieController	file:	access:public	signature:(NoteManagerBase &)
gnote::TrieController::TrieController	src/notemanagerbase.cpp	/^TrieController::TrieController(NoteManagerBase & manager)$/;"	f	class:gnote::TrieController	signature:(NoteManagerBase & manager)
gnote::TrieController::add_note	src/notemanagerbase.cpp	/^  void add_note(const NoteBase::Ptr & note);$/;"	p	class:gnote::TrieController	file:	access:public	signature:(const NoteBase::Ptr & note)
gnote::TrieController::add_note	src/notemanagerbase.cpp	/^void TrieController::add_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr & note)
gnote::TrieController::m_manager	src/notemanagerbase.cpp	/^  NoteManagerBase & m_manager;$/;"	m	class:gnote::TrieController	file:	access:private
gnote::TrieController::m_title_trie	src/notemanagerbase.cpp	/^  TrieTree<NoteBase::WeakPtr> *m_title_trie;$/;"	m	class:gnote::TrieController	file:	access:private
gnote::TrieController::on_note_added	src/notemanagerbase.cpp	/^  void on_note_added(const NoteBase::Ptr & added);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & added)
gnote::TrieController::on_note_added	src/notemanagerbase.cpp	/^void TrieController::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr & note)
gnote::TrieController::on_note_deleted	src/notemanagerbase.cpp	/^  void on_note_deleted (const NoteBase::Ptr & deleted);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & deleted)
gnote::TrieController::on_note_deleted	src/notemanagerbase.cpp	/^void TrieController::on_note_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr &)
gnote::TrieController::on_note_renamed	src/notemanagerbase.cpp	/^  void on_note_renamed(const NoteBase::Ptr & renamed, const Glib::ustring & old_title);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & renamed, const Glib::ustring & old_title)
gnote::TrieController::on_note_renamed	src/notemanagerbase.cpp	/^void TrieController::on_note_renamed(const NoteBase::Ptr &, const Glib::ustring &)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr &, const Glib::ustring &)
gnote::TrieController::title_trie	src/notemanagerbase.cpp	/^  TrieTree<NoteBase::WeakPtr> *title_trie() const$/;"	f	class:gnote::TrieController	access:public	signature:() const
gnote::TrieController::update	src/notemanagerbase.cpp	/^  void update();$/;"	p	class:gnote::TrieController	file:	access:public	signature:()
gnote::TrieController::update	src/notemanagerbase.cpp	/^void TrieController::update()$/;"	f	class:gnote::TrieController	signature:()
gnote::TrieController::~TrieController	src/notemanagerbase.cpp	/^  ~TrieController();$/;"	p	class:gnote::TrieController	file:	access:public	signature:()
gnote::TrieController::~TrieController	src/notemanagerbase.cpp	/^TrieController::~TrieController()$/;"	f	class:gnote::TrieController	signature:()
gnote::TrieHit	src/triehit.hpp	/^class TrieHit$/;"	c	namespace:gnote
gnote::TrieHit::List	src/triehit.hpp	/^  typedef std::list<Ptr> List;$/;"	t	class:gnote::TrieHit	access:public
gnote::TrieHit::ListPtr	src/triehit.hpp	/^  typedef shared_ptr<List> ListPtr;$/;"	t	class:gnote::TrieHit	access:public
gnote::TrieHit::Ptr	src/triehit.hpp	/^  typedef shared_ptr<TrieHit> Ptr;$/;"	t	class:gnote::TrieHit	access:public
gnote::TrieHit::TrieHit	src/triehit.hpp	/^  TrieHit(int s, int e, const Glib::ustring & k, const value_t & v)$/;"	f	class:gnote::TrieHit	access:public	signature:(int s, int e, const Glib::ustring & k, const value_t & v)
gnote::TrieHit::end	src/triehit.hpp	/^  int end() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
gnote::TrieHit::key	src/triehit.hpp	/^  Glib::ustring key() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
gnote::TrieHit::m_end	src/triehit.hpp	/^  int           m_end;$/;"	m	class:gnote::TrieHit	access:private
gnote::TrieHit::m_key	src/triehit.hpp	/^  Glib::ustring m_key;$/;"	m	class:gnote::TrieHit	access:private
gnote::TrieHit::m_start	src/triehit.hpp	/^  int           m_start;$/;"	m	class:gnote::TrieHit	access:private
gnote::TrieHit::m_value	src/triehit.hpp	/^  value_t       m_value;$/;"	m	class:gnote::TrieHit	access:private
gnote::TrieHit::start	src/triehit.hpp	/^  int start() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
gnote::TrieHit::value	src/triehit.hpp	/^  value_t value() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
gnote::TrieTree	src/trie.hpp	/^class TrieTree$/;"	c	namespace:gnote
gnote::TrieTree::TrieState	src/trie.hpp	/^  class TrieState$/;"	c	class:gnote::TrieTree	access:private
gnote::TrieTree::TrieState::TrieState	src/trie.hpp	/^    TrieState(gunichar v, int d, const TrieStatePtr & s)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(gunichar v, int d, const TrieStatePtr & s)
gnote::TrieTree::TrieState::depth	src/trie.hpp	/^    int depth() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
gnote::TrieTree::TrieState::fail_state	src/trie.hpp	/^    TrieStatePtr fail_state()$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:()
gnote::TrieTree::TrieState::fail_state	src/trie.hpp	/^    void fail_state(const TrieStatePtr & s)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(const TrieStatePtr & s)
gnote::TrieTree::TrieState::m_depth	src/trie.hpp	/^    int m_depth;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::m_fail_state	src/trie.hpp	/^    TrieStatePtr m_fail_state;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::m_payload	src/trie.hpp	/^    value_t m_payload;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::m_payload_present	src/trie.hpp	/^    bool m_payload_present;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::m_transitions	src/trie.hpp	/^    TrieStateList m_transitions;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::m_value	src/trie.hpp	/^    gunichar m_value;$/;"	m	class:gnote::TrieTree::TrieState	access:private
gnote::TrieTree::TrieState::payload	src/trie.hpp	/^    value_t payload() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
gnote::TrieTree::TrieState::payload	src/trie.hpp	/^    void payload(const value_t & p)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(const value_t & p)
gnote::TrieTree::TrieState::payload_present	src/trie.hpp	/^    bool payload_present() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
gnote::TrieTree::TrieState::payload_present	src/trie.hpp	/^    void payload_present(bool pp)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(bool pp)
gnote::TrieTree::TrieState::transitions	src/trie.hpp	/^    TrieStateList & transitions()$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:()
gnote::TrieTree::TrieState::value	src/trie.hpp	/^    gunichar value() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
gnote::TrieTree::TrieStateList	src/trie.hpp	/^  typedef std::list<TrieStatePtr> TrieStateList;$/;"	t	class:gnote::TrieTree	access:private
gnote::TrieTree::TrieStatePtr	src/trie.hpp	/^  typedef shared_ptr<TrieState> TrieStatePtr;$/;"	t	class:gnote::TrieTree	access:private
gnote::TrieTree::TrieStateQueue	src/trie.hpp	/^  typedef std::queue<TrieStatePtr> TrieStateQueue;$/;"	t	class:gnote::TrieTree	access:private
gnote::TrieTree::TrieTree	src/trie.hpp	/^  TrieTree(bool case_sensitive)$/;"	f	class:gnote::TrieTree	access:public	signature:(bool case_sensitive)
gnote::TrieTree::add_keyword	src/trie.hpp	/^  void add_keyword(const Glib::ustring & keyword, const value_t & pattern_id)$/;"	f	class:gnote::TrieTree	access:public	signature:(const Glib::ustring & keyword, const value_t & pattern_id)
gnote::TrieTree::compute_failure_graph	src/trie.hpp	/^  void compute_failure_graph()$/;"	f	class:gnote::TrieTree	access:public	signature:()
gnote::TrieTree::find_matches	src/trie.hpp	/^  typename TrieHit<value_t>::ListPtr find_matches (const Glib::ustring & haystack)$/;"	f	class:gnote::TrieTree	access:public	signature:(const Glib::ustring & haystack)
gnote::TrieTree::find_state_transition	src/trie.hpp	/^  static TrieStatePtr find_state_transition(const TrieStatePtr & state,$/;"	f	class:gnote::TrieTree	access:public	signature:(const TrieStatePtr & state, gunichar value)
gnote::TrieTree::m_case_sensitive	src/trie.hpp	/^  const bool m_case_sensitive;$/;"	m	class:gnote::TrieTree	access:private
gnote::TrieTree::m_max_length	src/trie.hpp	/^  size_t m_max_length;$/;"	m	class:gnote::TrieTree	access:private
gnote::TrieTree::m_root	src/trie.hpp	/^  const TrieStatePtr m_root;$/;"	m	class:gnote::TrieTree	access:private
gnote::TrieTree::max_length	src/trie.hpp	/^  size_t max_length() const$/;"	f	class:gnote::TrieTree	access:public	signature:() const
gnote::UndoManager	src/undo.hpp	/^class UndoManager$/;"	c	namespace:gnote	inherits:boost::noncopyable
gnote::UndoManager::UndoManager	src/undo.cpp	/^  UndoManager::UndoManager(NoteBuffer * buffer)$/;"	f	class:gnote::UndoManager	signature:(NoteBuffer * buffer)
gnote::UndoManager::UndoManager	src/undo.hpp	/^  UndoManager(NoteBuffer * buffer);$/;"	p	class:gnote::UndoManager	access:public	signature:(NoteBuffer * buffer)
gnote::UndoManager::add_undo_action	src/undo.cpp	/^  void UndoManager::add_undo_action(EditAction * action)$/;"	f	class:gnote::UndoManager	signature:(EditAction * action)
gnote::UndoManager::add_undo_action	src/undo.hpp	/^  void add_undo_action(EditAction * action);$/;"	p	class:gnote::UndoManager	access:public	signature:(EditAction * action)
gnote::UndoManager::clear_action_stack	src/undo.cpp	/^  void UndoManager::clear_action_stack(std::stack<EditAction *> & stack)$/;"	f	class:gnote::UndoManager	signature:(std::stack<EditAction *> & stack)
gnote::UndoManager::clear_action_stack	src/undo.hpp	/^  void clear_action_stack(std::stack<EditAction *> &);$/;"	p	class:gnote::UndoManager	access:private	signature:(std::stack<EditAction *> &)
gnote::UndoManager::clear_undo_history	src/undo.cpp	/^  void UndoManager::clear_undo_history()$/;"	f	class:gnote::UndoManager	signature:()
gnote::UndoManager::clear_undo_history	src/undo.hpp	/^  void clear_undo_history();$/;"	p	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::freeze_undo	src/undo.hpp	/^  void freeze_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::get_can_redo	src/undo.hpp	/^  bool get_can_redo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::get_can_undo	src/undo.hpp	/^  bool get_can_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::m_buffer	src/undo.hpp	/^  NoteBuffer * m_buffer;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_chop_buffer	src/undo.hpp	/^  ChopBuffer::Ptr m_chop_buffer;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_frozen_cnt	src/undo.hpp	/^  guint m_frozen_cnt;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_redo_stack	src/undo.hpp	/^  std::stack<EditAction *> m_redo_stack;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_try_merge	src/undo.hpp	/^  bool m_try_merge;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_undo_changed	src/undo.hpp	/^  sigc::signal<void> m_undo_changed;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::m_undo_stack	src/undo.hpp	/^  std::stack<EditAction *> m_undo_stack;$/;"	m	class:gnote::UndoManager	access:private
gnote::UndoManager::on_bullet_inserted	src/undo.cpp	/^  void UndoManager::on_bullet_inserted(int offset, int depth, $/;"	f	class:gnote::UndoManager	signature:(int offset, int depth, Pango::Direction direction)
gnote::UndoManager::on_bullet_inserted	src/undo.hpp	/^  void on_bullet_inserted(int, int, Pango::Direction);$/;"	p	class:gnote::UndoManager	access:private	signature:(int, int, Pango::Direction)
gnote::UndoManager::on_change_depth	src/undo.cpp	/^  void UndoManager::on_change_depth(int line, bool direction)$/;"	f	class:gnote::UndoManager	signature:(int line, bool direction)
gnote::UndoManager::on_change_depth	src/undo.hpp	/^  void on_change_depth(int, bool);$/;"	p	class:gnote::UndoManager	access:private	signature:(int, bool)
gnote::UndoManager::on_delete_range	src/undo.cpp	/^  void UndoManager::on_delete_range(const Gtk::TextIter & start, $/;"	f	class:gnote::UndoManager	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::UndoManager::on_delete_range	src/undo.hpp	/^  void on_delete_range(const Gtk::TextIter &, const Gtk::TextIter &);$/;"	p	class:gnote::UndoManager	access:private	signature:(const Gtk::TextIter &, const Gtk::TextIter &)
gnote::UndoManager::on_insert_text	src/undo.cpp	/^  void UndoManager::on_insert_text(const Gtk::TextIter & pos, $/;"	f	class:gnote::UndoManager	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int)
gnote::UndoManager::on_insert_text	src/undo.hpp	/^  void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::UndoManager	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
gnote::UndoManager::on_tag_applied	src/undo.cpp	/^  void UndoManager::on_tag_applied(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::UndoManager	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
gnote::UndoManager::on_tag_applied	src/undo.hpp	/^  void on_tag_applied(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::UndoManager	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::UndoManager::on_tag_removed	src/undo.cpp	/^  void UndoManager::on_tag_removed(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::UndoManager	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
gnote::UndoManager::on_tag_removed	src/undo.hpp	/^  void on_tag_removed(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::UndoManager	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
gnote::UndoManager::redo	src/undo.hpp	/^  void redo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::signal_undo_changed	src/undo.hpp	/^  sigc::signal<void> & signal_undo_changed()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::thaw_undo	src/undo.hpp	/^  void thaw_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::undo	src/undo.hpp	/^  void undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
gnote::UndoManager::undo_redo	src/undo.cpp	/^  void UndoManager::undo_redo(std::stack<EditAction *> & pop_from,$/;"	f	class:gnote::UndoManager	signature:(std::stack<EditAction *> & pop_from, std::stack<EditAction *> & push_to, bool is_undo)
gnote::UndoManager::undo_redo	src/undo.hpp	/^  void undo_redo(std::stack<EditAction *> &, std::stack<EditAction *> &, bool);$/;"	p	class:gnote::UndoManager	access:public	signature:(std::stack<EditAction *> &, std::stack<EditAction *> &, bool)
gnote::UndoManager::~UndoManager	src/undo.cpp	/^  UndoManager::~UndoManager()$/;"	f	class:gnote::UndoManager	signature:()
gnote::UndoManager::~UndoManager	src/undo.hpp	/^  ~UndoManager();$/;"	p	class:gnote::UndoManager	access:public	signature:()
gnote::XKeybinder	src/xkeybinder.hpp	/^class XKeybinder$/;"	c	namespace:gnote	inherits:IKeybinder
gnote::XKeybinder::BindingMap	src/xkeybinder.hpp	/^  typedef std::map<std::string, Handler> BindingMap;$/;"	t	class:gnote::XKeybinder	access:private
gnote::XKeybinder::Handler	src/xkeybinder.hpp	/^  typedef sigc::slot<void> Handler;$/;"	t	class:gnote::XKeybinder	access:private
gnote::XKeybinder::XKeybinder	src/xkeybinder.cpp	/^  XKeybinder::XKeybinder()$/;"	f	class:gnote::XKeybinder	signature:()
gnote::XKeybinder::XKeybinder	src/xkeybinder.hpp	/^  XKeybinder();$/;"	p	class:gnote::XKeybinder	access:public	signature:()
gnote::XKeybinder::bind	src/xkeybinder.cpp	/^  void XKeybinder::bind(const std::string & keystring, const sigc::slot<void> & handler)$/;"	f	class:gnote::XKeybinder	signature:(const std::string & keystring, const sigc::slot<void> & handler)
gnote::XKeybinder::get_accel_keys	src/xkeybinder.cpp	/^  bool XKeybinder::get_accel_keys(const std::string & key, guint & keyval, $/;"	f	class:gnote::XKeybinder	signature:(const std::string & key, guint & keyval, Gdk::ModifierType & mods)
gnote::XKeybinder::keybinding_pressed	src/xkeybinder.cpp	/^  void XKeybinder::keybinding_pressed(char *keystring, gpointer user_data)$/;"	f	class:gnote::XKeybinder	signature:(char *keystring, gpointer user_data)
gnote::XKeybinder::keybinding_pressed	src/xkeybinder.hpp	/^  static void keybinding_pressed(char *keystring, gpointer user_data);$/;"	p	class:gnote::XKeybinder	access:private	signature:(char *keystring, gpointer user_data)
gnote::XKeybinder::m_bindings	src/xkeybinder.hpp	/^  BindingMap m_bindings;$/;"	m	class:gnote::XKeybinder	access:private
gnote::XKeybinder::override	src/xkeybinder.hpp	/^                              Gdk::ModifierType & mods) override;$/;"	m	class:gnote::XKeybinder	access:public
gnote::XKeybinder::override	src/xkeybinder.hpp	/^  virtual void bind(const std::string & keystring, const sigc::slot<void> & handler) override;$/;"	m	class:gnote::XKeybinder	access:public
gnote::XKeybinder::override	src/xkeybinder.hpp	/^  virtual void unbind(const std::string & keystring) override;$/;"	m	class:gnote::XKeybinder	access:public
gnote::XKeybinder::override	src/xkeybinder.hpp	/^  virtual void unbind_all() override;$/;"	m	class:gnote::XKeybinder	access:public
gnote::XKeybinder::unbind	src/xkeybinder.cpp	/^  void XKeybinder::unbind(const std::string & keystring)$/;"	f	class:gnote::XKeybinder	signature:(const std::string & keystring)
gnote::XKeybinder::unbind_all	src/xkeybinder.cpp	/^  void XKeybinder::unbind_all()$/;"	f	class:gnote::XKeybinder	signature:()
gnote::__anon21::get_id_for_addin	src/addinmanager.cpp	/^  std::string get_id_for_addin(const AbstractAddin & addin, const std::map<std::string, AddinType*> & addins)$/;"	f	namespace:gnote::__anon21	signature:(const AbstractAddin & addin, const std::map<std::string, AddinType*> & addins)
gnote::__anon4::compare_tags_sort_func	src/tagmanager.cpp	/^    int compare_tags_sort_func (const Gtk::TreeIter & a, $/;"	f	namespace:gnote::__anon4	signature:(const Gtk::TreeIter & a, const Gtk::TreeIter & b)
gnote::__anon8::ADDIN_ATTS	src/addininfo.cpp	/^    const char * ADDIN_ATTS = "AddinAttributes";$/;"	m	namespace:gnote::__anon8	file:
gnote::__anon8::ADDIN_INFO	src/addininfo.cpp	/^    const char * ADDIN_INFO = "AddinInfo";$/;"	m	namespace:gnote::__anon8	file:
gnote::__anon8::resolve_addin_category	src/addininfo.cpp	/^    AddinCategory resolve_addin_category(const std::string & cat)$/;"	f	namespace:gnote::__anon8	signature:(const std::string & cat)
gnote::__anon9::place_cursor_and_selection	src/note.cpp	/^    void place_cursor_and_selection(const NoteData & data, const Glib::RefPtr<NoteBuffer> & buffer)$/;"	f	namespace:gnote::__anon9	signature:(const NoteData & data, const Glib::RefPtr<NoteBuffer> & buffer)
gnote::__anon9::show_io_error_dialog	src/note.cpp	/^    void show_io_error_dialog (Gtk::Window * parent)$/;"	f	namespace:gnote::__anon9	signature:(Gtk::Window * parent)
gnote::compare_dates	src/notemanagerbase.cpp	/^bool compare_dates(const NoteBase::Ptr & a, const NoteBase::Ptr & b)$/;"	f	namespace:gnote	signature:(const NoteBase::Ptr & a, const NoteBase::Ptr & b)
gnote::notebooks	src/notebooks/createnotebookdialog.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/createnotebookdialog.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebook.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebook.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebookapplicationaddin.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebookapplicationaddin.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebookmanager.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebookmanager.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebookmenuitem.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebookmenuitem.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebooknewnotemenuitem.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebooknewnotemenuitem.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebooknoteaddin.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebooknoteaddin.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/notebookstreeview.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/notebookstreeview.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks	src/notebooks/specialnotebooks.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
gnote::notebooks	src/notebooks/specialnotebooks.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
gnote::notebooks::ActiveNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class ActiveNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
gnote::notebooks::ActiveNotesNotebook::ActiveNotesNotebook	src/notebooks/specialnotebooks.cpp	/^ActiveNotesNotebook::ActiveNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(NoteManager & manager)
gnote::notebooks::ActiveNotesNotebook::ActiveNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  ActiveNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:public	signature:(NoteManager &)
gnote::notebooks::ActiveNotesNotebook::Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<ActiveNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::ActiveNotesNotebook::add_note	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const Note::Ptr & note)
gnote::notebooks::ActiveNotesNotebook::contains_note	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
gnote::notebooks::ActiveNotesNotebook::empty	src/notebooks/specialnotebooks.cpp	/^bool ActiveNotesNotebook::empty()$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:()
gnote::notebooks::ActiveNotesNotebook::empty	src/notebooks/specialnotebooks.hpp	/^  bool empty();$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:public	signature:()
gnote::notebooks::ActiveNotesNotebook::get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> ActiveNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:()
gnote::notebooks::ActiveNotesNotebook::get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string ActiveNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:() const
gnote::notebooks::ActiveNotesNotebook::m_notes	src/notebooks/specialnotebooks.hpp	/^  std::set<Note::Ptr> m_notes;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:private
gnote::notebooks::ActiveNotesNotebook::on_note_deleted	src/notebooks/specialnotebooks.cpp	/^void ActiveNotesNotebook::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const NoteBase::Ptr & note)
gnote::notebooks::ActiveNotesNotebook::on_note_deleted	src/notebooks/specialnotebooks.hpp	/^  void on_note_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:private	signature:(const NoteBase::Ptr & note)
gnote::notebooks::ActiveNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::ActiveNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::ActiveNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::ActiveNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::ActiveNotesNotebook::signal_size_changed	src/notebooks/specialnotebooks.hpp	/^  sigc::signal<void> signal_size_changed;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
gnote::notebooks::AllNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class AllNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
gnote::notebooks::AllNotesNotebook::AllNotesNotebook	src/notebooks/specialnotebooks.cpp	/^AllNotesNotebook::AllNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(NoteManager & manager)
gnote::notebooks::AllNotesNotebook::AllNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  AllNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::AllNotesNotebook	access:public	signature:(NoteManager &)
gnote::notebooks::AllNotesNotebook::Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<AllNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::AllNotesNotebook	access:public
gnote::notebooks::AllNotesNotebook::add_note	src/notebooks/specialnotebooks.cpp	/^bool AllNotesNotebook::add_note(const Note::Ptr &)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(const Note::Ptr &)
gnote::notebooks::AllNotesNotebook::contains_note	src/notebooks/specialnotebooks.cpp	/^bool AllNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
gnote::notebooks::AllNotesNotebook::get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> AllNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:()
gnote::notebooks::AllNotesNotebook::get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string AllNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::AllNotesNotebook	signature:() const
gnote::notebooks::AllNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
gnote::notebooks::AllNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
gnote::notebooks::AllNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
gnote::notebooks::AllNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
gnote::notebooks::CreateNotebookDialog	src/notebooks/createnotebookdialog.hpp	/^class CreateNotebookDialog$/;"	c	namespace:gnote::notebooks	inherits:utils::HIGMessageDialog
gnote::notebooks::CreateNotebookDialog::CreateNotebookDialog	src/notebooks/createnotebookdialog.cpp	/^    CreateNotebookDialog::CreateNotebookDialog(Gtk::Window *parent, GtkDialogFlags f)$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:(Gtk::Window *parent, GtkDialogFlags f)
gnote::notebooks::CreateNotebookDialog::CreateNotebookDialog	src/notebooks/createnotebookdialog.hpp	/^  CreateNotebookDialog(Gtk::Window *parent, GtkDialogFlags f);$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:(Gtk::Window *parent, GtkDialogFlags f)
gnote::notebooks::CreateNotebookDialog::get_notebook_name	src/notebooks/createnotebookdialog.cpp	/^    std::string CreateNotebookDialog::get_notebook_name()$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:()
gnote::notebooks::CreateNotebookDialog::get_notebook_name	src/notebooks/createnotebookdialog.hpp	/^  std::string get_notebook_name();$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:()
gnote::notebooks::CreateNotebookDialog::m_errorLabel	src/notebooks/createnotebookdialog.hpp	/^  Gtk::Label                m_errorLabel;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
gnote::notebooks::CreateNotebookDialog::m_nameEntry	src/notebooks/createnotebookdialog.hpp	/^  Gtk::Entry                m_nameEntry;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
gnote::notebooks::CreateNotebookDialog::m_newNotebookIcon	src/notebooks/createnotebookdialog.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> m_newNotebookIcon;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
gnote::notebooks::CreateNotebookDialog::m_newNotebookIconDialog	src/notebooks/createnotebookdialog.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> m_newNotebookIconDialog;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
gnote::notebooks::CreateNotebookDialog::on_name_entry_changed	src/notebooks/createnotebookdialog.cpp	/^    void CreateNotebookDialog::on_name_entry_changed()$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:()
gnote::notebooks::CreateNotebookDialog::on_name_entry_changed	src/notebooks/createnotebookdialog.hpp	/^  void on_name_entry_changed();$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:private	signature:()
gnote::notebooks::CreateNotebookDialog::set_notebook_name	src/notebooks/createnotebookdialog.cpp	/^    void CreateNotebookDialog::set_notebook_name(const std::string & value)$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:(const std::string & value)
gnote::notebooks::CreateNotebookDialog::set_notebook_name	src/notebooks/createnotebookdialog.hpp	/^  void set_notebook_name(const std::string &);$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:(const std::string &)
gnote::notebooks::Notebook	src/notebooks/notebook.hpp	/^class Notebook $/;"	c	namespace:gnote::notebooks	inherits:enable_shared_from_this
gnote::notebooks::Notebook::NOTEBOOK_TAG_PREFIX	src/notebooks/notebook.cpp	/^  const char * Notebook::NOTEBOOK_TAG_PREFIX = "notebook:";$/;"	m	class:gnote::notebooks::Notebook	file:
gnote::notebooks::Notebook::NOTEBOOK_TAG_PREFIX	src/notebooks/notebook.hpp	/^  static const char * NOTEBOOK_TAG_PREFIX;$/;"	m	class:gnote::notebooks::Notebook	access:public
gnote::notebooks::Notebook::Notebook	src/notebooks/notebook.cpp	/^  Notebook::Notebook(NoteManager & manager, const Tag::Ptr & notebookTag)$/;"	f	class:gnote::notebooks::Notebook	signature:(NoteManager & manager, const Tag::Ptr & notebookTag)
gnote::notebooks::Notebook::Notebook	src/notebooks/notebook.cpp	/^  Notebook::Notebook(NoteManager & manager, const std::string & name, bool is_special)$/;"	f	class:gnote::notebooks::Notebook	signature:(NoteManager & manager, const std::string & name, bool is_special)
gnote::notebooks::Notebook::Notebook	src/notebooks/notebook.hpp	/^  Notebook(NoteManager &, const Tag::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(NoteManager &, const Tag::Ptr &)
gnote::notebooks::Notebook::Notebook	src/notebooks/notebook.hpp	/^  Notebook(NoteManager &, const std::string &, bool is_special = false);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(NoteManager &, const std::string &, bool is_special = false)
gnote::notebooks::Notebook::Notebook	src/notebooks/notebook.hpp	/^  Notebook(const Notebook &);$/;"	p	class:gnote::notebooks::Notebook	access:private	signature:(const Notebook &)
gnote::notebooks::Notebook::Ptr	src/notebooks/notebook.hpp	/^  typedef shared_ptr<Notebook> Ptr;$/;"	t	class:gnote::notebooks::Notebook	access:public
gnote::notebooks::Notebook::add_note	src/notebooks/notebook.cpp	/^  bool Notebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note)
gnote::notebooks::Notebook::add_note	src/notebooks/notebook.hpp	/^  virtual bool add_note(const Note::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const Note::Ptr &)
gnote::notebooks::Notebook::contains_note	src/notebooks/notebook.cpp	/^  bool Notebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note, bool include_system)
gnote::notebooks::Notebook::contains_note	src/notebooks/notebook.hpp	/^  virtual bool contains_note(const Note::Ptr & note, bool include_system = false);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const Note::Ptr & note, bool include_system = false)
gnote::notebooks::Notebook::create_notebook_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::create_notebook_note()$/;"	f	class:gnote::notebooks::Notebook	signature:()
gnote::notebooks::Notebook::create_notebook_note	src/notebooks/notebook.hpp	/^  Note::Ptr create_notebook_note();$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:()
gnote::notebooks::Notebook::find_template_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::find_template_note() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
gnote::notebooks::Notebook::find_template_note	src/notebooks/notebook.hpp	/^  Note::Ptr find_template_note() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
gnote::notebooks::Notebook::get_name	src/notebooks/notebook.hpp	/^  std::string get_name() const$/;"	f	class:gnote::notebooks::Notebook	access:public	signature:() const
gnote::notebooks::Notebook::get_normalized_name	src/notebooks/notebook.cpp	/^  std::string Notebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
gnote::notebooks::Notebook::get_normalized_name	src/notebooks/notebook.hpp	/^  virtual std::string get_normalized_name() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
gnote::notebooks::Notebook::get_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::get_tag() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
gnote::notebooks::Notebook::get_tag	src/notebooks/notebook.hpp	/^  virtual Tag::Ptr    get_tag() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
gnote::notebooks::Notebook::get_template_note	src/notebooks/notebook.cpp	/^  Note::Ptr Notebook::get_template_note() const$/;"	f	class:gnote::notebooks::Notebook	signature:() const
gnote::notebooks::Notebook::get_template_note	src/notebooks/notebook.hpp	/^  virtual Note::Ptr   get_template_note() const;$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:() const
gnote::notebooks::Notebook::is_template_note	src/notebooks/notebook.cpp	/^  bool Notebook::is_template_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note)
gnote::notebooks::Notebook::is_template_note	src/notebooks/notebook.hpp	/^  static bool is_template_note(const Note::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:protected	signature:(const Note::Ptr &)
gnote::notebooks::Notebook::m_default_template_note_title	src/notebooks/notebook.hpp	/^  std::string m_default_template_note_title;$/;"	m	class:gnote::notebooks::Notebook	access:private
gnote::notebooks::Notebook::m_name	src/notebooks/notebook.hpp	/^  std::string m_name;$/;"	m	class:gnote::notebooks::Notebook	access:private
gnote::notebooks::Notebook::m_normalized_name	src/notebooks/notebook.hpp	/^  std::string m_normalized_name;$/;"	m	class:gnote::notebooks::Notebook	access:private
gnote::notebooks::Notebook::m_note_manager	src/notebooks/notebook.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::notebooks::Notebook	access:protected
gnote::notebooks::Notebook::m_tag	src/notebooks/notebook.hpp	/^  Tag::Ptr    m_tag;$/;"	m	class:gnote::notebooks::Notebook	access:private
gnote::notebooks::Notebook::normalize	src/notebooks/notebook.cpp	/^  std::string Notebook::normalize(const std::string & s)$/;"	f	class:gnote::notebooks::Notebook	signature:(const std::string & s)
gnote::notebooks::Notebook::normalize	src/notebooks/notebook.hpp	/^  static std::string normalize(const std::string & s);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const std::string & s)
gnote::notebooks::Notebook::operator =	src/notebooks/notebook.hpp	/^  Notebook & operator=(const Notebook &);$/;"	p	class:gnote::notebooks::Notebook	access:private	signature:(const Notebook &)
gnote::notebooks::Notebook::s_template_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::s_template_tag;$/;"	m	class:gnote::notebooks::Notebook	file:
gnote::notebooks::Notebook::s_template_tag	src/notebooks/notebook.hpp	/^  static Tag::Ptr s_template_tag;$/;"	m	class:gnote::notebooks::Notebook	access:private
gnote::notebooks::Notebook::set_name	src/notebooks/notebook.cpp	/^  void Notebook::set_name(const std::string & value)$/;"	f	class:gnote::notebooks::Notebook	signature:(const std::string & value)
gnote::notebooks::Notebook::set_name	src/notebooks/notebook.hpp	/^  void set_name(const std::string &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const std::string &)
gnote::notebooks::Notebook::template_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::template_tag()$/;"	f	class:gnote::notebooks::Notebook	signature:()
gnote::notebooks::Notebook::template_tag	src/notebooks/notebook.hpp	/^  static Tag::Ptr template_tag();$/;"	p	class:gnote::notebooks::Notebook	access:protected	signature:()
gnote::notebooks::Notebook::~Notebook	src/notebooks/notebook.hpp	/^  virtual ~Notebook()$/;"	f	class:gnote::notebooks::Notebook	access:public	signature:()
gnote::notebooks::NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.hpp	/^    class NotebookApplicationAddin$/;"	c	namespace:gnote::notebooks	inherits:ApplicationAddin
gnote::notebooks::NotebookApplicationAddin::NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.cpp	/^    NotebookApplicationAddin::NotebookApplicationAddin()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::NotebookApplicationAddin	src/notebooks/notebookapplicationaddin.hpp	/^      NotebookApplicationAddin();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:protected	signature:()
gnote::notebooks::NotebookApplicationAddin::add_menu_items	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::add_menu_items(Gtk::Menu * menu,   $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(Gtk::Menu * menu, std::list<Gtk::MenuItem*> & menu_items)
gnote::notebooks::NotebookApplicationAddin::add_menu_items	src/notebooks/notebookapplicationaddin.hpp	/^      void add_menu_items(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items)
gnote::notebooks::NotebookApplicationAddin::create	src/notebooks/notebookapplicationaddin.cpp	/^    ApplicationAddin * NotebookApplicationAddin::create()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::create	src/notebooks/notebookapplicationaddin.hpp	/^      static ApplicationAddin * create();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:public	signature:()
gnote::notebooks::NotebookApplicationAddin::initialize	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::initialize ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::initialized	src/notebooks/notebookapplicationaddin.cpp	/^    bool NotebookApplicationAddin::initialized ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::m_initialized	src/notebooks/notebookapplicationaddin.hpp	/^      bool m_initialized;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
gnote::notebooks::NotebookApplicationAddin::m_trayNotebookMenu	src/notebooks/notebookapplicationaddin.hpp	/^      Gtk::Menu                     *m_trayNotebookMenu;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
gnote::notebooks::NotebookApplicationAddin::m_trayNotebookMenuItems	src/notebooks/notebookapplicationaddin.hpp	/^      std::list<Gtk::MenuItem*>      m_trayNotebookMenuItems;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
gnote::notebooks::NotebookApplicationAddin::m_tray_menu_item	src/notebooks/notebookapplicationaddin.hpp	/^      Gtk::MenuItem                 *m_tray_menu_item;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
gnote::notebooks::NotebookApplicationAddin::on_new_notebook_action	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_new_notebook_action(const Glib::VariantBase&)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const Glib::VariantBase&)
gnote::notebooks::NotebookApplicationAddin::on_new_notebook_action	src/notebooks/notebookapplicationaddin.hpp	/^      void on_new_notebook_action(const Glib::VariantBase&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const Glib::VariantBase&)
gnote::notebooks::NotebookApplicationAddin::on_new_notebook_menu_item	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_new_notebook_menu_item()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::on_new_notebook_menu_item	src/notebooks/notebookapplicationaddin.hpp	/^      void on_new_notebook_menu_item();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
gnote::notebooks::NotebookApplicationAddin::on_note_added	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr & note)
gnote::notebooks::NotebookApplicationAddin::on_note_added	src/notebooks/notebookapplicationaddin.hpp	/^      void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr &)
gnote::notebooks::NotebookApplicationAddin::on_note_deleted	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_note_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr &)
gnote::notebooks::NotebookApplicationAddin::on_note_deleted	src/notebooks/notebookapplicationaddin.hpp	/^      void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr &)
gnote::notebooks::NotebookApplicationAddin::on_tag_added	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tag_added(const NoteBase & note, const Tag::Ptr& tag)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase & note, const Tag::Ptr& tag)
gnote::notebooks::NotebookApplicationAddin::on_tag_added	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase&, const Tag::Ptr&)
gnote::notebooks::NotebookApplicationAddin::on_tag_removed	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tag_removed(const NoteBase::Ptr& note, $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr& note, const std::string& normalizedTagName)
gnote::notebooks::NotebookApplicationAddin::on_tag_removed	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr&, const std::string&)
gnote::notebooks::NotebookApplicationAddin::on_tray_notebook_menu_hidden	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tray_notebook_menu_hidden()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::on_tray_notebook_menu_hidden	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tray_notebook_menu_hidden();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
gnote::notebooks::NotebookApplicationAddin::on_tray_notebook_menu_shown	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tray_notebook_menu_shown()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookApplicationAddin::on_tray_notebook_menu_shown	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tray_notebook_menu_shown();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
gnote::notebooks::NotebookApplicationAddin::override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual bool initialized() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
gnote::notebooks::NotebookApplicationAddin::override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual void initialize() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
gnote::notebooks::NotebookApplicationAddin::override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual void shutdown() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
gnote::notebooks::NotebookApplicationAddin::remove_menu_items	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::remove_menu_items(Gtk::Menu * menu, $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(Gtk::Menu * menu, std::list<Gtk::MenuItem*> & menu_items)
gnote::notebooks::NotebookApplicationAddin::remove_menu_items	src/notebooks/notebookapplicationaddin.hpp	/^      void remove_menu_items(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items)
gnote::notebooks::NotebookApplicationAddin::shutdown	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::shutdown ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
gnote::notebooks::NotebookManager	src/notebooks/notebookmanager.hpp	/^class NotebookManager$/;"	c	namespace:gnote::notebooks	inherits:base::Singleton
gnote::notebooks::NotebookManager::ColumnRecord	src/notebooks/notebookmanager.hpp	/^  class ColumnRecord$/;"	c	class:gnote::notebooks::NotebookManager	inherits:Gtk::TreeModelColumnRecord	access:private
gnote::notebooks::NotebookManager::ColumnRecord::ColumnRecord	src/notebooks/notebookmanager.hpp	/^    ColumnRecord()$/;"	f	class:gnote::notebooks::NotebookManager::ColumnRecord	access:public	signature:()
gnote::notebooks::NotebookManager::ColumnRecord::m_col1	src/notebooks/notebookmanager.hpp	/^    Gtk::TreeModelColumn<Notebook::Ptr> m_col1;$/;"	m	class:gnote::notebooks::NotebookManager::ColumnRecord	access:public
gnote::notebooks::NotebookManager::NotebookEventHandler	src/notebooks/notebookmanager.hpp	/^  typedef sigc::signal<void, const Note &, const Notebook::Ptr &> NotebookEventHandler;$/;"	t	class:gnote::notebooks::NotebookManager	access:public
gnote::notebooks::NotebookManager::NotebookManager	src/notebooks/notebookmanager.cpp	/^    NotebookManager::NotebookManager(NoteManager & manager)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(NoteManager & manager)
gnote::notebooks::NotebookManager::NotebookManager	src/notebooks/notebookmanager.hpp	/^  NotebookManager(NoteManager &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(NoteManager &)
gnote::notebooks::NotebookManager::active_notes_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr & active_notes_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
gnote::notebooks::NotebookManager::add_notebook	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::add_notebook(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook)
gnote::notebooks::NotebookManager::add_notebook	src/notebooks/notebookmanager.hpp	/^  bool add_notebook(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &)
gnote::notebooks::NotebookManager::compare_notebooks_sort_func	src/notebooks/notebookmanager.cpp	/^    int NotebookManager::compare_notebooks_sort_func(const Gtk::TreeIter &a, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter &a, const Gtk::TreeIter &b)
gnote::notebooks::NotebookManager::compare_notebooks_sort_func	src/notebooks/notebookmanager.hpp	/^  static int compare_notebooks_sort_func(const Gtk::TreeIter &, const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &, const Gtk::TreeIter &)
gnote::notebooks::NotebookManager::delete_notebook	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::delete_notebook(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook)
gnote::notebooks::NotebookManager::delete_notebook	src/notebooks/notebookmanager.hpp	/^  void delete_notebook(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &)
gnote::notebooks::NotebookManager::filter_notebooks	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::filter_notebooks(const Gtk::TreeIter & iter)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter & iter)
gnote::notebooks::NotebookManager::filter_notebooks	src/notebooks/notebookmanager.hpp	/^  static bool filter_notebooks(const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &)
gnote::notebooks::NotebookManager::filter_notebooks_to_display	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::filter_notebooks_to_display(const Gtk::TreeIter & iter)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Gtk::TreeIter & iter)
gnote::notebooks::NotebookManager::filter_notebooks_to_display	src/notebooks/notebookmanager.hpp	/^  bool filter_notebooks_to_display(const Gtk::TreeIter &);$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:(const Gtk::TreeIter &)
gnote::notebooks::NotebookManager::get_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook(const std::string & notebookName) const$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName) const
gnote::notebooks::NotebookManager::get_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook(const std::string & notebookName) const;$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string & notebookName) const
gnote::notebooks::NotebookManager::get_notebook_from_note	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook_from_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const NoteBase::Ptr & note)
gnote::notebooks::NotebookManager::get_notebook_from_note	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook_from_note(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const NoteBase::Ptr &)
gnote::notebooks::NotebookManager::get_notebook_from_tag	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_notebook_from_tag(const Tag::Ptr &tag)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Tag::Ptr &tag)
gnote::notebooks::NotebookManager::get_notebook_from_tag	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_notebook_from_tag(const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Tag::Ptr &)
gnote::notebooks::NotebookManager::get_notebook_iter	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::get_notebook_iter(const Notebook::Ptr & notebook, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Notebook::Ptr & notebook, Gtk::TreeIter & iter)
gnote::notebooks::NotebookManager::get_notebook_iter	src/notebooks/notebookmanager.hpp	/^  bool get_notebook_iter(const Notebook::Ptr &, Gtk::TreeIter & );$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Notebook::Ptr &, Gtk::TreeIter & )
gnote::notebooks::NotebookManager::get_notebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_notebooks()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
gnote::notebooks::NotebookManager::get_notebooks_with_special_items	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModel> get_notebooks_with_special_items()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
gnote::notebooks::NotebookManager::get_or_create_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::get_or_create_notebook(const std::string & notebookName)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName)
gnote::notebooks::NotebookManager::get_or_create_notebook	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr get_or_create_notebook(const std::string &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string &)
gnote::notebooks::NotebookManager::is_adding_notebook	src/notebooks/notebookmanager.hpp	/^  bool is_adding_notebook() const$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:() const
gnote::notebooks::NotebookManager::is_notebook_tag	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::is_notebook_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Tag::Ptr & tag)
gnote::notebooks::NotebookManager::is_notebook_tag	src/notebooks/notebookmanager.hpp	/^  static bool is_notebook_tag(const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Tag::Ptr &)
gnote::notebooks::NotebookManager::load_notebooks	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::load_notebooks()$/;"	f	class:gnote::notebooks::NotebookManager	signature:()
gnote::notebooks::NotebookManager::load_notebooks	src/notebooks/notebookmanager.hpp	/^  void load_notebooks();$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:()
gnote::notebooks::NotebookManager::m_active_notes	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr                        m_active_notes;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_adding_notebook	src/notebooks/notebookmanager.hpp	/^  bool                                 m_adding_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_column_types	src/notebooks/notebookmanager.hpp	/^  ColumnRecord                         m_column_types;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_filteredNotebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter>   m_filteredNotebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_note_added_to_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler                 m_note_added_to_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_note_manager	src/notebooks/notebookmanager.hpp	/^  NoteManager                        & m_note_manager;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_note_removed_from_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler                 m_note_removed_from_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_notebookMap	src/notebooks/notebookmanager.hpp	/^  std::map<std::string, Gtk::TreeIter> m_notebookMap;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_notebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::ListStore>         m_notebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_notebooks_to_display	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter>   m_notebooks_to_display;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::m_sortedNotebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort>     m_sortedNotebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
gnote::notebooks::NotebookManager::move_note_to_notebook	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::move_note_to_notebook (const Note::Ptr & note, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Note::Ptr & note, const Notebook::Ptr & notebook)
gnote::notebooks::NotebookManager::move_note_to_notebook	src/notebooks/notebookmanager.hpp	/^  bool move_note_to_notebook (const Note::Ptr &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Note::Ptr &, const Notebook::Ptr &)
gnote::notebooks::NotebookManager::note_manager	src/notebooks/notebookmanager.hpp	/^  NoteManager & note_manager() const$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:() const
gnote::notebooks::NotebookManager::notebook_exists	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::notebook_exists(const std::string & notebookName) const$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName) const
gnote::notebooks::NotebookManager::notebook_exists	src/notebooks/notebookmanager.hpp	/^  bool notebook_exists(const std::string & notebookName) const;$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string & notebookName) const
gnote::notebooks::NotebookManager::on_active_notes_size_changed	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::on_active_notes_size_changed()$/;"	f	class:gnote::notebooks::NotebookManager	signature:()
gnote::notebooks::NotebookManager::on_active_notes_size_changed	src/notebooks/notebookmanager.hpp	/^  void on_active_notes_size_changed();$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:()
gnote::notebooks::NotebookManager::prompt_create_new_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::prompt_create_new_notebook(Gtk::Window *parent)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window *parent)
gnote::notebooks::NotebookManager::prompt_create_new_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::prompt_create_new_notebook(Gtk::Window *parent,$/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window *parent, const Note::List & notesToAdd)
gnote::notebooks::NotebookManager::prompt_create_new_notebook	src/notebooks/notebookmanager.hpp	/^  static Notebook::Ptr prompt_create_new_notebook(Gtk::Window *);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *)
gnote::notebooks::NotebookManager::prompt_create_new_notebook	src/notebooks/notebookmanager.hpp	/^  static Notebook::Ptr prompt_create_new_notebook(Gtk::Window *,$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *, const Note::List & notesToAdd)
gnote::notebooks::NotebookManager::prompt_delete_notebook	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::prompt_delete_notebook(Gtk::Window * parent, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window * parent, const Notebook::Ptr & notebook)
gnote::notebooks::NotebookManager::prompt_delete_notebook	src/notebooks/notebookmanager.hpp	/^  static void prompt_delete_notebook(Gtk::Window *, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *, const Notebook::Ptr &)
gnote::notebooks::NotebookManager::signal_note_added_to_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler & signal_note_added_to_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
gnote::notebooks::NotebookManager::signal_note_pin_status_changed	src/notebooks/notebookmanager.hpp	/^  sigc::signal<void, const Note &, bool> signal_note_pin_status_changed;$/;"	m	class:gnote::notebooks::NotebookManager	access:public
gnote::notebooks::NotebookManager::signal_note_removed_from_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler & signal_note_removed_from_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
gnote::notebooks::NotebookMenuItem	src/notebooks/notebookmenuitem.hpp	/^    class NotebookMenuItem$/;"	c	namespace:gnote::notebooks	inherits:Gtk::RadioMenuItem
gnote::notebooks::NotebookMenuItem::NotebookMenuItem	src/notebooks/notebookmenuitem.cpp	/^    NotebookMenuItem::NotebookMenuItem(Gtk::RadioButtonGroup & group, $/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(Gtk::RadioButtonGroup & group, const Note::Ptr & note, const Notebook::Ptr & notebook)
gnote::notebooks::NotebookMenuItem::NotebookMenuItem	src/notebooks/notebookmenuitem.hpp	/^      NotebookMenuItem(Gtk::RadioButtonGroup & group, const Note::Ptr &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(Gtk::RadioButtonGroup & group, const Note::Ptr &, const Notebook::Ptr &)
gnote::notebooks::NotebookMenuItem::get_note	src/notebooks/notebookmenuitem.hpp	/^      const Note::Ptr & get_note() const$/;"	f	class:gnote::notebooks::NotebookMenuItem	access:public	signature:() const
gnote::notebooks::NotebookMenuItem::get_notebook	src/notebooks/notebookmenuitem.hpp	/^      const Notebook::Ptr & get_notebook() const$/;"	f	class:gnote::notebooks::NotebookMenuItem	access:public	signature:() const
gnote::notebooks::NotebookMenuItem::m_note	src/notebooks/notebookmenuitem.hpp	/^      Note::Ptr m_note;$/;"	m	class:gnote::notebooks::NotebookMenuItem	access:private
gnote::notebooks::NotebookMenuItem::m_notebook	src/notebooks/notebookmenuitem.hpp	/^      Notebook::Ptr m_notebook;$/;"	m	class:gnote::notebooks::NotebookMenuItem	access:private
gnote::notebooks::NotebookMenuItem::on_activated	src/notebooks/notebookmenuitem.cpp	/^    void NotebookMenuItem::on_activated()$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:()
gnote::notebooks::NotebookMenuItem::on_activated	src/notebooks/notebookmenuitem.hpp	/^      void on_activated();$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:private	signature:()
gnote::notebooks::NotebookMenuItem::operator <	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator<(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookMenuItem::operator <	src/notebooks/notebookmenuitem.hpp	/^      bool operator<(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookMenuItem::operator ==	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator==(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookMenuItem::operator ==	src/notebooks/notebookmenuitem.hpp	/^      bool operator==(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookMenuItem::operator >	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator>(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookMenuItem::operator >	src/notebooks/notebookmenuitem.hpp	/^      bool operator>(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.hpp	/^class NotebookNewNoteMenuItem$/;"	c	namespace:gnote::notebooks	inherits:Gtk::ImageMenuItem
gnote::notebooks::NotebookNewNoteMenuItem::NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.cpp	/^    NotebookNewNoteMenuItem::NotebookNewNoteMenuItem(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const Notebook::Ptr & notebook)
gnote::notebooks::NotebookNewNoteMenuItem::NotebookNewNoteMenuItem	src/notebooks/notebooknewnotemenuitem.hpp	/^  NotebookNewNoteMenuItem(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const Notebook::Ptr &)
gnote::notebooks::NotebookNewNoteMenuItem::get_notebook	src/notebooks/notebooknewnotemenuitem.hpp	/^  Notebook::Ptr get_notebook() const$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:() const
gnote::notebooks::NotebookNewNoteMenuItem::m_notebook	src/notebooks/notebooknewnotemenuitem.hpp	/^  Notebook::Ptr m_notebook;$/;"	m	class:gnote::notebooks::NotebookNewNoteMenuItem	access:private
gnote::notebooks::NotebookNewNoteMenuItem::on_activated	src/notebooks/notebooknewnotemenuitem.cpp	/^    void NotebookNewNoteMenuItem::on_activated()$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:()
gnote::notebooks::NotebookNewNoteMenuItem::on_activated	src/notebooks/notebooknewnotemenuitem.hpp	/^  void on_activated();$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:()
gnote::notebooks::NotebookNewNoteMenuItem::operator <	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator<(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookNewNoteMenuItem::operator <	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator<(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookNewNoteMenuItem::operator ==	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator==(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookNewNoteMenuItem::operator ==	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator==(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookNewNoteMenuItem::operator >	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator>(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
gnote::notebooks::NotebookNewNoteMenuItem::operator >	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator>(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
gnote::notebooks::NotebookNoteAddin	src/notebooks/notebooknoteaddin.hpp	/^  class NotebookNoteAddin$/;"	c	namespace:gnote::notebooks	inherits:NoteAddin
gnote::notebooks::NotebookNoteAddin::NotebookNoteAddin	src/notebooks/notebooknoteaddin.cpp	/^  NotebookNoteAddin::NotebookNoteAddin()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::NotebookNoteAddin	src/notebooks/notebooknoteaddin.hpp	/^    NotebookNoteAddin();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:protected	signature:()
gnote::notebooks::NotebookNoteAddin::create	src/notebooks/notebooknoteaddin.cpp	/^  NoteAddin * NotebookNoteAddin::create()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::create	src/notebooks/notebooknoteaddin.hpp	/^    static NoteAddin * create();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:public	signature:()
gnote::notebooks::NotebookNoteAddin::get_notebook_menu_items	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::get_notebook_menu_items(std::list<NotebookMenuItem*>& items)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(std::list<NotebookMenuItem*>& items)
gnote::notebooks::NotebookNoteAddin::get_notebook_menu_items	src/notebooks/notebooknoteaddin.hpp	/^    void get_notebook_menu_items(std::list<NotebookMenuItem*> &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(std::list<NotebookMenuItem*> &)
gnote::notebooks::NotebookNoteAddin::get_template_tag	src/notebooks/notebooknoteaddin.cpp	/^  Tag::Ptr NotebookNoteAddin::get_template_tag()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::get_template_tag	src/notebooks/notebooknoteaddin.hpp	/^    static Tag::Ptr get_template_tag();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:public	signature:()
gnote::notebooks::NotebookNoteAddin::initialize	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::initialize ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::initialize_tool_button	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::initialize_tool_button()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::initialize_tool_button	src/notebooks/notebooknoteaddin.hpp	/^    void initialize_tool_button();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
gnote::notebooks::NotebookNoteAddin::m_label_widget	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::Label               *m_label_widget;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_menu	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::Menu                *m_menu;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_menu_items	src/notebooks/notebooknoteaddin.hpp	/^    std::list<Gtk::MenuItem *> m_menu_items;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_note_added_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_note_added_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_note_removed_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_note_removed_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_radio_group	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::RadioButtonGroup     m_radio_group;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_show_menu_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_show_menu_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::m_toolButton	src/notebooks/notebooknoteaddin.hpp	/^    gnote::utils::ToolMenuButton  *m_toolButton;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::on_menu_shown	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_menu_shown()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::on_menu_shown	src/notebooks/notebooknoteaddin.hpp	/^    void on_menu_shown();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
gnote::notebooks::NotebookNoteAddin::on_new_notebook_menu_item	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_new_notebook_menu_item()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::on_new_notebook_menu_item	src/notebooks/notebooknoteaddin.hpp	/^    void on_new_notebook_menu_item();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
gnote::notebooks::NotebookNoteAddin::on_note_added_to_notebook	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_added_to_notebook(const Note & note, $/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Note & note, const Notebook::Ptr & notebook)
gnote::notebooks::NotebookNoteAddin::on_note_added_to_notebook	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_added_to_notebook(const Note &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Note &, const Notebook::Ptr &)
gnote::notebooks::NotebookNoteAddin::on_note_opened	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_opened ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::on_note_removed_from_notebook	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_removed_from_notebook(const Note & note, $/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Note & note, const Notebook::Ptr &)
gnote::notebooks::NotebookNoteAddin::on_note_removed_from_notebook	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_removed_from_notebook(const Note &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Note &, const Notebook::Ptr &)
gnote::notebooks::NotebookNoteAddin::on_note_tag_added	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_tag_added(const NoteBase & note, const Tag::Ptr & tag)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const NoteBase & note, const Tag::Ptr & tag)
gnote::notebooks::NotebookNoteAddin::on_note_tag_added	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_tag_added(const NoteBase &, const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const NoteBase &, const Tag::Ptr &)
gnote::notebooks::NotebookNoteAddin::on_note_tag_removed	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_tag_removed(const NoteBase::Ptr & taggedNote, const std::string & tag)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const NoteBase::Ptr & taggedNote, const std::string & tag)
gnote::notebooks::NotebookNoteAddin::on_note_tag_removed	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_tag_removed(const NoteBase::Ptr &, const std::string &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const NoteBase::Ptr &, const std::string &)
gnote::notebooks::NotebookNoteAddin::override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
gnote::notebooks::NotebookNoteAddin::override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
gnote::notebooks::NotebookNoteAddin::override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
gnote::notebooks::NotebookNoteAddin::s_templateTag	src/notebooks/notebooknoteaddin.cpp	/^  Tag::Ptr           NotebookNoteAddin::s_templateTag;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	file:
gnote::notebooks::NotebookNoteAddin::s_templateTag	src/notebooks/notebooknoteaddin.hpp	/^    static Tag::Ptr           s_templateTag;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
gnote::notebooks::NotebookNoteAddin::shutdown	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::shutdown ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::update_button_sensitivity	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_button_sensitivity(bool isTemplate)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(bool isTemplate)
gnote::notebooks::NotebookNoteAddin::update_button_sensitivity	src/notebooks/notebooknoteaddin.hpp	/^    void update_button_sensitivity(bool);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(bool)
gnote::notebooks::NotebookNoteAddin::update_menu	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_menu()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::update_menu	src/notebooks/notebooknoteaddin.hpp	/^    void update_menu();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
gnote::notebooks::NotebookNoteAddin::update_notebook_button_label	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_notebook_button_label()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
gnote::notebooks::NotebookNoteAddin::update_notebook_button_label	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_notebook_button_label(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Notebook::Ptr & notebook)
gnote::notebooks::NotebookNoteAddin::update_notebook_button_label	src/notebooks/notebooknoteaddin.hpp	/^    void update_notebook_button_label();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
gnote::notebooks::NotebookNoteAddin::update_notebook_button_label	src/notebooks/notebooknoteaddin.hpp	/^    void update_notebook_button_label(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Notebook::Ptr &)
gnote::notebooks::NotebooksTreeView	src/notebooks/notebookstreeview.hpp	/^  class NotebooksTreeView$/;"	c	namespace:gnote::notebooks	inherits:Gtk::TreeView
gnote::notebooks::NotebooksTreeView::NotebooksTreeView	src/notebooks/notebookstreeview.cpp	/^    NotebooksTreeView::NotebooksTreeView(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)
gnote::notebooks::NotebooksTreeView::NotebooksTreeView	src/notebooks/notebookstreeview.hpp	/^    NotebooksTreeView(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model);$/;"	p	class:gnote::notebooks::NotebooksTreeView	access:public	signature:(NoteManager & manager, const Glib::RefPtr<Gtk::TreeModel> & model)
gnote::notebooks::NotebooksTreeView::m_note_manager	src/notebooks/notebookstreeview.hpp	/^    NoteManager & m_note_manager;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:private
gnote::notebooks::NotebooksTreeView::on_drag_data_received	src/notebooks/notebookstreeview.cpp	/^    void NotebooksTreeView::on_drag_data_received( const Glib::RefPtr<Gdk::DragContext> & context,$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:( const Glib::RefPtr<Gdk::DragContext> & context, int x, int y, const Gtk::SelectionData & selectionData, guint , guint time_)
gnote::notebooks::NotebooksTreeView::on_drag_leave	src/notebooks/notebookstreeview.cpp	/^    void NotebooksTreeView::on_drag_leave(const Glib::RefPtr<Gdk::DragContext> & , guint )$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(const Glib::RefPtr<Gdk::DragContext> & , guint )
gnote::notebooks::NotebooksTreeView::on_drag_motion	src/notebooks/notebookstreeview.cpp	/^    bool NotebooksTreeView::on_drag_motion(const Glib::RefPtr<Gdk::DragContext> &,$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(const Glib::RefPtr<Gdk::DragContext> &, int x, int y, guint )
gnote::notebooks::NotebooksTreeView::override	src/notebooks/notebookstreeview.hpp	/^                                        guint info, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
gnote::notebooks::NotebooksTreeView::override	src/notebooks/notebookstreeview.hpp	/^                                int x, int y, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
gnote::notebooks::NotebooksTreeView::override	src/notebooks/notebookstreeview.hpp	/^    virtual void on_drag_leave(const Glib::RefPtr<Gdk::DragContext> & context, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
gnote::notebooks::PinnedNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class PinnedNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
gnote::notebooks::PinnedNotesNotebook::PinnedNotesNotebook	src/notebooks/specialnotebooks.cpp	/^PinnedNotesNotebook::PinnedNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(NoteManager & manager)
gnote::notebooks::PinnedNotesNotebook::PinnedNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  PinnedNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::PinnedNotesNotebook	access:public	signature:(NoteManager &)
gnote::notebooks::PinnedNotesNotebook::Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<PinnedNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::PinnedNotesNotebook	access:public
gnote::notebooks::PinnedNotesNotebook::add_note	src/notebooks/specialnotebooks.cpp	/^bool PinnedNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(const Note::Ptr & note)
gnote::notebooks::PinnedNotesNotebook::contains_note	src/notebooks/specialnotebooks.cpp	/^bool PinnedNotesNotebook::contains_note(const Note::Ptr & note, bool)$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:(const Note::Ptr & note, bool)
gnote::notebooks::PinnedNotesNotebook::get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> PinnedNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:()
gnote::notebooks::PinnedNotesNotebook::get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string PinnedNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::PinnedNotesNotebook	signature:() const
gnote::notebooks::PinnedNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
gnote::notebooks::PinnedNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
gnote::notebooks::PinnedNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
gnote::notebooks::PinnedNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
gnote::notebooks::SpecialNotebook	src/notebooks/specialnotebooks.hpp	/^class SpecialNotebook$/;"	c	namespace:gnote::notebooks	inherits:Notebook
gnote::notebooks::SpecialNotebook::Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<SpecialNotebook> Ptr;$/;"	t	class:gnote::notebooks::SpecialNotebook	access:public
gnote::notebooks::SpecialNotebook::SpecialNotebook	src/notebooks/specialnotebooks.hpp	/^  SpecialNotebook(NoteManager & m, const std::string &s)$/;"	f	class:gnote::notebooks::SpecialNotebook	access:protected	signature:(NoteManager & m, const std::string &s)
gnote::notebooks::SpecialNotebook::get_icon	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() = 0;$/;"	p	class:gnote::notebooks::SpecialNotebook	access:public	signature:()
gnote::notebooks::SpecialNotebook::get_tag	src/notebooks/specialnotebooks.cpp	/^Tag::Ptr SpecialNotebook::get_tag() const$/;"	f	class:gnote::notebooks::SpecialNotebook	signature:() const
gnote::notebooks::SpecialNotebook::get_template_note	src/notebooks/specialnotebooks.cpp	/^Note::Ptr SpecialNotebook::get_template_note() const$/;"	f	class:gnote::notebooks::SpecialNotebook	signature:() const
gnote::notebooks::SpecialNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Note::Ptr   get_template_note() const override;$/;"	m	class:gnote::notebooks::SpecialNotebook	access:protected
gnote::notebooks::SpecialNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Tag::Ptr    get_tag() const override;$/;"	m	class:gnote::notebooks::SpecialNotebook	access:protected
gnote::notebooks::UnfiledNotesNotebook	src/notebooks/specialnotebooks.hpp	/^class UnfiledNotesNotebook$/;"	c	namespace:gnote::notebooks	inherits:SpecialNotebook
gnote::notebooks::UnfiledNotesNotebook::Ptr	src/notebooks/specialnotebooks.hpp	/^  typedef shared_ptr<UnfiledNotesNotebook> Ptr;$/;"	t	class:gnote::notebooks::UnfiledNotesNotebook	access:public
gnote::notebooks::UnfiledNotesNotebook::UnfiledNotesNotebook	src/notebooks/specialnotebooks.cpp	/^UnfiledNotesNotebook::UnfiledNotesNotebook(NoteManager & manager)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(NoteManager & manager)
gnote::notebooks::UnfiledNotesNotebook::UnfiledNotesNotebook	src/notebooks/specialnotebooks.hpp	/^  UnfiledNotesNotebook(NoteManager &);$/;"	p	class:gnote::notebooks::UnfiledNotesNotebook	access:public	signature:(NoteManager &)
gnote::notebooks::UnfiledNotesNotebook::add_note	src/notebooks/specialnotebooks.cpp	/^bool UnfiledNotesNotebook::add_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(const Note::Ptr & note)
gnote::notebooks::UnfiledNotesNotebook::contains_note	src/notebooks/specialnotebooks.cpp	/^bool UnfiledNotesNotebook::contains_note(const Note::Ptr & note, bool include_system)$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:(const Note::Ptr & note, bool include_system)
gnote::notebooks::UnfiledNotesNotebook::get_icon	src/notebooks/specialnotebooks.cpp	/^Glib::RefPtr<Gdk::Pixbuf> UnfiledNotesNotebook::get_icon()$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:()
gnote::notebooks::UnfiledNotesNotebook::get_normalized_name	src/notebooks/specialnotebooks.cpp	/^std::string UnfiledNotesNotebook::get_normalized_name() const$/;"	f	class:gnote::notebooks::UnfiledNotesNotebook	signature:() const
gnote::notebooks::UnfiledNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
gnote::notebooks::UnfiledNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
gnote::notebooks::UnfiledNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
gnote::notebooks::UnfiledNotesNotebook::override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
gnote::noteutils	src/note.cpp	/^  namespace noteutils {$/;"	n	namespace:gnote	file:
gnote::noteutils	src/note.hpp	/^namespace noteutils {$/;"	n	namespace:gnote
gnote::noteutils::show_deletion_dialog	src/note.cpp	/^    void show_deletion_dialog (const std::list<Note::Ptr> & notes, Gtk::Window * parent)$/;"	f	namespace:gnote::noteutils	signature:(const std::list<Note::Ptr> & notes, Gtk::Window * parent)
gnote::noteutils::show_deletion_dialog	src/note.hpp	/^  void show_deletion_dialog (const std::list<Note::Ptr> & notes, Gtk::Window * parent);$/;"	p	namespace:gnote::noteutils	signature:(const std::list<Note::Ptr> & notes, Gtk::Window * parent)
gnote::sync	src/addinmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/filesystemsyncserver.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/filesystemsyncserver.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/fusesyncserviceaddin.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/fusesyncserviceaddin.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/gnotesyncclient.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/gnotesyncclient.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/isyncmanager.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/isyncmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/silentui.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/silentui.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/syncdialog.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/syncdialog.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/syncmanager.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/syncmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/syncserviceaddin.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/syncserviceaddin.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/syncui.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/syncui.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync	src/synchronization/syncutils.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
gnote::sync	src/synchronization/syncutils.hpp	/^namespace sync {$/;"	n	namespace:gnote
gnote::sync::ACQUIRING_LOCK	src/synchronization/syncutils.hpp	/^    ACQUIRING_LOCK,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::CANCEL	src/synchronization/syncutils.hpp	/^    CANCEL,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
gnote::sync::COMMITTING_CHANGES	src/synchronization/syncutils.hpp	/^    COMMITTING_CHANGES,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::CONNECTING	src/synchronization/syncutils.hpp	/^    CONNECTING,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::DBG	src/synchronization/silentui.cpp	/^  void SilentUI::note_synchronized(const std::string & DBG(noteTitle), NoteSyncType DBG(type))$/;"	f	namespace:gnote::sync	signature:(type)
gnote::sync::DELETE_FROM_CLIENT	src/synchronization/syncutils.hpp	/^    DELETE_FROM_CLIENT$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::DELETE_FROM_SERVER	src/synchronization/syncutils.hpp	/^    DELETE_FROM_SERVER,$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::DELETE_SERVER_NOTES	src/synchronization/syncutils.hpp	/^    DELETE_SERVER_NOTES,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::DOWNLOADING	src/synchronization/syncutils.hpp	/^    DOWNLOADING,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::DOWNLOAD_MODIFIED	src/synchronization/syncutils.hpp	/^    DOWNLOAD_MODIFIED,$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::DOWNLOAD_NEW	src/synchronization/syncutils.hpp	/^    DOWNLOAD_NEW,$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::FAILED	src/synchronization/syncutils.hpp	/^    FAILED,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::FileSystemSyncServer	src/synchronization/filesystemsyncserver.hpp	/^class FileSystemSyncServer$/;"	c	namespace:gnote::sync	inherits:SyncServer
gnote::sync::FileSystemSyncServer::FileSystemSyncServer	src/synchronization/filesystemsyncserver.cpp	/^FileSystemSyncServer::FileSystemSyncServer(const std::string & localSyncPath)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & localSyncPath)
gnote::sync::FileSystemSyncServer::FileSystemSyncServer	src/synchronization/filesystemsyncserver.hpp	/^  explicit FileSystemSyncServer(const std::string & path);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const std::string & path)
gnote::sync::FileSystemSyncServer::begin_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::begin_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::cancel_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::cancel_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::cleanup_old_sync	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::cleanup_old_sync(const SyncLockInfo &)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const SyncLockInfo &)
gnote::sync::FileSystemSyncServer::cleanup_old_sync	src/synchronization/filesystemsyncserver.hpp	/^  void cleanup_old_sync(const SyncLockInfo & syncLockInfo);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const SyncLockInfo & syncLockInfo)
gnote::sync::FileSystemSyncServer::commit_sync_transaction	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::commit_sync_transaction()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::create	src/synchronization/filesystemsyncserver.cpp	/^SyncServer::Ptr FileSystemSyncServer::create(const std::string & path)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & path)
gnote::sync::FileSystemSyncServer::create	src/synchronization/filesystemsyncserver.hpp	/^  static SyncServer::Ptr create(const std::string & path);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:public	signature:(const std::string & path)
gnote::sync::FileSystemSyncServer::current_sync_lock	src/synchronization/filesystemsyncserver.cpp	/^SyncLockInfo FileSystemSyncServer::current_sync_lock()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::delete_notes	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::delete_notes(const std::list<std::string> & deletedNoteUUIDs)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::list<std::string> & deletedNoteUUIDs)
gnote::sync::FileSystemSyncServer::get_all_note_uuids	src/synchronization/filesystemsyncserver.cpp	/^std::list<std::string> FileSystemSyncServer::get_all_note_uuids()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::get_note_updates_since	src/synchronization/filesystemsyncserver.cpp	/^std::map<std::string, NoteUpdate> FileSystemSyncServer::get_note_updates_since(int revision)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int revision)
gnote::sync::FileSystemSyncServer::get_revision_dir_path	src/synchronization/filesystemsyncserver.cpp	/^std::string FileSystemSyncServer::get_revision_dir_path(int rev)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int rev)
gnote::sync::FileSystemSyncServer::get_revision_dir_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string get_revision_dir_path(int rev);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(int rev)
gnote::sync::FileSystemSyncServer::id	src/synchronization/filesystemsyncserver.cpp	/^std::string FileSystemSyncServer::id()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::is_valid_xml_file	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::is_valid_xml_file(const std::string & xmlFilePath)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & xmlFilePath)
gnote::sync::FileSystemSyncServer::is_valid_xml_file	src/synchronization/filesystemsyncserver.hpp	/^  bool is_valid_xml_file(const std::string & xmlFilePath);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const std::string & xmlFilePath)
gnote::sync::FileSystemSyncServer::latest_revision	src/synchronization/filesystemsyncserver.cpp	/^int FileSystemSyncServer::latest_revision()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::lock_timeout	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::lock_timeout()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
gnote::sync::FileSystemSyncServer::lock_timeout	src/synchronization/filesystemsyncserver.hpp	/^  void lock_timeout();$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:()
gnote::sync::FileSystemSyncServer::m_cache_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_cache_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_deleted_notes	src/synchronization/filesystemsyncserver.hpp	/^  std::list<std::string> m_deleted_notes;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_initial_sync_attempt	src/synchronization/filesystemsyncserver.hpp	/^  sharp::DateTime m_initial_sync_attempt;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_last_sync_lock_hash	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_last_sync_lock_hash;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_lock_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_lock_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_lock_timeout	src/synchronization/filesystemsyncserver.hpp	/^  utils::InterruptableTimeout m_lock_timeout;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_manifest_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_manifest_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_new_revision	src/synchronization/filesystemsyncserver.hpp	/^  int m_new_revision;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_new_revision_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_new_revision_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_server_id	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_server_id;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_server_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_server_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_sync_lock	src/synchronization/filesystemsyncserver.hpp	/^  SyncLockInfo m_sync_lock;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::m_updated_notes	src/synchronization/filesystemsyncserver.hpp	/^  std::list<std::string> m_updated_notes;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual SyncLockInfo current_sync_lock() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool begin_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool cancel_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool commit_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool updates_available_since(int revision) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual int latest_revision() override; \/\/ NOTE: Only reliable during a transaction$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::list<std::string> get_all_note_uuids() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::map<std::string, NoteUpdate> get_note_updates_since(int revision) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::string id() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual void delete_notes(const std::list<std::string> & deletedNoteUUIDs) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::override	src/synchronization/filesystemsyncserver.hpp	/^  virtual void upload_notes(const std::list<Note::Ptr> & notes) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
gnote::sync::FileSystemSyncServer::update_lock_file	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::update_lock_file(const SyncLockInfo & syncLockInfo)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const SyncLockInfo & syncLockInfo)
gnote::sync::FileSystemSyncServer::update_lock_file	src/synchronization/filesystemsyncserver.hpp	/^  void update_lock_file(const SyncLockInfo & syncLockInfo);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const SyncLockInfo & syncLockInfo)
gnote::sync::FileSystemSyncServer::updates_available_since	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::updates_available_since(int revision)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int revision)
gnote::sync::FileSystemSyncServer::upload_notes	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::upload_notes(const std::list<Note::Ptr> & notes)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::list<Note::Ptr> & notes)
gnote::sync::FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.hpp	/^class FuseSyncServiceAddin$/;"	c	namespace:gnote::sync	inherits:SyncServiceAddin
gnote::sync::FuseSyncServiceAddin::DEFAULT_MOUNT_TIMEOUT_MS	src/synchronization/fusesyncserviceaddin.cpp	/^const int FuseSyncServiceAddin::DEFAULT_MOUNT_TIMEOUT_MS = 10000;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	file:
gnote::sync::FuseSyncServiceAddin::DEFAULT_MOUNT_TIMEOUT_MS	src/synchronization/fusesyncserviceaddin.hpp	/^  static const int DEFAULT_MOUNT_TIMEOUT_MS;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.cpp	/^FuseSyncServiceAddin::FuseSyncServiceAddin()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::FuseSyncServiceAddin	src/synchronization/fusesyncserviceaddin.hpp	/^  FuseSyncServiceAddin();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
gnote::sync::FuseSyncServiceAddin::create_sync_server	src/synchronization/fusesyncserviceaddin.cpp	/^SyncServer::Ptr FuseSyncServiceAddin::create_sync_server()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::fuse_mount_directory_error	src/synchronization/fusesyncserviceaddin.cpp	/^std::string FuseSyncServiceAddin::fuse_mount_directory_error()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::fuse_mount_directory_error	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_directory_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
gnote::sync::FuseSyncServiceAddin::fuse_mount_exe_name	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_exe_name() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
gnote::sync::FuseSyncServiceAddin::fuse_mount_timeout_error	src/synchronization/fusesyncserviceaddin.cpp	/^std::string FuseSyncServiceAddin::fuse_mount_timeout_error()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::fuse_mount_timeout_error	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string fuse_mount_timeout_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:public	signature:()
gnote::sync::FuseSyncServiceAddin::get_fuse_mount_exe_args	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues) = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:(const std::string & mountPath, bool fromStoredValues)
gnote::sync::FuseSyncServiceAddin::get_fuse_mount_exe_args_for_display	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual std::string get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues) = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:(const std::string & mountPath, bool fromStoredValues)
gnote::sync::FuseSyncServiceAddin::get_timeout_ms	src/synchronization/fusesyncserviceaddin.cpp	/^int FuseSyncServiceAddin::get_timeout_ms()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::get_timeout_ms	src/synchronization/fusesyncserviceaddin.hpp	/^  int get_timeout_ms();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::gnote_exit_handler	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::gnote_exit_handler()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::gnote_exit_handler	src/synchronization/fusesyncserviceaddin.hpp	/^  void gnote_exit_handler();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::initialize	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::initialize()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::initialized	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::initialized()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::is_mounted	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::is_mounted()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::is_mounted	src/synchronization/fusesyncserviceaddin.hpp	/^  bool is_mounted();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::is_supported	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::is_supported()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::m_enabled	src/synchronization/fusesyncserviceaddin.hpp	/^  bool m_enabled;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_fuse_mount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_fuse_mount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_fuse_unmount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_fuse_unmount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_initialized	src/synchronization/fusesyncserviceaddin.hpp	/^  bool m_initialized;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_mount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_mount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_mount_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::m_unmount_timeout	src/synchronization/fusesyncserviceaddin.hpp	/^  utils::InterruptableTimeout m_unmount_timeout;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
gnote::sync::FuseSyncServiceAddin::mount_fuse	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::mount_fuse(bool useStoredValues)$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:(bool useStoredValues)
gnote::sync::FuseSyncServiceAddin::mount_fuse	src/synchronization/fusesyncserviceaddin.hpp	/^  bool mount_fuse(bool useStoredValues);$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:(bool useStoredValues)
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual SyncServer::Ptr create_sync_server() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool is_supported() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool save_configuration() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void post_sync_cleanup() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void reset_configuration() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
gnote::sync::FuseSyncServiceAddin::post_sync_cleanup	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::post_sync_cleanup()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::prepare_mount_path	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::prepare_mount_path()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::prepare_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  void prepare_mount_path();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::redirect_standard_error	src/synchronization/fusesyncserviceaddin.hpp	/^  static void redirect_standard_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::reset_configuration	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::reset_configuration()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::reset_configuration_values	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void reset_configuration_values() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
gnote::sync::FuseSyncServiceAddin::save_configuration	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::save_configuration()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::save_configuration_values	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void save_configuration_values() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
gnote::sync::FuseSyncServiceAddin::set_up_mount_path	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::set_up_mount_path()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::set_up_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  void set_up_mount_path();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::shutdown	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::shutdown()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::unmount_timeout	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::unmount_timeout()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote::sync::FuseSyncServiceAddin::unmount_timeout	src/synchronization/fusesyncserviceaddin.hpp	/^  void unmount_timeout();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnote::sync::FuseSyncServiceAddin::verify_configuration	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool verify_configuration() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
gnote::sync::FuseSyncServiceAddin::wait_for_exit	src/synchronization/fusesyncserviceaddin.hpp	/^  static bool wait_for_exit(Glib::Pid, int timeout, int *exit_code);$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:(Glib::Pid, int timeout, int *exit_code)
gnote::sync::GnoteSyncClient	src/synchronization/gnotesyncclient.hpp	/^  class GnoteSyncClient$/;"	c	namespace:gnote::sync	inherits:SyncClient
gnote::sync::GnoteSyncClient::GnoteSyncClient	src/synchronization/gnotesyncclient.cpp	/^  GnoteSyncClient::GnoteSyncClient()$/;"	f	class:gnote::sync::GnoteSyncClient	signature:()
gnote::sync::GnoteSyncClient::GnoteSyncClient	src/synchronization/gnotesyncclient.hpp	/^    GnoteSyncClient();$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:()
gnote::sync::GnoteSyncClient::LOCAL_MANIFEST_FILE_NAME	src/synchronization/gnotesyncclient.cpp	/^  const char * GnoteSyncClient::LOCAL_MANIFEST_FILE_NAME = "manifest.xml";$/;"	m	class:gnote::sync::GnoteSyncClient	file:
gnote::sync::GnoteSyncClient::LOCAL_MANIFEST_FILE_NAME	src/synchronization/gnotesyncclient.hpp	/^    static const char *LOCAL_MANIFEST_FILE_NAME;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::associated_server_id	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::associated_server_id(const std::string & server_id)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & server_id)
gnote::sync::GnoteSyncClient::create	src/synchronization/gnotesyncclient.cpp	/^  SyncClient::Ptr GnoteSyncClient::create(NoteManagerBase & manager)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(NoteManagerBase & manager)
gnote::sync::GnoteSyncClient::create	src/synchronization/gnotesyncclient.hpp	/^    static SyncClient::Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:public	signature:(NoteManagerBase &)
gnote::sync::GnoteSyncClient::get_revision	src/synchronization/gnotesyncclient.cpp	/^  int GnoteSyncClient::get_revision(const NoteBase::Ptr & note)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & note)
gnote::sync::GnoteSyncClient::init	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::init(NoteManagerBase & manager)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(NoteManagerBase & manager)
gnote::sync::GnoteSyncClient::init	src/synchronization/gnotesyncclient.hpp	/^    void init(NoteManagerBase &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:(NoteManagerBase &)
gnote::sync::GnoteSyncClient::last_sync_date	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::last_sync_date(const sharp::DateTime & date)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const sharp::DateTime & date)
gnote::sync::GnoteSyncClient::last_synchronized_revision	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::last_synchronized_revision(int revision)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(int revision)
gnote::sync::GnoteSyncClient::m_deleted_notes	src/synchronization/gnotesyncclient.hpp	/^    std::map<std::string, std::string> m_deleted_notes;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::m_file_revisions	src/synchronization/gnotesyncclient.hpp	/^    std::map<std::string, int> m_file_revisions;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::m_file_watcher	src/synchronization/gnotesyncclient.hpp	/^    Glib::RefPtr<Gio::FileMonitor> m_file_watcher;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::m_last_sync_date	src/synchronization/gnotesyncclient.hpp	/^    sharp::DateTime m_last_sync_date;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::m_last_sync_rev	src/synchronization/gnotesyncclient.hpp	/^    int m_last_sync_rev;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::m_local_manifest_file_path	src/synchronization/gnotesyncclient.hpp	/^    std::string m_local_manifest_file_path;$/;"	m	class:gnote::sync::GnoteSyncClient	access:protected
gnote::sync::GnoteSyncClient::m_server_id	src/synchronization/gnotesyncclient.hpp	/^    std::string m_server_id;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
gnote::sync::GnoteSyncClient::note_deleted_handler	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::note_deleted_handler(const NoteBase::Ptr & deletedNote)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & deletedNote)
gnote::sync::GnoteSyncClient::note_deleted_handler	src/synchronization/gnotesyncclient.hpp	/^    void note_deleted_handler(const NoteBase::Ptr &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const NoteBase::Ptr &)
gnote::sync::GnoteSyncClient::on_changed	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::on_changed(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&,$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&, Gio::FileMonitorEvent)
gnote::sync::GnoteSyncClient::on_changed	src/synchronization/gnotesyncclient.hpp	/^    void on_changed(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&,$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&, Gio::FileMonitorEvent)
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual int get_revision(const NoteBase::Ptr & note) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual void associated_server_id(const std::string &) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual void last_sync_date(const sharp::DateTime &) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual void last_synchronized_revision(int) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual void reset() override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::override	src/synchronization/gnotesyncclient.hpp	/^    virtual void set_revision(const NoteBase::Ptr & note, int revision) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
gnote::sync::GnoteSyncClient::parse	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::parse(const std::string & manifest_path)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & manifest_path)
gnote::sync::GnoteSyncClient::parse	src/synchronization/gnotesyncclient.hpp	/^    void parse(const std::string & manifest_path);$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:(const std::string & manifest_path)
gnote::sync::GnoteSyncClient::read_deleted_note_atts	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_deleted_note_atts(sharp::XmlReader & reader)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader)
gnote::sync::GnoteSyncClient::read_deleted_note_atts	src/synchronization/gnotesyncclient.hpp	/^    void read_deleted_note_atts(sharp::XmlReader & reader);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader)
gnote::sync::GnoteSyncClient::read_notes	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_notes(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))
gnote::sync::GnoteSyncClient::read_notes	src/synchronization/gnotesyncclient.hpp	/^    void read_notes(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&));$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))
gnote::sync::GnoteSyncClient::read_updated_note_atts	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_updated_note_atts(sharp::XmlReader & reader)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader)
gnote::sync::GnoteSyncClient::read_updated_note_atts	src/synchronization/gnotesyncclient.hpp	/^    void read_updated_note_atts(sharp::XmlReader & reader);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader)
gnote::sync::GnoteSyncClient::reset	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::reset()$/;"	f	class:gnote::sync::GnoteSyncClient	signature:()
gnote::sync::GnoteSyncClient::set_revision	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::set_revision(const NoteBase::Ptr & note, int revision)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & note, int revision)
gnote::sync::GnoteSyncClient::write	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::write(const std::string & manifest_path)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & manifest_path)
gnote::sync::GnoteSyncClient::write	src/synchronization/gnotesyncclient.hpp	/^    void write(const std::string & manifest_path);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const std::string & manifest_path)
gnote::sync::GnoteSyncException	src/synchronization/isyncmanager.hpp	/^class GnoteSyncException$/;"	c	namespace:gnote::sync	inherits:std::runtime_error
gnote::sync::GnoteSyncException::GnoteSyncException	src/synchronization/isyncmanager.hpp	/^  GnoteSyncException(const char * what_arg) : std::runtime_error(what_arg){}$/;"	f	class:gnote::sync::GnoteSyncException	access:public	signature:(const char * what_arg)
gnote::sync::IDLE	src/synchronization/syncutils.hpp	/^    IDLE,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::ISyncManager	src/synchronization/isyncmanager.hpp	/^class ISyncManager$/;"	c	namespace:gnote::sync	inherits:base::Singleton
gnote::sync::ISyncManager::perform_synchronization	src/synchronization/isyncmanager.hpp	/^  virtual void perform_synchronization(const SyncUI::Ptr & sync_ui) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(const SyncUI::Ptr & sync_ui)
gnote::sync::ISyncManager::reset_client	src/synchronization/isyncmanager.hpp	/^  virtual void reset_client() = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:()
gnote::sync::ISyncManager::resolve_conflict	src/synchronization/isyncmanager.hpp	/^  virtual void resolve_conflict(SyncTitleConflictResolution resolution) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(SyncTitleConflictResolution resolution)
gnote::sync::ISyncManager::state	src/synchronization/isyncmanager.hpp	/^  virtual SyncState state() const = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:() const
gnote::sync::ISyncManager::synchronized_note_xml_matches	src/synchronization/isyncmanager.hpp	/^  virtual bool synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(const std::string & noteXml1, const std::string & noteXml2)
gnote::sync::ISyncManager::~ISyncManager	src/synchronization/isyncmanager.cpp	/^ISyncManager::~ISyncManager()$/;"	f	class:gnote::sync::ISyncManager	signature:()
gnote::sync::ISyncManager::~ISyncManager	src/synchronization/isyncmanager.hpp	/^  virtual ~ISyncManager();$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:()
gnote::sync::LOCKED	src/synchronization/syncutils.hpp	/^    LOCKED,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::NO_CONFIGURED_SYNC_SERVICE	src/synchronization/syncutils.hpp	/^    NO_CONFIGURED_SYNC_SERVICE,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::NoteSyncType	src/synchronization/syncutils.hpp	/^  enum NoteSyncType {$/;"	g	namespace:gnote::sync
gnote::sync::NoteUpdate	src/synchronization/syncutils.hpp	/^  class NoteUpdate$/;"	c	namespace:gnote::sync
gnote::sync::NoteUpdate::NoteUpdate	src/synchronization/syncutils.cpp	/^  NoteUpdate::NoteUpdate(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)
gnote::sync::NoteUpdate::NoteUpdate	src/synchronization/syncutils.hpp	/^    NoteUpdate(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision);$/;"	p	class:gnote::sync::NoteUpdate	access:public	signature:(const std::string & xml_content, const std::string & title, const std::string & uuid, int latest_revision)
gnote::sync::NoteUpdate::basically_equal_to	src/synchronization/syncutils.cpp	/^  bool NoteUpdate::basically_equal_to(const Note::Ptr & existing_note)$/;"	f	class:gnote::sync::NoteUpdate	signature:(const Note::Ptr & existing_note)
gnote::sync::NoteUpdate::basically_equal_to	src/synchronization/syncutils.hpp	/^    bool basically_equal_to(const Note::Ptr & existing_note);$/;"	p	class:gnote::sync::NoteUpdate	access:public	signature:(const Note::Ptr & existing_note)
gnote::sync::NoteUpdate::compare_tags	src/synchronization/syncutils.cpp	/^  bool NoteUpdate::compare_tags(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const
gnote::sync::NoteUpdate::compare_tags	src/synchronization/syncutils.hpp	/^    bool compare_tags(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const;$/;"	p	class:gnote::sync::NoteUpdate	access:private	signature:(const std::map<std::string, Tag::Ptr> set1, const std::map<std::string, Tag::Ptr> set2) const
gnote::sync::NoteUpdate::get_inner_content	src/synchronization/syncutils.cpp	/^  std::string NoteUpdate::get_inner_content(const std::string & full_content_element) const$/;"	f	class:gnote::sync::NoteUpdate	signature:(const std::string & full_content_element) const
gnote::sync::NoteUpdate::get_inner_content	src/synchronization/syncutils.hpp	/^    std::string get_inner_content(const std::string & full_content_element) const;$/;"	p	class:gnote::sync::NoteUpdate	access:private	signature:(const std::string & full_content_element) const
gnote::sync::NoteUpdate::m_latest_revision	src/synchronization/syncutils.hpp	/^    int m_latest_revision;$/;"	m	class:gnote::sync::NoteUpdate	access:public
gnote::sync::NoteUpdate::m_title	src/synchronization/syncutils.hpp	/^    std::string m_title;$/;"	m	class:gnote::sync::NoteUpdate	access:public
gnote::sync::NoteUpdate::m_uuid	src/synchronization/syncutils.hpp	/^    std::string m_uuid; \/\/needed?$/;"	m	class:gnote::sync::NoteUpdate	access:public
gnote::sync::NoteUpdate::m_xml_content	src/synchronization/syncutils.hpp	/^    std::string m_xml_content;\/\/Empty if deleted?$/;"	m	class:gnote::sync::NoteUpdate	access:public
gnote::sync::OVERWRITE_EXISTING	src/synchronization/syncutils.hpp	/^    OVERWRITE_EXISTING,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
gnote::sync::PREPARE_DOWNLOAD	src/synchronization/syncutils.hpp	/^    PREPARE_DOWNLOAD,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::PREPARE_UPLOAD	src/synchronization/syncutils.hpp	/^    PREPARE_UPLOAD,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::RENAME_EXISTING_AND_UPDATE	src/synchronization/syncutils.hpp	/^    RENAME_EXISTING_AND_UPDATE$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
gnote::sync::RENAME_EXISTING_NO_UPDATE	src/synchronization/syncutils.hpp	/^    RENAME_EXISTING_NO_UPDATE,$/;"	e	enum:gnote::sync::SyncTitleConflictResolution
gnote::sync::SUCCEEDED	src/synchronization/syncutils.hpp	/^    SUCCEEDED,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::SYNC_SERVER_CREATION_FAILED	src/synchronization/syncutils.hpp	/^    SYNC_SERVER_CREATION_FAILED,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::SilentUI	src/synchronization/silentui.hpp	/^  class SilentUI$/;"	c	namespace:gnote::sync	inherits:SyncUI
gnote::sync::SilentUI::DBG	src/synchronization/silentui.cpp	/^  void SilentUI::note_synchronized(const std::string & DBG(noteTitle), NoteSyncType DBG(type))$/;"	p	class:gnote::sync::SilentUI	file:	signature:(noteTitle)
gnote::sync::SilentUI::SilentUI	src/synchronization/silentui.cpp	/^  SilentUI::SilentUI(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SilentUI	signature:(NoteManagerBase & manager)
gnote::sync::SilentUI::SilentUI	src/synchronization/silentui.hpp	/^    explicit SilentUI(NoteManagerBase &);$/;"	p	class:gnote::sync::SilentUI	access:private	signature:(NoteManagerBase &)
gnote::sync::SilentUI::create	src/synchronization/silentui.cpp	/^  SyncUI::Ptr SilentUI::create(NoteManagerBase & nm)$/;"	f	class:gnote::sync::SilentUI	signature:(NoteManagerBase & nm)
gnote::sync::SilentUI::create	src/synchronization/silentui.hpp	/^    static SyncUI::Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::SilentUI	access:public	signature:(NoteManagerBase &)
gnote::sync::SilentUI::m_ui_disabled	src/synchronization/silentui.hpp	/^    bool m_ui_disabled;$/;"	m	class:gnote::sync::SilentUI	access:private
gnote::sync::SilentUI::note_conflict_detected	src/synchronization/silentui.cpp	/^  void SilentUI::note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	f	class:gnote::sync::SilentUI	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> &)
gnote::sync::SilentUI::on_connecting	src/synchronization/silentui.cpp	/^  void SilentUI::on_connecting()$/;"	f	class:gnote::sync::SilentUI	signature:()
gnote::sync::SilentUI::on_connecting	src/synchronization/silentui.hpp	/^    void on_connecting();$/;"	p	class:gnote::sync::SilentUI	access:private	signature:()
gnote::sync::SilentUI::on_idle	src/synchronization/silentui.cpp	/^  void SilentUI::on_idle()$/;"	f	class:gnote::sync::SilentUI	signature:()
gnote::sync::SilentUI::on_idle	src/synchronization/silentui.hpp	/^    void on_idle();$/;"	p	class:gnote::sync::SilentUI	access:private	signature:()
gnote::sync::SilentUI::override	src/synchronization/silentui.hpp	/^                                        const std::list<std::string> & noteUpdateTitles) override;$/;"	m	class:gnote::sync::SilentUI	access:private
gnote::sync::SilentUI::override	src/synchronization/silentui.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) override;$/;"	m	class:gnote::sync::SilentUI	access:private
gnote::sync::SilentUI::override	src/synchronization/silentui.hpp	/^    virtual void present_ui() override;$/;"	m	class:gnote::sync::SilentUI	access:private
gnote::sync::SilentUI::override	src/synchronization/silentui.hpp	/^    virtual void sync_state_changed(SyncState state) override;$/;"	m	class:gnote::sync::SilentUI	access:private
gnote::sync::SilentUI::present_ui	src/synchronization/silentui.cpp	/^  void SilentUI::present_ui()$/;"	f	class:gnote::sync::SilentUI	signature:()
gnote::sync::SilentUI::sync_state_changed	src/synchronization/silentui.cpp	/^  void SilentUI::sync_state_changed(SyncState state)$/;"	f	class:gnote::sync::SilentUI	signature:(SyncState state)
gnote::sync::SyncClient	src/synchronization/isyncmanager.hpp	/^class SyncClient$/;"	c	namespace:gnote::sync
gnote::sync::SyncClient::Ptr	src/synchronization/isyncmanager.hpp	/^  typedef shared_ptr<SyncClient> Ptr;$/;"	t	class:gnote::sync::SyncClient	access:public
gnote::sync::SyncClient::associated_server_id	src/synchronization/isyncmanager.hpp	/^  virtual std::string associated_server_id() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncClient::associated_server_id	src/synchronization/isyncmanager.hpp	/^  virtual void associated_server_id(const std::string &) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const std::string &)
gnote::sync::SyncClient::deleted_note_titles	src/synchronization/isyncmanager.hpp	/^  virtual std::map<std::string, std::string> deleted_note_titles() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncClient::get_revision	src/synchronization/isyncmanager.hpp	/^  virtual int get_revision(const NoteBase::Ptr & note) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const NoteBase::Ptr & note)
gnote::sync::SyncClient::last_sync_date	src/synchronization/isyncmanager.hpp	/^  virtual sharp::DateTime last_sync_date() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncClient::last_sync_date	src/synchronization/isyncmanager.hpp	/^  virtual void last_sync_date(const sharp::DateTime &) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const sharp::DateTime &)
gnote::sync::SyncClient::last_synchronized_revision	src/synchronization/isyncmanager.hpp	/^  virtual int last_synchronized_revision() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncClient::last_synchronized_revision	src/synchronization/isyncmanager.hpp	/^  virtual void last_synchronized_revision(int) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(int)
gnote::sync::SyncClient::reset	src/synchronization/isyncmanager.hpp	/^  virtual void reset() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncClient::set_revision	src/synchronization/isyncmanager.hpp	/^  virtual void set_revision(const NoteBase::Ptr & note, int revision) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const NoteBase::Ptr & note, int revision)
gnote::sync::SyncClient::~SyncClient	src/synchronization/isyncmanager.cpp	/^SyncClient::~SyncClient()$/;"	f	class:gnote::sync::SyncClient	signature:()
gnote::sync::SyncClient::~SyncClient	src/synchronization/isyncmanager.hpp	/^  virtual ~SyncClient();$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
gnote::sync::SyncDialog	src/synchronization/syncdialog.hpp	/^  class SyncDialog$/;"	c	namespace:gnote::sync	inherits:Gtk::Dialog,SyncUI
gnote::sync::SyncDialog::Ptr	src/synchronization/syncdialog.hpp	/^    typedef shared_ptr<SyncDialog> Ptr;$/;"	t	class:gnote::sync::SyncDialog	access:public
gnote::sync::SyncDialog::SyncDialog	src/synchronization/syncdialog.cpp	/^SyncDialog::SyncDialog(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncDialog	signature:(NoteManagerBase & manager)
gnote::sync::SyncDialog::SyncDialog	src/synchronization/syncdialog.hpp	/^    explicit SyncDialog(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(NoteManagerBase &)
gnote::sync::SyncDialog::add_update_item	src/synchronization/syncdialog.cpp	/^void SyncDialog::add_update_item(const std::string & title, std::string & status)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & title, std::string & status)
gnote::sync::SyncDialog::add_update_item	src/synchronization/syncdialog.hpp	/^    void add_update_item(const std::string & title, std::string & status);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string & title, std::string & status)
gnote::sync::SyncDialog::create	src/synchronization/syncdialog.cpp	/^SyncDialog::Ptr SyncDialog::create(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncDialog	signature:(NoteManagerBase & m)
gnote::sync::SyncDialog::create	src/synchronization/syncdialog.hpp	/^    static Ptr create(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(NoteManagerBase &)
gnote::sync::SyncDialog::header_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::header_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
gnote::sync::SyncDialog::header_text	src/synchronization/syncdialog.hpp	/^    void header_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
gnote::sync::SyncDialog::m_close_button	src/synchronization/syncdialog.hpp	/^    Gtk::Button *m_close_button;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_expander	src/synchronization/syncdialog.hpp	/^    Gtk::Expander *m_expander;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_header_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_header_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_image	src/synchronization/syncdialog.hpp	/^    Gtk::Image *m_image;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_message_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_message_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_model	src/synchronization/syncdialog.hpp	/^    Glib::RefPtr<Gtk::TreeStore> m_model;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_progress_bar	src/synchronization/syncdialog.hpp	/^    Gtk::ProgressBar *m_progress_bar;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_progress_bar_timeout_id	src/synchronization/syncdialog.hpp	/^    unsigned m_progress_bar_timeout_id;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::m_progress_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_progress_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
gnote::sync::SyncDialog::message_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::message_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
gnote::sync::SyncDialog::message_text	src/synchronization/syncdialog.hpp	/^    void message_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
gnote::sync::SyncDialog::note_conflict_detected	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles)
gnote::sync::SyncDialog::note_conflict_detected_	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_conflict_detected_($/;"	f	class:gnote::sync::SyncDialog	signature:( const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles, SyncTitleConflictResolution savedBehavior, SyncTitleConflictResolution resolution, std::exception **mainThreadException)
gnote::sync::SyncDialog::note_conflict_detected_	src/synchronization/syncdialog.hpp	/^    void note_conflict_detected_(const Note::Ptr & localConflictNote,$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles, SyncTitleConflictResolution savedBehavior, SyncTitleConflictResolution resolution, std::exception **mainThreadException)
gnote::sync::SyncDialog::note_synchronized	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_synchronized(const std::string & noteTitle, NoteSyncType type)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & noteTitle, NoteSyncType type)
gnote::sync::SyncDialog::on_expander_activated	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_expander_activated(GtkExpander*, gpointer data)$/;"	f	class:gnote::sync::SyncDialog	signature:(GtkExpander*, gpointer data)
gnote::sync::SyncDialog::on_expander_activated	src/synchronization/syncdialog.hpp	/^    static void on_expander_activated(GtkExpander*, gpointer);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(GtkExpander*, gpointer)
gnote::sync::SyncDialog::on_pulse_progress_bar	src/synchronization/syncdialog.cpp	/^bool SyncDialog::on_pulse_progress_bar()$/;"	f	class:gnote::sync::SyncDialog	signature:()
gnote::sync::SyncDialog::on_pulse_progress_bar	src/synchronization/syncdialog.hpp	/^    bool on_pulse_progress_bar();$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:()
gnote::sync::SyncDialog::on_realize	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_realize()$/;"	f	class:gnote::sync::SyncDialog	signature:()
gnote::sync::SyncDialog::on_row_activated	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_row_activated(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn*)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn*)
gnote::sync::SyncDialog::on_row_activated	src/synchronization/syncdialog.hpp	/^    void on_row_activated(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn *column);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn *column)
gnote::sync::SyncDialog::override	src/synchronization/syncdialog.hpp	/^                                        const std::list<std::string> & noteUpdateTitles) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
gnote::sync::SyncDialog::override	src/synchronization/syncdialog.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
gnote::sync::SyncDialog::override	src/synchronization/syncdialog.hpp	/^    virtual void on_realize() override;$/;"	m	class:gnote::sync::SyncDialog	access:protected
gnote::sync::SyncDialog::override	src/synchronization/syncdialog.hpp	/^    virtual void present_ui() override;$/;"	m	class:gnote::sync::SyncDialog	access:public
gnote::sync::SyncDialog::override	src/synchronization/syncdialog.hpp	/^    virtual void sync_state_changed(SyncState state) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
gnote::sync::SyncDialog::present_note	src/synchronization/syncdialog.cpp	/^void SyncDialog::present_note(const Note::Ptr & note)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & note)
gnote::sync::SyncDialog::present_note	src/synchronization/syncdialog.hpp	/^    void present_note(const Note::Ptr &);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr &)
gnote::sync::SyncDialog::present_ui	src/synchronization/syncdialog.cpp	/^void SyncDialog::present_ui()$/;"	f	class:gnote::sync::SyncDialog	signature:()
gnote::sync::SyncDialog::progress_text	src/synchronization/syncdialog.cpp	/^std::string SyncDialog::progress_text() const$/;"	f	class:gnote::sync::SyncDialog	signature:() const
gnote::sync::SyncDialog::progress_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::progress_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
gnote::sync::SyncDialog::progress_text	src/synchronization/syncdialog.hpp	/^    std::string progress_text() const;$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:() const
gnote::sync::SyncDialog::progress_text	src/synchronization/syncdialog.hpp	/^    void progress_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
gnote::sync::SyncDialog::rename_note	src/synchronization/syncdialog.cpp	/^void SyncDialog::rename_note(const Note::Ptr & note, const std::string & newTitle, bool)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & note, const std::string & newTitle, bool)
gnote::sync::SyncDialog::rename_note	src/synchronization/syncdialog.hpp	/^    void rename_note(const Note::Ptr & note, const std::string & newTitle, bool updateReferencingNotes);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr & note, const std::string & newTitle, bool updateReferencingNotes)
gnote::sync::SyncDialog::sync_state_changed	src/synchronization/syncdialog.cpp	/^void SyncDialog::sync_state_changed(SyncState state)$/;"	f	class:gnote::sync::SyncDialog	signature:(SyncState state)
gnote::sync::SyncDialog::sync_state_changed_	src/synchronization/syncdialog.cpp	/^void SyncDialog::sync_state_changed_(SyncState state)$/;"	f	class:gnote::sync::SyncDialog	signature:(SyncState state)
gnote::sync::SyncDialog::sync_state_changed_	src/synchronization/syncdialog.hpp	/^    void sync_state_changed_(SyncState state);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(SyncState state)
gnote::sync::SyncDialog::treeview_col1_data_func	src/synchronization/syncdialog.cpp	/^void SyncDialog::treeview_col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:gnote::sync::SyncDialog	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
gnote::sync::SyncDialog::treeview_col1_data_func	src/synchronization/syncdialog.hpp	/^    void treeview_col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
gnote::sync::SyncDialog::treeview_col2_data_func	src/synchronization/syncdialog.cpp	/^void SyncDialog::treeview_col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:gnote::sync::SyncDialog	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
gnote::sync::SyncDialog::treeview_col2_data_func	src/synchronization/syncdialog.hpp	/^    void treeview_col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
gnote::sync::SyncLockInfo	src/synchronization/isyncmanager.hpp	/^class SyncLockInfo$/;"	c	namespace:gnote::sync
gnote::sync::SyncLockInfo::SyncLockInfo	src/synchronization/isyncmanager.cpp	/^SyncLockInfo::SyncLockInfo()$/;"	f	class:gnote::sync::SyncLockInfo	signature:()
gnote::sync::SyncLockInfo::SyncLockInfo	src/synchronization/isyncmanager.hpp	/^  SyncLockInfo();$/;"	p	class:gnote::sync::SyncLockInfo	access:public	signature:()
gnote::sync::SyncLockInfo::client_id	src/synchronization/isyncmanager.hpp	/^  std::string client_id;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
gnote::sync::SyncLockInfo::duration	src/synchronization/isyncmanager.hpp	/^  sharp::TimeSpan duration;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
gnote::sync::SyncLockInfo::hash_string	src/synchronization/isyncmanager.cpp	/^std::string SyncLockInfo::hash_string()$/;"	f	class:gnote::sync::SyncLockInfo	signature:()
gnote::sync::SyncLockInfo::hash_string	src/synchronization/isyncmanager.hpp	/^  std::string hash_string();$/;"	p	class:gnote::sync::SyncLockInfo	access:public	signature:()
gnote::sync::SyncLockInfo::renew_count	src/synchronization/isyncmanager.hpp	/^  int renew_count;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
gnote::sync::SyncLockInfo::revision	src/synchronization/isyncmanager.hpp	/^  int revision;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
gnote::sync::SyncLockInfo::transaction_id	src/synchronization/isyncmanager.hpp	/^  std::string transaction_id;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
gnote::sync::SyncManager	src/synchronization/syncmanager.hpp	/^  class SyncManager$/;"	c	namespace:gnote::sync	inherits:ISyncManager
gnote::sync::SyncManager::SyncManager	src/synchronization/syncmanager.cpp	/^  SyncManager::SyncManager(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & m)
gnote::sync::SyncManager::SyncManager	src/synchronization/syncmanager.hpp	/^    SyncManager(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:public	signature:(NoteManagerBase &)
gnote::sync::SyncManager::_init	src/synchronization/syncmanager.cpp	/^  void SyncManager::_init(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & manager)
gnote::sync::SyncManager::_init	src/synchronization/syncmanager.hpp	/^    void _init(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(NoteManagerBase &)
gnote::sync::SyncManager::_obj	src/synchronization/syncmanager.hpp	/^    static SyncManager & _obj()$/;"	f	class:gnote::sync::SyncManager	access:private	signature:()
gnote::sync::SyncManager::background_sync_checker	src/synchronization/syncmanager.cpp	/^  void SyncManager::background_sync_checker()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::background_sync_checker	src/synchronization/syncmanager.hpp	/^    void background_sync_checker();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
gnote::sync::SyncManager::connect_system_signals	src/synchronization/syncmanager.cpp	/^  void SyncManager::connect_system_signals()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::connect_system_signals	src/synchronization/syncmanager.hpp	/^    virtual void connect_system_signals();$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:()
gnote::sync::SyncManager::create_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::create_note(const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::create_note	src/synchronization/syncmanager.hpp	/^    void create_note(const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::create_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::create_note_in_main_thread(const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::create_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void create_note_in_main_thread(const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::delete_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_note(const Note::Ptr & existingNote)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote)
gnote::sync::SyncManager::delete_note	src/synchronization/syncmanager.hpp	/^    void delete_note(const Note::Ptr & existingNote);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote)
gnote::sync::SyncManager::delete_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_note_in_main_thread(const Note::Ptr & existingNote)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote)
gnote::sync::SyncManager::delete_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void delete_note_in_main_thread(const Note::Ptr & existingNote);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote)
gnote::sync::SyncManager::delete_notes	src/synchronization/syncmanager.cpp	/^  void SyncManager::delete_notes(const SyncServer::Ptr & server)$/;"	f	class:gnote::sync::SyncManager	signature:(const SyncServer::Ptr & server)
gnote::sync::SyncManager::delete_notes	src/synchronization/syncmanager.hpp	/^    void delete_notes(const SyncServer::Ptr & server);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const SyncServer::Ptr & server)
gnote::sync::SyncManager::find_note_by_uuid	src/synchronization/syncmanager.cpp	/^  NoteBase::Ptr SyncManager::find_note_by_uuid(const std::string & uuid)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & uuid)
gnote::sync::SyncManager::find_note_by_uuid	src/synchronization/syncmanager.hpp	/^    NoteBase::Ptr find_note_by_uuid(const std::string & uuid);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const std::string & uuid)
gnote::sync::SyncManager::get_configured_sync_service	src/synchronization/syncmanager.cpp	/^  SyncServiceAddin *SyncManager::get_configured_sync_service()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::get_configured_sync_service	src/synchronization/syncmanager.hpp	/^    virtual SyncServiceAddin *get_configured_sync_service();$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:()
gnote::sync::SyncManager::get_sync_service_addin	src/synchronization/syncmanager.cpp	/^  SyncServiceAddin *SyncManager::get_sync_service_addin(const std::string & sync_service_id)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & sync_service_id)
gnote::sync::SyncManager::get_sync_service_addin	src/synchronization/syncmanager.hpp	/^    virtual SyncServiceAddin *get_sync_service_addin(const std::string & sync_service_id);$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:(const std::string & sync_service_id)
gnote::sync::SyncManager::get_synchronized_xml_bits	src/synchronization/syncmanager.cpp	/^  void SyncManager::get_synchronized_xml_bits(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)
gnote::sync::SyncManager::get_synchronized_xml_bits	src/synchronization/syncmanager.hpp	/^    void get_synchronized_xml_bits(const std::string & noteXml, std::string & title, std::string & tags, std::string & content);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const std::string & noteXml, std::string & title, std::string & tags, std::string & content)
gnote::sync::SyncManager::handle_note_buffer_changed	src/synchronization/syncmanager.cpp	/^  void SyncManager::handle_note_buffer_changed(const NoteBase::Ptr &)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr &)
gnote::sync::SyncManager::handle_note_buffer_changed	src/synchronization/syncmanager.hpp	/^    void handle_note_buffer_changed(const NoteBase::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & note)
gnote::sync::SyncManager::handle_note_saved_or_deleted	src/synchronization/syncmanager.cpp	/^  void SyncManager::handle_note_saved_or_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr &)
gnote::sync::SyncManager::handle_note_saved_or_deleted	src/synchronization/syncmanager.hpp	/^    void handle_note_saved_or_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & note)
gnote::sync::SyncManager::init	src/synchronization/syncmanager.cpp	/^  void SyncManager::init(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & m)
gnote::sync::SyncManager::init	src/synchronization/syncmanager.hpp	/^    static void init(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:public	signature:(NoteManagerBase &)
gnote::sync::SyncManager::initialize_sync_service_addins	src/synchronization/syncmanager.cpp	/^  void SyncManager::initialize_sync_service_addins(NoteManagerBase & note_manager)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & note_manager)
gnote::sync::SyncManager::initialize_sync_service_addins	src/synchronization/syncmanager.hpp	/^    virtual void initialize_sync_service_addins(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:(NoteManagerBase &)
gnote::sync::SyncManager::m_autosync_timeout_pref_minutes	src/synchronization/syncmanager.hpp	/^    int m_autosync_timeout_pref_minutes;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_autosync_timer	src/synchronization/syncmanager.hpp	/^    utils::InterruptableTimeout m_autosync_timer;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_client	src/synchronization/syncmanager.hpp	/^    SyncClient::Ptr m_client;$/;"	m	class:gnote::sync::SyncManager	access:protected
gnote::sync::SyncManager::m_conflict_resolution	src/synchronization/syncmanager.hpp	/^    SyncTitleConflictResolution m_conflict_resolution;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_current_autosync_timeout_minutes	src/synchronization/syncmanager.hpp	/^    int m_current_autosync_timeout_minutes;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_last_background_check	src/synchronization/syncmanager.hpp	/^    sharp::DateTime m_last_background_check;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_note_manager	src/synchronization/syncmanager.hpp	/^    NoteManagerBase & m_note_manager;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_state	src/synchronization/syncmanager.hpp	/^    SyncState m_state;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_sync_thread	src/synchronization/syncmanager.hpp	/^    Glib::Thread *m_sync_thread;$/;"	m	class:gnote::sync::SyncManager	access:private
gnote::sync::SyncManager::m_sync_ui	src/synchronization/syncmanager.hpp	/^    SyncUI::Ptr m_sync_ui;$/;"	m	class:gnote::sync::SyncManager	access:protected
gnote::sync::SyncManager::note_mgr	src/synchronization/syncmanager.cpp	/^  NoteManagerBase & SyncManager::note_mgr()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::note_mgr	src/synchronization/syncmanager.hpp	/^    NoteManagerBase & note_mgr();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
gnote::sync::SyncManager::note_save	src/synchronization/syncmanager.cpp	/^  void SyncManager::note_save(const Note::Ptr & note)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & note)
gnote::sync::SyncManager::note_save	src/synchronization/syncmanager.hpp	/^    static void note_save(const Note::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & note)
gnote::sync::SyncManager::override	src/synchronization/syncmanager.hpp	/^    virtual bool synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2) override;$/;"	m	class:gnote::sync::SyncManager	access:public
gnote::sync::SyncManager::override	src/synchronization/syncmanager.hpp	/^    virtual void perform_synchronization(const SyncUI::Ptr & sync_ui) override;$/;"	m	class:gnote::sync::SyncManager	access:public
gnote::sync::SyncManager::override	src/synchronization/syncmanager.hpp	/^    virtual void reset_client() override;$/;"	m	class:gnote::sync::SyncManager	access:public
gnote::sync::SyncManager::override	src/synchronization/syncmanager.hpp	/^    virtual void resolve_conflict(SyncTitleConflictResolution resolution) override;$/;"	m	class:gnote::sync::SyncManager	access:public
gnote::sync::SyncManager::perform_synchronization	src/synchronization/syncmanager.cpp	/^  void SyncManager::perform_synchronization(const SyncUI::Ptr & sync_ui)$/;"	f	class:gnote::sync::SyncManager	signature:(const SyncUI::Ptr & sync_ui)
gnote::sync::SyncManager::preferences_setting_changed	src/synchronization/syncmanager.cpp	/^  void SyncManager::preferences_setting_changed(const Glib::ustring &)$/;"	f	class:gnote::sync::SyncManager	signature:(const Glib::ustring &)
gnote::sync::SyncManager::preferences_setting_changed	src/synchronization/syncmanager.hpp	/^    void preferences_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Glib::ustring & key)
gnote::sync::SyncManager::reset_client	src/synchronization/syncmanager.cpp	/^  void SyncManager::reset_client()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::resolve_conflict	src/synchronization/syncmanager.cpp	/^  void SyncManager::resolve_conflict(SyncTitleConflictResolution resolution)$/;"	f	class:gnote::sync::SyncManager	signature:(SyncTitleConflictResolution resolution)
gnote::sync::SyncManager::set_state	src/synchronization/syncmanager.cpp	/^  void SyncManager::set_state(SyncState new_state)$/;"	f	class:gnote::sync::SyncManager	signature:(SyncState new_state)
gnote::sync::SyncManager::set_state	src/synchronization/syncmanager.hpp	/^    void set_state(SyncState new_state);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(SyncState new_state)
gnote::sync::SyncManager::synchronization_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::synchronization_thread()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::synchronization_thread	src/synchronization/syncmanager.hpp	/^    void synchronization_thread();$/;"	p	class:gnote::sync::SyncManager	access:public	signature:()
gnote::sync::SyncManager::synchronized_note_xml_matches	src/synchronization/syncmanager.cpp	/^  bool SyncManager::synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & noteXml1, const std::string & noteXml2)
gnote::sync::SyncManager::update_local_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_local_note(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)
gnote::sync::SyncManager::update_local_note	src/synchronization/syncmanager.hpp	/^    void update_local_note(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)
gnote::sync::SyncManager::update_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_note(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::update_note	src/synchronization/syncmanager.hpp	/^    void update_note(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::update_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_note_in_main_thread(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::update_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void update_note_in_main_thread(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
gnote::sync::SyncManager::update_sync_action	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_sync_action()$/;"	f	class:gnote::sync::SyncManager	signature:()
gnote::sync::SyncManager::update_sync_action	src/synchronization/syncmanager.hpp	/^    void update_sync_action();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
gnote::sync::SyncServer	src/synchronization/isyncmanager.hpp	/^class SyncServer$/;"	c	namespace:gnote::sync
gnote::sync::SyncServer::Ptr	src/synchronization/isyncmanager.hpp	/^  typedef shared_ptr<SyncServer> Ptr;$/;"	t	class:gnote::sync::SyncServer	access:public
gnote::sync::SyncServer::begin_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool begin_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::cancel_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool cancel_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::commit_sync_transaction	src/synchronization/isyncmanager.hpp	/^  virtual bool commit_sync_transaction() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::current_sync_lock	src/synchronization/isyncmanager.hpp	/^  virtual SyncLockInfo current_sync_lock() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::delete_notes	src/synchronization/isyncmanager.hpp	/^  virtual void delete_notes(const std::list<std::string> & deletedNoteUUIDs) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(const std::list<std::string> & deletedNoteUUIDs)
gnote::sync::SyncServer::get_all_note_uuids	src/synchronization/isyncmanager.hpp	/^  virtual std::list<std::string> get_all_note_uuids() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::get_note_updates_since	src/synchronization/isyncmanager.hpp	/^  virtual std::map<std::string, NoteUpdate> get_note_updates_since(int revision) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(int revision)
gnote::sync::SyncServer::id	src/synchronization/isyncmanager.hpp	/^  virtual std::string id() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::latest_revision	src/synchronization/isyncmanager.hpp	/^  virtual int latest_revision() = 0; \/\/ NOTE: Only reliable during a transaction$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServer::updates_available_since	src/synchronization/isyncmanager.hpp	/^  virtual bool updates_available_since(int revision) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(int revision)
gnote::sync::SyncServer::upload_notes	src/synchronization/isyncmanager.hpp	/^  virtual void upload_notes(const std::list<Note::Ptr> & notes) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(const std::list<Note::Ptr> & notes)
gnote::sync::SyncServer::~SyncServer	src/synchronization/isyncmanager.cpp	/^SyncServer::~SyncServer()$/;"	f	class:gnote::sync::SyncServer	signature:()
gnote::sync::SyncServer::~SyncServer	src/synchronization/isyncmanager.hpp	/^  virtual ~SyncServer();$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
gnote::sync::SyncServiceAddin	src/synchronization/syncserviceaddin.hpp	/^  class SyncServiceAddin$/;"	c	namespace:gnote::sync	inherits:AbstractAddin
gnote::sync::SyncServiceAddin::EventHandler	src/synchronization/syncserviceaddin.hpp	/^    typedef sigc::slot<void> EventHandler;$/;"	t	class:gnote::sync::SyncServiceAddin	access:public
gnote::sync::SyncServiceAddin::IFACE_NAME	src/synchronization/syncserviceaddin.cpp	/^const char * SyncServiceAddin::IFACE_NAME = "gnote::sync::SyncServiceAddin";$/;"	m	class:gnote::sync::SyncServiceAddin	file:
gnote::sync::SyncServiceAddin::IFACE_NAME	src/synchronization/syncserviceaddin.hpp	/^    static const char * IFACE_NAME;$/;"	m	class:gnote::sync::SyncServiceAddin	access:public
gnote::sync::SyncServiceAddin::are_settings_valid	src/synchronization/syncserviceaddin.hpp	/^    virtual bool are_settings_valid()$/;"	f	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::create_preferences_control	src/synchronization/syncserviceaddin.hpp	/^    virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:(EventHandler requiredPrefChanged)
gnote::sync::SyncServiceAddin::create_sync_server	src/synchronization/syncserviceaddin.hpp	/^    virtual SyncServer::Ptr create_sync_server() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::id	src/synchronization/syncserviceaddin.hpp	/^    virtual std::string id() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::initialize	src/synchronization/syncserviceaddin.hpp	/^    virtual void initialize () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::initialized	src/synchronization/syncserviceaddin.hpp	/^    virtual bool initialized () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::is_configured	src/synchronization/syncserviceaddin.hpp	/^    virtual bool is_configured() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::is_supported	src/synchronization/syncserviceaddin.hpp	/^    virtual bool is_supported() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::name	src/synchronization/syncserviceaddin.hpp	/^    virtual std::string name() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::post_sync_cleanup	src/synchronization/syncserviceaddin.hpp	/^    virtual void post_sync_cleanup() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::reset_configuration	src/synchronization/syncserviceaddin.hpp	/^    virtual void reset_configuration() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::save_configuration	src/synchronization/syncserviceaddin.hpp	/^    virtual bool save_configuration() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncServiceAddin::shutdown	src/synchronization/syncserviceaddin.hpp	/^    virtual void shutdown () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
gnote::sync::SyncState	src/synchronization/syncutils.hpp	/^  enum SyncState {$/;"	g	namespace:gnote::sync
gnote::sync::SyncTitleConflictResolution	src/synchronization/syncutils.hpp	/^  enum SyncTitleConflictResolution {$/;"	g	namespace:gnote::sync
gnote::sync::SyncUI	src/synchronization/syncui.hpp	/^  class SyncUI$/;"	c	namespace:gnote::sync	inherits:enable_shared_from_this
gnote::sync::SyncUI::Ptr	src/synchronization/syncui.hpp	/^    typedef shared_ptr<SyncUI> Ptr;$/;"	t	class:gnote::sync::SyncUI	access:public
gnote::sync::SyncUI::SlotConnecting	src/synchronization/syncui.hpp	/^    typedef sigc::slot<void> SlotConnecting;$/;"	t	class:gnote::sync::SyncUI	access:public
gnote::sync::SyncUI::SlotIdle	src/synchronization/syncui.hpp	/^    typedef sigc::slot<void> SlotIdle;$/;"	t	class:gnote::sync::SyncUI	access:public
gnote::sync::SyncUI::SyncUI	src/synchronization/syncui.cpp	/^  SyncUI::SyncUI(NoteManagerBase & manager)$/;"	f	class:gnote::sync::SyncUI	signature:(NoteManagerBase & manager)
gnote::sync::SyncUI::SyncUI	src/synchronization/syncui.hpp	/^    explicit SyncUI(NoteManagerBase & manager);$/;"	p	class:gnote::sync::SyncUI	access:protected	signature:(NoteManagerBase & manager)
gnote::sync::SyncUI::m_manager	src/synchronization/syncui.hpp	/^    NoteManagerBase & m_manager;$/;"	m	class:gnote::sync::SyncUI	access:protected
gnote::sync::SyncUI::m_signal_connecting	src/synchronization/syncui.hpp	/^    sigc::signal<void> m_signal_connecting;$/;"	m	class:gnote::sync::SyncUI	access:private
gnote::sync::SyncUI::m_signal_idle	src/synchronization/syncui.hpp	/^    sigc::signal<void> m_signal_idle;$/;"	m	class:gnote::sync::SyncUI	access:private
gnote::sync::SyncUI::note_conflict_detected	src/synchronization/syncui.hpp	/^    virtual void note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles)
gnote::sync::SyncUI::note_synchronized	src/synchronization/syncui.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const std::string & noteTitle, NoteSyncType type)
gnote::sync::SyncUI::note_synchronized_th	src/synchronization/syncui.cpp	/^  void SyncUI::note_synchronized_th(const std::string & noteTitle, NoteSyncType type)$/;"	f	class:gnote::sync::SyncUI	signature:(const std::string & noteTitle, NoteSyncType type)
gnote::sync::SyncUI::note_synchronized_th	src/synchronization/syncui.hpp	/^    void note_synchronized_th(const std::string & noteTitle, NoteSyncType type);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const std::string & noteTitle, NoteSyncType type)
gnote::sync::SyncUI::present_ui	src/synchronization/syncui.hpp	/^    virtual void present_ui() = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
gnote::sync::SyncUI::signal_connecting_connect	src/synchronization/syncui.cpp	/^  sigc::connection SyncUI::signal_connecting_connect(const SlotConnecting & slot)$/;"	f	class:gnote::sync::SyncUI	signature:(const SlotConnecting & slot)
gnote::sync::SyncUI::signal_connecting_connect	src/synchronization/syncui.hpp	/^    sigc::connection signal_connecting_connect(const SlotConnecting & slot);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const SlotConnecting & slot)
gnote::sync::SyncUI::signal_connecting_emit	src/synchronization/syncui.cpp	/^  void SyncUI::signal_connecting_emit()$/;"	f	class:gnote::sync::SyncUI	signature:()
gnote::sync::SyncUI::signal_connecting_emit	src/synchronization/syncui.hpp	/^    void signal_connecting_emit();$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
gnote::sync::SyncUI::signal_connecting_emit_	src/synchronization/syncui.hpp	/^    void signal_connecting_emit_()$/;"	f	class:gnote::sync::SyncUI	access:private	signature:()
gnote::sync::SyncUI::signal_idle_connect	src/synchronization/syncui.cpp	/^  sigc::connection SyncUI::signal_idle_connect(const SlotIdle & slot)$/;"	f	class:gnote::sync::SyncUI	signature:(const SlotIdle & slot)
gnote::sync::SyncUI::signal_idle_connect	src/synchronization/syncui.hpp	/^    sigc::connection signal_idle_connect(const SlotIdle & slot);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const SlotIdle & slot)
gnote::sync::SyncUI::signal_idle_emit	src/synchronization/syncui.cpp	/^  void SyncUI::signal_idle_emit()$/;"	f	class:gnote::sync::SyncUI	signature:()
gnote::sync::SyncUI::signal_idle_emit	src/synchronization/syncui.hpp	/^    void signal_idle_emit();$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
gnote::sync::SyncUI::signal_idle_emit_	src/synchronization/syncui.hpp	/^    void signal_idle_emit_()$/;"	f	class:gnote::sync::SyncUI	access:private	signature:()
gnote::sync::SyncUI::sync_state_changed	src/synchronization/syncui.hpp	/^    virtual void sync_state_changed(SyncState state) = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(SyncState state)
gnote::sync::SyncUtils	src/synchronization/syncutils.hpp	/^  class SyncUtils$/;"	c	namespace:gnote::sync	inherits:base::Singleton
gnote::sync::SyncUtils::common_paths	src/synchronization/syncutils.cpp	/^  const char *SyncUtils::common_paths[] = {"\/sbin", "\/bin", "\/usr\/bin"};$/;"	m	class:gnote::sync::SyncUtils	file:
gnote::sync::SyncUtils::common_paths	src/synchronization/syncutils.hpp	/^    static const char *common_paths[];$/;"	m	class:gnote::sync::SyncUtils	access:private
gnote::sync::SyncUtils::enable_fuse	src/synchronization/syncutils.cpp	/^  bool SyncUtils::enable_fuse()$/;"	f	class:gnote::sync::SyncUtils	signature:()
gnote::sync::SyncUtils::enable_fuse	src/synchronization/syncutils.hpp	/^    bool enable_fuse();$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:()
gnote::sync::SyncUtils::find_first_executable_in_path	src/synchronization/syncutils.cpp	/^  std::string SyncUtils::find_first_executable_in_path(const std::string & executableName)$/;"	f	class:gnote::sync::SyncUtils	signature:(const std::string & executableName)
gnote::sync::SyncUtils::find_first_executable_in_path	src/synchronization/syncutils.cpp	/^  std::string SyncUtils::find_first_executable_in_path(const std::vector<std::string> & executableNames)$/;"	f	class:gnote::sync::SyncUtils	signature:(const std::vector<std::string> & executableNames)
gnote::sync::SyncUtils::find_first_executable_in_path	src/synchronization/syncutils.hpp	/^    std::string find_first_executable_in_path(const std::string & executableName);$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:(const std::string & executableName)
gnote::sync::SyncUtils::find_first_executable_in_path	src/synchronization/syncutils.hpp	/^    std::string find_first_executable_in_path(const std::vector<std::string> & executableNames);$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:(const std::vector<std::string> & executableNames)
gnote::sync::SyncUtils::is_fuse_enabled	src/synchronization/syncutils.cpp	/^  bool SyncUtils::is_fuse_enabled()$/;"	f	class:gnote::sync::SyncUtils	signature:()
gnote::sync::SyncUtils::is_fuse_enabled	src/synchronization/syncutils.hpp	/^    bool is_fuse_enabled();$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:()
gnote::sync::SyncUtils::m_guisu_tool	src/synchronization/syncutils.hpp	/^    std::string m_guisu_tool;$/;"	m	class:gnote::sync::SyncUtils	access:private
gnote::sync::SyncUtils::m_modprobe_tool	src/synchronization/syncutils.hpp	/^    std::string m_modprobe_tool;$/;"	m	class:gnote::sync::SyncUtils	access:private
gnote::sync::SyncUtils::s_obj	src/synchronization/syncutils.cpp	/^  SyncUtils SyncUtils::s_obj;$/;"	m	class:gnote::sync::SyncUtils	file:
gnote::sync::SyncUtils::s_obj	src/synchronization/syncutils.hpp	/^    static SyncUtils s_obj;$/;"	m	class:gnote::sync::SyncUtils	access:private
gnote::sync::UPLOADING	src/synchronization/syncutils.hpp	/^    UPLOADING,$/;"	e	enum:gnote::sync::SyncState
gnote::sync::UPLOAD_MODIFIED	src/synchronization/syncutils.hpp	/^    UPLOAD_MODIFIED,$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::UPLOAD_NEW	src/synchronization/syncutils.hpp	/^    UPLOAD_NEW,$/;"	e	enum:gnote::sync::NoteSyncType
gnote::sync::USER_CANCELLED	src/synchronization/syncutils.hpp	/^    USER_CANCELLED$/;"	e	enum:gnote::sync::SyncState
gnote::sync::__anon19::SyncTitleConflictDialog	src/synchronization/syncdialog.cpp	/^class SyncTitleConflictDialog$/;"	c	namespace:gnote::sync::__anon19	file:	inherits:Gtk::Dialog
gnote::sync::__anon19::SyncTitleConflictDialog::SyncTitleConflictDialog	src/synchronization/syncdialog.cpp	/^  SyncTitleConflictDialog(const Note::Ptr & existingNote, const std::list<std::string> & noteUpdateTitles)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const Note::Ptr & existingNote, const std::list<std::string> & noteUpdateTitles)
gnote::sync::__anon19::SyncTitleConflictDialog::alwaysDoThisCheck	src/synchronization/syncdialog.cpp	/^  Gtk::CheckButton *alwaysDoThisCheck;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::always_perform_this_action	src/synchronization/syncdialog.cpp	/^  bool always_perform_this_action() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
gnote::sync::__anon19::SyncTitleConflictDialog::continueButton	src/synchronization/syncdialog.cpp	/^  Gtk::Button *continueButton;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::deleteExistingRadio	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButton *deleteExistingRadio;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::header_text	src/synchronization/syncdialog.cpp	/^  void header_text(const std::string & value)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const std::string & value)
gnote::sync::__anon19::SyncTitleConflictDialog::is_note_title_available	src/synchronization/syncdialog.cpp	/^  bool is_note_title_available(const std::string & renamedTitle)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:(const std::string & renamedTitle)
gnote::sync::__anon19::SyncTitleConflictDialog::m_existing_note	src/synchronization/syncdialog.cpp	/^  Note::Ptr m_existing_note;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::m_header_label	src/synchronization/syncdialog.cpp	/^  Gtk::Label *m_header_label;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::m_message_label	src/synchronization/syncdialog.cpp	/^  Gtk::Label *m_message_label;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::m_note_update_titles	src/synchronization/syncdialog.cpp	/^  std::list<std::string> m_note_update_titles;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::m_radio_group	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButtonGroup m_radio_group;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::message_text	src/synchronization/syncdialog.cpp	/^  void message_text(const std::string & value)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const std::string & value)
gnote::sync::__anon19::SyncTitleConflictDialog::radio_toggled	src/synchronization/syncdialog.cpp	/^  void radio_toggled()$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:()
gnote::sync::__anon19::SyncTitleConflictDialog::renameEntry	src/synchronization/syncdialog.cpp	/^  Gtk::Entry *renameEntry;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::renameRadio	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButton *renameRadio;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::renameUpdateCheck	src/synchronization/syncdialog.cpp	/^  Gtk::CheckButton *renameUpdateCheck;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
gnote::sync::__anon19::SyncTitleConflictDialog::rename_entry_changed	src/synchronization/syncdialog.cpp	/^  void rename_entry_changed()$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:()
gnote::sync::__anon19::SyncTitleConflictDialog::renamed_title	src/synchronization/syncdialog.cpp	/^  std::string renamed_title() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
gnote::sync::__anon19::SyncTitleConflictDialog::resolution	src/synchronization/syncdialog.cpp	/^  SyncTitleConflictResolution resolution() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
gnote::sync::__anon19::TreeViewModel	src/synchronization/syncdialog.cpp	/^class TreeViewModel$/;"	c	namespace:gnote::sync::__anon19	file:	inherits:Gtk::TreeModelColumnRecord
gnote::sync::__anon19::TreeViewModel::TreeViewModel	src/synchronization/syncdialog.cpp	/^  TreeViewModel()$/;"	f	class:gnote::sync::__anon19::TreeViewModel	access:public	signature:()
gnote::sync::__anon19::TreeViewModel::m_col1	src/synchronization/syncdialog.cpp	/^    Gtk::TreeModelColumn<std::string> m_col1;$/;"	m	class:gnote::sync::__anon19::TreeViewModel	file:	access:public
gnote::sync::__anon19::TreeViewModel::m_col2	src/synchronization/syncdialog.cpp	/^    Gtk::TreeModelColumn<std::string> m_col2;$/;"	m	class:gnote::sync::__anon19::TreeViewModel	file:	access:public
gnote::tray_util_get_tooltip_text	src/tray.cpp	/^  std::string tray_util_get_tooltip_text()$/;"	f	namespace:gnote	signature:()
gnote::tray_util_get_tooltip_text	src/tray.hpp	/^std::string tray_util_get_tooltip_text();$/;"	p	namespace:gnote	signature:()
gnote::utils	src/utils.cpp	/^  namespace utils {$/;"	n	namespace:gnote	file:
gnote::utils	src/utils.hpp	/^  namespace utils {$/;"	n	namespace:gnote
gnote::utils::CheckAction	src/utils.hpp	/^    class CheckAction$/;"	c	namespace:gnote::utils	inherits:Gtk::Action
gnote::utils::CheckAction::CheckAction	src/utils.cpp	/^    CheckAction::CheckAction(const Glib::ustring & name)$/;"	f	class:gnote::utils::CheckAction	signature:(const Glib::ustring & name)
gnote::utils::CheckAction::CheckAction	src/utils.hpp	/^      CheckAction(const Glib::ustring & name);$/;"	p	class:gnote::utils::CheckAction	access:protected	signature:(const Glib::ustring & name)
gnote::utils::CheckAction::Ptr	src/utils.hpp	/^      typedef Glib::RefPtr<CheckAction> Ptr;$/;"	t	class:gnote::utils::CheckAction	access:public
gnote::utils::CheckAction::checked	src/utils.hpp	/^      bool checked() const$/;"	f	class:gnote::utils::CheckAction	access:public	signature:() const
gnote::utils::CheckAction::checked	src/utils.hpp	/^      void checked(bool check)$/;"	f	class:gnote::utils::CheckAction	access:public	signature:(bool check)
gnote::utils::CheckAction::create	src/utils.hpp	/^      static Ptr create(const Glib::ustring & name)$/;"	f	class:gnote::utils::CheckAction	access:public	signature:(const Glib::ustring & name)
gnote::utils::CheckAction::create_menu_item_vfunc	src/utils.cpp	/^    Gtk::Widget *CheckAction::create_menu_item_vfunc()$/;"	f	class:gnote::utils::CheckAction	signature:()
gnote::utils::CheckAction::m_checked	src/utils.hpp	/^      bool m_checked;$/;"	m	class:gnote::utils::CheckAction	access:private
gnote::utils::CheckAction::on_activate	src/utils.cpp	/^    void CheckAction::on_activate()$/;"	f	class:gnote::utils::CheckAction	signature:()
gnote::utils::CheckAction::override	src/utils.hpp	/^      virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:gnote::utils::CheckAction	access:protected
gnote::utils::CheckAction::override	src/utils.hpp	/^      virtual void on_activate() override;$/;"	m	class:gnote::utils::CheckAction	access:protected
gnote::utils::ForcedPresentWindow	src/utils.hpp	/^    class ForcedPresentWindow $/;"	c	namespace:gnote::utils	inherits:Gtk::ApplicationWindow
gnote::utils::ForcedPresentWindow::ForcedPresentWindow	src/utils.hpp	/^      ForcedPresentWindow(const Glib::ustring & title)$/;"	f	class:gnote::utils::ForcedPresentWindow	access:public	signature:(const Glib::ustring & title)
gnote::utils::ForcedPresentWindow::present	src/utils.hpp	/^      void present()$/;"	f	class:gnote::utils::ForcedPresentWindow	access:public	signature:()
gnote::utils::GlobalKeybinder	src/utils.hpp	/^    class GlobalKeybinder$/;"	c	namespace:gnote::utils
gnote::utils::GlobalKeybinder::GlobalKeybinder	src/utils.hpp	/^      GlobalKeybinder(const Glib::RefPtr<Gtk::AccelGroup> & accel_group)$/;"	f	class:gnote::utils::GlobalKeybinder	access:public	signature:(const Glib::RefPtr<Gtk::AccelGroup> & accel_group)
gnote::utils::GlobalKeybinder::add_accelerator	src/utils.cpp	/^    void GlobalKeybinder::add_accelerator(const sigc::slot<void> & handler, guint key, $/;"	f	class:gnote::utils::GlobalKeybinder	signature:(const sigc::slot<void> & handler, guint key, Gdk::ModifierType modifiers, Gtk::AccelFlags flags)
gnote::utils::GlobalKeybinder::add_accelerator	src/utils.hpp	/^      void add_accelerator(const sigc::slot<void> & , guint, Gdk::ModifierType, $/;"	p	class:gnote::utils::GlobalKeybinder	access:public	signature:(const sigc::slot<void> & , guint, Gdk::ModifierType, Gtk::AccelFlags)
gnote::utils::GlobalKeybinder::enabled	src/utils.cpp	/^    void GlobalKeybinder::enabled(bool enable)$/;"	f	class:gnote::utils::GlobalKeybinder	signature:(bool enable)
gnote::utils::GlobalKeybinder::enabled	src/utils.hpp	/^      bool enabled() const$/;"	f	class:gnote::utils::GlobalKeybinder	access:public	signature:() const
gnote::utils::GlobalKeybinder::enabled	src/utils.hpp	/^      void enabled(bool enable);$/;"	p	class:gnote::utils::GlobalKeybinder	access:public	signature:(bool enable)
gnote::utils::GlobalKeybinder::m_accel_group	src/utils.hpp	/^      Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::utils::GlobalKeybinder	access:private
gnote::utils::GlobalKeybinder::m_fake_menu	src/utils.hpp	/^      Gtk::Menu m_fake_menu;$/;"	m	class:gnote::utils::GlobalKeybinder	access:private
gnote::utils::HIGMessageDialog	src/utils.hpp	/^    class HIGMessageDialog$/;"	c	namespace:gnote::utils	inherits:Gtk::Dialog
gnote::utils::HIGMessageDialog::HIGMessageDialog	src/utils.cpp	/^    HIGMessageDialog::HIGMessageDialog(Gtk::Window *parent,$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Window *parent, GtkDialogFlags flags, Gtk::MessageType msg_type, Gtk::ButtonsType btn_type, const Glib::ustring & header, const Glib::ustring & msg)
gnote::utils::HIGMessageDialog::HIGMessageDialog	src/utils.hpp	/^      HIGMessageDialog(Gtk::Window *, GtkDialogFlags flags, Gtk::MessageType msg_type, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Window *, GtkDialogFlags flags, Gtk::MessageType msg_type, Gtk::ButtonsType btn_type, const Glib::ustring & header = Glib::ustring(), const Glib::ustring & msg = Glib::ustring())
gnote::utils::HIGMessageDialog::add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button (Gtk::Button *button, Gtk::ResponseType resp, bool is_default)$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Button *button, Gtk::ResponseType resp, bool is_default)
gnote::utils::HIGMessageDialog::add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button (const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, $/;"	f	class:gnote::utils::HIGMessageDialog	signature:(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, const Glib::ustring & label_text, Gtk::ResponseType resp, bool is_default)
gnote::utils::HIGMessageDialog::add_button	src/utils.cpp	/^    void HIGMessageDialog::add_button(const Gtk::BuiltinStockID& stock_id, $/;"	f	class:gnote::utils::HIGMessageDialog	signature:(const Gtk::BuiltinStockID& stock_id, Gtk::ResponseType resp, bool is_default)
gnote::utils::HIGMessageDialog::add_button	src/utils.hpp	/^      void add_button(Gtk::Button *button, Gtk::ResponseType response, bool is_default);$/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Button *button, Gtk::ResponseType response, bool is_default)
gnote::utils::HIGMessageDialog::add_button	src/utils.hpp	/^      void add_button(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(const Glib::RefPtr<Gdk::Pixbuf> & pixbuf, const Glib::ustring & label_text, Gtk::ResponseType response, bool is_default)
gnote::utils::HIGMessageDialog::add_button	src/utils.hpp	/^      void add_button(const Gtk::BuiltinStockID& stock_id, $/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(const Gtk::BuiltinStockID& stock_id, Gtk::ResponseType response, bool is_default)
gnote::utils::HIGMessageDialog::get_extra_widget	src/utils.hpp	/^      Gtk::Widget * get_extra_widget() const$/;"	f	class:gnote::utils::HIGMessageDialog	access:public	signature:() const
gnote::utils::HIGMessageDialog::m_accel_group	src/utils.hpp	/^      Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
gnote::utils::HIGMessageDialog::m_extra_widget	src/utils.hpp	/^      Gtk::Widget *m_extra_widget;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
gnote::utils::HIGMessageDialog::m_extra_widget_vbox	src/utils.hpp	/^      Gtk::Grid *m_extra_widget_vbox;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
gnote::utils::HIGMessageDialog::m_image	src/utils.hpp	/^      Gtk::Image *m_image;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
gnote::utils::HIGMessageDialog::set_extra_widget	src/utils.cpp	/^    void HIGMessageDialog::set_extra_widget(Gtk::Widget *value)$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Widget *value)
gnote::utils::HIGMessageDialog::set_extra_widget	src/utils.hpp	/^      void set_extra_widget(Gtk::Widget *);$/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Widget *)
gnote::utils::InterruptableTimeout	src/utils.hpp	/^    class InterruptableTimeout$/;"	c	namespace:gnote::utils
gnote::utils::InterruptableTimeout::InterruptableTimeout	src/utils.hpp	/^      InterruptableTimeout()$/;"	f	class:gnote::utils::InterruptableTimeout	access:public	signature:()
gnote::utils::InterruptableTimeout::callback	src/utils.cpp	/^    bool InterruptableTimeout::callback(InterruptableTimeout* self)$/;"	f	class:gnote::utils::InterruptableTimeout	signature:(InterruptableTimeout* self)
gnote::utils::InterruptableTimeout::callback	src/utils.hpp	/^      static bool callback(InterruptableTimeout*);$/;"	p	class:gnote::utils::InterruptableTimeout	access:private	signature:(InterruptableTimeout*)
gnote::utils::InterruptableTimeout::cancel	src/utils.cpp	/^    void InterruptableTimeout::cancel()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
gnote::utils::InterruptableTimeout::cancel	src/utils.hpp	/^      void cancel();$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:()
gnote::utils::InterruptableTimeout::m_timeout_id	src/utils.hpp	/^      guint m_timeout_id;$/;"	m	class:gnote::utils::InterruptableTimeout	access:private
gnote::utils::InterruptableTimeout::reset	src/utils.cpp	/^    void InterruptableTimeout::reset(guint timeout_millis)$/;"	f	class:gnote::utils::InterruptableTimeout	signature:(guint timeout_millis)
gnote::utils::InterruptableTimeout::reset	src/utils.hpp	/^      void reset(guint timeout_millis);$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:(guint timeout_millis)
gnote::utils::InterruptableTimeout::signal_timeout	src/utils.hpp	/^      sigc::signal<void> signal_timeout;$/;"	m	class:gnote::utils::InterruptableTimeout	access:public
gnote::utils::InterruptableTimeout::timeout_expired	src/utils.cpp	/^    bool InterruptableTimeout::timeout_expired()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
gnote::utils::InterruptableTimeout::timeout_expired	src/utils.hpp	/^      bool timeout_expired();$/;"	p	class:gnote::utils::InterruptableTimeout	access:private	signature:()
gnote::utils::InterruptableTimeout::~InterruptableTimeout	src/utils.cpp	/^    InterruptableTimeout::~InterruptableTimeout()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
gnote::utils::InterruptableTimeout::~InterruptableTimeout	src/utils.hpp	/^      ~InterruptableTimeout();$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:()
gnote::utils::TextRange	src/utils.hpp	/^    class TextRange$/;"	c	namespace:gnote::utils
gnote::utils::TextRange::TextRange	src/utils.cpp	/^    TextRange::TextRange()$/;"	f	class:gnote::utils::TextRange	signature:()
gnote::utils::TextRange::TextRange	src/utils.cpp	/^    TextRange::TextRange(const Gtk::TextIter & _start,$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & _start, const Gtk::TextIter & _end)
gnote::utils::TextRange::TextRange	src/utils.hpp	/^      TextRange();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
gnote::utils::TextRange::TextRange	src/utils.hpp	/^      TextRange(const Gtk::TextIter & start,$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
gnote::utils::TextRange::buffer	src/utils.hpp	/^      const Glib::RefPtr<Gtk::TextBuffer> & buffer() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
gnote::utils::TextRange::destroy	src/utils.cpp	/^    void TextRange::destroy()$/;"	f	class:gnote::utils::TextRange	signature:()
gnote::utils::TextRange::destroy	src/utils.hpp	/^      void destroy();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
gnote::utils::TextRange::end	src/utils.cpp	/^    Gtk::TextIter TextRange::end() const$/;"	f	class:gnote::utils::TextRange	signature:() const
gnote::utils::TextRange::end	src/utils.hpp	/^      Gtk::TextIter end() const;$/;"	p	class:gnote::utils::TextRange	access:public	signature:() const
gnote::utils::TextRange::erase	src/utils.cpp	/^    void TextRange::erase()$/;"	f	class:gnote::utils::TextRange	signature:()
gnote::utils::TextRange::erase	src/utils.hpp	/^      void erase();$/;"	p	class:gnote::utils::TextRange	access:public	signature:()
gnote::utils::TextRange::length	src/utils.hpp	/^      int length() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
gnote::utils::TextRange::m_buffer	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextBuffer> m_buffer;$/;"	m	class:gnote::utils::TextRange	access:private
gnote::utils::TextRange::m_end_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_end_mark;$/;"	m	class:gnote::utils::TextRange	access:private
gnote::utils::TextRange::m_start_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_start_mark;$/;"	m	class:gnote::utils::TextRange	access:private
gnote::utils::TextRange::remove_tag	src/utils.cpp	/^    void TextRange::remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::utils::TextRange	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::utils::TextRange::remove_tag	src/utils.hpp	/^      void remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag);$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::utils::TextRange::set_end	src/utils.cpp	/^    void TextRange::set_end(const Gtk::TextIter & value)$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & value)
gnote::utils::TextRange::set_end	src/utils.hpp	/^      void set_end(const Gtk::TextIter &);  $/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter &)
gnote::utils::TextRange::set_start	src/utils.cpp	/^    void TextRange::set_start(const Gtk::TextIter & value)$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & value)
gnote::utils::TextRange::set_start	src/utils.hpp	/^      void set_start(const Gtk::TextIter &);$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter &)
gnote::utils::TextRange::start	src/utils.cpp	/^    Gtk::TextIter TextRange::start() const$/;"	f	class:gnote::utils::TextRange	signature:() const
gnote::utils::TextRange::start	src/utils.hpp	/^      Gtk::TextIter start() const;$/;"	p	class:gnote::utils::TextRange	access:public	signature:() const
gnote::utils::TextRange::text	src/utils.hpp	/^      const Glib::ustring text() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
gnote::utils::TextTagEnumerator	src/utils.hpp	/^    class TextTagEnumerator$/;"	c	namespace:gnote::utils
gnote::utils::TextTagEnumerator::TextTagEnumerator	src/utils.cpp	/^    TextTagEnumerator::TextTagEnumerator(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::utils::TextTagEnumerator	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::utils::TextTagEnumerator::TextTagEnumerator	src/utils.hpp	/^      TextTagEnumerator(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	p	class:gnote::utils::TextTagEnumerator	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Glib::RefPtr<Gtk::TextTag> & tag)
gnote::utils::TextTagEnumerator::current	src/utils.hpp	/^      const TextRange & current() const$/;"	f	class:gnote::utils::TextTagEnumerator	access:public	signature:() const
gnote::utils::TextTagEnumerator::m_buffer	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextBuffer> m_buffer;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
gnote::utils::TextTagEnumerator::m_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_mark;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
gnote::utils::TextTagEnumerator::m_range	src/utils.hpp	/^      TextRange                     m_range;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
gnote::utils::TextTagEnumerator::m_tag	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextTag>    m_tag;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
gnote::utils::TextTagEnumerator::move_next	src/utils.cpp	/^    bool TextTagEnumerator::move_next()$/;"	f	class:gnote::utils::TextTagEnumerator	signature:()
gnote::utils::TextTagEnumerator::move_next	src/utils.hpp	/^      bool move_next();$/;"	p	class:gnote::utils::TextTagEnumerator	access:public	signature:()
gnote::utils::TextTagEnumerator::reset	src/utils.hpp	/^      void reset()$/;"	f	class:gnote::utils::TextTagEnumerator	access:public	signature:()
gnote::utils::ToolMenuButton	src/utils.hpp	/^    class ToolMenuButton$/;"	c	namespace:gnote::utils	inherits:Gtk::ToggleToolButton
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Image& image, $/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Image& image, const Glib::ustring & label, Gtk::Menu * menu)
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, $/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, const Glib::ustring & label, Gtk::Menu * menu)
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.cpp	/^    ToolMenuButton::ToolMenuButton(Gtk::Widget & widget, Gtk::Menu *menu)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Widget & widget, Gtk::Menu *menu)
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Image& image, $/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Image& image, const Glib::ustring & label, Gtk::Menu * menu)
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Toolbar& toolbar, $/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Toolbar& toolbar, const Gtk::BuiltinStockID& stock_image, const Glib::ustring & label, Gtk::Menu * menu)
gnote::utils::ToolMenuButton::ToolMenuButton	src/utils.hpp	/^      ToolMenuButton(Gtk::Widget & widget, Gtk::Menu *menu);$/;"	p	class:gnote::utils::ToolMenuButton	access:public	signature:(Gtk::Widget & widget, Gtk::Menu *menu)
gnote::utils::ToolMenuButton::_common_init	src/utils.cpp	/^    void ToolMenuButton::_common_init()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
gnote::utils::ToolMenuButton::_common_init	src/utils.cpp	/^    void ToolMenuButton::_common_init(Gtk::Image& image, const Glib::ustring & label)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(Gtk::Image& image, const Glib::ustring & label)
gnote::utils::ToolMenuButton::_common_init	src/utils.hpp	/^      void _common_init();$/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:()
gnote::utils::ToolMenuButton::_common_init	src/utils.hpp	/^      void _common_init(Gtk::Image& image, const Glib::ustring & l);$/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:(Gtk::Image& image, const Glib::ustring & l)
gnote::utils::ToolMenuButton::m_menu	src/utils.hpp	/^      Gtk::Menu *m_menu;$/;"	m	class:gnote::utils::ToolMenuButton	access:private
gnote::utils::ToolMenuButton::on_button_press_event	src/utils.cpp	/^    bool ToolMenuButton::on_button_press_event(GdkEventButton *ev)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(GdkEventButton *ev)
gnote::utils::ToolMenuButton::on_clicked	src/utils.cpp	/^    void ToolMenuButton::on_clicked()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
gnote::utils::ToolMenuButton::on_mnemonic_activate	src/utils.cpp	/^    bool ToolMenuButton::on_mnemonic_activate(bool group_cycling)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(bool group_cycling)
gnote::utils::ToolMenuButton::override	src/utils.hpp	/^      virtual bool on_button_press_event(GdkEventButton *) override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
gnote::utils::ToolMenuButton::override	src/utils.hpp	/^      virtual bool on_mnemonic_activate(bool group_cycling) override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
gnote::utils::ToolMenuButton::override	src/utils.hpp	/^      virtual void on_clicked() override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
gnote::utils::ToolMenuButton::release_button	src/utils.cpp	/^    void ToolMenuButton::release_button()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
gnote::utils::ToolMenuButton::release_button	src/utils.hpp	/^      void release_button();        $/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:()
gnote::utils::UriList	src/utils.hpp	/^    class UriList$/;"	c	namespace:gnote::utils	inherits:std::list
gnote::utils::UriList::UriList	src/utils.cpp	/^    UriList::UriList(const Gtk::SelectionData & selection)$/;"	f	class:gnote::utils::UriList	signature:(const Gtk::SelectionData & selection)
gnote::utils::UriList::UriList	src/utils.cpp	/^    UriList::UriList(const std::string & data)$/;"	f	class:gnote::utils::UriList	signature:(const std::string & data)
gnote::utils::UriList::UriList	src/utils.hpp	/^      UriList(const Gtk::SelectionData & selection);$/;"	p	class:gnote::utils::UriList	access:public	signature:(const Gtk::SelectionData & selection)
gnote::utils::UriList::UriList	src/utils.hpp	/^      UriList(const std::string & data);$/;"	p	class:gnote::utils::UriList	access:public	signature:(const std::string & data)
gnote::utils::UriList::get_local_paths	src/utils.cpp	/^    void UriList::get_local_paths(std::list<std::string> & paths) const$/;"	f	class:gnote::utils::UriList	signature:(std::list<std::string> & paths) const
gnote::utils::UriList::get_local_paths	src/utils.hpp	/^      void get_local_paths(std::list<std::string> &) const;$/;"	p	class:gnote::utils::UriList	access:public	signature:(std::list<std::string> &) const
gnote::utils::UriList::load_from_string	src/utils.cpp	/^    void UriList::load_from_string(const std::string & data)$/;"	f	class:gnote::utils::UriList	signature:(const std::string & data)
gnote::utils::UriList::load_from_string	src/utils.hpp	/^      void load_from_string(const std::string & data);$/;"	p	class:gnote::utils::UriList	access:private	signature:(const std::string & data)
gnote::utils::UriList::load_from_string_list	src/utils.cpp	/^    void UriList::load_from_string_list(const std::vector<Glib::ustring> & items)$/;"	f	class:gnote::utils::UriList	signature:(const std::vector<Glib::ustring> & items)
gnote::utils::UriList::load_from_string_list	src/utils.hpp	/^      void load_from_string_list(const std::vector<Glib::ustring> & items);$/;"	p	class:gnote::utils::UriList	access:private	signature:(const std::vector<Glib::ustring> & items)
gnote::utils::UriList::to_string	src/utils.cpp	/^    std::string UriList::to_string() const$/;"	f	class:gnote::utils::UriList	signature:() const
gnote::utils::UriList::to_string	src/utils.hpp	/^      std::string to_string() const;$/;"	p	class:gnote::utils::UriList	access:public	signature:() const
gnote::utils::XmlDecoder	src/utils.hpp	/^    class XmlDecoder$/;"	c	namespace:gnote::utils
gnote::utils::XmlDecoder::decode	src/utils.cpp	/^    std::string XmlDecoder::decode(const std::string & source)$/;"	f	class:gnote::utils::XmlDecoder	signature:(const std::string & source)
gnote::utils::XmlDecoder::decode	src/utils.hpp	/^      static std::string decode(const std::string & source);$/;"	p	class:gnote::utils::XmlDecoder	access:public	signature:(const std::string & source)
gnote::utils::XmlEncoder	src/utils.hpp	/^    class XmlEncoder$/;"	c	namespace:gnote::utils
gnote::utils::XmlEncoder::encode	src/utils.cpp	/^    std::string XmlEncoder::encode(const std::string & source)$/;"	f	class:gnote::utils::XmlEncoder	signature:(const std::string & source)
gnote::utils::XmlEncoder::encode	src/utils.hpp	/^      static std::string encode(const std::string & source);$/;"	p	class:gnote::utils::XmlEncoder	access:public	signature:(const std::string & source)
gnote::utils::__anon10::deactivate_menu	src/utils.cpp	/^      void deactivate_menu(Gtk::Menu *menu)$/;"	f	namespace:gnote::utils::__anon10	signature:(Gtk::Menu *menu)
gnote::utils::__anon10::get_menu_position	src/utils.cpp	/^      void get_menu_position (Gtk::Menu * menu,$/;"	f	namespace:gnote::utils::__anon10	signature:(Gtk::Menu * menu, int & x, int & y, bool & push_in)
gnote::utils::__anon10::main_context_call_func	src/utils.cpp	/^      void main_context_call_func(const sigc::slot<void> & slot,$/;"	f	namespace:gnote::utils::__anon10	signature:(const sigc::slot<void> & slot, Glib::Threads::Cond * cond, Glib::Threads::Mutex * mutex)
gnote::utils::__anon10::main_context_invoke_func	src/utils.cpp	/^      gboolean main_context_invoke_func(gpointer data)$/;"	f	namespace:gnote::utils::__anon10	signature:(gpointer data)
gnote::utils::get_pretty_print_date	src/utils.cpp	/^    std::string get_pretty_print_date(const sharp::DateTime & date, bool show_time)$/;"	f	namespace:gnote::utils	signature:(const sharp::DateTime & date, bool show_time)
gnote::utils::get_pretty_print_date	src/utils.cpp	/^    std::string get_pretty_print_date(const sharp::DateTime & date, bool show_time, bool use_12h)$/;"	f	namespace:gnote::utils	signature:(const sharp::DateTime & date, bool show_time, bool use_12h)
gnote::utils::get_pretty_print_date	src/utils.hpp	/^    std::string get_pretty_print_date(const sharp::DateTime &, bool show_time);$/;"	p	namespace:gnote::utils	signature:(const sharp::DateTime &, bool show_time)
gnote::utils::get_pretty_print_date	src/utils.hpp	/^    std::string get_pretty_print_date(const sharp::DateTime &, bool show_time, bool use_12h);$/;"	p	namespace:gnote::utils	signature:(const sharp::DateTime &, bool show_time, bool use_12h)
gnote::utils::main_context_call	src/utils.cpp	/^    void main_context_call(const sigc::slot<void> & slot)$/;"	f	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
gnote::utils::main_context_call	src/utils.hpp	/^    void main_context_call(const sigc::slot<void> & slot);$/;"	p	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
gnote::utils::main_context_invoke	src/utils.cpp	/^    void main_context_invoke(const sigc::slot<void> & slot)$/;"	f	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
gnote::utils::main_context_invoke	src/utils.hpp	/^    void main_context_invoke(const sigc::slot<void> & slot);$/;"	p	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
gnote::utils::open_url	src/utils.cpp	/^    void open_url(const std::string & url)$/;"	f	namespace:gnote::utils	signature:(const std::string & url)
gnote::utils::open_url	src/utils.hpp	/^    void open_url(const std::string & url) throw (Glib::Error);$/;"	p	namespace:gnote::utils	signature:(const std::string & url)
gnote::utils::popup_menu	src/utils.cpp	/^    void popup_menu(Gtk::Menu &menu, const GdkEventButton * ev)$/;"	f	namespace:gnote::utils	signature:(Gtk::Menu &menu, const GdkEventButton * ev)
gnote::utils::popup_menu	src/utils.hpp	/^    void popup_menu(Gtk::Menu &menu, const GdkEventButton *);$/;"	p	namespace:gnote::utils	signature:(Gtk::Menu &menu, const GdkEventButton *)
gnote::utils::show_help	src/utils.cpp	/^    void show_help(const std::string & filename, const std::string & link_id,$/;"	f	namespace:gnote::utils	signature:(const std::string & filename, const std::string & link_id, GdkScreen *screen, Gtk::Window *parent)
gnote::utils::show_help	src/utils.hpp	/^    void show_help(const std::string & filename, const std::string & link_id,$/;"	p	namespace:gnote::utils	signature:(const std::string & filename, const std::string & link_id, GdkScreen *screen, Gtk::Window *parent)
gnote::utils::show_opening_location_error	src/utils.cpp	/^    void show_opening_location_error(Gtk::Window * parent, $/;"	f	namespace:gnote::utils	signature:(Gtk::Window * parent, const std::string & url, const std::string & error)
gnote::utils::show_opening_location_error	src/utils.hpp	/^    void show_opening_location_error(Gtk::Window * parent, $/;"	p	namespace:gnote::utils	signature:(Gtk::Window * parent, const std::string & url, const std::string & error)
gnote_DEPENDENCIES	src/Makefile	/^gnote_DEPENDENCIES = $(am__DEPENDENCIES_2)$/;"	m
gnote_LDADD	src/Makefile	/^gnote_LDADD = \\$/;"	m
gnote_OBJECTS	src/Makefile	/^gnote_OBJECTS = $(am_gnote_OBJECTS)$/;"	m
gnote_SOURCES	src/Makefile	/^gnote_SOURCES = \\$/;"	m
gnote_exit_handler	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::gnote_exit_handler()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
gnote_exit_handler	src/synchronization/fusesyncserviceaddin.hpp	/^  void gnote_exit_handler();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
gnotesyncclienttest_DEPENDENCIES	src/Makefile	/^gnotesyncclienttest_DEPENDENCIES = $(am__DEPENDENCIES_2)$/;"	m
gnotesyncclienttest_LDADD	src/Makefile	/^gnotesyncclienttest_LDADD = $(GNOTE_LIBS)$/;"	m
gnotesyncclienttest_OBJECTS	src/Makefile	/^gnotesyncclienttest_OBJECTS = $(am_gnotesyncclienttest_OBJECTS)$/;"	m
gnotesyncclienttest_SOURCES	src/Makefile	/^gnotesyncclienttest_SOURCES = test\/gnotesyncclienttest.cpp \\$/;"	m
goto_next_result	src/mainwindowembeds.cpp	/^bool SearchableItem::goto_next_result()$/;"	f	class:gnote::SearchableItem	signature:()
goto_next_result	src/mainwindowembeds.hpp	/^  virtual bool goto_next_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
goto_next_result	src/notewindow.cpp	/^  bool NoteFindHandler::goto_next_result()$/;"	f	class:gnote::NoteFindHandler	signature:()
goto_next_result	src/notewindow.cpp	/^  bool NoteWindow::goto_next_result()$/;"	f	class:gnote::NoteWindow	signature:()
goto_next_result	src/notewindow.hpp	/^  bool goto_next_result();$/;"	p	class:gnote::NoteFindHandler	access:public	signature:()
goto_previous_result	src/mainwindowembeds.cpp	/^bool SearchableItem::goto_previous_result()$/;"	f	class:gnote::SearchableItem	signature:()
goto_previous_result	src/mainwindowembeds.hpp	/^  virtual bool goto_previous_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
goto_previous_result	src/notewindow.cpp	/^  bool NoteFindHandler::goto_previous_result()$/;"	f	class:gnote::NoteFindHandler	signature:()
goto_previous_result	src/notewindow.cpp	/^  bool NoteWindow::goto_previous_result()$/;"	f	class:gnote::NoteWindow	signature:()
goto_previous_result	src/notewindow.hpp	/^  bool goto_previous_result();$/;"	p	class:gnote::NoteFindHandler	access:public	signature:()
grab_ungrab_with_ignorable_modifiers	libtomboy/tomboykeybinder.c	/^grab_ungrab_with_ignorable_modifiers (GdkWindow *rootwin, $/;"	f	file:	signature:(GdkWindow *rootwin, Binding *binding, gboolean grab)
gsettings_SCHEMAS	data/Makefile	/^gsettings_SCHEMAS = org.gnome.gnote.gschema.xml$/;"	m
gsettings__enum_file	data/Makefile	/^gsettings__enum_file = $(addsuffix .enums.xml,$(gsettings_ENUM_NAMESPACE))$/;"	m
gsettingsschemadir	Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	data/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	data/appdata/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	data/icons/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	help/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	libtomboy/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/backlinks/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/bugzilla/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/exporttogtg/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/exporttohtml/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/filesystemsyncservice/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/fixedwidth/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/inserttimestamp/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/notedirectorywatcher/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/noteoftheday/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/printnotes/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/readonly/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/replacetitle/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/specialnotes/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/statistics/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/stickynoteimport/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/tableofcontents/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/todo/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/tomboyimport/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/underline/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/addins/webdavsyncservice/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gsettingsschemadir	src/dbus/Makefile	/^gsettingsschemadir = ${datarootdir}\/glib-2.0\/schemas$/;"	m
gtk_spell_available	src/watchers.hpp	/^    static bool gtk_spell_available()$/;"	f	class:gnote::NoteSpellChecker	access:public	signature:()
gtk_update_icon_cache	data/icons/Makefile	/^gtk_update_icon_cache = gtk-update-icon-cache -f -t$/;"	m
guard	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::guard(bool v)$/;"	f	class:sharp::PropertyEditorBool	signature:(bool v)
guard	src/sharp/propertyeditor.hpp	/^    void guard(bool v);$/;"	p	class:sharp::PropertyEditorBool	access:private	signature:(bool v)
handle_file_system_change_event	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::handle_file_system_change_event($/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:( const Glib::RefPtr<Gio::File> & file, const Glib::RefPtr<Gio::File> &, Gio::FileMonitorEvent event_type)
handle_file_system_change_event	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void handle_file_system_change_event(const Glib::RefPtr<Gio::File> & file,$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::RefPtr<Gio::File> & file, const Glib::RefPtr<Gio::File> & other_file, Gio::FileMonitorEvent event_type)
handle_link_rename	src/note.cpp	/^  void Note::handle_link_rename(const Glib::ustring & old_title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & old_title, const NoteBase::Ptr & renamed, bool rename)
handle_link_rename	src/notebase.cpp	/^void NoteBase::handle_link_rename(const Glib::ustring &, const Ptr &, bool)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring &, const Ptr &, bool)
handle_link_rename	src/notebase.hpp	/^  virtual void handle_link_rename(const Glib::ustring & old_title, const Ptr & renamed, bool rename);$/;"	p	class:gnote::NoteBase	access:protected	signature:(const Glib::ustring & old_title, const Ptr & renamed, bool rename)
handle_note_buffer_changed	src/synchronization/syncmanager.cpp	/^  void SyncManager::handle_note_buffer_changed(const NoteBase::Ptr &)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr &)
handle_note_buffer_changed	src/synchronization/syncmanager.hpp	/^    void handle_note_buffer_changed(const NoteBase::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & note)
handle_note_saved	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::handle_note_saved(const gnote::NoteBase::Ptr & note)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const gnote::NoteBase::Ptr & note)
handle_note_saved	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void handle_note_saved(const gnote::NoteBase::Ptr &);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const gnote::NoteBase::Ptr &)
handle_note_saved_or_deleted	src/synchronization/syncmanager.cpp	/^  void SyncManager::handle_note_saved_or_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr &)
handle_note_saved_or_deleted	src/synchronization/syncmanager.hpp	/^    void handle_note_saved_or_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & note)
handle_timeout	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^bool NoteDirectoryWatcherApplicationAddin::handle_timeout()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
handle_timeout	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool handle_timeout();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:()
handler	libtomboy/tomboykeybinder.c	/^	TomboyBindkeyHandler  handler;$/;"	m	struct:_Binding	file:	access:public
has_buffer	src/note.hpp	/^  bool has_buffer() const$/;"	f	class:gnote::Note	access:public	signature:() const
has_buffer	src/noteaddin.hpp	/^  bool has_buffer() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
has_changed	src/addins/noteoftheday/noteoftheday.cpp	/^bool NoteOfTheDay::has_changed(const gnote::NoteBase::Ptr & note)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(const gnote::NoteBase::Ptr & note)
has_changed	src/addins/noteoftheday/noteoftheday.hpp	/^  static bool has_changed(const gnote::NoteBase::Ptr & note);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const gnote::NoteBase::Ptr & note)
has_extent	src/note.cpp	/^  bool NoteData::has_extent()$/;"	f	class:gnote::NoteData	signature:()
has_extent	src/notebase.hpp	/^  bool has_extent();$/;"	p	class:gnote::NoteData	access:public	signature:()
has_interface	src/sharp/dynamicmodule.cpp	/^  bool DynamicModule::has_interface(const char * intf) const$/;"	f	class:sharp::DynamicModule	signature:(const char * intf) const
has_interface	src/sharp/dynamicmodule.hpp	/^  bool has_interface(const char *) const;$/;"	p	class:sharp::DynamicModule	access:public	signature:(const char *) const
has_link_tag	src/notetag.cpp	/^  bool NoteTagTable::has_link_tag(const Gtk::TextIter & iter)$/;"	f	class:gnote::NoteTagTable	signature:(const Gtk::TextIter & iter)
has_link_tag	src/notetag.hpp	/^  bool has_link_tag(const Gtk::TextIter & iter);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Gtk::TextIter & iter)
has_tag_over_range	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^bool TableofcontentsNoteAddin::has_tag_over_range (Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)
has_tag_over_range	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool has_tag_over_range (Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)
has_window	src/note.hpp	/^  bool has_window() const $/;"	f	class:gnote::Note	access:public	signature:() const
has_window	src/noteaddin.hpp	/^  bool has_window() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
hash_string	src/synchronization/isyncmanager.cpp	/^std::string SyncLockInfo::hash_string()$/;"	f	class:gnote::sync::SyncLockInfo	signature:()
hash_string	src/synchronization/isyncmanager.hpp	/^  std::string hash_string();$/;"	p	class:gnote::sync::SyncLockInfo	access:public	signature:()
header_text	src/synchronization/syncdialog.cpp	/^  void header_text(const std::string & value)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const std::string & value)
header_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::header_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
header_text	src/synchronization/syncdialog.hpp	/^    void header_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
headification_switch	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::headification_switch (Heading::Type heading_request)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Heading::Type heading_request)
headification_switch	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void headification_switch (Heading::Type heading_request);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Heading::Type heading_request)
height	src/notebase.hpp	/^  int & height()$/;"	f	class:gnote::NoteData	access:public	signature:()
height	src/notebase.hpp	/^  int height() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
highlight_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::highlight_in_block(const Gtk::TextIter & start,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
highlight_in_block	src/watchers.hpp	/^    void highlight_in_block(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
highlight_matches	src/notewindow.cpp	/^  void NoteFindHandler::highlight_matches(bool highlight)$/;"	f	class:gnote::NoteFindHandler	signature:(bool highlight)
highlight_matches	src/notewindow.hpp	/^  void highlight_matches(bool);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(bool)
highlight_note	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_note()$/;"	f	class:todo::Todo	signature:()
highlight_note	src/addins/todo/todonoteaddin.hpp	/^  void highlight_note();$/;"	p	class:todo::Todo	access:private	signature:()
highlight_note_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::highlight_note_in_block (const NoteBase::Ptr & find_note,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & find_note, const Gtk::TextIter & start, const Gtk::TextIter & end)
highlight_note_in_block	src/watchers.hpp	/^    void highlight_note_in_block (const NoteBase::Ptr &, const Gtk::TextIter &,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &, const Gtk::TextIter &, const Gtk::TextIter &)
highlight_region	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_region(Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:todo::Todo	signature:(Gtk::TextIter start, Gtk::TextIter end)
highlight_region	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_region(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:todo::Todo	signature:(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)
highlight_region	src/addins/todo/todonoteaddin.hpp	/^  void highlight_region(Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:todo::Todo	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
highlight_region	src/addins/todo/todonoteaddin.hpp	/^  void highlight_region(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:todo::Todo	access:private	signature:(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)
highlighting	src/notewindow.hpp	/^    bool                         highlighting;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
hint_position	src/mainwindowembeds.cpp	/^void EmbeddableWidget::hint_position(int &, int &)$/;"	f	class:gnote::EmbeddableWidget	signature:(int &, int &)
hint_position	src/mainwindowembeds.hpp	/^  virtual void hint_position(int & x, int & y);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(int & x, int & y)
hint_size	src/mainwindowembeds.cpp	/^void EmbeddableWidget::hint_size(int &, int &)$/;"	f	class:gnote::EmbeddableWidget	signature:(int &, int &)
hint_size	src/mainwindowembeds.hpp	/^  virtual void hint_size(int & width, int & height);$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:(int & width, int & height)
hint_size	src/notewindow.cpp	/^  void NoteWindow::hint_size(int & width, int & height)$/;"	f	class:gnote::NoteWindow	signature:(int & width, int & height)
hint_size	src/searchnoteswidget.cpp	/^void SearchNotesWidget::hint_size(int & width, int & height)$/;"	f	class:gnote::SearchNotesWidget	signature:(int & width, int & height)
host	Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	data/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	data/appdata/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	data/icons/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	help/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	libtomboy/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/backlinks/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/bugzilla/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<std::string>                host;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
host	src/addins/exporttogtg/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/exporttohtml/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/filesystemsyncservice/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/fixedwidth/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/inserttimestamp/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/notedirectorywatcher/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/noteoftheday/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/printnotes/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/readonly/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/replacetitle/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/specialnotes/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/statistics/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/stickynoteimport/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/tableofcontents/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/todo/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/tomboyimport/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/underline/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/addins/webdavsyncservice/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/dbus/Makefile	/^host = i686-pc-linux-gnu$/;"	m
host	src/mainwindowembeds.hpp	/^  EmbeddableWidgetHost *host() const$/;"	f	class:gnote::EmbeddableWidget	access:public	signature:() const
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	data/Makefile	/^host_alias = $/;"	m
host_alias	data/appdata/Makefile	/^host_alias = $/;"	m
host_alias	data/icons/Makefile	/^host_alias = $/;"	m
host_alias	help/Makefile	/^host_alias = $/;"	m
host_alias	libtomboy/Makefile	/^host_alias = $/;"	m
host_alias	src/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/backlinks/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/bugzilla/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/exporttogtg/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/exporttohtml/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/filesystemsyncservice/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/fixedwidth/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/inserttimestamp/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/notedirectorywatcher/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/noteoftheday/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/printnotes/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/readonly/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/replacetitle/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/specialnotes/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/statistics/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/stickynoteimport/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/tableofcontents/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/todo/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/tomboyimport/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/underline/Makefile	/^host_alias = $/;"	m
host_alias	src/addins/webdavsyncservice/Makefile	/^host_alias = $/;"	m
host_alias	src/dbus/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = i686$/;"	m
host_cpu	data/Makefile	/^host_cpu = i686$/;"	m
host_cpu	data/appdata/Makefile	/^host_cpu = i686$/;"	m
host_cpu	data/icons/Makefile	/^host_cpu = i686$/;"	m
host_cpu	help/Makefile	/^host_cpu = i686$/;"	m
host_cpu	libtomboy/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/backlinks/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/bugzilla/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/exporttogtg/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/exporttohtml/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/filesystemsyncservice/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/fixedwidth/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/inserttimestamp/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/notedirectorywatcher/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/noteoftheday/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/printnotes/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/readonly/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/replacetitle/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/specialnotes/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/statistics/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/stickynoteimport/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/tableofcontents/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/todo/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/tomboyimport/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/underline/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/addins/webdavsyncservice/Makefile	/^host_cpu = i686$/;"	m
host_cpu	src/dbus/Makefile	/^host_cpu = i686$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	data/Makefile	/^host_os = linux-gnu$/;"	m
host_os	data/appdata/Makefile	/^host_os = linux-gnu$/;"	m
host_os	data/icons/Makefile	/^host_os = linux-gnu$/;"	m
host_os	help/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libtomboy/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/backlinks/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/bugzilla/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/exporttogtg/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/exporttohtml/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/filesystemsyncservice/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/fixedwidth/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/inserttimestamp/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/notedirectorywatcher/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/noteoftheday/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/printnotes/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/readonly/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/replacetitle/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/specialnotes/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/statistics/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/stickynoteimport/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/tableofcontents/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/todo/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/tomboyimport/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/underline/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/addins/webdavsyncservice/Makefile	/^host_os = linux-gnu$/;"	m
host_os	src/dbus/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	data/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	data/appdata/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	data/icons/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	help/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	libtomboy/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/backlinks/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/bugzilla/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/exporttogtg/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/exporttohtml/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/filesystemsyncservice/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/fixedwidth/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/inserttimestamp/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/notedirectorywatcher/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/noteoftheday/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/printnotes/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/readonly/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/replacetitle/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/specialnotes/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/statistics/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/stickynoteimport/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/tableofcontents/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/todo/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/tomboyimport/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/underline/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/addins/webdavsyncservice/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_triplet	src/dbus/Makefile	/^host_triplet = i686-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
host_vendor	data/Makefile	/^host_vendor = pc$/;"	m
host_vendor	data/appdata/Makefile	/^host_vendor = pc$/;"	m
host_vendor	data/icons/Makefile	/^host_vendor = pc$/;"	m
host_vendor	help/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libtomboy/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/backlinks/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/bugzilla/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/exporttogtg/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/exporttohtml/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/filesystemsyncservice/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/fixedwidth/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/inserttimestamp/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/notedirectorywatcher/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/noteoftheday/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/printnotes/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/readonly/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/replacetitle/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/specialnotes/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/statistics/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/stickynoteimport/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/tableofcontents/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/todo/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/tomboyimport/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/underline/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/addins/webdavsyncservice/Makefile	/^host_vendor = pc$/;"	m
host_vendor	src/dbus/Makefile	/^host_vendor = pc$/;"	m
hours	src/sharp/timespan.hpp	/^    int hours() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	data/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	data/appdata/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	data/icons/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	help/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libtomboy/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/backlinks/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/bugzilla/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/exporttogtg/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/exporttohtml/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/filesystemsyncservice/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/fixedwidth/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/inserttimestamp/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/notedirectorywatcher/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/noteoftheday/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/printnotes/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/readonly/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/replacetitle/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/specialnotes/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/statistics/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/stickynoteimport/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/tableofcontents/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/todo/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/tomboyimport/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/underline/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/addins/webdavsyncservice/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	src/dbus/Makefile	/^htmldir = ${docdir}$/;"	m
icon	src/addins/bugzilla/bugzillapreferences.hpp	/^    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;$/;"	m	class:bugzilla::BugzillaPreferences::Columns	access:public
icon	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Glib::RefPtr<Gdk::Pixbuf> > icon;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
icon_DATA	src/addins/bugzilla/Makefile	/^icon_DATA = bug.png$/;"	m
icon_store	src/addins/bugzilla/bugzillapreferences.hpp	/^  Glib::RefPtr<Gtk::ListStore> icon_store;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
icon_tree	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::TreeView *icon_tree;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
icondir	src/addins/bugzilla/Makefile	/^icondir = ${datarootdir}\/gnote\/icons\/hicolor\/16x16\/apps$/;"	m
id	src/addininfo.hpp	/^  const std::string & id() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
id	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^std::string FileSystemSyncServiceAddin::id()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
id	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::id()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
id	src/notebase.cpp	/^const std::string NoteBase::id() const$/;"	f	class:gnote::NoteBase	signature:() const
id	src/notebase.hpp	/^  const std::string id() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
id	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          id;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
id	src/synchronization/filesystemsyncserver.cpp	/^std::string FileSystemSyncServer::id()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
id	src/synchronization/isyncmanager.hpp	/^  virtual std::string id() = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
id	src/synchronization/syncserviceaddin.hpp	/^    virtual std::string id() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
images_dir	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  std::string BugzillaNoteAddin::images_dir()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
images_dir	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  static std::string images_dir();$/;"	p	class:bugzilla::BugzillaNoteAddin	access:public	signature:()
immediate_execute	src/gnote.cpp	/^  int GnoteCommandLine::immediate_execute()$/;"	f	class:gnote::GnoteCommandLine	signature:()
immediate_execute	src/gnote.hpp	/^  int immediate_execute();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
import_button_clicked	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::import_button_clicked(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
import_button_clicked	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void import_button_clicked(gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(gnote::NoteManager & manager)
import_note	src/notemanagerbase.cpp	/^NoteBase::Ptr NoteManagerBase::import_note(const Glib::ustring & file_path)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & file_path)
import_note	src/notemanagerbase.hpp	/^  NoteBase::Ptr import_note(const Glib::ustring & file_path);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & file_path)
import_notes	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::import_notes(xmlDocPtr xml_doc,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager)
import_notes	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void import_notes(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager)
inch_to_pixel	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static int inch_to_pixel(double inch, double dpi)$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:(double inch, double dpi)
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	data/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	data/appdata/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	data/icons/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	help/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libtomboy/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/backlinks/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/bugzilla/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/exporttogtg/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/exporttohtml/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/filesystemsyncservice/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/fixedwidth/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/inserttimestamp/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/notedirectorywatcher/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/noteoftheday/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/printnotes/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/readonly/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/replacetitle/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/specialnotes/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/statistics/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/stickynoteimport/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/tableofcontents/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/todo/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/tomboyimport/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/underline/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/addins/webdavsyncservice/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	src/dbus/Makefile	/^includedir = ${prefix}\/include$/;"	m
increase_cursor_depth	src/notebuffer.hpp	/^  void increase_cursor_depth()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
increase_depth	src/notebuffer.cpp	/^  void NoteBuffer::increase_depth(Gtk::TextIter & start)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & start)
increase_depth	src/notebuffer.hpp	/^  void increase_depth(Gtk::TextIter & start);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & start)
increase_font_clicked	src/notewindow.cpp	/^  void NoteTextMenu::increase_font_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
increase_font_clicked	src/notewindow.hpp	/^  void increase_font_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
increase_indent_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::increase_indent_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
increase_indent_clicked	src/notewindow.hpp	/^  void increase_indent_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	data/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	data/appdata/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	data/icons/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	help/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libtomboy/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/backlinks/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/bugzilla/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/exporttogtg/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/exporttohtml/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/filesystemsyncservice/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/fixedwidth/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/inserttimestamp/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/notedirectorywatcher/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/noteoftheday/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/printnotes/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/readonly/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/replacetitle/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/specialnotes/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/statistics/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/stickynoteimport/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/tableofcontents/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/todo/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/tomboyimport/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/underline/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/addins/webdavsyncservice/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	src/dbus/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
init	src/sharp/streamreader.cpp	/^void StreamReader::init(const std::string & filename)$/;"	f	class:sharp::StreamReader	signature:(const std::string & filename)
init	src/sharp/streamreader.hpp	/^  void init(const std::string &);$/;"	p	class:sharp::StreamReader	access:public	signature:(const std::string &)
init	src/sharp/streamwriter.cpp	/^void StreamWriter::init(const std::string & filename)$/;"	f	class:sharp::StreamWriter	signature:(const std::string & filename)
init	src/sharp/streamwriter.hpp	/^  void init(const std::string &);$/;"	p	class:sharp::StreamWriter	access:public	signature:(const std::string &)
init	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::init(NoteManagerBase & manager)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(NoteManagerBase & manager)
init	src/synchronization/gnotesyncclient.hpp	/^    void init(NoteManagerBase &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:(NoteManagerBase &)
init	src/synchronization/syncmanager.cpp	/^  void SyncManager::init(NoteManagerBase & m)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & m)
init	src/synchronization/syncmanager.hpp	/^    static void init(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:public	signature:(NoteManagerBase &)
initialize	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::initialize ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
initialize	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::initialize(const std::string & element_name)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & element_name)
initialize	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::initialize()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
initialize	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::initialize()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
initialize	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::initialize()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
initialize	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::initialize()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
initialize	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::initialize ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
initialize	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::initialize()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
initialize	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::initialize()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
initialize	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::initialize()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
initialize	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::initialize()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
initialize	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::initialize()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
initialize	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::initialize()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
initialize	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^void SpecialNotesApplicationAddin::initialize()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
initialize	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::initialize()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
initialize	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::initialize()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
initialize	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::initialize () {}$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
initialize	src/addins/todo/todonoteaddin.cpp	/^void Todo::initialize()$/;"	f	class:todo::Todo	signature:()
initialize	src/addins/tomboyimport/tomboyimportaddin.cpp	/^void TomboyImportAddin::initialize()$/;"	f	class:tomboyimport::TomboyImportAddin	signature:()
initialize	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::initialize ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
initialize	src/applicationaddin.hpp	/^  virtual void initialize () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
initialize	src/noteaddin.cpp	/^  void NoteAddin::initialize(const Note::Ptr & note)$/;"	f	class:gnote::NoteAddin	signature:(const Note::Ptr & note)
initialize	src/noteaddin.hpp	/^  virtual void initialize () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
initialize	src/noteaddin.hpp	/^  void initialize(const Note::Ptr & note);$/;"	p	class:gnote::NoteAddin	access:public	signature:(const Note::Ptr & note)
initialize	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::initialize ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
initialize	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::initialize ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
initialize	src/notetag.cpp	/^  void NoteTag::initialize(const std::string & element_name)$/;"	f	class:gnote::NoteTag	signature:(const std::string & element_name)
initialize	src/notetag.hpp	/^  virtual void initialize(const std::string & element_name);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const std::string & element_name)
initialize	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::initialize()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
initialize	src/synchronization/syncserviceaddin.hpp	/^    virtual void initialize () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
initialize	src/watchers.cpp	/^  void MouseHandWatcher::initialize ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
initialize	src/watchers.cpp	/^  void NoteLinkWatcher::initialize ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
initialize	src/watchers.cpp	/^  void NoteRenameWatcher::initialize ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
initialize	src/watchers.cpp	/^  void NoteSpellChecker::initialize ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
initialize	src/watchers.cpp	/^  void NoteTagsWatcher::initialize ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
initialize	src/watchers.cpp	/^  void NoteUrlWatcher::initialize ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
initialize	src/watchers.cpp	/^  void NoteWikiWatcher::initialize ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
initialize_application_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_application_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
initialize_application_addins	src/addinmanager.hpp	/^  void initialize_application_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
initialize_sharp_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_sharp_addins()$/;"	f	class:gnote::AddinManager	signature:()
initialize_sharp_addins	src/addinmanager.hpp	/^  void initialize_sharp_addins();$/;"	p	class:gnote::AddinManager	access:private	signature:()
initialize_sync_service_addins	src/addinmanager.cpp	/^  void AddinManager::initialize_sync_service_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
initialize_sync_service_addins	src/addinmanager.hpp	/^  void initialize_sync_service_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
initialize_sync_service_addins	src/synchronization/syncmanager.cpp	/^  void SyncManager::initialize_sync_service_addins(NoteManagerBase & note_manager)$/;"	f	class:gnote::sync::SyncManager	signature:(NoteManagerBase & note_manager)
initialize_sync_service_addins	src/synchronization/syncmanager.hpp	/^    virtual void initialize_sync_service_addins(NoteManagerBase &);$/;"	p	class:gnote::sync::SyncManager	access:protected	signature:(NoteManagerBase &)
initialize_tool_button	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::initialize_tool_button()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
initialize_tool_button	src/notebooks/notebooknoteaddin.hpp	/^    void initialize_tool_button();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
initialized	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::initialized()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
initialized	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^bool NoteDirectoryWatcherApplicationAddin::initialized()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
initialized	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^bool NoteOfTheDayApplicationAddin::initialized()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
initialized	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^bool SpecialNotesApplicationAddin::initialized()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
initialized	src/addins/statistics/statisticsapplicationaddin.cpp	/^bool StatisticsApplicationAddin::initialized()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
initialized	src/applicationaddin.hpp	/^  virtual bool initialized () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
initialized	src/importaddin.cpp	/^  bool ImportAddin::initialized ()$/;"	f	class:gnote::ImportAddin	signature:()
initialized	src/notebooks/notebookapplicationaddin.cpp	/^    bool NotebookApplicationAddin::initialized ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
initialized	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::initialized()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
initialized	src/synchronization/syncserviceaddin.hpp	/^    virtual bool initialized () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
insert_bug	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  bool BugzillaNoteAddin::insert_bug(int x, int y, const std::string & uri, int id)$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(int x, int y, const std::string & uri, int id)
insert_bug	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  bool insert_bug (int x, int y, const std::string & uri, int id);$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(int x, int y, const std::string & uri, int id)
insert_bullet	src/notebuffer.cpp	/^  void NoteBuffer::insert_bullet(Gtk::TextIter & iter, int depth, Pango::Direction direction)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter, int depth, Pango::Direction direction)
insert_bullet	src/notebuffer.hpp	/^  void insert_bullet(Gtk::TextIter & iter, int depth, Pango::Direction direction);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & iter, int depth, Pango::Direction direction)
inserttimestamp	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^namespace inserttimestamp {$/;"	n	file:
inserttimestamp	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^namespace inserttimestamp {$/;"	n
inserttimestamp	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^namespace inserttimestamp {$/;"	n	file:
inserttimestamp	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^namespace inserttimestamp {$/;"	n
inserttimestamp	src/addins/inserttimestamp/inserttimestamppreferencesfactory.hpp	/^namespace inserttimestamp {$/;"	n
inserttimestamp::DECLARE_MODULE	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^DECLARE_MODULE(InsertTimeStampModule);$/;"	p	namespace:inserttimestamp	signature:(InsertTimeStampModule)
inserttimestamp::INSERT_TIMESTAMP_FORMAT	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  const char * INSERT_TIMESTAMP_FORMAT = "format";$/;"	m	namespace:inserttimestamp	file:
inserttimestamp::InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^class InsertTimeStampModule$/;"	c	namespace:inserttimestamp	inherits:sharp::DynamicModule
inserttimestamp::InsertTimeStampModule::InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  InsertTimeStampModule::InsertTimeStampModule()$/;"	f	class:inserttimestamp::InsertTimeStampModule	signature:()
inserttimestamp::InsertTimeStampModule::InsertTimeStampModule	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  InsertTimeStampModule();$/;"	p	class:inserttimestamp::InsertTimeStampModule	access:public	signature:()
inserttimestamp::InsertTimestampNoteAddin	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^class InsertTimestampNoteAddin$/;"	c	namespace:inserttimestamp	inherits:gnote::NoteAddin
inserttimestamp::InsertTimestampNoteAddin::create	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  static InsertTimestampNoteAddin* create()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	access:public	signature:()
inserttimestamp::InsertTimestampNoteAddin::initialize	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::initialize()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
inserttimestamp::InsertTimestampNoteAddin::m_date_format	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  std::string    m_date_format;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:private
inserttimestamp::InsertTimestampNoteAddin::on_format_setting_changed	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_format_setting_changed(const Glib::ustring & key)$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:(const Glib::ustring & key)
inserttimestamp::InsertTimestampNoteAddin::on_format_setting_changed	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  void on_format_setting_changed(const Glib::ustring & key);$/;"	p	class:inserttimestamp::InsertTimestampNoteAddin	access:private	signature:(const Glib::ustring & key)
inserttimestamp::InsertTimestampNoteAddin::on_menu_item_activated	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_menu_item_activated()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
inserttimestamp::InsertTimestampNoteAddin::on_menu_item_activated	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  void on_menu_item_activated();$/;"	p	class:inserttimestamp::InsertTimestampNoteAddin	access:private	signature:()
inserttimestamp::InsertTimestampNoteAddin::on_note_opened	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_note_opened()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
inserttimestamp::InsertTimestampNoteAddin::override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
inserttimestamp::InsertTimestampNoteAddin::override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
inserttimestamp::InsertTimestampNoteAddin::override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
inserttimestamp::InsertTimestampNoteAddin::shutdown	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::shutdown()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
inserttimestamp::InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^class InsertTimestampPreferences$/;"	c	namespace:inserttimestamp	inherits:Gtk::Grid
inserttimestamp::InsertTimestampPreferences::FormatColumns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  class FormatColumns$/;"	c	class:inserttimestamp::InsertTimestampPreferences	inherits:Gtk::TreeModelColumnRecord	access:private
inserttimestamp::InsertTimestampPreferences::FormatColumns::FormatColumns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    FormatColumns()$/;"	f	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public	signature:()
inserttimestamp::InsertTimestampPreferences::FormatColumns::format	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    Gtk::TreeModelColumn<std::string> format;$/;"	m	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public
inserttimestamp::InsertTimestampPreferences::FormatColumns::formatted	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^    Gtk::TreeModelColumn<std::string> formatted;$/;"	m	class:inserttimestamp::InsertTimestampPreferences::FormatColumns	access:public
inserttimestamp::InsertTimestampPreferences::InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  InsertTimestampPreferences::InsertTimestampPreferences(gnote::NoteManager &)$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:(gnote::NoteManager &)
inserttimestamp::InsertTimestampPreferences::InsertTimestampPreferences	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  InsertTimestampPreferences(gnote::NoteManager &);$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:public	signature:(gnote::NoteManager &)
inserttimestamp::InsertTimestampPreferences::_init_static	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::_init_static()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
inserttimestamp::InsertTimestampPreferences::_init_static	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static void _init_static();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
inserttimestamp::InsertTimestampPreferences::custom_entry	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::Entry                  *custom_entry;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::custom_radio	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::RadioButton *custom_radio;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::m_columns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  FormatColumns     m_columns;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::on_selected_radio_toggled	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::on_selected_radio_toggled ()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
inserttimestamp::InsertTimestampPreferences::on_selected_radio_toggled	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  void on_selected_radio_toggled();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
inserttimestamp::InsertTimestampPreferences::on_selection_changed	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::on_selection_changed ()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
inserttimestamp::InsertTimestampPreferences::on_selection_changed	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  void on_selection_changed();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
inserttimestamp::InsertTimestampPreferences::s_formats	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  std::vector<std::string> InsertTimestampPreferences::s_formats;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	file:
inserttimestamp::InsertTimestampPreferences::s_formats	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static std::vector<std::string> s_formats;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::s_static_inited	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  bool InsertTimestampPreferences::s_static_inited = false;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	file:
inserttimestamp::InsertTimestampPreferences::s_static_inited	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static bool       s_static_inited;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::scroll	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::ScrolledWindow         *scroll;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::selected_radio	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::RadioButton *selected_radio;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::store	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Glib::RefPtr<Gtk::ListStore> store;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferences::tv	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::TreeView               *tv;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
inserttimestamp::InsertTimestampPreferencesFactory	src/addins/inserttimestamp/inserttimestamppreferencesfactory.hpp	/^  class InsertTimestampPreferencesFactory$/;"	c	namespace:inserttimestamp	inherits:gnote::AddinPreferenceFactory
inserttimestamp::SCHEMA_INSERT_TIMESTAMP	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  const char * SCHEMA_INSERT_TIMESTAMP = "org.gnome.gnote.insert-timestamp";$/;"	m	namespace:inserttimestamp	file:
inserttimestamp::__anon14::InsertTimestampAction	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^    class InsertTimestampAction$/;"	c	namespace:inserttimestamp::__anon14	file:	inherits:Gtk::Action
inserttimestamp::__anon14::InsertTimestampAction::InsertTimestampAction	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      InsertTimestampAction(gnote::NoteWindow *note_window)$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
inserttimestamp::__anon14::InsertTimestampAction::create	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	access:public	signature:(gnote::NoteWindow *note_window)
inserttimestamp::__anon14::InsertTimestampAction::create_menu_item_vfunc	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private	signature:()
inserttimestamp::__anon14::InsertTimestampAction::m_note_window	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private
inserttimestamp_la_LIBADD	src/addins/inserttimestamp/Makefile	/^inserttimestamp_la_LIBADD =$/;"	m
inserttimestamp_la_OBJECTS	src/addins/inserttimestamp/Makefile	/^inserttimestamp_la_OBJECTS = $(am_inserttimestamp_la_OBJECTS)$/;"	m
inserttimestamp_la_SOURCES	src/addins/inserttimestamp/Makefile	/^inserttimestamp_la_SOURCES = inserttimestampnoteaddin.hpp \\$/;"	m
install_sh	Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	data/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	data/appdata/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	data/icons/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	help/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	libtomboy/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	po/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/backlinks/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/bugzilla/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/exporttogtg/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/exporttohtml/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/filesystemsyncservice/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/fixedwidth/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/inserttimestamp/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/notedirectorywatcher/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/noteoftheday/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/printnotes/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/readonly/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/replacetitle/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/specialnotes/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/statistics/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/stickynoteimport/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/tableofcontents/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/todo/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/tomboyimport/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/underline/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/addins/webdavsyncservice/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh	src/dbus/Makefile	/^install_sh = ${SHELL} \/development\/gitarchives\/gnote\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	data/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	data/appdata/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	data/icons/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	help/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libtomboy/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/backlinks/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/bugzilla/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/exporttogtg/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/exporttohtml/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/filesystemsyncservice/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/fixedwidth/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/inserttimestamp/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/notedirectorywatcher/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/noteoftheday/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/printnotes/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/readonly/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/replacetitle/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/specialnotes/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/statistics/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/stickynoteimport/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/tableofcontents/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/todo/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/tomboyimport/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/underline/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/addins/webdavsyncservice/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	src/dbus/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	data/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	data/appdata/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	data/icons/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	help/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libtomboy/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/backlinks/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/bugzilla/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/exporttogtg/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/exporttohtml/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/filesystemsyncservice/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/fixedwidth/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/inserttimestamp/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/notedirectorywatcher/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/noteoftheday/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/printnotes/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/readonly/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/replacetitle/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/specialnotes/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/statistics/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/stickynoteimport/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/tableofcontents/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/todo/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/tomboyimport/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/underline/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/addins/webdavsyncservice/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	src/dbus/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	data/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	data/appdata/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	data/icons/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	help/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libtomboy/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/backlinks/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/bugzilla/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/exporttogtg/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/exporttohtml/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/filesystemsyncservice/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/fixedwidth/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/inserttimestamp/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/notedirectorywatcher/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/noteoftheday/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/printnotes/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/readonly/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/replacetitle/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/specialnotes/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/statistics/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/stickynoteimport/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/tableofcontents/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/todo/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/tomboyimport/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/underline/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/addins/webdavsyncservice/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	src/dbus/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instance	src/notetag.hpp	/^  static const NoteTagTable::Ptr & instance() $/;"	f	class:gnote::NoteTagTable	access:public	signature:()
instanciate_func_t	src/sharp/dynamicmodule.hpp	/^typedef DynamicModule* (*instanciate_func_t)();$/;"	t	namespace:sharp
int_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef int32_t (RemoteControl_adaptor::*int_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
intltool__v_merge_options_	Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	data/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	data/appdata/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	data/icons/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	help/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	libtomboy/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/backlinks/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/bugzilla/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/exporttogtg/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/exporttohtml/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/filesystemsyncservice/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/fixedwidth/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/inserttimestamp/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/notedirectorywatcher/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/noteoftheday/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/printnotes/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/readonly/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/replacetitle/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/specialnotes/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/statistics/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/stickynoteimport/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/tableofcontents/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/todo/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/tomboyimport/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/underline/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/addins/webdavsyncservice/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_	src/dbus/Makefile	/^intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))$/;"	m
intltool__v_merge_options_0	Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	data/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	data/appdata/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	data/icons/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	help/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	libtomboy/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/backlinks/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/bugzilla/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/exporttogtg/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/exporttohtml/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/filesystemsyncservice/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/fixedwidth/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/inserttimestamp/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/notedirectorywatcher/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/noteoftheday/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/printnotes/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/readonly/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/replacetitle/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/specialnotes/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/statistics/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/stickynoteimport/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/tableofcontents/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/todo/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/tomboyimport/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/underline/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/addins/webdavsyncservice/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
intltool__v_merge_options_0	src/dbus/Makefile	/^intltool__v_merge_options_0 = -q$/;"	m
introspect_DATA	src/dbus/Makefile	/^introspect_DATA = \\$/;"	m
introspectdir	src/dbus/Makefile	/^introspectdir = $(datadir)\/gnote$/;"	m
invalidate_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::invalidate_text()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
invalidate_text	src/note.hpp	/^  void invalidate_text();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
is_active_tag	src/notebuffer.cpp	/^  bool NoteBuffer::is_active_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
is_active_tag	src/notebuffer.hpp	/^  bool is_active_tag(const std::string & );$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string & )
is_adding_notebook	src/notebooks/notebookmanager.hpp	/^  bool is_adding_notebook() const$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:() const
is_alt	libtomboy/eggaccelerators.c	/^is_alt (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_background	src/gnote.hpp	/^  bool is_background() const$/;"	f	class:gnote::Gnote	access:public	signature:() const
is_bullet	src/notebuffer.cpp	/^  bool NoteBuffer::is_bullet(gunichar c)$/;"	f	class:gnote::NoteBuffer	signature:(gunichar c)
is_bullet	src/notebuffer.hpp	/^  static bool is_bullet(gunichar c);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(gunichar c)
is_bulleted_list_active	src/notebuffer.cpp	/^  bool NoteBuffer::is_bulleted_list_active()$/;"	f	class:gnote::NoteBuffer	signature:()
is_bulleted_list_active	src/notebuffer.cpp	/^  bool NoteBuffer::is_bulleted_list_active(Gtk::TextIter iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter)
is_bulleted_list_active	src/notebuffer.hpp	/^  bool is_bulleted_list_active();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
is_bulleted_list_active	src/notebuffer.hpp	/^  bool is_bulleted_list_active(Gtk::TextIter iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter iter)
is_configured	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::is_configured()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
is_configured	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::is_configured()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
is_configured	src/synchronization/syncserviceaddin.hpp	/^    virtual bool is_configured() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
is_control	libtomboy/eggaccelerators.c	/^is_control (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_ctl	libtomboy/eggaccelerators.c	/^is_ctl (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_ctrl	libtomboy/eggaccelerators.c	/^is_ctrl (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_disposing	src/abstractaddin.hpp	/^  bool is_disposing() const$/;"	f	class:gnote::AbstractAddin	access:public	signature:() const
is_dynamic_tag_registered	src/notetag.cpp	/^  bool NoteTagTable::is_dynamic_tag_registered(const std::string & tag_name)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name)
is_dynamic_tag_registered	src/notetag.hpp	/^  bool is_dynamic_tag_registered(const std::string &);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string &)
is_enabled	src/sharp/dynamicmodule.hpp	/^  bool is_enabled() const$/;"	f	class:sharp::DynamicModule	access:public	signature:() const
is_file	src/sharp/uri.cpp	/^  bool Uri::is_file() const$/;"	f	class:sharp::Uri	signature:() const
is_file	src/sharp/uri.hpp	/^    bool is_file() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
is_foreground	src/mainwindowembeds.hpp	/^  virtual bool is_foreground(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
is_foreground	src/recentchanges.cpp	/^  bool NoteRecentChanges::is_foreground(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
is_fuse_enabled	src/synchronization/syncutils.cpp	/^  bool SyncUtils::is_fuse_enabled()$/;"	f	class:gnote::sync::SyncUtils	signature:()
is_fuse_enabled	src/synchronization/syncutils.hpp	/^    bool is_fuse_enabled();$/;"	p	class:gnote::sync::SyncUtils	access:public	signature:()
is_hyper	libtomboy/eggaccelerators.c	/^is_hyper (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_loaded	src/note.hpp	/^  bool is_loaded() const$/;"	f	class:gnote::Note	access:public	signature:() const
is_meta	libtomboy/eggaccelerators.c	/^is_meta (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_module_loaded	src/addinmanager.cpp	/^  bool AddinManager::is_module_loaded(const std::string & id) const$/;"	f	class:gnote::AddinManager	signature:(const std::string & id) const
is_module_loaded	src/addinmanager.hpp	/^  bool is_module_loaded(const std::string & id) const;$/;"	p	class:gnote::AddinManager	access:public	signature:(const std::string & id) const
is_modx	libtomboy/eggaccelerators.c	/^is_modx (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_mounted	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::is_mounted()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
is_mounted	src/synchronization/fusesyncserviceaddin.hpp	/^  bool is_mounted();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
is_new	src/notebase.cpp	/^bool NoteBase::is_new() const$/;"	f	class:gnote::NoteBase	signature:() const
is_new	src/notebase.hpp	/^  bool is_new() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
is_note_title_available	src/synchronization/syncdialog.cpp	/^  bool is_note_title_available(const std::string & renamedTitle)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:(const std::string & renamedTitle)
is_notebook_tag	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::is_notebook_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Tag::Ptr & tag)
is_notebook_tag	src/notebooks/notebookmanager.hpp	/^  static bool is_notebook_tag(const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Tag::Ptr &)
is_opened	src/note.hpp	/^  bool is_opened() const$/;"	f	class:gnote::Note	access:public	signature:() const
is_pinned	src/note.cpp	/^  bool Note::is_pinned() const$/;"	f	class:gnote::Note	signature:() const
is_pinned	src/note.hpp	/^  bool is_pinned() const;$/;"	p	class:gnote::Note	access:public	signature:() const
is_property	src/tag.hpp	/^    bool is_property() const$/;"	f	class:gnote::Tag	access:public	signature:() const
is_release	libtomboy/eggaccelerators.c	/^is_release (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_shft	libtomboy/eggaccelerators.c	/^is_shft (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_shift	libtomboy/eggaccelerators.c	/^is_shift (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_special	src/note.cpp	/^  bool Note::is_special() const$/;"	f	class:gnote::Note	signature:() const
is_special	src/note.hpp	/^  bool is_special() const;$/;"	p	class:gnote::Note	access:public	signature:() const
is_super	libtomboy/eggaccelerators.c	/^is_super (const gchar *string)$/;"	f	file:	signature:(const gchar *string)
is_supported	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::is_supported()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
is_supported	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::is_supported()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
is_supported	src/synchronization/syncserviceaddin.hpp	/^    virtual bool is_supported() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
is_system	src/tag.hpp	/^    bool is_system() const$/;"	f	class:gnote::Tag	access:public	signature:() const
is_template_note	src/notebooks/notebook.cpp	/^  bool Notebook::is_template_note(const Note::Ptr & note)$/;"	f	class:gnote::notebooks::Notebook	signature:(const Note::Ptr & note)
is_template_note	src/notebooks/notebook.hpp	/^  static bool is_template_note(const Note::Ptr &);$/;"	p	class:gnote::notebooks::Notebook	access:protected	signature:(const Note::Ptr &)
is_text_invalid	src/note.cpp	/^  bool NoteDataBufferSynchronizer::is_text_invalid() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:() const
is_text_invalid	src/note.hpp	/^  bool is_text_invalid() const;$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:() const
is_valid	src/sharp/datetime.cpp	/^  bool DateTime::is_valid() const$/;"	f	class:sharp::DateTime	signature:() const
is_valid	src/sharp/datetime.hpp	/^  bool is_valid() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
is_valid_xml_file	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::is_valid_xml_file(const std::string & xmlFilePath)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::string & xmlFilePath)
is_valid_xml_file	src/synchronization/filesystemsyncserver.hpp	/^  bool is_valid_xml_file(const std::string & xmlFilePath);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const std::string & xmlFilePath)
itlocaledir	po/Makefile	/^itlocaledir = $(prefix)\/$(DATADIRNAME)\/locale$/;"	m
jump_to_match	src/notewindow.cpp	/^  void NoteFindHandler::jump_to_match(const Match & match)$/;"	f	class:gnote::NoteFindHandler	signature:(const Match & match)
jump_to_match	src/notewindow.hpp	/^  void jump_to_match(const Match & match);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(const Match & match)
key	src/triehit.hpp	/^  Glib::ustring key() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
key_create_new_note	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_create_new_note()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
key_create_new_note	src/prefskeybinder.hpp	/^  void key_create_new_note();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
key_open_recent_changes	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_open_recent_changes()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
key_open_recent_changes	src/prefskeybinder.hpp	/^  void key_open_recent_changes();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
key_open_search	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_open_search()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
key_open_search	src/prefskeybinder.hpp	/^  void key_open_search();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
key_openstart_here	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_openstart_here()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
key_openstart_here	src/prefskeybinder.hpp	/^  void key_openstart_here();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
key_pressed	src/noteeditor.cpp	/^  bool NoteEditor::key_pressed (GdkEventKey * ev)$/;"	f	class:gnote::NoteEditor	signature:(GdkEventKey * ev)
key_pressed	src/noteeditor.hpp	/^  bool key_pressed (GdkEventKey * ev);$/;"	p	class:gnote::NoteEditor	access:private	signature:(GdkEventKey * ev)
key_show_menu	src/prefskeybinder.cpp	/^  void GnotePrefsKeybinder::key_show_menu()$/;"	f	class:gnote::GnotePrefsKeybinder	signature:()
key_show_menu	src/prefskeybinder.hpp	/^  void key_show_menu();$/;"	p	class:gnote::GnotePrefsKeybinder	access:private	signature:()
keybinder	src/gnote.hpp	/^  IKeybinder & keybinder()$/;"	f	class:gnote::Gnote	access:public	signature:()
keybinding_pressed	src/xkeybinder.cpp	/^  void XKeybinder::keybinding_pressed(char *keystring, gpointer user_data)$/;"	f	class:gnote::XKeybinder	signature:(char *keystring, gpointer user_data)
keybinding_pressed	src/xkeybinder.hpp	/^  static void keybinding_pressed(char *keystring, gpointer user_data);$/;"	p	class:gnote::XKeybinder	access:private	signature:(char *keystring, gpointer user_data)
keycode	libtomboy/tomboykeybinder.c	/^	uint                  keycode;$/;"	m	struct:_Binding	file:	access:public
keymap_changed	libtomboy/tomboykeybinder.c	/^keymap_changed (GdkKeymap *map)$/;"	f	file:	signature:(GdkKeymap *map)
keyring	src/gnome_keyring/keyringexception.hpp	/^namespace keyring {$/;"	n	namespace:gnome
keyring	src/gnome_keyring/ring.cpp	/^namespace keyring {$/;"	n	namespace:gnome	file:
keyring	src/gnome_keyring/ring.hpp	/^namespace keyring {$/;"	n	namespace:gnome
keyring_attributes	src/gnome_keyring/ring.cpp	/^GHashTable *Ring::keyring_attributes(const std::map<std::string, std::string> & atts)$/;"	f	class:gnome::keyring::Ring	signature:(const std::map<std::string, std::string> & atts)
keyring_attributes	src/gnome_keyring/ring.hpp	/^  static GHashTable *keyring_attributes(const std::map<std::string, std::string> & atts);$/;"	p	class:gnome::keyring::Ring	access:private	signature:(const std::map<std::string, std::string> & atts)
keystring	libtomboy/tomboykeybinder.c	/^	char                 *keystring;$/;"	m	struct:_Binding	file:	access:public
lab_distance	src/contrast.cpp	/^lab_distance(float La,$/;"	f	file:	signature:(float La, float aa, float ba, float Lb, float ab, float bb)
lab_to_rgb	src/contrast.cpp	/^lab_to_rgb(float L,$/;"	f	file:	signature:(float L, float a, float b, guint16 *R, guint16 *G, guint16 *B)
label	src/actionmanager.hpp	/^    std::string label;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
language_changed	src/watchers.cpp	/^  void NoteSpellChecker::language_changed(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)$/;"	f	class:gnote::NoteSpellChecker	signature:(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)
language_changed	src/watchers.hpp	/^    static void language_changed(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(GtkSpellChecker*, gchar *lang, NoteSpellChecker *checker)
last_change	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sharp::DateTime last_change;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
last_event_time	libtomboy/tomboykeybinder.c	/^static guint32 last_event_time = 0;$/;"	v	file:
last_opened_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^  std::string last_opened_dir;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
last_sync_date	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::last_sync_date(const sharp::DateTime & date)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const sharp::DateTime & date)
last_sync_date	src/synchronization/isyncmanager.hpp	/^  virtual sharp::DateTime last_sync_date() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
last_sync_date	src/synchronization/isyncmanager.hpp	/^  virtual void last_sync_date(const sharp::DateTime &) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const sharp::DateTime &)
last_synchronized_revision	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::last_synchronized_revision(int revision)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(int revision)
last_synchronized_revision	src/synchronization/isyncmanager.hpp	/^  virtual int last_synchronized_revision() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
last_synchronized_revision	src/synchronization/isyncmanager.hpp	/^  virtual void last_synchronized_revision(int) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(int)
latest_revision	src/synchronization/filesystemsyncserver.cpp	/^int FileSystemSyncServer::latest_revision()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
latest_revision	src/synchronization/isyncmanager.hpp	/^  virtual int latest_revision() = 0; \/\/ NOTE: Only reliable during a transaction$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
length	src/utils.hpp	/^      int length() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
lib_LTLIBRARIES	src/Makefile	/^lib_LTLIBRARIES = libgnote.la$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	data/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	data/appdata/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	data/icons/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	help/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libtomboy/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	po/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/backlinks/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/bugzilla/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/exporttogtg/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/exporttohtml/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/filesystemsyncservice/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/fixedwidth/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/inserttimestamp/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/notedirectorywatcher/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/noteoftheday/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/printnotes/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/readonly/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/replacetitle/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/specialnotes/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/statistics/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/stickynoteimport/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/tableofcontents/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/todo/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/tomboyimport/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/underline/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/addins/webdavsyncservice/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	src/dbus/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	data/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	data/appdata/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	data/icons/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	help/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libtomboy/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/backlinks/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/bugzilla/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/exporttogtg/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/exporttohtml/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/filesystemsyncservice/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/fixedwidth/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/inserttimestamp/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/notedirectorywatcher/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/noteoftheday/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/printnotes/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/readonly/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/replacetitle/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/specialnotes/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/statistics/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/stickynoteimport/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/tableofcontents/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/todo/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/tomboyimport/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/underline/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/addins/webdavsyncservice/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	src/dbus/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libgnote_la_DEPENDENCIES	src/Makefile	/^libgnote_la_DEPENDENCIES = $(am__DEPENDENCIES_1)$/;"	m
libgnote_la_LDFLAGS	src/Makefile	/^libgnote_la_LDFLAGS = -release 3.15 -version-info 0:0:0$/;"	m
libgnote_la_LIBADD	src/Makefile	/^libgnote_la_LIBADD = $(LIBGNOTE_LIBS)$/;"	m
libgnote_la_LINK	src/Makefile	/^libgnote_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \\$/;"	m
libgnote_la_OBJECTS	src/Makefile	/^libgnote_la_OBJECTS = $(am_libgnote_la_OBJECTS)$/;"	m
libgnote_la_SOURCES	src/Makefile	/^libgnote_la_SOURCES = \\$/;"	m
libtomboy_la_CFLAGS	libtomboy/Makefile	/^libtomboy_la_CFLAGS = $(X_CFLAGS)$/;"	m
libtomboy_la_DEPENDENCIES	libtomboy/Makefile	/^libtomboy_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
libtomboy_la_LDFLAGS	libtomboy/Makefile	/^libtomboy_la_LDFLAGS = -export-dynamic -module -avoid-version$/;"	m
libtomboy_la_LIBADD	libtomboy/Makefile	/^libtomboy_la_LIBADD = $(GTK_LIBS) $(X_LIBS)$/;"	m
libtomboy_la_LINK	libtomboy/Makefile	/^libtomboy_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libtomboy_la_OBJECTS	libtomboy/Makefile	/^libtomboy_la_OBJECTS = $(am_libtomboy_la_OBJECTS)$/;"	m
libtomboy_la_SOURCES	libtomboy/Makefile	/^libtomboy_la_SOURCES = \\$/;"	m
line_available	src/sharp/process.cpp	/^bool Process::line_available(std::stringstream & stream)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream)
line_available	src/sharp/process.hpp	/^  bool line_available(std::stringstream & stream);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream)
line_needs_bullet	src/notebuffer.cpp	/^  bool NoteBuffer::line_needs_bullet(Gtk::TextIter iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter iter)
line_needs_bullet	src/notebuffer.hpp	/^  bool line_needs_bullet(Gtk::TextIter iter);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(Gtk::TextIter iter)
linguas	po/Makefile	/^	linguas="$(USE_LINGUAS)"; \\$/;"	m
link_button_clicked	src/notewindow.cpp	/^  void NoteWindow::link_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
link_button_clicked	src/notewindow.hpp	/^  void link_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
link_clicked	src/notewindow.cpp	/^  void NoteTextMenu::link_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
link_clicked	src/notewindow.hpp	/^  void link_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
load	src/note.cpp	/^  Note::Ptr Note::load(const std::string & read_file, NoteManager & manager)$/;"	f	class:gnote::Note	signature:(const std::string & read_file, NoteManager & manager)
load	src/note.hpp	/^  static Note::Ptr load(const std::string &, NoteManager &);$/;"	p	class:gnote::Note	access:public	signature:(const std::string &, NoteManager &)
load	src/sharp/dynamicmodule.hpp	/^  void load();$/;"	p	class:sharp::DynamicModule	access:public	signature:()
load	src/sharp/xsltransform.cpp	/^void XslTransform::load(const std::string & sheet)$/;"	f	class:sharp::XslTransform	signature:(const std::string & sheet)
load	src/sharp/xsltransform.hpp	/^  void load(const std::string &);$/;"	p	class:sharp::XslTransform	access:public	signature:(const std::string &)
load_addin_infos	src/addinmanager.cpp	/^  void AddinManager::load_addin_infos(const std::string & global_path,$/;"	f	class:gnote::AddinManager	signature:(const std::string & global_path, const std::string & local_path)
load_addin_infos	src/addinmanager.cpp	/^  void AddinManager::load_addin_infos(const std::string & path)$/;"	f	class:gnote::AddinManager	signature:(const std::string & path)
load_addin_infos	src/addinmanager.hpp	/^  void load_addin_infos(const std::string & global_path, const std::string & local_path);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & global_path, const std::string & local_path)
load_addin_infos	src/addinmanager.hpp	/^  void load_addin_infos(const std::string & path);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & path)
load_addins	src/preferencesdialog.cpp	/^  void PreferencesDialog::load_addins()$/;"	f	class:gnote::PreferencesDialog	signature:()
load_addins	src/preferencesdialog.hpp	/^  void load_addins();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
load_addins_for_note	src/addinmanager.cpp	/^  void AddinManager::load_addins_for_note(const Note::Ptr & note)$/;"	f	class:gnote::AddinManager	signature:(const Note::Ptr & note)
load_addins_for_note	src/addinmanager.hpp	/^  void load_addins_for_note(const Note::Ptr &);$/;"	p	class:gnote::AddinManager	access:public	signature:(const Note::Ptr &)
load_buffer	src/sharp/xmlreader.cpp	/^  void XmlReader::load_buffer(const std::string &s)$/;"	f	class:sharp::XmlReader	signature:(const std::string &s)
load_buffer	src/sharp/xmlreader.hpp	/^  void load_buffer(const std::string &s);$/;"	p	class:sharp::XmlReader	access:public	signature:(const std::string &s)
load_foreign_note_xml	src/notebase.cpp	/^void NoteBase::load_foreign_note_xml(const Glib::ustring & foreignNoteXml, ChangeType changeType)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & foreignNoteXml, ChangeType changeType)
load_foreign_note_xml	src/notebase.hpp	/^  void load_foreign_note_xml(const Glib::ustring & foreignNoteXml, ChangeType changeType);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & foreignNoteXml, ChangeType changeType)
load_from_file	src/addininfo.cpp	/^void AddinInfo::load_from_file(const std::string & info_file)$/;"	f	class:gnote::AddinInfo	signature:(const std::string & info_file)
load_from_file	src/addininfo.hpp	/^  void load_from_file(const std::string & info_file);$/;"	p	class:gnote::AddinInfo	access:public	signature:(const std::string & info_file)
load_from_string	src/utils.cpp	/^    void UriList::load_from_string(const std::string & data)$/;"	f	class:gnote::utils::UriList	signature:(const std::string & data)
load_from_string	src/utils.hpp	/^      void load_from_string(const std::string & data);$/;"	p	class:gnote::utils::UriList	access:private	signature:(const std::string & data)
load_from_string_list	src/utils.cpp	/^    void UriList::load_from_string_list(const std::vector<Glib::ustring> & items)$/;"	f	class:gnote::utils::UriList	signature:(const std::vector<Glib::ustring> & items)
load_from_string_list	src/utils.hpp	/^      void load_from_string_list(const std::vector<Glib::ustring> & items);$/;"	p	class:gnote::utils::UriList	access:private	signature:(const std::vector<Glib::ustring> & items)
load_interface_from_file	src/remotecontrolproxy.cpp	/^  void load_interface_from_file(const char *filename, const char *interface_name,$/;"	f	namespace:__anon6	signature:(const char *filename, const char *interface_name, Glib::RefPtr<Gio::DBus::InterfaceInfo> & interface)
load_introspection_xml	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::load_introspection_xml()$/;"	f	class:gnote::RemoteControlProxy	signature:()
load_introspection_xml	src/remotecontrolproxy.hpp	/^  static void load_introspection_xml();$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:()
load_module	src/sharp/modulemanager.cpp	/^  DynamicModule *ModuleManager::load_module(const std::string & mod)$/;"	f	class:sharp::ModuleManager	signature:(const std::string & mod)
load_module	src/sharp/modulemanager.hpp	/^  DynamicModule *load_module(const std::string & module);$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::string & module)
load_modules	src/sharp/modulemanager.cpp	/^  void ModuleManager::load_modules(const std::list<std::string> & modules)$/;"	f	class:sharp::ModuleManager	signature:(const std::list<std::string> & modules)
load_modules	src/sharp/modulemanager.hpp	/^  void load_modules(const std::list<std::string> & modules);$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::list<std::string> & modules)
load_note_addin	src/addinmanager.cpp	/^  void AddinManager::load_note_addin(const std::string & id, sharp::IfaceFactoryBase *const f)$/;"	f	class:gnote::AddinManager	signature:(const std::string & id, sharp::IfaceFactoryBase *const f)
load_note_addin	src/addinmanager.hpp	/^  void load_note_addin(const std::string & id, sharp::IfaceFactoryBase *const f);$/;"	p	class:gnote::AddinManager	access:private	signature:(const std::string & id, sharp::IfaceFactoryBase *const f)
load_notebooks	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::load_notebooks()$/;"	f	class:gnote::notebooks::NotebookManager	signature:()
load_notebooks	src/notebooks/notebookmanager.hpp	/^  void load_notebooks();$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:()
load_notes	src/notemanager.cpp	/^  void NoteManager::load_notes()$/;"	f	class:gnote::NoteManager	signature:()
load_notes	src/notemanager.hpp	/^    void load_notes();$/;"	p	class:gnote::NoteManager	access:private	signature:()
load_preferences	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::load_preferences(const std::string & default_file)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(const std::string & default_file)
load_preferences	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void load_preferences(const std::string & );$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:private	signature:(const std::string & )
local_path	src/sharp/uri.cpp	/^  std::string Uri::local_path() const$/;"	f	class:sharp::Uri	signature:() const
local_path	src/sharp/uri.hpp	/^    std::string local_path() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	data/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	data/appdata/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	data/icons/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	help/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libtomboy/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/backlinks/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/bugzilla/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/exporttogtg/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/exporttohtml/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/filesystemsyncservice/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/fixedwidth/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/inserttimestamp/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/notedirectorywatcher/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/noteoftheday/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/printnotes/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/readonly/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/replacetitle/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/specialnotes/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/statistics/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/stickynoteimport/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/tableofcontents/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/todo/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/tomboyimport/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/underline/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/addins/webdavsyncservice/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	src/dbus/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	data/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	data/appdata/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	data/icons/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	help/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libtomboy/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/backlinks/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/bugzilla/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/exporttogtg/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/exporttohtml/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/filesystemsyncservice/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/fixedwidth/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/inserttimestamp/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/notedirectorywatcher/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/noteoftheday/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/printnotes/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/readonly/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/replacetitle/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/specialnotes/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/statistics/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/stickynoteimport/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/tableofcontents/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/todo/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/tomboyimport/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/underline/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/addins/webdavsyncservice/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	src/dbus/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lock_timeout	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::lock_timeout()$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:()
lock_timeout	src/synchronization/filesystemsyncserver.hpp	/^  void lock_timeout();$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:()
log_print	src/debug.cpp	/^  void log_print(const char *DBG(fmt), const char *DBG(func), ...)$/;"	f	namespace:utils	signature:(const char *DBG(fmt), const char *DBG(func), ...)
lookup_icon	src/iconmanager.cpp	/^Gtk::IconInfo IconManager::lookup_icon(const std::string & name, int size)$/;"	f	class:gnote::IconManager	signature:(const std::string & name, int size)
lookup_icon	src/iconmanager.hpp	/^  Gtk::IconInfo lookup_icon(const std::string &, int);$/;"	p	class:gnote::IconManager	access:public	signature:(const std::string &, int)
lookup_ignorable_modifiers	libtomboy/tomboykeybinder.c	/^lookup_ignorable_modifiers (GdkKeymap *keymap)$/;"	f	file:	signature:(GdkKeymap *keymap)
m_accel_group	src/notewindow.hpp	/^  Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::NoteWindow	access:private
m_accel_group	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_accel_group	src/utils.hpp	/^      Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::utils::GlobalKeybinder	access:private
m_accel_group	src/utils.hpp	/^      Glib::RefPtr<Gtk::AccelGroup> m_accel_group;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
m_action	src/addins/readonly/readonlynoteaddin.hpp	/^  Glib::RefPtr<Gtk::Action> m_action;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:private
m_action	src/addins/statistics/statisticsapplicationaddin.hpp	/^  Glib::RefPtr<Gtk::Action> m_action;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
m_active	src/addins/statistics/statisticswidget.cpp	/^  bool m_active;$/;"	m	class:statistics::StatisticsModel	file:	access:private
m_active_notes	src/notebooks/notebookmanager.hpp	/^  Notebook::Ptr                        m_active_notes;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_active_tags	src/notebuffer.hpp	/^  std::list<Glib::RefPtr<Gtk::TextTag> >      m_active_tags;$/;"	m	class:gnote::NoteBuffer	access:private
m_added_tags	src/notetag.hpp	/^  std::list<Glib::RefPtr<Gtk::TextTag> > m_added_tags;$/;"	m	class:gnote::NoteTagTable	access:private
m_addin_info	src/preferencesdialog.cpp	/^    AddinInfo m_addin_info;$/;"	m	class:gnote::AddinInfoDialog	file:	access:private
m_addin_infos	src/addinmanager.hpp	/^  AddinInfoMap m_addin_infos;$/;"	m	class:gnote::AddinManager	access:private
m_addin_manager	src/preferencesdialog.hpp	/^  AddinManager &m_addin_manager;$/;"	m	class:gnote::PreferencesDialog	access:private
m_addin_mgr	src/notemanager.hpp	/^    AddinManager   *m_addin_mgr;$/;"	m	class:gnote::NoteManager	access:private
m_addin_module	src/addininfo.hpp	/^  std::string m_addin_module;$/;"	m	class:gnote::AddinInfo	access:private
m_addin_prefs	src/addinmanager.hpp	/^  IdAddinPrefsMap                          m_addin_prefs;$/;"	m	class:gnote::AddinManager	access:private
m_addin_tree	src/preferencesdialog.hpp	/^  Gtk::TreeView              *m_addin_tree;$/;"	m	class:gnote::PreferencesDialog	access:private
m_addin_tree_model	src/preferencesdialog.hpp	/^  sharp::AddinsTreeModel::Ptr m_addin_tree_model;$/;"	m	class:gnote::PreferencesDialog	access:private
m_adding_notebook	src/notebooks/notebookmanager.hpp	/^  bool                                 m_adding_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_addins_prefs_dir	src/addinmanager.hpp	/^  std::string m_addins_prefs_dir;$/;"	m	class:gnote::AddinManager	access:private
m_addins_prefs_file	src/addinmanager.hpp	/^  std::string m_addins_prefs_file;$/;"	m	class:gnote::AddinManager	access:private
m_all_notes_button	src/recentchanges.hpp	/^  Gtk::Button        *m_all_notes_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_allow_middle_activate	src/notetag.hpp	/^  bool                m_allow_middle_activate;$/;"	m	class:gnote::NoteTag	access:private
m_always_rename_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_always_rename_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_always_show_dlg_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_always_show_dlg_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_app_actions	src/actionmanager.hpp	/^  std::vector<Glib::RefPtr<Gio::SimpleAction> > m_app_actions;$/;"	m	class:gnote::ActionManager	access:private
m_app_addins	src/addinmanager.hpp	/^  AppAddinMap                               m_app_addins;$/;"	m	class:gnote::AddinManager	access:private
m_app_menu_items	src/actionmanager.hpp	/^  AppMenuItemMultiMap m_app_menu_items;$/;"	m	class:gnote::ActionManager	access:private
m_application_addin_list_changed	src/addinmanager.hpp	/^  sigc::signal<void>         m_application_addin_list_changed;$/;"	m	class:gnote::AddinManager	access:private
m_args	src/sharp/process.hpp	/^  std::vector<std::string> m_args;$/;"	m	class:sharp::Process	access:private
m_args	src/sharp/xsltargumentlist.hpp	/^  container_t m_args;$/;"	m	class:sharp::XsltArgumentList	access:private
m_attributes	src/addininfo.hpp	/^  std::map<Glib::ustring, Glib::ustring> m_attributes;$/;"	m	class:gnote::AddinInfo	access:private
m_attributes	src/notetag.hpp	/^  AttributeMap m_attributes;$/;"	m	class:gnote::DynamicNoteTag	access:private
m_authors	src/addininfo.hpp	/^  std::string m_authors;$/;"	m	class:gnote::AddinInfo	access:private
m_autosync_check	src/preferencesdialog.hpp	/^  Gtk::CheckButton *m_autosync_check;$/;"	m	class:gnote::PreferencesDialog	access:private
m_autosync_spinner	src/preferencesdialog.hpp	/^  Gtk::SpinButton *m_autosync_spinner;$/;"	m	class:gnote::PreferencesDialog	access:private
m_autosync_timeout_pref_minutes	src/synchronization/syncmanager.hpp	/^    int m_autosync_timeout_pref_minutes;$/;"	m	class:gnote::sync::SyncManager	access:private
m_autosync_timer	src/synchronization/syncmanager.hpp	/^    utils::InterruptableTimeout m_autosync_timer;$/;"	m	class:gnote::sync::SyncManager	access:private
m_background	src/gnote.hpp	/^  bool        m_background;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_backup_dir	src/notemanagerbase.hpp	/^  Glib::ustring m_backup_dir;$/;"	m	class:gnote::NoteManagerBase	access:protected
m_bindings	src/prefskeybinder.hpp	/^  std::list<Binding*> m_bindings;$/;"	m	class:gnote::PrefsKeybinder	access:private
m_bindings	src/xkeybinder.hpp	/^  BindingMap m_bindings;$/;"	m	class:gnote::XKeybinder	access:private
m_bold	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_bold;$/;"	m	class:gnote::NoteTextMenu	access:private
m_break_line	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int m_break_line;$/;"	m	class:printnotes::PageBreak	access:private
m_break_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int m_break_paragraph;$/;"	m	class:printnotes::PageBreak	access:private
m_broken_link_tag	src/notetag.hpp	/^  NoteTag::Ptr m_broken_link_tag;$/;"	m	class:gnote::NoteTagTable	access:private
m_broken_link_tag	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextTag>   m_broken_link_tag;$/;"	m	class:gnote::NoteWikiWatcher	access:private
m_broken_link_tag	src/watchers.hpp	/^    NoteTag::Ptr m_broken_link_tag;$/;"	m	class:gnote::NoteLinkWatcher	access:private
m_buf	src/sharp/xmlwriter.hpp	/^    xmlBufferPtr     m_buf;$/;"	m	class:sharp::XmlWriter	access:private
m_buffer	src/note.hpp	/^  Glib::RefPtr<NoteBuffer>   m_buffer;$/;"	m	class:gnote::Note	access:private
m_buffer	src/note.hpp	/^  Glib::RefPtr<NoteBuffer> m_buffer;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:private
m_buffer	src/notewindow.hpp	/^  Glib::RefPtr<NoteBuffer> m_buffer;$/;"	m	class:gnote::NoteTextMenu	access:private
m_buffer	src/sharp/xmlreader.hpp	/^  std::string      m_buffer;$/;"	m	class:sharp::XmlReader	access:private
m_buffer	src/undo.hpp	/^  NoteBuffer * m_buffer;$/;"	m	class:gnote::UndoManager	access:private
m_buffer	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextBuffer> m_buffer;$/;"	m	class:gnote::utils::TextRange	access:private
m_buffer	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextBuffer> m_buffer;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
m_builtin_ifaces	src/addinmanager.hpp	/^  std::list<sharp::IfaceFactoryBase*> m_builtin_ifaces;$/;"	m	class:gnote::AddinManager	access:private
m_bullets	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_bullets;$/;"	m	class:gnote::NoteTextMenu	access:private
m_bullets_clicked_cid	src/notewindow.hpp	/^  sigc::connection      m_bullets_clicked_cid;$/;"	m	class:gnote::NoteTextMenu	access:private
m_cache_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_cache_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_case_sensitive	src/trie.hpp	/^  const bool m_case_sensitive;$/;"	m	class:gnote::TrieTree	access:private
m_category	src/addininfo.hpp	/^  AddinCategory m_category;$/;"	m	class:gnote::AddinInfo	access:private
m_change_date	src/notebase.hpp	/^  sharp::DateTime             m_change_date;$/;"	m	class:gnote::NoteData	access:private
m_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  int m_check_interval;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  Gtk::SpinButton m_check_interval;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:private
m_checked	src/utils.hpp	/^      bool m_checked;$/;"	m	class:gnote::utils::CheckAction	access:private
m_child_widget_queue	src/note.hpp	/^  std::queue<ChildWidgetData> m_child_widget_queue;$/;"	m	class:gnote::Note	access:private
m_chop	src/undo.hpp	/^  utils::TextRange   m_chop;$/;"	m	class:gnote::SplitterAction	access:protected
m_chop_buffer	src/undo.hpp	/^  ChopBuffer::Ptr m_chop_buffer;$/;"	m	class:gnote::UndoManager	access:private
m_clickX	src/searchnoteswidget.hpp	/^  int m_clickX, m_clickY;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_clickY	src/searchnoteswidget.hpp	/^  int m_clickX, m_clickY;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_click_mark	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextMark> m_click_mark;$/;"	m	class:gnote::NoteUrlWatcher	access:private
m_client	src/synchronization/syncmanager.hpp	/^    SyncClient::Ptr m_client;$/;"	m	class:gnote::sync::SyncManager	access:protected
m_close_button	src/synchronization/syncdialog.hpp	/^    Gtk::Button *m_close_button;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_close_note_on_escape	src/recentchanges.hpp	/^  bool                m_close_note_on_escape;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_close_on_esc	src/mainwindow.hpp	/^  bool m_close_on_esc;$/;"	m	class:gnote::MainWindow	access:private
m_col1	src/notebooks/notebookmanager.hpp	/^    Gtk::TreeModelColumn<Notebook::Ptr> m_col1;$/;"	m	class:gnote::notebooks::NotebookManager::ColumnRecord	access:public
m_col1	src/preferencesdialog.hpp	/^    Gtk::TreeModelColumn<sync::SyncServiceAddin*> m_col1;$/;"	m	class:gnote::PreferencesDialog::SyncStoreModel	access:public
m_col1	src/synchronization/syncdialog.cpp	/^    Gtk::TreeModelColumn<std::string> m_col1;$/;"	m	class:gnote::sync::__anon19::TreeViewModel	file:	access:public
m_col2	src/synchronization/syncdialog.cpp	/^    Gtk::TreeModelColumn<std::string> m_col2;$/;"	m	class:gnote::sync::__anon19::TreeViewModel	file:	access:public
m_column_note	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<NoteBase::Ptr> m_column_note;$/;"	m	class:gnote::ModelColumnRecord	access:private
m_column_selected	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<bool> m_column_selected;$/;"	m	class:gnote::ModelColumnRecord	access:private
m_column_title	src/noterenamedialog.hpp	/^  Gtk::TreeModelColumn<std::string> m_column_title;$/;"	m	class:gnote::ModelColumnRecord	access:private
m_column_types	src/notebooks/notebookmanager.hpp	/^  ColumnRecord                         m_column_types;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_column_types	src/searchnoteswidget.hpp	/^  RecentNotesColumnTypes m_column_types;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_columns	src/addins/bugzilla/bugzillapreferences.hpp	/^  Columns        m_columns;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
m_columns	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  FormatColumns     m_columns;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
m_columns	src/addins/statistics/statisticswidget.cpp	/^  StatisticsRecord m_columns;$/;"	m	class:statistics::StatisticsModel	file:	access:private
m_columns	src/sharp/addinstreemodel.hpp	/^  AddinsColumns m_columns;$/;"	m	class:sharp::AddinsTreeModel	access:public
m_columns	src/tagmanager.hpp	/^  ColumnRecord                     m_columns;$/;"	m	class:gnote::TagManager	access:private
m_conflict_resolution	src/synchronization/syncmanager.hpp	/^    SyncTitleConflictResolution m_conflict_resolution;$/;"	m	class:gnote::sync::SyncManager	access:private
m_connection	src/dbus/remotecontrol-glue.hpp	/^  Glib::RefPtr<Gio::DBus::Connection> m_connection;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
m_connection	src/sharp/propertyeditor.hpp	/^    sigc::connection m_connection;$/;"	m	class:sharp::PropertyEditorBase	access:protected
m_content_vbox	src/recentchanges.hpp	/^  Gtk::Grid           m_content_vbox;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_context	src/gnote.hpp	/^  GOptionContext *m_context;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_context_menu	src/tray.hpp	/^  Gtk::Menu               *m_context_menu;$/;"	m	class:gnote::TrayIcon	access:private
m_copyright	src/addininfo.hpp	/^  std::string m_copyright;$/;"	m	class:gnote::AddinInfo	access:private
m_create_date	src/notebase.hpp	/^  sharp::DateTime             m_create_date;$/;"	m	class:gnote::NoteData	access:private
m_current_autosync_timeout_minutes	src/synchronization/syncmanager.hpp	/^    int m_current_autosync_timeout_minutes;$/;"	m	class:gnote::sync::SyncManager	access:private
m_current_embedded_actions_slot	src/recentchanges.hpp	/^  sigc::connection    m_current_embedded_actions_slot;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_current_embedded_name_slot	src/recentchanges.hpp	/^  sigc::connection    m_current_embedded_name_slot;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_current_matches	src/notewindow.hpp	/^  std::list<Match> m_current_matches;$/;"	m	class:gnote::NoteFindHandler	access:private
m_current_matches	src/searchnoteswidget.hpp	/^  std::map<std::string, int> m_current_matches;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_cursor_pos	src/notebase.hpp	/^  int               m_cursor_pos;$/;"	m	class:gnote::NoteData	access:private
m_data	src/note.hpp	/^  NoteDataBufferSynchronizer m_data;$/;"	m	class:gnote::Note	access:private
m_data	src/notebase.hpp	/^  NoteData *m_data;$/;"	m	class:gnote::NoteDataBufferSynchronizerBase	access:private
m_data_synchronizer	src/test/testnote.hpp	/^  gnote::NoteDataBufferSynchronizerBase m_data_synchronizer;$/;"	m	class:test::Note	access:private
m_date	src/sharp/datetime.hpp	/^  Glib::TimeVal m_date;$/;"	m	class:sharp::DateTime	access:private
m_date_format	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  std::string    m_date_format;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:private
m_days	src/sharp/timespan.hpp	/^    int m_days;$/;"	m	class:sharp::TimeSpan	access:private
m_decrease_indent	src/notewindow.hpp	/^  Gtk::ImageMenuItem    m_decrease_indent;$/;"	m	class:gnote::NoteTextMenu	access:private
m_default_enabled	src/addininfo.hpp	/^  bool m_default_enabled;$/;"	m	class:gnote::AddinInfo	access:private
m_default_note_template_title	src/notemanagerbase.hpp	/^  Glib::ustring m_default_note_template_title;$/;"	m	class:gnote::NoteManagerBase	access:protected
m_default_template_note_title	src/notebooks/notebook.hpp	/^  std::string m_default_template_note_title;$/;"	m	class:gnote::notebooks::Notebook	access:private
m_delete_action	src/notewindow.hpp	/^  Glib::RefPtr<Gtk::Action>     m_delete_action;$/;"	m	class:gnote::NoteWindow	access:private
m_delete_note_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_delete_note_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_delete_notebook_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_delete_notebook_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_deleted_notes	src/synchronization/filesystemsyncserver.hpp	/^  std::list<std::string> m_deleted_notes;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_deleted_notes	src/synchronization/gnotesyncclient.hpp	/^    std::map<std::string, std::string> m_deleted_notes;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_depth	src/notetag.hpp	/^  int            m_depth;$/;"	m	class:gnote::DepthNoteTag	access:private
m_depth	src/trie.hpp	/^    int m_depth;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_depth	src/undo.hpp	/^  int m_depth;$/;"	m	class:gnote::InsertBulletAction	access:private
m_description	src/addininfo.hpp	/^  std::string m_description;$/;"	m	class:gnote::AddinInfo	access:private
m_direction	src/notetag.hpp	/^  Pango::Direction m_direction;$/;"	m	class:gnote::DepthNoteTag	access:private
m_direction	src/undo.hpp	/^  Pango::Direction m_direction;$/;"	m	class:gnote::InsertBulletAction	access:private
m_direction	src/undo.hpp	/^  bool m_direction;$/;"	m	class:gnote::ChangeDepthAction	access:private
m_disposing	src/abstractaddin.hpp	/^  bool m_disposing;$/;"	m	class:gnote::AbstractAddin	access:private
m_do_new_note	src/gnote.hpp	/^  bool        m_do_new_note;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_do_search	src/gnote.hpp	/^  bool        m_do_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_dont_rename_button	src/noterenamedialog.hpp	/^  Gtk::Button m_dont_rename_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_editing_title	src/watchers.hpp	/^    bool                       m_editing_title;$/;"	m	class:gnote::NoteRenameWatcher	access:private
m_editor	src/notewindow.hpp	/^  Gtk::TextView                *m_editor;$/;"	m	class:gnote::NoteWindow	access:private
m_editor_window	src/notewindow.hpp	/^  Gtk::ScrolledWindow          *m_editor_window;$/;"	m	class:gnote::NoteWindow	access:private
m_element_name	src/notetag.hpp	/^  std::string         m_element_name;$/;"	m	class:gnote::NoteTag	access:private
m_embed_box	src/recentchanges.hpp	/^  Gtk::Grid           m_embed_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_embeddable_toolbar	src/notewindow.hpp	/^  Gtk::Grid                    *m_embeddable_toolbar;$/;"	m	class:gnote::NoteWindow	access:private
m_embedded_toolbar	src/recentchanges.hpp	/^  Gtk::Alignment      m_embedded_toolbar;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_embedded_widgets	src/recentchanges.hpp	/^  std::list<EmbeddableWidget*> m_embedded_widgets;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_enable_action	src/watchers.hpp	/^    utils::CheckAction::Ptr m_enable_action;$/;"	m	class:gnote::NoteSpellChecker	access:private
m_enabled	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool m_enabled;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
m_enabled	src/notebase.hpp	/^  bool m_enabled;$/;"	m	class:gnote::NoteBase	access:private
m_enabled	src/notewindow.hpp	/^  bool                         m_enabled;$/;"	m	class:gnote::NoteWindow	access:private
m_enabled	src/sharp/dynamicmodule.hpp	/^  bool m_enabled;$/;"	m	class:sharp::DynamicModule	access:private
m_enabled	src/synchronization/fusesyncserviceaddin.hpp	/^  bool m_enabled;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_end	src/triehit.hpp	/^  int           m_end;$/;"	m	class:gnote::TrieHit	access:private
m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::EraseAction	access:private
m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::TagApplyAction	access:private
m_end	src/undo.hpp	/^  int m_end;$/;"	m	class:gnote::TagRemoveAction	access:private
m_end_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_end_mark;$/;"	m	class:gnote::utils::TextRange	access:private
m_entry_changed_timeout	src/recentchanges.hpp	/^  utils::InterruptableTimeout *m_entry_changed_timeout;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_error	src/sharp/xmlreader.hpp	/^  bool             m_error;$/;"	m	class:sharp::XmlReader	access:private
m_errorLabel	src/notebooks/createnotebookdialog.hpp	/^  Gtk::Label                m_errorLabel;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
m_event_freeze	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  bool m_event_freeze;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:private
m_event_freeze	src/addins/underline/underlinemenuitem.hpp	/^  bool m_event_freeze;$/;"	m	class:underline::UnderlineMenuItem	access:private
m_event_freeze	src/notewindow.hpp	/^  bool                  m_event_freeze;$/;"	m	class:gnote::NoteTextMenu	access:private
m_existing_note	src/synchronization/syncdialog.cpp	/^  Note::Ptr m_existing_note;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
m_exit_code	src/sharp/process.hpp	/^  int m_exit_code;$/;"	m	class:sharp::Process	access:private
m_expander	src/synchronization/syncdialog.hpp	/^    Gtk::Expander *m_expander;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  Gtk::CheckButton m_export_linked;$/;"	m	class:exporttohtml::ExportToHtmlDialog	access:private
m_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  Gtk::CheckButton m_export_linked_all;$/;"	m	class:exporttohtml::ExportToHtmlDialog	access:private
m_extra_widget	src/utils.hpp	/^      Gtk::Widget *m_extra_widget;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
m_extra_widget_vbox	src/utils.hpp	/^      Gtk::Grid *m_extra_widget_vbox;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
m_fail_state	src/trie.hpp	/^    TrieStatePtr m_fail_state;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_fake_menu	src/utils.hpp	/^      Gtk::Menu m_fake_menu;$/;"	m	class:gnote::utils::GlobalKeybinder	access:private
m_file	src/sharp/streamreader.hpp	/^  FILE * m_file;$/;"	m	class:sharp::StreamReader	access:private
m_file	src/sharp/streamwriter.hpp	/^  FILE * m_file;$/;"	m	class:sharp::StreamWriter	access:private
m_file_change_records	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  std::map<std::string, NoteFileChangeRecord> m_file_change_records;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_file_name	src/sharp/process.hpp	/^  std::string m_file_name;$/;"	m	class:sharp::Process	access:private
m_file_path	src/notebase.hpp	/^  Glib::ustring m_file_path;$/;"	m	class:gnote::NoteBase	access:private
m_file_revisions	src/synchronization/gnotesyncclient.hpp	/^    std::map<std::string, int> m_file_revisions;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_file_system_watcher	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  Glib::RefPtr<Gio::FileMonitor> m_file_system_watcher;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_file_watcher	src/synchronization/gnotesyncclient.hpp	/^    Glib::RefPtr<Gio::FileMonitor> m_file_watcher;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_filteredNotebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter>   m_filteredNotebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_find_combo_columns	src/searchnoteswidget.hpp	/^  RecentSearchColumnTypes m_find_combo_columns;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_find_handler	src/notewindow.hpp	/^  NoteFindHandler              m_find_handler;$/;"	m	class:gnote::NoteWindow	access:private
m_find_next_prev_box	src/recentchanges.hpp	/^  Gtk::Grid           m_find_next_prev_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_flags	src/notetag.hpp	/^  int                 m_flags;$/;"	m	class:gnote::NoteTag	access:private
m_focus_widget	src/note.hpp	/^  Gtk::Widget               *m_focus_widget;$/;"	m	class:gnote::Note	access:private
m_fontsize_group	src/notewindow.hpp	/^  Gtk::RadioButtonGroup m_fontsize_group;$/;"	m	class:gnote::NoteTextMenu	access:private
m_frozen_cnt	src/undo.hpp	/^  guint m_frozen_cnt;$/;"	m	class:gnote::UndoManager	access:private
m_fuse_mount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_fuse_mount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_fuse_unmount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_fuse_unmount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_global_keys	src/notewindow.hpp	/^  utils::GlobalKeybinder       *m_global_keys;$/;"	m	class:gnote::NoteWindow	access:private
m_gnote_conf_dir	src/addinmanager.hpp	/^  const std::string m_gnote_conf_dir;$/;"	m	class:gnote::AddinManager	access:private
m_guarded	src/sharp/propertyeditor.hpp	/^    std::vector<Gtk::Widget*> m_guarded;$/;"	m	class:sharp::PropertyEditorBool	access:private
m_guisu_tool	src/synchronization/syncutils.hpp	/^    std::string m_guisu_tool;$/;"	m	class:gnote::sync::SyncUtils	access:private
m_handler	src/prefskeybinder.cpp	/^    sigc::slot<void> m_handler;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
m_header_bar	src/recentchanges.hpp	/^  Gtk::HeaderBar      m_header_bar;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_header_label	src/synchronization/syncdialog.cpp	/^  Gtk::Label *m_header_label;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
m_header_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_header_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_heading_position	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  int              m_heading_position; \/\/the position of the heading in the Note$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:private
m_height	src/notebase.hpp	/^  int               m_width, m_height;$/;"	m	class:gnote::NoteData	access:private
m_height	src/notewindow.hpp	/^  int                           m_height;$/;"	m	class:gnote::NoteWindow	access:private
m_hidden_no_size	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_hidden_no_size;$/;"	m	class:gnote::NoteTextMenu	access:private
m_highlight	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_highlight;$/;"	m	class:gnote::NoteTextMenu	access:private
m_highlight_search	src/gnote.hpp	/^  gchar*      m_highlight_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_host	src/mainwindowembeds.hpp	/^  EmbeddableWidgetHost *m_host;$/;"	m	class:gnote::EmbeddableWidget	access:private
m_hours	src/sharp/timespan.hpp	/^    int m_hours;$/;"	m	class:sharp::TimeSpan	access:private
m_hovering_on_link	src/watchers.hpp	/^    bool m_hovering_on_link;$/;"	m	class:gnote::MouseHandWatcher	access:private
m_huge	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_huge;$/;"	m	class:gnote::NoteTextMenu	access:private
m_icon_theme	src/gnote.hpp	/^  Glib::RefPtr<Gtk::IconTheme> m_icon_theme;$/;"	m	class:gnote::Gnote	access:private
m_icons	src/iconmanager.hpp	/^  IconMap m_icons;$/;"	m	class:gnote::IconManager	access:private
m_id	src/addininfo.hpp	/^  std::string m_id;$/;"	m	class:gnote::AddinInfo	access:private
m_id	src/addins/bugzilla/insertbugaction.hpp	/^  std::string       m_id;$/;"	m	class:bugzilla::InsertBugAction	access:private
m_id	src/preferencesdialog.cpp	/^    std::string m_id;$/;"	m	class:gnote::AddinInfoDialog	file:	access:private
m_image	src/synchronization/syncdialog.hpp	/^    Gtk::Image *m_image;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_image	src/utils.hpp	/^      Gtk::Image *m_image;$/;"	m	class:gnote::utils::HIGMessageDialog	access:private
m_import_addins	src/addinmanager.hpp	/^  IdImportAddinMap                         m_import_addins;$/;"	m	class:gnote::AddinManager	access:private
m_important_action	src/notewindow.hpp	/^  utils::CheckAction::Ptr       m_important_action;$/;"	m	class:gnote::NoteWindow	access:private
m_increase_indent	src/notewindow.hpp	/^  Gtk::ImageMenuItem    m_increase_indent;$/;"	m	class:gnote::NoteTextMenu	access:private
m_index	src/undo.hpp	/^  int m_index;$/;"	m	class:gnote::InsertAction	access:private
m_inhibit_activate	src/tray.hpp	/^  bool        m_inhibit_activate;$/;"	m	class:gnote::NoteMenuItem	access:private
m_initial_position_restored	src/searchnoteswidget.hpp	/^  bool m_initial_position_restored;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_initial_sync_attempt	src/synchronization/filesystemsyncserver.hpp	/^  sharp::DateTime m_initial_sync_attempt;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_initialized	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  bool m_initialized;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
m_initialized	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_initialized	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private
m_initialized	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:private
m_initialized	src/addins/statistics/statisticsapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
m_initialized	src/importaddin.hpp	/^  bool m_initialized;$/;"	m	class:gnote::ImportAddin	access:protected
m_initialized	src/notebooks/notebookapplicationaddin.hpp	/^      bool m_initialized;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
m_initialized	src/synchronization/fusesyncserviceaddin.hpp	/^  bool m_initialized;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_interface_name	src/dbus/remotecontrol-glue.hpp	/^  const char *m_interface_name;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
m_interfaces	src/sharp/dynamicmodule.hpp	/^  std::map<std::string, IfaceFactoryBase *> m_interfaces;$/;"	m	class:sharp::DynamicModule	access:private
m_internal_tags	src/tagmanager.hpp	/^  InternalMap                      m_internal_tags;$/;"	m	class:gnote::TagManager	access:private
m_is_background	src/gnote.hpp	/^  bool m_is_background;$/;"	m	class:gnote::Gnote	access:private
m_is_cut	src/undo.hpp	/^  bool m_is_cut;$/;"	m	class:gnote::EraseAction	access:private
m_is_deleting	src/note.hpp	/^  bool                       m_is_deleting;$/;"	m	class:gnote::Note	access:private
m_is_forward	src/undo.hpp	/^  bool m_is_forward;$/;"	m	class:gnote::EraseAction	access:private
m_is_paste	src/undo.hpp	/^  bool m_is_paste;$/;"	m	class:gnote::InsertAction	access:private
m_is_shell_search	src/gnote.hpp	/^  bool m_is_shell_search;$/;"	m	class:gnote::Gnote	access:private
m_isproperty	src/tag.hpp	/^    bool        m_isproperty;$/;"	m	class:gnote::Tag	access:private
m_issystem	src/tag.hpp	/^    bool        m_issystem;$/;"	m	class:gnote::Tag	access:private
m_italic	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_italic;$/;"	m	class:gnote::NoteTextMenu	access:private
m_item	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  Gtk::ImageMenuItem * m_item;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:private
m_item	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  Gtk::ImageMenuItem *m_item;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
m_key	src/sharp/propertyeditor.hpp	/^    std::string m_key;$/;"	m	class:sharp::PropertyEditorBase	access:protected
m_key	src/triehit.hpp	/^  Glib::ustring m_key;$/;"	m	class:gnote::TrieHit	access:private
m_key_sequence	src/prefskeybinder.cpp	/^    std::string m_key_sequence;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
m_keybinder	src/gnote.hpp	/^  IKeybinder  *m_keybinder;$/;"	m	class:gnote::Gnote	access:private
m_keybinder	src/recentchanges.hpp	/^  utils::GlobalKeybinder m_keybinder;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_keybinder	src/tray.hpp	/^  IKeybinder & m_keybinder;$/;"	m	class:gnote::Tray	access:private
m_keybinder	src/tray.hpp	/^  PrefsKeybinder          *m_keybinder;$/;"	m	class:gnote::TrayIcon	access:private
m_label	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  Gtk::Label m_label;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
m_label_widget	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::Label               *m_label_widget;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_large	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_large;$/;"	m	class:gnote::NoteTextMenu	access:private
m_last_background_check	src/synchronization/syncmanager.hpp	/^    sharp::DateTime m_last_background_check;$/;"	m	class:gnote::sync::SyncManager	access:private
m_last_sync_date	src/synchronization/gnotesyncclient.hpp	/^    sharp::DateTime m_last_sync_date;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_last_sync_lock_hash	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_last_sync_lock_hash;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_last_sync_rev	src/synchronization/gnotesyncclient.hpp	/^    int m_last_sync_rev;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_latest_revision	src/synchronization/syncutils.hpp	/^    int m_latest_revision;$/;"	m	class:gnote::sync::NoteUpdate	access:public
m_libgnote_release	src/addininfo.hpp	/^  Glib::ustring m_libgnote_release;$/;"	m	class:gnote::AddinInfo	access:private
m_libgnote_version_info	src/addininfo.hpp	/^  Glib::ustring m_libgnote_version_info;$/;"	m	class:gnote::AddinInfo	access:private
m_line	src/undo.hpp	/^  int m_line;$/;"	m	class:gnote::ChangeDepthAction	access:private
m_link	src/notewindow.hpp	/^  Gtk::MenuItem         m_link;$/;"	m	class:gnote::NoteTextMenu	access:private
m_link_tag	src/notetag.hpp	/^  NoteTag::Ptr m_link_tag;$/;"	m	class:gnote::NoteTagTable	access:private
m_link_tag	src/watchers.hpp	/^    NoteTag::Ptr m_link_tag;$/;"	m	class:gnote::NoteLinkWatcher	access:private
m_list_store	src/noterenamedialog.cpp	/^  Glib::RefPtr<Gtk::ListStore> m_list_store;$/;"	m	class:gnote::ModelFiller	file:	access:private
m_local_manifest_file_path	src/synchronization/gnotesyncclient.hpp	/^    std::string m_local_manifest_file_path;$/;"	m	class:gnote::sync::GnoteSyncClient	access:protected
m_lock	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  Glib::Threads::Mutex m_lock;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_lock_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_lock_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_lock_timeout	src/synchronization/filesystemsyncserver.hpp	/^  utils::InterruptableTimeout m_lock_timeout;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_locker	src/tagmanager.hpp	/^  mutable Glib::Mutex              m_locker;$/;"	m	class:gnote::TagManager	access:private
m_main_window_actions	src/actionmanager.hpp	/^  Glib::RefPtr<Gtk::ActionGroup> m_main_window_actions;$/;"	m	class:gnote::ActionManager	access:private
m_main_window_search_actions	src/actionmanager.hpp	/^  std::map<int, Glib::RefPtr<Gtk::Action> > m_main_window_search_actions;$/;"	m	class:gnote::ActionManager	access:private
m_manager	src/dbus/remotecontrol.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::RemoteControl	access:private
m_manager	src/dbus/searchprovider.hpp	/^  gnote::NoteManager & m_manager;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
m_manager	src/gnote.hpp	/^  NoteManager *m_manager;$/;"	m	class:gnote::Gnote	access:private
m_manager	src/notebase.hpp	/^  NoteManagerBase & m_manager;$/;"	m	class:gnote::NoteBase	access:private
m_manager	src/notemanagerbase.cpp	/^  NoteManagerBase & m_manager;$/;"	m	class:gnote::TrieController	file:	access:private
m_manager	src/prefskeybinder.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::GnotePrefsKeybinder	access:private
m_manager	src/search.hpp	/^  NoteManager &m_manager;$/;"	m	class:gnote::Search	access:private
m_manager	src/searchnoteswidget.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_manager	src/synchronization/syncui.hpp	/^    NoteManagerBase & m_manager;$/;"	m	class:gnote::sync::SyncUI	access:protected
m_manager	src/tray.hpp	/^  NoteManager & m_manager;$/;"	m	class:gnote::Tray	access:private
m_manifest_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_manifest_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_mapped	src/recentchanges.hpp	/^  bool                m_mapped;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_margin_bottom	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_bottom;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_margin_left	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_left;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_margin_right	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_right;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_margin_top	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_top;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_mark;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
m_mark_deleted_conn	src/note.hpp	/^  sigc::connection m_mark_deleted_conn;$/;"	m	class:gnote::Note	access:private
m_mark_set_conn	src/note.hpp	/^  sigc::connection m_mark_set_conn;$/;"	m	class:gnote::Note	access:private
m_mark_set_timeout	src/notewindow.hpp	/^  utils::InterruptableTimeout  *m_mark_set_timeout;$/;"	m	class:gnote::NoteWindow	access:private
m_matches_column	src/searchnoteswidget.hpp	/^  Gtk::TreeViewColumn *m_matches_column;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_matches_window	src/searchnoteswidget.hpp	/^  Gtk::ScrolledWindow m_matches_window;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_max_length	src/trie.hpp	/^  size_t m_max_length;$/;"	m	class:gnote::TrieTree	access:private
m_menu	src/addins/backlinks/backlinkmenuitem.hpp	/^  Gtk::Menu *m_menu;$/;"	m	class:backlinks::BacklinkAction	access:private
m_menu	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  Gtk::Menu *m_menu;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
m_menu	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::Menu                *m_menu;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_menu	src/utils.hpp	/^      Gtk::Menu *m_menu;$/;"	m	class:gnote::utils::ToolMenuButton	access:private
m_menu_added	src/tray.hpp	/^  bool       m_menu_added;$/;"	m	class:gnote::Tray	access:private
m_menu_items	src/notebooks/notebooknoteaddin.hpp	/^    std::list<Gtk::MenuItem *> m_menu_items;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_message_label	src/synchronization/syncdialog.cpp	/^  Gtk::Label *m_message_label;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
m_message_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_message_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_metadata_change_date	src/notebase.hpp	/^  sharp::DateTime             m_metadata_change_date;$/;"	m	class:gnote::NoteData	access:private
m_minutes	src/sharp/timespan.hpp	/^    int m_minutes;$/;"	m	class:sharp::TimeSpan	access:private
m_model	src/synchronization/syncdialog.hpp	/^    Glib::RefPtr<Gtk::TreeStore> m_model;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_model_column_record	src/noterenamedialog.hpp	/^  ModelColumnRecord m_model_column_record;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_modprobe_tool	src/synchronization/syncutils.hpp	/^    std::string m_modprobe_tool;$/;"	m	class:gnote::sync::SyncUtils	access:private
m_module_manager	src/addinmanager.hpp	/^  sharp::ModuleManager m_module_manager;$/;"	m	class:gnote::AddinManager	access:private
m_modules	src/sharp/modulemanager.hpp	/^  ModuleMap m_modules;$/;"	m	class:sharp::ModuleManager	access:private
m_mount_exe_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_mount_exe_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  std::string m_mount_path;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_name	src/addininfo.hpp	/^  std::string m_name;$/;"	m	class:gnote::AddinInfo	access:private
m_name	src/notebooks/notebook.hpp	/^  std::string m_name;$/;"	m	class:gnote::notebooks::Notebook	access:private
m_name	src/notewindow.hpp	/^  std::string                   m_name;$/;"	m	class:gnote::NoteWindow	access:private
m_name	src/tag.hpp	/^    std::string m_name;$/;"	m	class:gnote::Tag	access:private
m_nameEntry	src/notebooks/createnotebookdialog.hpp	/^  Gtk::Entry                m_nameEntry;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
m_native_keybinder	src/prefskeybinder.cpp	/^    IKeybinder  & m_native_keybinder;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
m_native_keybinder	src/prefskeybinder.hpp	/^  IKeybinder & m_native_keybinder;$/;"	m	class:gnote::PrefsKeybinder	access:private
m_never_rename_radio	src/noterenamedialog.hpp	/^  Gtk::RadioButton m_never_rename_radio;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_newNotebookIcon	src/notebooks/createnotebookdialog.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> m_newNotebookIcon;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
m_newNotebookIconDialog	src/notebooks/createnotebookdialog.hpp	/^  Glib::RefPtr<Gdk::Pixbuf> m_newNotebookIconDialog;$/;"	m	class:gnote::notebooks::CreateNotebookDialog	access:private
m_new_note_button	src/recentchanges.hpp	/^  Gtk::Button        *m_new_note_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_new_note_item	src/tray.hpp	/^  Gtk::ImageMenuItem *m_new_note_item;$/;"	m	class:gnote::Tray	access:private
m_new_note_name	src/gnote.hpp	/^  std::string m_new_note_name;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_new_revision	src/synchronization/filesystemsyncserver.hpp	/^  int m_new_revision;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_new_revision_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_new_revision_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_no_matches_box	src/searchnoteswidget.hpp	/^  Gtk::Grid *m_no_matches_box;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_normal	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_normal;$/;"	m	class:gnote::NoteTextMenu	access:private
m_normalized_name	src/notebooks/notebook.hpp	/^  std::string m_normalized_name;$/;"	m	class:gnote::notebooks::Notebook	access:private
m_normalized_name	src/tag.hpp	/^    std::string m_normalized_name;$/;"	m	class:gnote::Tag	access:private
m_note	src/addins/backlinks/backlinkmenuitem.hpp	/^  gnote::NoteBase::Ptr   m_note;$/;"	m	class:backlinks::BacklinkMenuItem	access:private
m_note	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  gnote::Note::Ptr m_note;            \/\/the Note referenced by the menu item$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:private
m_note	src/noteaddin.hpp	/^  Note::Ptr                     m_note;$/;"	m	class:gnote::NoteAddin	access:private
m_note	src/notebooks/notebookmenuitem.hpp	/^      Note::Ptr m_note;$/;"	m	class:gnote::notebooks::NotebookMenuItem	access:private
m_note	src/notebuffer.hpp	/^  Note &                       m_note;$/;"	m	class:gnote::NoteBuffer	access:private
m_note	src/notewindow.hpp	/^  Note                        & m_note;$/;"	m	class:gnote::NoteWindow	access:private
m_note	src/notewindow.hpp	/^  Note           & m_note;$/;"	m	class:gnote::NoteFindHandler	access:private
m_note	src/tray.hpp	/^  Note::Ptr   m_note;$/;"	m	class:gnote::NoteMenuItem	access:private
m_note_actions	src/noteaddin.hpp	/^  std::list<std::string>        m_note_actions;$/;"	m	class:gnote::NoteAddin	access:private
m_note_added_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_note_added_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_note_added_to_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler                 m_note_added_to_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_note_addin	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  gnote::NoteAddin * m_note_addin;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:private
m_note_addin	src/addins/underline/underlinemenuitem.hpp	/^  gnote::NoteAddin * m_note_addin;$/;"	m	class:underline::UnderlineMenuItem	access:private
m_note_addin_infos	src/addinmanager.hpp	/^  IdInfoMap                                m_note_addin_infos;$/;"	m	class:gnote::AddinManager	access:private
m_note_addins	src/addinmanager.hpp	/^  NoteAddinMap                              m_note_addins;$/;"	m	class:gnote::AddinManager	access:private
m_note_icon	src/dbus/searchprovider.hpp	/^  Glib::RefPtr<Gio::Icon> m_note_icon;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
m_note_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *m_note_list_context_menu;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_note_manager	src/addinmanager.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::AddinManager	access:private
m_note_manager	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  gnote::NoteManager & m_note_manager;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
m_note_manager	src/addins/statistics/statisticswidget.cpp	/^  gnote::NoteManager & m_note_manager;$/;"	m	class:statistics::StatisticsModel	file:	access:private
m_note_manager	src/applicationaddin.hpp	/^  NoteManager *m_note_manager;$/;"	m	class:gnote::ApplicationAddin	access:private
m_note_manager	src/notebooks/notebook.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::notebooks::Notebook	access:protected
m_note_manager	src/notebooks/notebookmanager.hpp	/^  NoteManager                        & m_note_manager;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_note_manager	src/notebooks/notebookstreeview.hpp	/^    NoteManager & m_note_manager;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:private
m_note_manager	src/preferencesdialog.hpp	/^  NoteManager & m_note_manager;$/;"	m	class:gnote::PreferencesDialog	access:private
m_note_manager	src/recentchanges.hpp	/^  NoteManager        &m_note_manager;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_note_manager	src/synchronization/syncmanager.hpp	/^    NoteManagerBase & m_note_manager;$/;"	m	class:gnote::sync::SyncManager	access:private
m_note_opened_cid	src/noteaddin.hpp	/^  sigc::connection              m_note_opened_cid;$/;"	m	class:gnote::NoteAddin	access:private
m_note_path	src/gnote.hpp	/^  gchar *     m_note_path;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_note_removed_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_note_removed_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_note_removed_from_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler                 m_note_removed_from_notebook;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_note_save_times	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  std::map<std::string, sharp::DateTime> m_note_save_times;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_note_update_titles	src/synchronization/syncdialog.cpp	/^  std::list<std::string> m_note_update_titles;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
m_note_window	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:inserttimestamp::__anon14::InsertTimestampAction	file:	access:private
m_note_window	src/addins/printnotes/printnotesnoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:printnotes::__anon13::PrintNotesAction	file:	access:private
m_note_window	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:replacetitle::__anon16::ReplaceTitleAction	file:	access:private
m_note_window_embedded	src/note.hpp	/^  bool                       m_note_window_embedded;$/;"	m	class:gnote::Note	access:private
m_notebook	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  gnote::notebooks::Notebook::Ptr m_notebook;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:private
m_notebook	src/notebooks/notebookmenuitem.hpp	/^      Notebook::Ptr m_notebook;$/;"	m	class:gnote::notebooks::NotebookMenuItem	access:private
m_notebook	src/notebooks/notebooknewnotemenuitem.hpp	/^  Notebook::Ptr m_notebook;$/;"	m	class:gnote::notebooks::NotebookNewNoteMenuItem	access:private
m_notebookMap	src/notebooks/notebookmanager.hpp	/^  std::map<std::string, Gtk::TreeIter> m_notebookMap;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_notebook_list_context_menu	src/searchnoteswidget.hpp	/^  Gtk::Menu *m_notebook_list_context_menu;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_notebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::ListStore>         m_notebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_notebooksTree	src/searchnoteswidget.hpp	/^  notebooks::NotebooksTreeView *m_notebooksTree;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_notebooks_to_display	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter>   m_notebooks_to_display;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_notes	src/notebooks/specialnotebooks.hpp	/^  std::set<Note::Ptr> m_notes;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:private
m_notes	src/notemanagerbase.hpp	/^  NoteBase::List m_notes;$/;"	m	class:gnote::NoteManagerBase	access:protected
m_notes	src/tag.hpp	/^    NoteMap m_notes;$/;"	m	class:gnote::Tag	access:private
m_notes_box	src/noterenamedialog.hpp	/^  Gtk::Grid m_notes_box;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_notes_dir	src/notemanagerbase.hpp	/^  Glib::ustring m_notes_dir;$/;"	m	class:gnote::NoteManagerBase	access:private
m_notes_model	src/noterenamedialog.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_notes_model;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_notify_cnx	src/prefskeybinder.cpp	/^    guint         m_notify_cnx;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
m_obj_ptr	src/watchers.hpp	/^    GtkSpellChecker *m_obj_ptr;$/;"	m	class:gnote::NoteSpellChecker	access:private
m_offset	src/addins/bugzilla/insertbugaction.hpp	/^  int               m_offset;$/;"	m	class:bugzilla::InsertBugAction	access:private
m_offset	src/undo.hpp	/^  int m_offset;$/;"	m	class:gnote::InsertBulletAction	access:private
m_on_note_added_cid	src/watchers.hpp	/^    sigc::connection m_on_note_added_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
m_on_note_deleted_cid	src/watchers.hpp	/^    sigc::connection m_on_note_deleted_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
m_on_note_renamed_cid	src/watchers.hpp	/^    sigc::connection m_on_note_renamed_cid;$/;"	m	class:gnote::NoteLinkWatcher	access:private
m_on_notebook_selection_changed_cid	src/searchnoteswidget.hpp	/^  sigc::connection m_on_notebook_selection_changed_cid;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_on_tag_added_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_added_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
m_on_tag_removed_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_removed_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
m_on_tag_removing_cid	src/watchers.hpp	/^    sigc::connection m_on_tag_removing_cid;$/;"	m	class:gnote::NoteTagsWatcher	access:private
m_open_external_note_path	src/gnote.hpp	/^  std::string m_open_external_note_path;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_open_note	src/gnote.hpp	/^  gchar*      m_open_note;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_open_note_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_open_note_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_open_note_name	src/gnote.hpp	/^  std::string m_open_note_name;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_open_note_new_window_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_open_note_new_window_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_open_note_uri	src/gnote.hpp	/^  std::string m_open_note_uri;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_open_notes_in_new_window	src/recentchanges.hpp	/^  bool                m_open_notes_in_new_window;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_open_start_here	src/gnote.hpp	/^  bool        m_open_start_here;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_open_template_button	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  Gtk::Button m_open_template_button;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
m_page_breaks	src/addins/printnotes/printnotesnoteaddin.hpp	/^  std::vector<PageBreak> m_page_breaks;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_palette_foreground	src/notetag.hpp	/^  ContrastPaletteColor m_palette_foreground;$/;"	m	class:gnote::NoteTag	access:private
m_password_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_password_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
m_path	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  std::string m_path;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
m_path	src/dbus/remotecontrol-glue.hpp	/^  const char *m_path;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
m_path	src/sharp/fileinfo.hpp	/^  std::string m_path;$/;"	m	class:sharp::FileInfo	access:private
m_path_button	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  Gtk::FileChooserButton *m_path_button;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:private
m_payload	src/trie.hpp	/^    value_t m_payload;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_payload_present	src/trie.hpp	/^    bool m_payload_present;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_pid	src/sharp/process.hpp	/^  int m_pid;$/;"	m	class:sharp::Process	access:private
m_pin_img	src/tray.hpp	/^  Gtk::Image *m_pin_img;$/;"	m	class:gnote::NoteMenuItem	access:private
m_pinned	src/tray.hpp	/^  bool        m_pinned;$/;"	m	class:gnote::NoteMenuItem	access:private
m_pref_path	src/prefskeybinder.cpp	/^    std::string m_pref_path;$/;"	m	class:gnote::PrefsKeybinder::Binding	file:	access:private
m_pref_tab_addins	src/addinmanager.hpp	/^  IdPrefTabAddinMap                        m_pref_tab_addins;$/;"	m	class:gnote::AddinManager	access:private
m_prefsdlg	src/gnote.hpp	/^  PreferencesDialog *m_prefsdlg;$/;"	m	class:gnote::Gnote	access:private
m_print_op	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Gtk::PrintOperation> m_print_op;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_progress_bar	src/synchronization/syncdialog.hpp	/^    Gtk::ProgressBar *m_progress_bar;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_progress_bar_timeout_id	src/synchronization/syncdialog.hpp	/^    unsigned m_progress_bar_timeout_id;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_progress_label	src/synchronization/syncdialog.hpp	/^    Gtk::Label *m_progress_label;$/;"	m	class:gnote::sync::SyncDialog	access:private
m_radio_group	src/notebooks/notebooknoteaddin.hpp	/^    Gtk::RadioButtonGroup     m_radio_group;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_radio_group	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButtonGroup m_radio_group;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
m_range	src/utils.hpp	/^      TextRange                     m_range;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
m_read_only	src/notemanagerbase.hpp	/^  bool m_read_only;$/;"	m	class:gnote::NoteManagerBase	access:private
m_reader	src/sharp/xmlreader.hpp	/^  xmlTextReaderPtr m_reader;$/;"	m	class:sharp::XmlReader	access:private
m_redirect_stderr	src/sharp/process.hpp	/^  bool m_redirect_stderr;$/;"	m	class:sharp::Process	access:private
m_redirect_stdout	src/sharp/process.hpp	/^  bool m_redirect_stdout;$/;"	m	class:sharp::Process	access:private
m_redo	src/notewindow.hpp	/^  Gtk::ImageMenuItem   *m_redo;$/;"	m	class:gnote::NoteTextMenu	access:private
m_redo_stack	src/undo.hpp	/^  std::stack<EditAction *> m_redo_stack;$/;"	m	class:gnote::UndoManager	access:private
m_regex	src/watchers.hpp	/^    Glib::RefPtr<Glib::Regex>    m_regex;$/;"	m	class:gnote::NoteWikiWatcher	access:private
m_regex	src/watchers.hpp	/^    Glib::RefPtr<Glib::Regex>   m_regex;$/;"	m	class:gnote::NoteUrlWatcher	access:private
m_rename_behavior_combo	src/preferencesdialog.hpp	/^  Gtk::ComboBoxText *m_rename_behavior_combo;$/;"	m	class:gnote::PreferencesDialog	access:private
m_rename_button	src/noterenamedialog.hpp	/^  Gtk::Button m_rename_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_rename_notebook_action	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::Action> m_rename_notebook_action;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_reset_sync_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *m_reset_sync_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
m_root	src/trie.hpp	/^  const TrieStatePtr m_root;$/;"	m	class:gnote::TrieTree	access:private
m_save_needed	src/note.hpp	/^  bool                       m_save_needed;$/;"	m	class:gnote::Note	access:private
m_save_selection_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_selection_check_button;$/;"	m	class:gnote::NoteWindow	access:private
m_save_size_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_size_check_button;$/;"	m	class:gnote::NoteWindow	access:private
m_save_sync_addin_button	src/preferencesdialog.hpp	/^  Gtk::Button *m_save_sync_addin_button;$/;"	m	class:gnote::PreferencesDialog	access:private
m_save_timeout	src/note.hpp	/^  utils::InterruptableTimeout *m_save_timeout;$/;"	m	class:gnote::Note	access:private
m_save_title_check_button	src/notewindow.hpp	/^  Gtk::CheckButton             *m_save_title_check_button;$/;"	m	class:gnote::NoteWindow	access:private
m_save_type	src/notetag.hpp	/^  TagSaveType         m_save_type;$/;"	m	class:gnote::NoteTag	access:private
m_schemas	src/preferences.hpp	/^    std::map<std::string, Glib::RefPtr<Gio::Settings> > m_schemas;$/;"	m	class:gnote::Preferences	access:private
m_search	src/gnote.hpp	/^  std::string m_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_search_box	src/recentchanges.hpp	/^  Gtk::Alignment      m_search_box;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_search_button	src/recentchanges.hpp	/^  Gtk::ToggleButton   m_search_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_search_entry	src/recentchanges.hpp	/^  Gtk::SearchEntry    m_search_entry;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_search_notes_item	src/tray.hpp	/^  Gtk::ImageMenuItem *m_search_notes_item;$/;"	m	class:gnote::Tray	access:private
m_search_notes_widget	src/recentchanges.hpp	/^  SearchNotesWidget   m_search_notes_widget;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_search_text	src/searchnoteswidget.hpp	/^  std::string m_search_text;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_seconds	src/sharp/timespan.hpp	/^    int m_seconds;$/;"	m	class:sharp::TimeSpan	access:private
m_select_all_button	src/noterenamedialog.hpp	/^  Gtk::Button m_select_all_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_select_none_button	src/noterenamedialog.hpp	/^  Gtk::Button m_select_none_button;$/;"	m	class:gnote::NoteRenameDialog	access:private
m_selected_sync_addin	src/preferencesdialog.hpp	/^  sync::SyncServiceAddin *m_selected_sync_addin;$/;"	m	class:gnote::PreferencesDialog	access:private
m_selected_tags	src/searchnoteswidget.hpp	/^  std::set<Tag::Ptr>  m_selected_tags;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_selection_bound_pos	src/notebase.hpp	/^  int               m_selection_bound_pos;$/;"	m	class:gnote::NoteData	access:private
m_server_id	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_server_id;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_server_id	src/synchronization/gnotesyncclient.hpp	/^    std::string m_server_id;$/;"	m	class:gnote::sync::GnoteSyncClient	access:private
m_server_path	src/synchronization/filesystemsyncserver.hpp	/^  std::string m_server_path;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_settings	src/sharp/propertyeditor.hpp	/^    Glib::RefPtr<Gio::Settings> m_settings;$/;"	m	class:sharp::PropertyEditorBase	access:protected
m_shell_search	src/gnote.hpp	/^  bool        m_shell_search;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_show_menu_cid	src/notebooks/notebooknoteaddin.hpp	/^    sigc::connection          m_show_menu_cid;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_show_version	src/gnote.hpp	/^  bool        m_show_version;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_signal_actions_changed	src/notewindow.hpp	/^  sigc::signal<void> m_signal_actions_changed;$/;"	m	class:gnote::NoteWindow	access:private
m_signal_activate	src/notetag.hpp	/^  TagActivatedHandler m_signal_activate;$/;"	m	class:gnote::NoteTag	access:private
m_signal_changed	src/notetag.hpp	/^  sigc::signal<void,const Gtk::TextTag&,bool> m_signal_changed;$/;"	m	class:gnote::NoteTag	access:private
m_signal_changed_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_changed_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_signal_connecting	src/synchronization/syncui.hpp	/^    sigc::signal<void> m_signal_connecting;$/;"	m	class:gnote::sync::SyncUI	access:private
m_signal_idle	src/synchronization/syncui.hpp	/^    sigc::signal<void> m_signal_idle;$/;"	m	class:gnote::sync::SyncUI	access:private
m_signal_note_saved_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_note_saved_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_signal_opened	src/note.hpp	/^  sigc::signal<void,Note&> m_signal_opened;$/;"	m	class:gnote::Note	access:private
m_signal_settings_changed_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_settings_changed_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
m_signal_tag_added	src/tagmanager.hpp	/^  sigc::signal<void, Tag::Ptr, const Gtk::TreeIter &> m_signal_tag_added;$/;"	m	class:gnote::TagManager	access:private
m_signal_tag_removed	src/tagmanager.hpp	/^  sigc::signal<void, const std::string &> m_signal_tag_removed;$/;"	m	class:gnote::TagManager	access:private
m_small	src/notewindow.hpp	/^  Gtk::RadioMenuItem    m_small;$/;"	m	class:gnote::NoteTextMenu	access:private
m_sort_column_id	src/searchnoteswidget.hpp	/^  int m_sort_column_id;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_sort_column_order	src/searchnoteswidget.hpp	/^  Gtk::SortType m_sort_column_order;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_sortedNotebooks	src/notebooks/notebookmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort>     m_sortedNotebooks;$/;"	m	class:gnote::notebooks::NotebookManager	access:private
m_sorted_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort> m_sorted_tags;$/;"	m	class:gnote::TagManager	access:private
m_splitTags	src/undo.hpp	/^  std::list<TagData> m_splitTags;$/;"	m	class:gnote::SplitterAction	access:protected
m_start	src/triehit.hpp	/^  int           m_start;$/;"	m	class:gnote::TrieHit	access:private
m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::EraseAction	access:private
m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::TagApplyAction	access:private
m_start	src/undo.hpp	/^  int m_start;$/;"	m	class:gnote::TagRemoveAction	access:private
m_start_mark	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextMark>   m_start_mark;$/;"	m	class:gnote::utils::TextRange	access:private
m_start_note_uri	src/notemanagerbase.hpp	/^  std::string m_start_note_uri;$/;"	m	class:gnote::NoteManagerBase	access:protected
m_stat	src/addins/statistics/statisticswidget.cpp	/^    Gtk::TreeModelColumn<std::string> m_stat;$/;"	m	class:statistics::StatisticsModel::StatisticsRecord	file:	access:private
m_state	src/synchronization/syncmanager.hpp	/^    SyncState m_state;$/;"	m	class:gnote::sync::SyncManager	access:private
m_stderr	src/sharp/process.hpp	/^  int m_stderr;$/;"	m	class:sharp::Process	access:private
m_stderr_stream	src/sharp/process.hpp	/^  std::stringstream m_stderr_stream;$/;"	m	class:sharp::Process	access:private
m_stdout	src/sharp/process.hpp	/^  int m_stdout;$/;"	m	class:sharp::Process	access:private
m_stdout_stream	src/sharp/process.hpp	/^  std::stringstream m_stdout_stream;$/;"	m	class:sharp::Process	access:private
m_store	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_store;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_store_filter	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::TreeModelFilter> m_store_filter;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_store_sort	src/searchnoteswidget.hpp	/^  Glib::RefPtr<Gtk::TreeModelSort> m_store_sort;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_strikeout	src/notewindow.hpp	/^  Gtk::CheckMenuItem    m_strikeout;$/;"	m	class:gnote::NoteTextMenu	access:private
m_stubs	src/dbus/remotecontrol-glue.hpp	/^  std::map<Glib::ustring, stub_func> m_stubs;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
m_stubs	src/dbus/searchprovider.hpp	/^  std::map<Glib::ustring, stub_func> m_stubs;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
m_stylesheet	src/sharp/xsltransform.hpp	/^  xsltStylesheetPtr m_stylesheet;$/;"	m	class:sharp::XslTransform	access:private
m_submenu_built	src/addins/backlinks/backlinkmenuitem.hpp	/^  bool m_submenu_built;$/;"	m	class:backlinks::BacklinkAction	access:private
m_submenu_built	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  bool m_submenu_built;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
m_sync_addin_combo	src/preferencesdialog.hpp	/^  Gtk::ComboBox *m_sync_addin_combo;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_addin_iters	src/preferencesdialog.hpp	/^  std::map<std::string, Gtk::TreeIter> m_sync_addin_iters;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_addin_prefs_container	src/preferencesdialog.hpp	/^  Gtk::Grid   *m_sync_addin_prefs_container;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_addin_prefs_widget	src/preferencesdialog.hpp	/^  Gtk::Widget *m_sync_addin_prefs_widget;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_addin_store	src/preferencesdialog.hpp	/^  Glib::RefPtr<Gtk::ListStore> m_sync_addin_store;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_addin_store_record	src/preferencesdialog.hpp	/^  SyncStoreModel m_sync_addin_store_record;$/;"	m	class:gnote::PreferencesDialog	access:private
m_sync_dlg	src/gnote.hpp	/^  sync::SyncDialog::Ptr m_sync_dlg;$/;"	m	class:gnote::Gnote	access:private
m_sync_lock	src/synchronization/filesystemsyncserver.hpp	/^  SyncLockInfo m_sync_lock;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_sync_service_addins	src/addinmanager.hpp	/^  IdSyncServiceAddinMap                    m_sync_service_addins;$/;"	m	class:gnote::AddinManager	access:private
m_sync_thread	src/synchronization/syncmanager.hpp	/^    Glib::Thread *m_sync_thread;$/;"	m	class:gnote::sync::SyncManager	access:private
m_sync_ui	src/synchronization/syncmanager.hpp	/^    SyncUI::Ptr m_sync_ui;$/;"	m	class:gnote::sync::SyncManager	access:protected
m_tag	src/addins/bugzilla/insertbugaction.hpp	/^  BugzillaLink::Ptr m_tag;$/;"	m	class:bugzilla::InsertBugAction	access:private
m_tag	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:private
m_tag	src/addins/underline/underlinenoteaddin.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:underline::UnderlineNoteAddin	access:private
m_tag	src/notebooks/notebook.hpp	/^  Tag::Ptr    m_tag;$/;"	m	class:gnote::notebooks::Notebook	access:private
m_tag	src/tagmanager.hpp	/^    Gtk::TreeModelColumn<Tag::Ptr> m_tag;$/;"	m	class:gnote::TagManager::ColumnRecord	access:public
m_tag	src/undo.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:gnote::TagApplyAction	access:private
m_tag	src/undo.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:gnote::TagRemoveAction	access:private
m_tag	src/utils.hpp	/^      Glib::RefPtr<Gtk::TextTag>    m_tag;$/;"	m	class:gnote::utils::TextTagEnumerator	access:private
m_tag_applied_cid	src/watchers.hpp	/^    sigc::connection  m_tag_applied_cid;$/;"	m	class:gnote::NoteSpellChecker	access:private
m_tag_bold	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_bold; \/\/ the tags used to mark headings$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
m_tag_huge	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_huge;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
m_tag_large	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_large;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
m_tag_map	src/tagmanager.hpp	/^  TagMap                           m_tag_map;$/;"	m	class:gnote::TagManager	access:private
m_tag_table	src/note.hpp	/^  Glib::RefPtr<NoteTagTable> m_tag_table;$/;"	m	class:gnote::Note	access:private
m_tag_types	src/notetag.hpp	/^  std::map<std::string, Factory>     m_tag_types;$/;"	m	class:gnote::NoteTagTable	access:private
m_tags	src/notebase.hpp	/^  TagMap m_tags;$/;"	m	class:gnote::NoteData	access:private
m_tags	src/tagmanager.hpp	/^  Glib::RefPtr<Gtk::ListStore>     m_tags;$/;"	m	class:gnote::TagManager	access:private
m_tags	src/test/testtagmanager.hpp	/^  std::map<std::string, gnote::Tag::Ptr> m_tags;$/;"	m	class:test::TagManager	access:private
m_targets	src/searchnoteswidget.hpp	/^  std::vector<Gtk::TargetEntry> m_targets;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_template_save_selection_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_selection_tag;$/;"	m	class:gnote::NoteWindow	access:private
m_template_save_size_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_size_tag;$/;"	m	class:gnote::NoteWindow	access:private
m_template_save_title_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_save_title_tag;$/;"	m	class:gnote::NoteWindow	access:private
m_template_tag	src/notewindow.hpp	/^  Tag::Ptr m_template_tag;$/;"	m	class:gnote::NoteWindow	access:private
m_template_widget	src/notewindow.hpp	/^  Gtk::Grid                    *m_template_widget;$/;"	m	class:gnote::NoteWindow	access:private
m_text	src/notebase.hpp	/^  Glib::ustring     m_text;$/;"	m	class:gnote::NoteData	access:private
m_text_menu	src/notewindow.hpp	/^  NoteTextMenu                 *m_text_menu;$/;"	m	class:gnote::NoteWindow	access:private
m_text_menu_items	src/noteaddin.hpp	/^  std::list<Gtk::MenuItem*>     m_text_menu_items;$/;"	m	class:gnote::NoteAddin	access:private
m_timeout	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  sigc::connection m_timeout;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private
m_timeout_id	src/utils.hpp	/^      guint m_timeout_id;$/;"	m	class:gnote::utils::InterruptableTimeout	access:private
m_timestamp_footer	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> m_timestamp_footer;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
m_title	src/notebase.hpp	/^  Glib::ustring     m_title;$/;"	m	class:gnote::NoteData	access:private
m_title	src/synchronization/syncutils.hpp	/^    std::string m_title;$/;"	m	class:gnote::sync::NoteUpdate	access:public
m_title_search	src/addins/backlinks/backlinkmenuitem.hpp	/^  std::string m_title_search;$/;"	m	class:backlinks::BacklinkMenuItem	access:private
m_title_tag	src/watchers.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_title_tag;$/;"	m	class:gnote::NoteRenameWatcher	access:private
m_title_taken_dialog	src/watchers.hpp	/^    utils::HIGMessageDialog   *m_title_taken_dialog;$/;"	m	class:gnote::NoteRenameWatcher	access:private
m_title_trie	src/notemanagerbase.cpp	/^  TrieTree<NoteBase::WeakPtr> *m_title_trie;$/;"	m	class:gnote::TrieController	file:	access:private
m_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Gtk::Menu          *m_toc_menu;        \/\/ the TOC submenu, containing the TOC$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
m_toc_menu_built	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool                m_toc_menu_built;  \/\/ whereas toc_menu is already built$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
m_tomboy_path	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  std::string m_tomboy_path;$/;"	m	class:tomboyimport::TomboyImportAddin	access:private
m_toolButton	src/notebooks/notebooknoteaddin.hpp	/^    gnote::utils::ToolMenuButton  *m_toolButton;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
m_toolbar_items	src/noteaddin.hpp	/^  ToolItemMap                   m_toolbar_items;$/;"	m	class:gnote::NoteAddin	access:private
m_transitions	src/trie.hpp	/^    TrieStateList m_transitions;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_tray	src/gnote.hpp	/^  Tray::Ptr m_tray;$/;"	m	class:gnote::Gnote	access:private
m_tray	src/tray.hpp	/^  Tray::Ptr                m_tray;$/;"	m	class:gnote::TrayIcon	access:private
m_trayNotebookMenu	src/notebooks/notebookapplicationaddin.hpp	/^      Gtk::Menu                     *m_trayNotebookMenu;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
m_trayNotebookMenuItems	src/notebooks/notebookapplicationaddin.hpp	/^      std::list<Gtk::MenuItem*>      m_trayNotebookMenuItems;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
m_tray_icon	src/gnote.hpp	/^  Glib::RefPtr<TrayIcon> m_tray_icon;$/;"	m	class:gnote::Gnote	access:private
m_tray_menu	src/tray.hpp	/^  Gtk::Menu *m_tray_menu;$/;"	m	class:gnote::Tray	access:private
m_tray_menu_item	src/notebooks/notebookapplicationaddin.hpp	/^      Gtk::MenuItem                 *m_tray_menu_item;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:private
m_tray_menu_items	src/actionmanager.hpp	/^  std::vector<Gtk::MenuItem*> m_tray_menu_items;$/;"	m	class:gnote::ActionManager	access:private
m_trayicon	src/prefskeybinder.hpp	/^  IGnoteTray & m_trayicon;$/;"	m	class:gnote::GnotePrefsKeybinder	access:private
m_trayicon	src/tray.hpp	/^  IGnoteTray  & m_trayicon;$/;"	m	class:gnote::Tray	access:private
m_tree	src/searchnoteswidget.hpp	/^  Gtk::TreeView *m_tree;$/;"	m	class:gnote::SearchNotesWidget	access:private
m_trie_controller	src/notemanagerbase.hpp	/^  TrieController *m_trie_controller;$/;"	m	class:gnote::NoteManagerBase	access:private
m_try_merge	src/undo.hpp	/^  bool m_try_merge;$/;"	m	class:gnote::UndoManager	access:private
m_ui_disabled	src/synchronization/silentui.hpp	/^    bool m_ui_disabled;$/;"	m	class:gnote::sync::SilentUI	access:private
m_undo	src/notewindow.hpp	/^  Gtk::ImageMenuItem   *m_undo;$/;"	m	class:gnote::NoteTextMenu	access:private
m_undo_changed	src/undo.hpp	/^  sigc::signal<void> m_undo_changed;$/;"	m	class:gnote::UndoManager	access:private
m_undo_manager	src/notewindow.hpp	/^  UndoManager          &m_undo_manager;$/;"	m	class:gnote::NoteTextMenu	access:private
m_undo_stack	src/undo.hpp	/^  std::stack<EditAction *> m_undo_stack;$/;"	m	class:gnote::UndoManager	access:private
m_undomanager	src/notebuffer.hpp	/^  UndoManager           *m_undomanager;$/;"	m	class:gnote::NoteBuffer	access:private
m_unmount_timeout	src/synchronization/fusesyncserviceaddin.hpp	/^  utils::InterruptableTimeout m_unmount_timeout;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:private
m_update_menu_slot	src/addins/backlinks/backlinkmenuitem.hpp	/^  sigc::slot<void, Gtk::Menu*> m_update_menu_slot;$/;"	m	class:backlinks::BacklinkAction	access:private
m_update_menu_slot	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  sigc::slot<void, Gtk::Menu*> m_update_menu_slot;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
m_updated_notes	src/synchronization/filesystemsyncserver.hpp	/^  std::list<std::string> m_updated_notes;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:private
m_uri	src/notebase.hpp	/^  const std::string m_uri;$/;"	m	class:gnote::NoteData	access:private
m_uri	src/sharp/uri.hpp	/^    std::string m_uri;$/;"	m	class:sharp::Uri	access:private
m_url_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_url_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
m_url_tag	src/notetag.hpp	/^  NoteTag::Ptr m_url_tag;$/;"	m	class:gnote::NoteTagTable	access:private
m_url_tag	src/watchers.hpp	/^    NoteTag::Ptr                m_url_tag;$/;"	m	class:gnote::NoteUrlWatcher	access:private
m_use_panel	src/gnote.hpp	/^  bool        m_use_panel;$/;"	m	class:gnote::GnoteCommandLine	access:private
m_usecs	src/sharp/timespan.hpp	/^    int m_usecs;$/;"	m	class:sharp::TimeSpan	access:private
m_username_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_username_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
m_uuid	src/sharp/uuid.hpp	/^    uuid_t m_uuid;$/;"	m	class:sharp::uuid	access:private
m_uuid	src/synchronization/syncutils.hpp	/^    std::string m_uuid; \/\/needed?$/;"	m	class:gnote::sync::NoteUpdate	access:public
m_value	src/addins/statistics/statisticswidget.cpp	/^    Gtk::TreeModelColumn<std::string> m_value;$/;"	m	class:statistics::StatisticsModel::StatisticsRecord	file:	access:private
m_value	src/trie.hpp	/^    gunichar m_value;$/;"	m	class:gnote::TrieTree::TrieState	access:private
m_value	src/triehit.hpp	/^  value_t       m_value;$/;"	m	class:gnote::TrieHit	access:private
m_version	src/addininfo.hpp	/^  std::string m_version;$/;"	m	class:gnote::AddinInfo	access:private
m_what	src/gnome_keyring/keyringexception.hpp	/^  std::string m_what;$/;"	m	class:gnome::keyring::KeyringException	access:private
m_what	src/sharp/exception.hpp	/^  std::string m_what;$/;"	m	class:sharp::Exception	access:private
m_widget	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsWidget *m_widget;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
m_widget	src/notetag.hpp	/^  Gtk::Widget       * m_widget;$/;"	m	class:gnote::NoteTag	access:private
m_widget	src/sharp/propertyeditor.hpp	/^    Gtk::Widget &m_widget;$/;"	m	class:sharp::PropertyEditorBase	access:protected
m_widget_actions	src/notewindow.hpp	/^  std::map<int, Glib::RefPtr<Gtk::Action> > m_widget_actions;$/;"	m	class:gnote::NoteWindow	access:private
m_widget_location	src/notetag.hpp	/^  Glib::RefPtr<Gtk::TextMark> m_widget_location;$/;"	m	class:gnote::NoteTag	access:private
m_widget_queue	src/notebuffer.hpp	/^  std::queue<WidgetInsertData> m_widget_queue;$/;"	m	class:gnote::NoteBuffer	access:private
m_widget_queue_timeout	src/notebuffer.hpp	/^  sigc::connection             m_widget_queue_timeout;$/;"	m	class:gnote::NoteBuffer	access:private
m_width	src/notebase.hpp	/^  int               m_width, m_height;$/;"	m	class:gnote::NoteData	access:private
m_width	src/notewindow.hpp	/^  int                           m_width;$/;"	m	class:gnote::NoteWindow	access:private
m_window	src/note.hpp	/^  NoteWindow                *m_window;$/;"	m	class:gnote::Note	access:private
m_window_actions_button	src/recentchanges.hpp	/^  Gtk::Button        *m_window_actions_button;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_window_menu_default	src/recentchanges.hpp	/^  Gtk::Menu          *m_window_menu_default;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_window_menu_embedded	src/recentchanges.hpp	/^  Gtk::Menu          *m_window_menu_embedded;$/;"	m	class:gnote::NoteRecentChanges	access:private
m_writer	src/sharp/xmlwriter.hpp	/^    xmlTextWriterPtr m_writer;$/;"	m	class:sharp::XmlWriter	access:private
m_xml_content	src/synchronization/syncutils.hpp	/^    std::string m_xml_content;\/\/Empty if deleted?$/;"	m	class:gnote::sync::NoteUpdate	access:public
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	src/gnote.cpp	/^  int Gnote::main(int argc, char **argv)$/;"	f	class:gnote::Gnote	signature:(int argc, char **argv)
main	src/gnote.hpp	/^  int main(int argc, char **argv);$/;"	p	class:gnote::Gnote	access:public	signature:(int argc, char **argv)
main	src/main.cpp	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	tools/SearchProviderTest.py	/^def main():$/;"	f	access:public
main_context_call	src/utils.cpp	/^    void main_context_call(const sigc::slot<void> & slot)$/;"	f	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
main_context_call	src/utils.hpp	/^    void main_context_call(const sigc::slot<void> & slot);$/;"	p	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
main_context_call_func	src/utils.cpp	/^      void main_context_call_func(const sigc::slot<void> & slot,$/;"	f	namespace:gnote::utils::__anon10	signature:(const sigc::slot<void> & slot, Glib::Threads::Cond * cond, Glib::Threads::Mutex * mutex)
main_context_invoke	src/utils.cpp	/^    void main_context_invoke(const sigc::slot<void> & slot)$/;"	f	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
main_context_invoke	src/utils.hpp	/^    void main_context_invoke(const sigc::slot<void> & slot);$/;"	p	namespace:gnote::utils	signature:(const sigc::slot<void> & slot)
main_context_invoke_func	src/utils.cpp	/^      gboolean main_context_invoke_func(gpointer data)$/;"	f	namespace:gnote::utils::__anon10	signature:(gpointer data)
make_actions	src/searchnoteswidget.cpp	/^void SearchNotesWidget::make_actions()$/;"	f	class:gnote::SearchNotesWidget	signature:()
make_actions	src/searchnoteswidget.hpp	/^  void make_actions();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
make_addins_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_addins_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_addins_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_addins_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
make_app_actions	src/actionmanager.cpp	/^  void ActionManager::make_app_actions()$/;"	f	class:gnote::ActionManager	signature:()
make_app_actions	src/actionmanager.hpp	/^  void make_app_actions();$/;"	p	class:gnote::ActionManager	access:private	signature:()
make_app_actions	src/gnote.cpp	/^  void Gnote::make_app_actions()$/;"	f	class:gnote::Gnote	signature:()
make_app_actions	src/gnote.hpp	/^  void make_app_actions();$/;"	p	class:gnote::Gnote	access:private	signature:()
make_app_menu	src/gnote.cpp	/^  void Gnote::make_app_menu()$/;"	f	class:gnote::Gnote	signature:()
make_app_menu	src/gnote.hpp	/^  void make_app_menu();$/;"	p	class:gnote::Gnote	access:private	signature:()
make_app_menu_items	src/actionmanager.cpp	/^  void ActionManager::make_app_menu_items()$/;"	f	class:gnote::ActionManager	signature:()
make_app_menu_items	src/actionmanager.hpp	/^  void make_app_menu_items();$/;"	p	class:gnote::ActionManager	access:private	signature:()
make_app_menu_section	src/actionmanager.cpp	/^  Glib::RefPtr<Gio::Menu> ActionManager::make_app_menu_section(int sec) const$/;"	f	class:gnote::ActionManager	signature:(int sec) const
make_app_menu_section	src/actionmanager.hpp	/^  Glib::RefPtr<Gio::Menu> make_app_menu_section(int section) const;$/;"	p	class:gnote::ActionManager	access:private	signature:(int section) const
make_check_button	src/preferencesdialog.cpp	/^  Gtk::CheckButton *PreferencesDialog::make_check_button (const std::string & label_text)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & label_text)
make_check_button	src/preferencesdialog.hpp	/^  Gtk::CheckButton *make_check_button (const std::string & label_text);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & label_text)
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
make_editing_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_editing_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_editing_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_editing_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
make_font_button	src/preferencesdialog.cpp	/^  Gtk::Button *PreferencesDialog::make_font_button ()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_font_button	src/preferencesdialog.hpp	/^  Gtk::Button *make_font_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
make_header_bar	src/recentchanges.cpp	/^  void NoteRecentChanges::make_header_bar()$/;"	f	class:gnote::NoteRecentChanges	signature:()
make_header_bar	src/recentchanges.hpp	/^  void make_header_bar();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
make_hotkeys_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_hotkeys_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_hotkeys_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_hotkeys_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
make_image	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::make_image()$/;"	f	class:bugzilla::BugzillaLink	signature:()
make_image	src/addins/bugzilla/bugzillalink.hpp	/^  void make_image();$/;"	p	class:bugzilla::BugzillaLink	access:private	signature:()
make_label	src/preferencesdialog.cpp	/^  Gtk::Label *PreferencesDialog::make_label (const std::string & label_text\/*, params object[] args*\/)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & label_text )
make_label	src/preferencesdialog.hpp	/^  Gtk::Label *make_label (const std::string & label_text\/*, params object[] args*\/);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & label_text )
make_links_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_links_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_links_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_links_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
make_menu_items	src/recentchanges.cpp	/^  std::vector<Gtk::MenuItem*> & NoteRecentChanges::make_menu_items(std::vector<Gtk::MenuItem*> & items,$/;"	f	class:gnote::NoteRecentChanges	signature:(std::vector<Gtk::MenuItem*> & items, const std::vector<Glib::RefPtr<Gtk::Action> > & actions)
make_menu_items	src/recentchanges.hpp	/^  std::vector<Gtk::MenuItem*> & make_menu_items(std::vector<Gtk::MenuItem*> & items,$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(std::vector<Gtk::MenuItem*> & items, const std::vector<Glib::RefPtr<Gtk::Action> > & actions)
make_new_file_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::make_new_file_name() const$/;"	f	class:gnote::NoteManagerBase	signature:() const
make_new_file_name	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::make_new_file_name(const Glib::ustring & guid) const$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & guid) const
make_new_file_name	src/notemanagerbase.hpp	/^  Glib::ustring make_new_file_name() const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:() const
make_new_file_name	src/notemanagerbase.hpp	/^  Glib::ustring make_new_file_name(const Glib::ustring & guid) const;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & guid) const
make_notebooks_pane	src/searchnoteswidget.cpp	/^Gtk::Widget *SearchNotesWidget::make_notebooks_pane()$/;"	f	class:gnote::SearchNotesWidget	signature:()
make_notebooks_pane	src/searchnoteswidget.hpp	/^  Gtk::Widget *make_notebooks_pane();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
make_recent_tree	src/searchnoteswidget.cpp	/^void SearchNotesWidget::make_recent_tree()$/;"	f	class:gnote::SearchNotesWidget	signature:()
make_recent_tree	src/searchnoteswidget.hpp	/^  void make_recent_tree();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
make_search_box	src/recentchanges.cpp	/^  void NoteRecentChanges::make_search_box()$/;"	f	class:gnote::NoteRecentChanges	signature:()
make_search_box	src/recentchanges.hpp	/^  void make_search_box();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
make_sync_pane	src/preferencesdialog.cpp	/^  Gtk::Widget *PreferencesDialog::make_sync_pane()$/;"	f	class:gnote::PreferencesDialog	signature:()
make_sync_pane	src/preferencesdialog.hpp	/^  Gtk::Widget *make_sync_pane();$/;"	p	class:gnote::PreferencesDialog	access:public	signature:()
make_template_bar	src/notewindow.cpp	/^  Gtk::Grid * NoteWindow::make_template_bar()$/;"	f	class:gnote::NoteWindow	signature:()
make_template_bar	src/notewindow.hpp	/^  Gtk::Grid * make_template_bar();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
make_toolbar	src/notewindow.cpp	/^  Gtk::Grid *NoteWindow::make_toolbar()$/;"	f	class:gnote::NoteWindow	signature:()
make_toolbar	src/notewindow.hpp	/^  Gtk::Grid *make_toolbar();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
make_tray_notes_menu	src/tray.cpp	/^  Gtk::Menu * Tray::make_tray_notes_menu()$/;"	f	class:gnote::Tray	signature:()
make_tray_notes_menu	src/tray.hpp	/^  Gtk::Menu * make_tray_notes_menu();$/;"	p	class:gnote::Tray	access:public	signature:()
make_uri	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^std::string NoteDirectoryWatcherApplicationAddin::make_uri(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
make_uri	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static std::string make_uri(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
make_window_menu	src/recentchanges.cpp	/^  Gtk::Menu *NoteRecentChanges::make_window_menu(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)$/;"	f	class:gnote::NoteRecentChanges	signature:(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)
make_window_menu	src/recentchanges.hpp	/^  Gtk::Menu *make_window_menu(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(Gtk::Button *button, const std::vector<Gtk::MenuItem*> & items)
make_write_failure_msg	src/sharp/xmlwriter.cpp	/^  std::string make_write_failure_msg(const std::string & caller, const std::string & fail_func)$/;"	f	namespace:__anon5	signature:(const std::string & caller, const std::string & fail_func)
man1dir	data/Makefile	/^man1dir = $(mandir)\/man1$/;"	m
man_MANS	data/Makefile	/^man_MANS = gnote.1$/;"	m
manager	src/noteaddin.hpp	/^  NoteManagerBase & manager() const$/;"	f	class:gnote::NoteAddin	access:public	signature:() const
manager	src/notebase.hpp	/^  NoteManagerBase & manager()$/;"	f	class:gnote::NoteBase	access:public	signature:()
manager	src/notebase.hpp	/^  const NoteManagerBase & manager() const$/;"	f	class:gnote::NoteBase	access:public	signature:() const
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	data/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	data/appdata/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	data/icons/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	help/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libtomboy/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/backlinks/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/bugzilla/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/exporttogtg/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/exporttohtml/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/filesystemsyncservice/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/fixedwidth/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/inserttimestamp/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/notedirectorywatcher/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/noteoftheday/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/printnotes/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/readonly/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/replacetitle/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/specialnotes/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/statistics/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/stickynoteimport/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/tableofcontents/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/todo/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/tomboyimport/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/underline/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/addins/webdavsyncservice/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	src/dbus/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
map_delete_all_second	src/sharp/map.hpp	/^  void map_delete_all_second(const _Map & m)$/;"	f	namespace:sharp	signature:(const _Map & m)
map_get_keys	src/sharp/map.hpp	/^  void map_get_keys(const _Map & m, std::vector<typename _Map::mapped_type> & l) $/;"	f	namespace:sharp	signature:(const _Map & m, std::vector<typename _Map::mapped_type> & l)
map_get_values	src/sharp/map.hpp	/^  void map_get_values(const _Map & m, std::list<typename _Map::mapped_type> & l) $/;"	f	namespace:sharp	signature:(const _Map & m, std::list<typename _Map::mapped_type> & l)
mapping	libtomboy/eggaccelerators.c	/^  EggVirtualModifierType mapping[EGG_MODMAP_ENTRY_LAST];$/;"	m	struct:__anon3	file:	access:public
mark_set_event	src/notebuffer.cpp	/^  void NoteBuffer::mark_set_event(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)
mark_set_event	src/notebuffer.hpp	/^  void mark_set_event(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter &,const Glib::RefPtr<Gtk::TextBuffer::Mark> &)
markup_label	src/notewindow.cpp	/^  void NoteTextMenu::markup_label (Gtk::MenuItem & item)$/;"	f	class:gnote::NoteTextMenu	signature:(Gtk::MenuItem & item)
markup_label	src/notewindow.hpp	/^  static void markup_label (Gtk::MenuItem & item);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(Gtk::MenuItem & item)
matches_column_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::matches_column_data_func(Gtk::CellRenderer * cell,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * cell, const Gtk::TreeIter & iter)
matches_column_data_func	src/searchnoteswidget.hpp	/^  void matches_column_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
max_length	src/trie.hpp	/^  size_t max_length() const$/;"	f	class:gnote::TrieTree	access:public	signature:() const
menu_opens_upward	src/tray.cpp	/^  bool TrayIcon::menu_opens_upward()$/;"	f	class:gnote::TrayIcon	signature:()
menu_opens_upward	src/tray.hpp	/^  bool menu_opens_upward();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
menu_opens_upward	src/tray.hpp	/^  virtual bool menu_opens_upward() = 0;$/;"	p	class:gnote::IGnoteTray	access:public	signature:()
menu_shown	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::menu_shown()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
menu_shown	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void menu_shown();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
menu_shown	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::menu_shown()$/;"	f	class:underline::UnderlineMenuItem	signature:()
menu_shown	src/addins/underline/underlinemenuitem.hpp	/^  void menu_shown();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
merge	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::merge (EditAction * action)$/;"	f	class:bugzilla::InsertBugAction	signature:(EditAction * action)
merge	src/addins/bugzilla/insertbugaction.hpp	/^  void merge (EditAction * action);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(EditAction * action)
merge	src/undo.cpp	/^  void ChangeDepthAction::merge (EditAction * )$/;"	f	class:gnote::ChangeDepthAction	signature:(EditAction * )
merge	src/undo.cpp	/^  void EraseAction::merge (EditAction * action)$/;"	f	class:gnote::EraseAction	signature:(EditAction * action)
merge	src/undo.cpp	/^  void InsertAction::merge (EditAction * action)$/;"	f	class:gnote::InsertAction	signature:(EditAction * action)
merge	src/undo.cpp	/^  void InsertBulletAction::merge (EditAction * )$/;"	f	class:gnote::InsertBulletAction	signature:(EditAction * )
merge	src/undo.cpp	/^  void TagApplyAction::merge (EditAction * )$/;"	f	class:gnote::TagApplyAction	signature:(EditAction * )
merge	src/undo.cpp	/^  void TagRemoveAction::merge (EditAction * )$/;"	f	class:gnote::TagRemoveAction	signature:(EditAction * )
merge	src/undo.hpp	/^  virtual void merge (EditAction * action) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(EditAction * action)
message_text	src/synchronization/syncdialog.cpp	/^  void message_text(const std::string & value)$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:(const std::string & value)
message_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::message_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
message_text	src/synchronization/syncdialog.hpp	/^    void message_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
metadata_change_date	src/notebase.cpp	/^const sharp::DateTime & NoteBase::metadata_change_date() const$/;"	f	class:gnote::NoteBase	signature:() const
metadata_change_date	src/notebase.hpp	/^  const sharp::DateTime & metadata_change_date() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
metadata_change_date	src/notebase.hpp	/^  const sharp::DateTime & metadata_change_date() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
metadata_change_date	src/notebase.hpp	/^  sharp::DateTime & metadata_change_date()$/;"	f	class:gnote::NoteData	access:public	signature:()
microseconds	src/sharp/timespan.hpp	/^    int microseconds() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
migrate_images	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::migrate_images($/;"	f	class:bugzilla::BugzillaNoteAddin	signature:( const std::string & old_images_dir)
migrate_images	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void migrate_images(const std::string & old_images_dir);$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const std::string & old_images_dir)
migrate_notes	src/notemanager.cpp	/^  void NoteManager::migrate_notes(const std::string & old_note_dir)$/;"	f	class:gnote::NoteManager	signature:(const std::string & old_note_dir)
migrate_notes	src/notemanagerbase.cpp	/^void NoteManagerBase::migrate_notes(const std::string & \/*old_note_dir*\/)$/;"	f	class:gnote::NoteManagerBase	signature:(const std::string & )
migrate_notes	src/notemanagerbase.hpp	/^  virtual void migrate_notes(const std::string & old_note_dir);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const std::string & old_note_dir)
minutes	src/sharp/timespan.hpp	/^    int minutes() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	data/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	data/appdata/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	data/icons/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	help/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libtomboy/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	po/Makefile	/^mkdir_p = $(install_sh) -d$/;"	m
mkdir_p	src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/backlinks/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/bugzilla/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/exporttogtg/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/exporttohtml/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/filesystemsyncservice/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/fixedwidth/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/inserttimestamp/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/notedirectorywatcher/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/noteoftheday/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/printnotes/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/readonly/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/replacetitle/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/specialnotes/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/statistics/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/stickynoteimport/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/tableofcontents/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/todo/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/tomboyimport/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/underline/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/addins/webdavsyncservice/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	src/dbus/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	data/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	data/appdata/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	data/icons/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	help/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libtomboy/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/backlinks/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/bugzilla/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/exporttogtg/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/exporttohtml/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/filesystemsyncservice/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/fixedwidth/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/inserttimestamp/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/notedirectorywatcher/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/noteoftheday/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/printnotes/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/readonly/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/replacetitle/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/specialnotes/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/statistics/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/stickynoteimport/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/tableofcontents/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/todo/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/tomboyimport/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/underline/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/addins/webdavsyncservice/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	src/dbus/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
modifiers	libtomboy/tomboykeybinder.c	/^	uint                  modifiers;$/;"	m	struct:_Binding	file:	access:public
modify_font_from_string	src/noteeditor.cpp	/^  void NoteEditor::modify_font_from_string (const std::string & fontString)$/;"	f	class:gnote::NoteEditor	signature:(const std::string & fontString)
modify_font_from_string	src/noteeditor.hpp	/^  void modify_font_from_string (const std::string & fontString);$/;"	p	class:gnote::NoteEditor	access:private	signature:(const std::string & fontString)
month	src/sharp/datetime.cpp	/^  int DateTime::month() const$/;"	f	class:sharp::DateTime	signature:() const
month	src/sharp/datetime.hpp	/^  int month() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
mount_fuse	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::mount_fuse(bool useStoredValues)$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:(bool useStoredValues)
mount_fuse	src/synchronization/fusesyncserviceaddin.hpp	/^  bool mount_fuse(bool useStoredValues);$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:(bool useStoredValues)
move_next	src/utils.cpp	/^    bool TextTagEnumerator::move_next()$/;"	f	class:gnote::utils::TextTagEnumerator	signature:()
move_next	src/utils.hpp	/^      bool move_next();$/;"	p	class:gnote::utils::TextTagEnumerator	access:public	signature:()
move_note_to_notebook	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::move_note_to_notebook (const Note::Ptr & note, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(const Note::Ptr & note, const Notebook::Ptr & notebook)
move_note_to_notebook	src/notebooks/notebookmanager.hpp	/^  bool move_note_to_notebook (const Note::Ptr &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const Note::Ptr &, const Notebook::Ptr &)
move_to_next_attribute	src/sharp/xmlreader.cpp	/^  bool XmlReader::move_to_next_attribute()$/;"	f	class:sharp::XmlReader	signature:()
move_to_next_attribute	src/sharp/xmlreader.hpp	/^  bool           move_to_next_attribute();$/;"	p	class:sharp::XmlReader	access:public	signature:()
name	src/addininfo.hpp	/^  const std::string & name() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
name	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^std::string FileSystemSyncServiceAddin::name()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
name	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::name()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
name	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          name;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
name	src/synchronization/syncserviceaddin.hpp	/^    virtual std::string name() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
name	src/tag.hpp	/^    const std::string & name() const$/;"	f	class:gnote::Tag	access:public	signature:() const
name_cell_data_func	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::name_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
name_cell_data_func	src/sharp/addinstreemodel.hpp	/^  void name_cell_data_func(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter);$/;"	p	class:sharp::AddinsTreeModel	access:private	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
name_pixbuf_cell_data_func	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::name_pixbuf_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
name_pixbuf_cell_data_func	src/sharp/addinstreemodel.hpp	/^  void name_pixbuf_cell_data_func(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter);$/;"	p	class:sharp::AddinsTreeModel	access:private	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
needs_execute	src/gnote.cpp	/^  bool GnoteCommandLine::needs_execute() const$/;"	f	class:gnote::GnoteCommandLine	signature:() const
needs_execute	src/gnote.hpp	/^  bool        needs_execute() const;$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:() const
needs_immediate_execute	src/gnote.cpp	/^  bool GnoteCommandLine::needs_immediate_execute() const$/;"	f	class:gnote::GnoteCommandLine	signature:() const
needs_immediate_execute	src/gnote.hpp	/^  bool        needs_immediate_execute() const;$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:() const
new_main_window	src/gnote.cpp	/^  MainWindow & Gnote::new_main_window()$/;"	f	class:gnote::Gnote	signature:()
new_main_window	src/ignote.hpp	/^  virtual MainWindow & new_main_window() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
new_note	src/mainwindow.hpp	/^  virtual void new_note() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
new_note	src/recentchanges.cpp	/^  void NoteRecentChanges::new_note()$/;"	f	class:gnote::NoteRecentChanges	signature:()
new_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::new_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
new_note	src/searchnoteswidget.hpp	/^  void new_note();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
new_toc_menu_item	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^Gtk::ImageMenuItem * new_toc_menu_item ()$/;"	f	namespace:tableofcontents	signature:()
no_matches_found_action	src/searchnoteswidget.cpp	/^void SearchNotesWidget::no_matches_found_action()$/;"	f	class:gnote::SearchNotesWidget	signature:()
no_matches_found_action	src/searchnoteswidget.hpp	/^  void no_matches_found_action();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
noinst_DATA	data/Makefile	/^noinst_DATA = $/;"	m
noinst_DATA	data/icons/Makefile	/^noinst_DATA = \\$/;"	m
noinst_LTLIBRARIES	libtomboy/Makefile	/^noinst_LTLIBRARIES = libtomboy.la$/;"	m
normalize	src/notebooks/notebook.cpp	/^  std::string Notebook::normalize(const std::string & s)$/;"	f	class:gnote::notebooks::Notebook	signature:(const std::string & s)
normalize	src/notebooks/notebook.hpp	/^  static std::string normalize(const std::string & s);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const std::string & s)
normalized_name	src/tag.hpp	/^    const std::string & normalized_name() const$/;"	f	class:gnote::Tag	access:public	signature:() const
note	src/notebuffer.hpp	/^  Note & note() const$/;"	f	class:gnote::NoteBuffer	access:public	signature:() const
note	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Note::Ptr> note;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
note_added_cb	tools/DBusClientTest.py	/^    def note_added_cb(self, uid):$/;"	m	class:TestApp	access:public
note_changed_timeout	src/notewindow.hpp	/^  void note_changed_timeout();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
note_conflict_detected	src/synchronization/silentui.cpp	/^  void SilentUI::note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	f	class:gnote::sync::SilentUI	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> &)
note_conflict_detected	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles)
note_conflict_detected	src/synchronization/syncui.hpp	/^    virtual void note_conflict_detected(const Note::Ptr & localConflictNote,$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles)
note_conflict_detected_	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_conflict_detected_($/;"	f	class:gnote::sync::SyncDialog	signature:( const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles, SyncTitleConflictResolution savedBehavior, SyncTitleConflictResolution resolution, std::exception **mainThreadException)
note_conflict_detected_	src/synchronization/syncdialog.hpp	/^    void note_conflict_detected_(const Note::Ptr & localConflictNote,$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr & localConflictNote, NoteUpdate remoteNote, const std::list<std::string> & noteUpdateTitles, SyncTitleConflictResolution savedBehavior, SyncTitleConflictResolution resolution, std::exception **mainThreadException)
note_create_new	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::note_create_new(const Glib::ustring & title, const Glib::ustring & file_name)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
note_create_new	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) = 0;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
note_create_new	src/test/testnotemanager.cpp	/^gnote::NoteBase::Ptr NoteManager::note_create_new(const Glib::ustring & title, const Glib::ustring & file_name)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
note_deleted_cb	tools/DBusClientTest.py	/^    def note_deleted_cb(self, uid, title):$/;"	m	class:TestApp	access:public
note_deleted_handler	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::note_deleted_handler(const NoteBase::Ptr & deletedNote)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & deletedNote)
note_deleted_handler	src/synchronization/gnotesyncclient.hpp	/^    void note_deleted_handler(const NoteBase::Ptr &);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const NoteBase::Ptr &)
note_load	src/notemanager.cpp	/^  NoteBase::Ptr NoteManager::note_load(const Glib::ustring & file_name)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & file_name)
note_load	src/notemanagerbase.hpp	/^  virtual NoteBase::Ptr note_load(const Glib::ustring & file_name) = 0;$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const Glib::ustring & file_name)
note_load	src/test/testnotemanager.cpp	/^gnote::NoteBase::Ptr NoteManager::note_load(const Glib::ustring & file_name)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & file_name)
note_manager	src/applicationaddin.hpp	/^  NoteManager & note_manager() const$/;"	f	class:gnote::ApplicationAddin	access:public	signature:() const
note_manager	src/applicationaddin.hpp	/^  void note_manager(NoteManager & manager)$/;"	f	class:gnote::ApplicationAddin	access:public	signature:(NoteManager & manager)
note_manager	src/notebooks/notebookmanager.hpp	/^  NoteManager & note_manager() const$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:() const
note_mgr	src/synchronization/syncmanager.cpp	/^  NoteManagerBase & SyncManager::note_mgr()$/;"	f	class:gnote::sync::SyncManager	signature:()
note_mgr	src/synchronization/syncmanager.hpp	/^    NoteManagerBase & note_mgr();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
note_path	src/gnote.hpp	/^  const gchar * note_path() const$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:() const
note_save	src/synchronization/syncmanager.cpp	/^  void SyncManager::note_save(const Note::Ptr & note)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & note)
note_save	src/synchronization/syncmanager.hpp	/^    static void note_save(const Note::Ptr & note);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & note)
note_saved_cb	tools/DBusClientTest.py	/^    def note_saved_cb(self, uid):$/;"	m	class:TestApp	access:public
note_synchronized	src/synchronization/syncdialog.cpp	/^void SyncDialog::note_synchronized(const std::string & noteTitle, NoteSyncType type)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & noteTitle, NoteSyncType type)
note_synchronized	src/synchronization/syncui.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const std::string & noteTitle, NoteSyncType type)
note_synchronized_th	src/synchronization/syncui.cpp	/^  void SyncUI::note_synchronized_th(const std::string & noteTitle, NoteSyncType type)$/;"	f	class:gnote::sync::SyncUI	signature:(const std::string & noteTitle, NoteSyncType type)
note_synchronized_th	src/synchronization/syncui.hpp	/^    void note_synchronized_th(const std::string & noteTitle, NoteSyncType type);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const std::string & noteTitle, NoteSyncType type)
notebook_exists	src/notebooks/notebookmanager.cpp	/^    bool NotebookManager::notebook_exists(const std::string & notebookName) const$/;"	f	class:gnote::notebooks::NotebookManager	signature:(const std::string & notebookName) const
notebook_exists	src/notebooks/notebookmanager.hpp	/^  bool notebook_exists(const std::string & notebookName) const;$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(const std::string & notebookName) const
notebook_pixbuf_cell_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::notebook_pixbuf_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
notebook_pixbuf_cell_data_func	src/searchnoteswidget.hpp	/^  void notebook_pixbuf_cell_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
notebook_text_cell_data_func	src/searchnoteswidget.cpp	/^void SearchNotesWidget::notebook_text_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
notebook_text_cell_data_func	src/searchnoteswidget.hpp	/^  void notebook_text_cell_data_func(Gtk::CellRenderer *, const Gtk::TreeIter &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::CellRenderer *, const Gtk::TreeIter &)
notebooks	src/notebooks/createnotebookdialog.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/createnotebookdialog.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebook.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebook.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebookapplicationaddin.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebookapplicationaddin.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebookmanager.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebookmanager.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebookmenuitem.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebookmenuitem.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebooknewnotemenuitem.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebooknewnotemenuitem.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebooknoteaddin.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebooknoteaddin.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/notebookstreeview.cpp	/^  namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/notebookstreeview.hpp	/^  namespace notebooks {$/;"	n	namespace:gnote
notebooks	src/notebooks/specialnotebooks.cpp	/^namespace notebooks {$/;"	n	namespace:gnote	file:
notebooks	src/notebooks/specialnotebooks.hpp	/^namespace notebooks {$/;"	n	namespace:gnote
notedirectorywatcher	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^namespace notedirectorywatcher {$/;"	n	file:
notedirectorywatcher	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^namespace notedirectorywatcher {$/;"	n
notedirectorywatcher	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^namespace notedirectorywatcher {$/;"	n	file:
notedirectorywatcher	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^namespace notedirectorywatcher {$/;"	n
notedirectorywatcher	src/addins/notedirectorywatcher/notedirectorywatcherpreferencesfactory.hpp	/^namespace notedirectorywatcher {$/;"	n
notedirectorywatcher::CHECK_INTERVAL	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^const char *CHECK_INTERVAL = "check-interval";$/;"	m	namespace:notedirectorywatcher	file:
notedirectorywatcher::DECLARE_MODULE	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^DECLARE_MODULE(NoteDirectoryWatcherModule);$/;"	p	namespace:notedirectorywatcher	signature:(NoteDirectoryWatcherModule)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^class NoteDirectoryWatcherApplicationAddin$/;"	c	namespace:notedirectorywatcher	inherits:gnote::ApplicationAddin
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^NoteDirectoryWatcherApplicationAddin::NoteDirectoryWatcherApplicationAddin()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::NoteDirectoryWatcherApplicationAddin	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  NoteDirectoryWatcherApplicationAddin();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::add_or_update_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::add_or_update_note(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::add_or_update_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void add_or_update_note(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::create	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static NoteDirectoryWatcherApplicationAddin *create()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::delete_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::delete_note(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::delete_note	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void delete_note(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::get_id	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^std::string NoteDirectoryWatcherApplicationAddin::get_id(const std::string & path)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & path)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::get_id	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static std::string get_id(const std::string & path);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & path)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_file_system_change_event	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::handle_file_system_change_event($/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:( const Glib::RefPtr<Gio::File> & file, const Glib::RefPtr<Gio::File> &, Gio::FileMonitorEvent event_type)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_file_system_change_event	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void handle_file_system_change_event(const Glib::RefPtr<Gio::File> & file,$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::RefPtr<Gio::File> & file, const Glib::RefPtr<Gio::File> & other_file, Gio::FileMonitorEvent event_type)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_note_saved	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::handle_note_saved(const gnote::NoteBase::Ptr & note)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const gnote::NoteBase::Ptr & note)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_note_saved	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void handle_note_saved(const gnote::NoteBase::Ptr &);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const gnote::NoteBase::Ptr &)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_timeout	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^bool NoteDirectoryWatcherApplicationAddin::handle_timeout()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::handle_timeout	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool handle_timeout();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::initialize	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::initialize()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::initialized	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^bool NoteDirectoryWatcherApplicationAddin::initialized()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  int m_check_interval;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_file_change_records	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  std::map<std::string, NoteFileChangeRecord> m_file_change_records;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_file_system_watcher	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  Glib::RefPtr<Gio::FileMonitor> m_file_system_watcher;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_initialized	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_lock	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  Glib::Threads::Mutex m_lock;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_note_save_times	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  std::map<std::string, sharp::DateTime> m_note_save_times;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_signal_changed_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_changed_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_signal_note_saved_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_note_saved_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::m_signal_settings_changed_cid	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sigc::connection m_signal_settings_changed_cid;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::make_uri	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^std::string NoteDirectoryWatcherApplicationAddin::make_uri(const std::string & note_id)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::make_uri	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  static std::string make_uri(const std::string & note_id);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const std::string & note_id)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::on_settings_changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::on_settings_changed(const Glib::ustring & key)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const Glib::ustring & key)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::on_settings_changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::ustring & key)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::sanitize_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::sanitize_check_interval(const Glib::RefPtr<Gio::Settings> & settings)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const Glib::RefPtr<Gio::Settings> & settings)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::sanitize_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void sanitize_check_interval(const Glib::RefPtr<Gio::Settings> & settings);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::RefPtr<Gio::Settings> & settings)
notedirectorywatcher::NoteDirectoryWatcherApplicationAddin::shutdown	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::shutdown()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
notedirectorywatcher::NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^class NoteDirectoryWatcherModule$/;"	c	namespace:notedirectorywatcher	inherits:sharp::DynamicModule
notedirectorywatcher::NoteDirectoryWatcherModule::NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^NoteDirectoryWatcherModule::NoteDirectoryWatcherModule()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherModule	signature:()
notedirectorywatcher::NoteDirectoryWatcherModule::NoteDirectoryWatcherModule	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  NoteDirectoryWatcherModule();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherModule	access:public	signature:()
notedirectorywatcher::NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^class NoteDirectoryWatcherPreferences$/;"	c	namespace:notedirectorywatcher	inherits:Gtk::Grid
notedirectorywatcher::NoteDirectoryWatcherPreferences::NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^NoteDirectoryWatcherPreferences::NoteDirectoryWatcherPreferences(gnote::NoteManager &)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	signature:(gnote::NoteManager &)
notedirectorywatcher::NoteDirectoryWatcherPreferences::NoteDirectoryWatcherPreferences	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  NoteDirectoryWatcherPreferences(gnote::NoteManager &);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:public	signature:(gnote::NoteManager &)
notedirectorywatcher::NoteDirectoryWatcherPreferences::m_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  Gtk::SpinButton m_check_interval;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:private
notedirectorywatcher::NoteDirectoryWatcherPreferences::on_interval_changed	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^void NoteDirectoryWatcherPreferences::on_interval_changed()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	signature:()
notedirectorywatcher::NoteDirectoryWatcherPreferences::on_interval_changed	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  void on_interval_changed();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:private	signature:()
notedirectorywatcher::NoteDirectoryWatcherPreferencesFactory	src/addins/notedirectorywatcher/notedirectorywatcherpreferencesfactory.hpp	/^class NoteDirectoryWatcherPreferencesFactory$/;"	c	namespace:notedirectorywatcher	inherits:gnote::AddinPreferenceFactory
notedirectorywatcher::NoteFileChangeRecord	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^struct NoteFileChangeRecord$/;"	s	namespace:notedirectorywatcher
notedirectorywatcher::NoteFileChangeRecord::changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool changed;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
notedirectorywatcher::NoteFileChangeRecord::deleted	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  bool deleted;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
notedirectorywatcher::NoteFileChangeRecord::last_change	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  sharp::DateTime last_change;$/;"	m	struct:notedirectorywatcher::NoteFileChangeRecord	access:public
notedirectorywatcher::SCHEMA_NOTE_DIRECTORY_WATCHER	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^const char *SCHEMA_NOTE_DIRECTORY_WATCHER = "org.gnome.gnote.note-directory-watcher";$/;"	m	namespace:notedirectorywatcher	file:
notedirectorywatcher_la_LIBADD	src/addins/notedirectorywatcher/Makefile	/^notedirectorywatcher_la_LIBADD =$/;"	m
notedirectorywatcher_la_OBJECTS	src/addins/notedirectorywatcher/Makefile	/^notedirectorywatcher_la_OBJECTS =  \\$/;"	m
notedirectorywatcher_la_SOURCES	src/addins/notedirectorywatcher/Makefile	/^notedirectorywatcher_la_SOURCES = \\$/;"	m
notemanagertest_DEPENDENCIES	src/Makefile	/^notemanagertest_DEPENDENCIES = $(am__DEPENDENCIES_2)$/;"	m
notemanagertest_LDADD	src/Makefile	/^notemanagertest_LDADD = $(GNOTE_LIBS)$/;"	m
notemanagertest_OBJECTS	src/Makefile	/^notemanagertest_OBJECTS = $(am_notemanagertest_OBJECTS)$/;"	m
notemanagertest_SOURCES	src/Makefile	/^notemanagertest_SOURCES = test\/notemanagertest.cpp \\$/;"	m
noteoftheday	src/addins/noteoftheday/noteoftheday.cpp	/^namespace noteoftheday {$/;"	n	file:
noteoftheday	src/addins/noteoftheday/noteoftheday.hpp	/^namespace noteoftheday {$/;"	n
noteoftheday	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^namespace noteoftheday {$/;"	n	file:
noteoftheday	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^namespace noteoftheday {$/;"	n
noteoftheday	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^namespace noteoftheday {$/;"	n	file:
noteoftheday	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^namespace noteoftheday {$/;"	n
noteoftheday	src/addins/noteoftheday/noteofthedaypreferencesfactory.hpp	/^namespace noteoftheday {$/;"	n
noteoftheday::DECLARE_MODULE	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^DECLARE_MODULE(NoteOfTheDayModule);$/;"	p	namespace:noteoftheday	file:	signature:(NoteOfTheDayModule)
noteoftheday::NoteOfTheDay	src/addins/noteoftheday/noteoftheday.hpp	/^class NoteOfTheDay$/;"	c	namespace:noteoftheday
noteoftheday::NoteOfTheDay::cleanup_old	src/addins/noteoftheday/noteoftheday.cpp	/^void NoteOfTheDay::cleanup_old(gnote::NoteManager & manager)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(gnote::NoteManager & manager)
noteoftheday::NoteOfTheDay::cleanup_old	src/addins/noteoftheday/noteoftheday.hpp	/^  static void cleanup_old(gnote::NoteManager & manager);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(gnote::NoteManager & manager)
noteoftheday::NoteOfTheDay::create	src/addins/noteoftheday/noteoftheday.cpp	/^gnote::NoteBase::Ptr NoteOfTheDay::create(gnote::NoteManager & manager,$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(gnote::NoteManager & manager, const Glib::Date & date)
noteoftheday::NoteOfTheDay::create	src/addins/noteoftheday/noteoftheday.hpp	/^  static gnote::NoteBase::Ptr create(gnote::NoteManager & manager,$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(gnote::NoteManager & manager, const Glib::Date & date)
noteoftheday::NoteOfTheDay::get_content	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_content($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const Glib::Date & date, const gnote::NoteManager & manager)
noteoftheday::NoteOfTheDay::get_content	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_content(const Glib::Date & date,$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const Glib::Date & date, const gnote::NoteManager & manager)
noteoftheday::NoteOfTheDay::get_content_without_title	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_content_without_title($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const std::string & content)
noteoftheday::NoteOfTheDay::get_content_without_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_content_without_title($/;"	p	class:noteoftheday::NoteOfTheDay	access:private	signature:( const std::string & content)
noteoftheday::NoteOfTheDay::get_note_by_date	src/addins/noteoftheday/noteoftheday.cpp	/^gnote::NoteBase::Ptr NoteOfTheDay::get_note_by_date($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( gnote::NoteManager & manager, const Glib::Date & date)
noteoftheday::NoteOfTheDay::get_note_by_date	src/addins/noteoftheday/noteoftheday.hpp	/^  static gnote::NoteBase::Ptr get_note_by_date($/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:( gnote::NoteManager & manager, const Glib::Date & date)
noteoftheday::NoteOfTheDay::get_template_content	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_template_content($/;"	f	class:noteoftheday::NoteOfTheDay	signature:( const std::string & title)
noteoftheday::NoteOfTheDay::get_template_content	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_template_content($/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:( const std::string & title)
noteoftheday::NoteOfTheDay::get_title	src/addins/noteoftheday/noteoftheday.cpp	/^std::string NoteOfTheDay::get_title(const Glib::Date & date)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(const Glib::Date & date)
noteoftheday::NoteOfTheDay::get_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static std::string get_title(const Glib::Date & date);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const Glib::Date & date)
noteoftheday::NoteOfTheDay::has_changed	src/addins/noteoftheday/noteoftheday.cpp	/^bool NoteOfTheDay::has_changed(const gnote::NoteBase::Ptr & note)$/;"	f	class:noteoftheday::NoteOfTheDay	signature:(const gnote::NoteBase::Ptr & note)
noteoftheday::NoteOfTheDay::has_changed	src/addins/noteoftheday/noteoftheday.hpp	/^  static bool has_changed(const gnote::NoteBase::Ptr & note);$/;"	p	class:noteoftheday::NoteOfTheDay	access:public	signature:(const gnote::NoteBase::Ptr & note)
noteoftheday::NoteOfTheDay::s_template_title	src/addins/noteoftheday/noteoftheday.cpp	/^const Glib::ustring NoteOfTheDay::s_template_title$/;"	m	class:noteoftheday::NoteOfTheDay	file:
noteoftheday::NoteOfTheDay::s_template_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static const Glib::ustring s_template_title;$/;"	m	class:noteoftheday::NoteOfTheDay	access:public
noteoftheday::NoteOfTheDay::s_title_prefix	src/addins/noteoftheday/noteoftheday.cpp	/^const Glib::ustring NoteOfTheDay::s_title_prefix$/;"	m	class:noteoftheday::NoteOfTheDay	file:
noteoftheday::NoteOfTheDay::s_title_prefix	src/addins/noteoftheday/noteoftheday.hpp	/^  static const Glib::ustring s_title_prefix;$/;"	m	class:noteoftheday::NoteOfTheDay	access:private
noteoftheday::NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^class NoteOfTheDayApplicationAddin$/;"	c	namespace:noteoftheday	inherits:gnote::ApplicationAddin
noteoftheday::NoteOfTheDayApplicationAddin::IFACE_NAME	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^const char * NoteOfTheDayApplicationAddin::IFACE_NAME$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	file:
noteoftheday::NoteOfTheDayApplicationAddin::IFACE_NAME	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
noteoftheday::NoteOfTheDayApplicationAddin::NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayApplicationAddin::NoteOfTheDayApplicationAddin()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  NoteOfTheDayApplicationAddin();$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::check_new_day	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::check_new_day() const$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:() const
noteoftheday::NoteOfTheDayApplicationAddin::check_new_day	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  void check_new_day() const;$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private	signature:() const
noteoftheday::NoteOfTheDayApplicationAddin::create	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  static NoteOfTheDayApplicationAddin * create()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::initialize	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::initialize()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::initialized	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^bool NoteOfTheDayApplicationAddin::initialized()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::m_initialized	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private
noteoftheday::NoteOfTheDayApplicationAddin::m_timeout	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  sigc::connection m_timeout;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:private
noteoftheday::NoteOfTheDayApplicationAddin::override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
noteoftheday::NoteOfTheDayApplicationAddin::override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
noteoftheday::NoteOfTheDayApplicationAddin::override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
noteoftheday::NoteOfTheDayApplicationAddin::shutdown	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::shutdown()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::~NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayApplicationAddin::~NoteOfTheDayApplicationAddin()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
noteoftheday::NoteOfTheDayApplicationAddin::~NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual ~NoteOfTheDayApplicationAddin();$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public	signature:()
noteoftheday::NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^class NoteOfTheDayModule$/;"	c	namespace:noteoftheday	inherits:sharp::DynamicModule
noteoftheday::NoteOfTheDayModule::NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayModule::NoteOfTheDayModule()$/;"	f	class:noteoftheday::NoteOfTheDayModule	signature:()
noteoftheday::NoteOfTheDayModule::NoteOfTheDayModule	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  NoteOfTheDayModule();$/;"	p	class:noteoftheday::NoteOfTheDayModule	access:public	signature:()
noteoftheday::NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^class NoteOfTheDayPreferences$/;"	c	namespace:noteoftheday	inherits:Gtk::Grid
noteoftheday::NoteOfTheDayPreferences::NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^NoteOfTheDayPreferences::NoteOfTheDayPreferences(gnote::NoteManager & manager)$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:(gnote::NoteManager & manager)
noteoftheday::NoteOfTheDayPreferences::NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  NoteOfTheDayPreferences(gnote::NoteManager &);$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:public	signature:(gnote::NoteManager &)
noteoftheday::NoteOfTheDayPreferences::m_label	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  Gtk::Label m_label;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
noteoftheday::NoteOfTheDayPreferences::m_note_manager	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  gnote::NoteManager & m_note_manager;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
noteoftheday::NoteOfTheDayPreferences::m_open_template_button	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  Gtk::Button m_open_template_button;$/;"	m	class:noteoftheday::NoteOfTheDayPreferences	access:private
noteoftheday::NoteOfTheDayPreferences::open_template_button_clicked	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^void NoteOfTheDayPreferences::open_template_button_clicked() const$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:() const
noteoftheday::NoteOfTheDayPreferences::open_template_button_clicked	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  void open_template_button_clicked() const;$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:private	signature:() const
noteoftheday::NoteOfTheDayPreferences::~NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^NoteOfTheDayPreferences::~NoteOfTheDayPreferences()$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:()
noteoftheday::NoteOfTheDayPreferences::~NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  ~NoteOfTheDayPreferences();$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:public	signature:()
noteoftheday::NoteOfTheDayPreferencesFactory	src/addins/noteoftheday/noteofthedaypreferencesfactory.hpp	/^class NoteOfTheDayPreferencesFactory$/;"	c	namespace:noteoftheday	inherits:gnote::AddinPreferenceFactory
noteoftheday_la_LIBADD	src/addins/noteoftheday/Makefile	/^noteoftheday_la_LIBADD =$/;"	m
noteoftheday_la_OBJECTS	src/addins/noteoftheday/Makefile	/^noteoftheday_la_OBJECTS = $(am_noteoftheday_la_OBJECTS)$/;"	m
noteoftheday_la_SOURCES	src/addins/noteoftheday/Makefile	/^noteoftheday_la_SOURCES = \\$/;"	m
notes_dir	src/notemanagerbase.hpp	/^  const Glib::ustring & notes_dir() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
notes_widget	src/searchnoteswidget.hpp	/^  Gtk::Widget & notes_widget() const$/;"	f	class:gnote::SearchNotesWidget	access:public	signature:() const
notetest_DEPENDENCIES	src/Makefile	/^notetest_DEPENDENCIES = $(am__DEPENDENCIES_2)$/;"	m
notetest_LDADD	src/Makefile	/^notetest_LDADD = $(GNOTE_LIBS) -lX11$/;"	m
notetest_OBJECTS	src/Makefile	/^notetest_OBJECTS = $(am_notetest_OBJECTS)$/;"	m
notetest_SOURCES	src/Makefile	/^notetest_SOURCES = test\/notetest.cpp$/;"	m
noteutils	src/note.cpp	/^  namespace noteutils {$/;"	n	namespace:gnote	file:
noteutils	src/note.hpp	/^namespace noteutils {$/;"	n	namespace:gnote
now	src/sharp/datetime.cpp	/^  DateTime DateTime::now()$/;"	f	class:sharp::DateTime	signature:()
now	src/sharp/datetime.hpp	/^  static DateTime now();$/;"	p	class:sharp::DateTime	access:public	signature:()
num_lock_mask	libtomboy/tomboykeybinder.c	/^static guint num_lock_mask, caps_lock_mask, scroll_lock_mask;$/;"	v	file:
obj	src/base/singleton.hpp	/^    static T & obj()$/;"	f	class:base::Singleton	access:public	signature:()
obj	src/base/singleton.hpp	/^    static T & obj(T * inst)$/;"	f	class:base::Singleton	access:private	signature:(T * inst)
old_note_dir	src/ignote.cpp	/^std::string IGnote::old_note_dir()$/;"	f	class:gnote::IGnote	signature:()
old_note_dir	src/ignote.hpp	/^  static std::string old_note_dir();$/;"	p	class:gnote::IGnote	access:public	signature:()
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	data/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	data/appdata/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	data/icons/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	help/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libtomboy/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/backlinks/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/bugzilla/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/exporttogtg/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/exporttohtml/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/filesystemsyncservice/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/fixedwidth/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/inserttimestamp/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/notedirectorywatcher/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/noteoftheday/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/printnotes/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/readonly/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/replacetitle/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/specialnotes/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/statistics/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/stickynoteimport/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/tableofcontents/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/todo/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/tomboyimport/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/underline/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/addins/webdavsyncservice/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	src/dbus/Makefile	/^oldincludedir = \/usr\/include$/;"	m
on_activate	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::on_activate()$/;"	f	class:backlinks::BacklinkAction	signature:()
on_activate	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkMenuItem::on_activate()$/;"	f	class:backlinks::BacklinkMenuItem	signature:()
on_activate	src/addins/bugzilla/bugzillalink.cpp	/^  bool BugzillaLink::on_activate(const gnote::NoteEditor & , $/;"	f	class:bugzilla::BugzillaLink	signature:(const gnote::NoteEditor & , const Gtk::TextIter & , const Gtk::TextIter & )
on_activate	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_activate()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
on_activate	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::on_activate()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
on_activate	src/addins/tableofcontents/tableofcontentsmenuitem.cpp	/^void TableofcontentsMenuItem::on_activate ()$/;"	f	class:tableofcontents::TableofcontentsMenuItem	signature:()
on_activate	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_activate()$/;"	f	class:underline::UnderlineMenuItem	signature:()
on_activate	src/notetag.cpp	/^  bool NoteTag::on_activate(const NoteEditor & editor , const Gtk::TextIter & start, $/;"	f	class:gnote::NoteTag	signature:(const NoteEditor & editor , const Gtk::TextIter & start, const Gtk::TextIter & end)
on_activate	src/notetag.hpp	/^  virtual bool on_activate(const NoteEditor & , const Gtk::TextIter &, const Gtk::TextIter &);$/;"	p	class:gnote::NoteTag	access:protected	signature:(const NoteEditor & , const Gtk::TextIter &, const Gtk::TextIter &)
on_activate	src/tray.cpp	/^  void NoteMenuItem::on_activate()$/;"	f	class:gnote::NoteMenuItem	signature:()
on_activate	src/tray.cpp	/^  void TrayIcon::on_activate()$/;"	f	class:gnote::TrayIcon	signature:()
on_activate	src/tray.hpp	/^  void on_activate();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
on_activate	src/utils.cpp	/^    void CheckAction::on_activate()$/;"	f	class:gnote::utils::CheckAction	signature:()
on_activated	src/notebooks/notebookmenuitem.cpp	/^    void NotebookMenuItem::on_activated()$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:()
on_activated	src/notebooks/notebookmenuitem.hpp	/^      void on_activated();$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:private	signature:()
on_activated	src/notebooks/notebooknewnotemenuitem.cpp	/^    void NotebookNewNoteMenuItem::on_activated()$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:()
on_activated	src/notebooks/notebooknewnotemenuitem.hpp	/^  void on_activated();$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:()
on_active_notes_size_changed	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::on_active_notes_size_changed()$/;"	f	class:gnote::notebooks::NotebookManager	signature:()
on_active_notes_size_changed	src/notebooks/notebookmanager.hpp	/^  void on_active_notes_size_changed();$/;"	p	class:gnote::notebooks::NotebookManager	access:private	signature:()
on_addin_info_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_info_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_addin_info_button	src/preferencesdialog.hpp	/^  void on_addin_info_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_addin_prefs_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_prefs_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_addin_prefs_button	src/preferencesdialog.hpp	/^  void on_addin_prefs_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_addin_tree_selection_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_addin_tree_selection_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_addin_tree_selection_changed	src/preferencesdialog.hpp	/^  void on_addin_tree_selection_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_advanced_expander_changed	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_advanced_expander_changed(bool expanded)$/;"	f	class:gnote::NoteRenameDialog	signature:(bool expanded)
on_advanced_expander_changed	src/noterenamedialog.hpp	/^  void on_advanced_expander_changed(bool expanded);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(bool expanded)
on_advanced_sync_config_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_advanced_sync_config_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_advanced_sync_config_button	src/preferencesdialog.hpp	/^  void on_advanced_sync_config_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_all_notes_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_all_notes_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_all_notes_button_clicked	src/recentchanges.hpp	/^  void on_all_notes_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_always_rename_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_always_rename_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
on_always_rename_clicked	src/noterenamedialog.hpp	/^  void on_always_rename_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
on_always_show_dlg_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_always_show_dlg_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
on_always_show_dlg_clicked	src/noterenamedialog.hpp	/^  void on_always_show_dlg_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
on_apply_tag	src/notebuffer.cpp	/^  void NoteBuffer::on_apply_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end_iter)
on_apply_tag	src/watchers.cpp	/^  void NoteLinkWatcher::on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
on_apply_tag	src/watchers.cpp	/^  void NoteUrlWatcher::on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
on_apply_tag	src/watchers.hpp	/^    void on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
on_apply_tag	src/watchers.hpp	/^    void on_apply_tag(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag,$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag, const Gtk::TextIter & start, const Gtk::TextIter &end)
on_attribute_read	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::on_attribute_read(const std::string & attributeName)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & attributeName)
on_attribute_read	src/notetag.hpp	/^  virtual void on_attribute_read(const std::string &)$/;"	f	class:gnote::DynamicNoteTag	access:public	signature:(const std::string &)
on_autosync_check_toggled	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_autosync_check_toggled()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_autosync_check_toggled	src/preferencesdialog.hpp	/^  void on_autosync_check_toggled();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_begin_print	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_begin_print(const Glib::RefPtr<Gtk::PrintContext>& context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>& context)
on_begin_print	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_begin_print(const Glib::RefPtr<Gtk::PrintContext>&);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
on_binding_changed	src/prefskeybinder.cpp	/^    void on_binding_changed(const Glib::ustring & key);$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:private	signature:(const Glib::ustring & key)
on_binding_changed	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::on_binding_changed(const Glib::ustring & key)$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:(const Glib::ustring & key)
on_buffer_changed	src/note.cpp	/^  void Note::on_buffer_changed()$/;"	f	class:gnote::Note	signature:()
on_buffer_changed	src/note.hpp	/^  void on_buffer_changed();$/;"	p	class:gnote::Note	access:private	signature:()
on_buffer_mark_deleted	src/note.cpp	/^  void Note::on_buffer_mark_deleted(const Glib::RefPtr<Gtk::TextBuffer::Mark> &)$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextBuffer::Mark> &)
on_buffer_mark_deleted	src/note.hpp	/^  void on_buffer_mark_deleted(const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark);$/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextBuffer::Mark> & mark)
on_buffer_mark_set	src/note.cpp	/^  void Note::on_buffer_mark_set(const Gtk::TextBuffer::iterator & iter,$/;"	f	class:gnote::Note	signature:(const Gtk::TextBuffer::iterator & iter, const Glib::RefPtr<Gtk::TextBuffer::Mark> & insert)
on_buffer_mark_set	src/note.hpp	/^  void on_buffer_mark_set(const Gtk::TextBuffer::iterator & iter,$/;"	p	class:gnote::Note	access:private	signature:(const Gtk::TextBuffer::iterator & iter, const Glib::RefPtr<Gtk::TextBuffer::Mark> & insert)
on_buffer_tag_applied	src/note.cpp	/^  void Note::on_buffer_tag_applied(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
on_buffer_tag_applied	src/note.hpp	/^  void on_buffer_tag_applied(const Glib::RefPtr<Gtk::TextTag> &tag, $/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
on_buffer_tag_removed	src/note.cpp	/^  void Note::on_buffer_tag_removed(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	f	class:gnote::Note	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
on_buffer_tag_removed	src/note.hpp	/^  void on_buffer_tag_removed(const Glib::RefPtr<Gtk::TextTag> &tag,$/;"	p	class:gnote::Note	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &tag, const Gtk::TextBuffer::iterator &, const Gtk::TextBuffer::iterator &)
on_bullet_inserted	src/undo.cpp	/^  void UndoManager::on_bullet_inserted(int offset, int depth, $/;"	f	class:gnote::UndoManager	signature:(int offset, int depth, Pango::Direction direction)
on_bullet_inserted	src/undo.hpp	/^  void on_bullet_inserted(int, int, Pango::Direction);$/;"	p	class:gnote::UndoManager	access:private	signature:(int, int, Pango::Direction)
on_bus_acquired	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_bus_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)
on_bus_acquired	src/remotecontrolproxy.hpp	/^  static void on_bus_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
on_button_press	src/watchers.cpp	/^  bool NoteUrlWatcher::on_button_press(GdkEventButton *ev)$/;"	f	class:gnote::NoteUrlWatcher	signature:(GdkEventButton *ev)
on_button_press	src/watchers.hpp	/^    bool on_button_press(GdkEventButton *);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(GdkEventButton *)
on_button_press_event	src/tray.cpp	/^  bool NoteMenuItem::on_button_press_event(GdkEventButton *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventButton *ev)
on_button_press_event	src/utils.cpp	/^    bool ToolMenuButton::on_button_press_event(GdkEventButton *ev)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(GdkEventButton *ev)
on_button_release_event	src/tray.cpp	/^  bool NoteMenuItem::on_button_release_event(GdkEventButton *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventButton *ev)
on_change_depth	src/undo.cpp	/^  void UndoManager::on_change_depth(int line, bool direction)$/;"	f	class:gnote::UndoManager	signature:(int line, bool direction)
on_change_depth	src/undo.hpp	/^  void on_change_depth(int, bool);$/;"	p	class:gnote::UndoManager	access:private	signature:(int, bool)
on_changed	src/sharp/propertyeditor.cpp	/^  void PropertyEditor::on_changed()$/;"	f	class:sharp::PropertyEditor	signature:()
on_changed	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::on_changed()$/;"	f	class:sharp::PropertyEditorBool	signature:()
on_changed	src/sharp/propertyeditor.hpp	/^    void on_changed();$/;"	p	class:sharp::PropertyEditor	access:private	signature:()
on_changed	src/sharp/propertyeditor.hpp	/^    void on_changed();$/;"	p	class:sharp::PropertyEditorBool	access:private	signature:()
on_changed	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::on_changed(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&,$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&, Gio::FileMonitorEvent)
on_changed	src/synchronization/gnotesyncclient.hpp	/^    void on_changed(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&,$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const Glib::RefPtr<Gio::File>&, const Glib::RefPtr<Gio::File>&, Gio::FileMonitorEvent)
on_clicked	src/utils.cpp	/^    void ToolMenuButton::on_clicked()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
on_command_line	src/gnote.cpp	/^  int Gnote::on_command_line(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line)$/;"	f	class:gnote::Gnote	signature:(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line)
on_conflict_option_toggle	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_conflict_option_toggle()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_conflict_option_toggle	src/preferencesdialog.hpp	/^  void on_conflict_option_toggle();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_connecting	src/synchronization/silentui.cpp	/^  void SilentUI::on_connecting()$/;"	f	class:gnote::sync::SilentUI	signature:()
on_connecting	src/synchronization/silentui.hpp	/^    void on_connecting();$/;"	p	class:gnote::sync::SilentUI	access:private	signature:()
on_delete	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_delete(GdkEventAny *)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventAny *)
on_delete	src/recentchanges.hpp	/^  bool on_delete(GdkEventAny *);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventAny *)
on_delete_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_delete_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
on_delete_button_clicked	src/notewindow.hpp	/^  void on_delete_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_delete_note	src/recentchanges.cpp	/^  void NoteRecentChanges::on_delete_note()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_delete_note	src/recentchanges.hpp	/^  void on_delete_note();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_delete_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_delete_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_delete_notebook	src/searchnoteswidget.hpp	/^  void on_delete_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_delete_range	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_delete_range(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)$/;"	f	class:todo::Todo	signature:(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)
on_delete_range	src/addins/todo/todonoteaddin.hpp	/^  void on_delete_range(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end);$/;"	p	class:todo::Todo	access:private	signature:(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)
on_delete_range	src/undo.cpp	/^  void UndoManager::on_delete_range(const Gtk::TextIter & start, $/;"	f	class:gnote::UndoManager	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
on_delete_range	src/undo.hpp	/^  void on_delete_range(const Gtk::TextIter &, const Gtk::TextIter &);$/;"	p	class:gnote::UndoManager	access:private	signature:(const Gtk::TextIter &, const Gtk::TextIter &)
on_delete_range	src/watchers.cpp	/^  void NoteLinkWatcher::on_delete_range(const Gtk::TextIter & s,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & s, const Gtk::TextIter & e)
on_delete_range	src/watchers.cpp	/^  void NoteRenameWatcher::on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
on_delete_range	src/watchers.cpp	/^  void NoteUrlWatcher::on_delete_range(const Gtk::TextIter & start, const Gtk::TextIter &end)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter &end)
on_delete_range	src/watchers.cpp	/^  void NoteWikiWatcher::on_delete_range(const Gtk::TextIter & start, const Gtk::TextIter & end)$/;"	f	class:gnote::NoteWikiWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
on_delete_range	src/watchers.hpp	/^    void on_delete_range(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
on_dialog_response	src/watchers.cpp	/^  void NoteRenameWatcher::on_dialog_response(int)$/;"	f	class:gnote::NoteRenameWatcher	signature:(int)
on_dialog_response	src/watchers.hpp	/^    void on_dialog_response(int);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(int)
on_disable_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_disable_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_disable_addin_button	src/preferencesdialog.hpp	/^  void on_disable_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_drag_data_received	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>& context, $/;"	f	class:bugzilla::BugzillaNoteAddin	signature:(const Glib::RefPtr<Gdk::DragContext>& context, int x, int y, const Gtk::SelectionData & selection_data, guint, guint time)
on_drag_data_received	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  void on_drag_data_received(const Glib::RefPtr<Gdk::DragContext>&, int, int, const Gtk::SelectionData &,$/;"	p	class:bugzilla::BugzillaNoteAddin	access:private	signature:(const Glib::RefPtr<Gdk::DragContext>&, int, int, const Gtk::SelectionData &, guint, guint)
on_drag_data_received	src/notebooks/notebookstreeview.cpp	/^    void NotebooksTreeView::on_drag_data_received( const Glib::RefPtr<Gdk::DragContext> & context,$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:( const Glib::RefPtr<Gdk::DragContext> & context, int x, int y, const Gtk::SelectionData & selectionData, guint , guint time_)
on_drag_data_received	src/noteeditor.cpp	/^  void NoteEditor::on_drag_data_received(const Glib::RefPtr<Gdk::DragContext> & context,$/;"	f	class:gnote::NoteEditor	signature:(const Glib::RefPtr<Gdk::DragContext> & context, int x, int y, const Gtk::SelectionData & selection_data, guint info, guint time)
on_drag_leave	src/notebooks/notebookstreeview.cpp	/^    void NotebooksTreeView::on_drag_leave(const Glib::RefPtr<Gdk::DragContext> & , guint )$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(const Glib::RefPtr<Gdk::DragContext> & , guint )
on_drag_motion	src/notebooks/notebookstreeview.cpp	/^    bool NotebooksTreeView::on_drag_motion(const Glib::RefPtr<Gdk::DragContext> &,$/;"	f	class:gnote::notebooks::NotebooksTreeView	signature:(const Glib::RefPtr<Gdk::DragContext> &, int x, int y, guint )
on_draw_page	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_draw_page(const Glib::RefPtr<Gtk::PrintContext>& context, guint page_nr)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>& context, guint page_nr)
on_draw_page	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_draw_page(const Glib::RefPtr<Gtk::PrintContext>&, guint);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&, guint)
on_editor_focus_out	src/watchers.cpp	/^  bool NoteRenameWatcher::on_editor_focus_out(GdkEventFocus *)$/;"	f	class:gnote::NoteRenameWatcher	signature:(GdkEventFocus *)
on_editor_focus_out	src/watchers.hpp	/^    bool on_editor_focus_out(GdkEventFocus *);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(GdkEventFocus *)
on_editor_key_press	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_key_press(GdkEventKey* ev)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventKey* ev)
on_editor_key_press	src/watchers.hpp	/^    bool on_editor_key_press(GdkEventKey*);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventKey*)
on_editor_key_release	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_key_release(GdkEventKey* ev)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventKey* ev)
on_editor_key_release	src/watchers.hpp	/^    bool on_editor_key_release(GdkEventKey*);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventKey*)
on_editor_motion	src/watchers.cpp	/^  bool MouseHandWatcher::on_editor_motion(GdkEventMotion *)$/;"	f	class:gnote::MouseHandWatcher	signature:(GdkEventMotion *)
on_editor_motion	src/watchers.hpp	/^    bool on_editor_motion(GdkEventMotion *);$/;"	p	class:gnote::MouseHandWatcher	access:private	signature:(GdkEventMotion *)
on_embedded_name_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_embedded_name_changed(const std::string & name)$/;"	f	class:gnote::NoteRecentChanges	signature:(const std::string & name)
on_embedded_name_changed	src/recentchanges.hpp	/^  void on_embedded_name_changed(const std::string & name);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const std::string & name)
on_enable_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_enable_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_enable_addin_button	src/preferencesdialog.hpp	/^  void on_enable_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_enable_spellcheck_changed	src/watchers.cpp	/^  void NoteSpellChecker::on_enable_spellcheck_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteSpellChecker	signature:(const Glib::ustring & key)
on_enable_spellcheck_changed	src/watchers.hpp	/^    void on_enable_spellcheck_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const Glib::ustring & key)
on_end_print	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_end_print(const Glib::RefPtr<Gtk::PrintContext>&)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
on_end_print	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_end_print(const Glib::RefPtr<Gtk::PrintContext>&);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
on_entry_activated	src/recentchanges.cpp	/^  void NoteRecentChanges::on_entry_activated()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_entry_activated	src/recentchanges.hpp	/^  void on_entry_activated();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_entry_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_entry_changed()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_entry_changed	src/recentchanges.hpp	/^  void on_entry_changed();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_event	src/notetag.cpp	/^  bool NoteTag::on_event(const Glib::RefPtr<Glib::Object> & sender, $/;"	f	class:gnote::NoteTag	signature:(const Glib::RefPtr<Glib::Object> & sender, GdkEvent * ev, const Gtk::TextIter & iter)
on_exit	src/tray.cpp	/^  void TrayIcon::on_exit()$/;"	f	class:gnote::TrayIcon	signature:()
on_exit	src/tray.hpp	/^  void on_exit();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
on_exiting_event	src/notemanager.cpp	/^  void NoteManager::on_exiting_event()$/;"	f	class:gnote::NoteManager	signature:()
on_exiting_event	src/notemanager.hpp	/^    void on_exiting_event();$/;"	p	class:gnote::NoteManager	access:private	signature:()
on_expander_activated	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_expander_activated(GtkExpander*, gpointer data)$/;"	f	class:gnote::sync::SyncDialog	signature:(GtkExpander*, gpointer data)
on_expander_activated	src/synchronization/syncdialog.hpp	/^    static void on_expander_activated(GtkExpander*, gpointer);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(GtkExpander*, gpointer)
on_export_linked_toggled	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::on_export_linked_toggled()$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:()
on_export_linked_toggled	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void on_export_linked_toggled();$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:private	signature:()
on_find_next_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_find_next_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_find_next_button_clicked	src/recentchanges.hpp	/^  void on_find_next_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_find_prev_button_clicked	src/recentchanges.cpp	/^  void NoteRecentChanges::on_find_prev_button_clicked()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_find_prev_button_clicked	src/recentchanges.hpp	/^  void on_find_prev_button_clicked();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_font_button_clicked	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_font_button_clicked()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_font_button_clicked	src/preferencesdialog.hpp	/^  void on_font_button_clicked();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_font_setting_changed	src/noteeditor.cpp	/^  void NoteEditor::on_font_setting_changed (const Glib::ustring & key)$/;"	f	class:gnote::NoteEditor	signature:(const Glib::ustring & key)
on_font_setting_changed	src/noteeditor.hpp	/^  void on_font_setting_changed (const Glib::ustring & key);$/;"	p	class:gnote::NoteEditor	access:private	signature:(const Glib::ustring & key)
on_format_setting_changed	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_format_setting_changed(const Glib::ustring & key)$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:(const Glib::ustring & key)
on_format_setting_changed	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  void on_format_setting_changed(const Glib::ustring & key);$/;"	p	class:inserttimestamp::InsertTimestampNoteAddin	access:private	signature:(const Glib::ustring & key)
on_idle	src/synchronization/silentui.cpp	/^  void SilentUI::on_idle()$/;"	f	class:gnote::sync::SilentUI	signature:()
on_idle	src/synchronization/silentui.hpp	/^    void on_idle();$/;"	p	class:gnote::sync::SilentUI	access:private	signature:()
on_insert_text	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring & \/*text*\/, int \/*bytes*\/)$/;"	f	class:todo::Todo	signature:(const Gtk::TextIter & pos, const Glib::ustring & , int )
on_insert_text	src/addins/todo/todonoteaddin.hpp	/^  void on_insert_text(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes);$/;"	p	class:todo::Todo	access:private	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)
on_insert_text	src/undo.cpp	/^  void UndoManager::on_insert_text(const Gtk::TextIter & pos, $/;"	f	class:gnote::UndoManager	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int)
on_insert_text	src/undo.hpp	/^  void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::UndoManager	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
on_insert_text	src/watchers.cpp	/^  void NoteLinkWatcher::on_insert_text(const Gtk::TextIter & pos, $/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int length)
on_insert_text	src/watchers.cpp	/^  void NoteRenameWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, int)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int)
on_insert_text	src/watchers.cpp	/^  void NoteUrlWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, int len)$/;"	f	class:gnote::NoteUrlWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int len)
on_insert_text	src/watchers.cpp	/^  void NoteWikiWatcher::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring &, $/;"	f	class:gnote::NoteWikiWatcher	signature:(const Gtk::TextIter & pos, const Glib::ustring &, int length)
on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
on_insert_text	src/watchers.hpp	/^    void on_insert_text(const Gtk::TextIter &, const Glib::ustring &, int);$/;"	p	class:gnote::NoteWikiWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::ustring &, int)
on_interval_changed	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.cpp	/^void NoteDirectoryWatcherPreferences::on_interval_changed()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	signature:()
on_interval_changed	src/addins/notedirectorywatcher/notedirectorywatcherpreferences.hpp	/^  void on_interval_changed();$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherPreferences	access:private	signature:()
on_key_pressed	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^bool TableofcontentsNoteAddin::on_key_pressed(GdkEventKey *ev)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(GdkEventKey *ev)
on_key_pressed	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool on_key_pressed (GdkEventKey *ev);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(GdkEventKey *ev)
on_key_pressed	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_key_pressed(GdkEventKey * ev)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventKey * ev)
on_key_pressed	src/recentchanges.hpp	/^  bool on_key_pressed(GdkEventKey *);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventKey *)
on_language_changed	src/watchers.cpp	/^  void NoteSpellChecker::on_language_changed(const gchar *lang)$/;"	f	class:gnote::NoteSpellChecker	signature:(const gchar *lang)
on_language_changed	src/watchers.hpp	/^    void on_language_changed(const gchar *lang);$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const gchar *lang)
on_leave_notify_event	src/tray.cpp	/^  bool NoteMenuItem::on_leave_notify_event(GdkEventCrossing *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventCrossing *ev)
on_level_1_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_level_1_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_level_1_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_level_1_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
on_level_2_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_level_2_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_level_2_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_level_2_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
on_link_tag_activated	src/watchers.cpp	/^  bool NoteLinkWatcher::on_link_tag_activated(const NoteEditor & editor,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteEditor & editor, const Gtk::TextIter &start, const Gtk::TextIter &end)
on_link_tag_activated	src/watchers.hpp	/^    bool on_link_tag_activated(const NoteEditor &,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &, const Gtk::TextIter &)
on_main_window_actions_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_main_window_actions_changed(Gtk::Menu **menu)$/;"	f	class:gnote::NoteRecentChanges	signature:(Gtk::Menu **menu)
on_main_window_actions_changed	src/recentchanges.hpp	/^  void on_main_window_actions_changed(Gtk::Menu **menu);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(Gtk::Menu **menu)
on_main_window_closed	src/gnote.cpp	/^  void Gnote::on_main_window_closed(Gtk::Window *win)$/;"	f	class:gnote::Gnote	signature:(Gtk::Window *win)
on_main_window_closed	src/gnote.hpp	/^  void on_main_window_closed(Gtk::Window*);$/;"	p	class:gnote::Gnote	access:private	signature:(Gtk::Window*)
on_map_event	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_map_event(GdkEventAny *evt)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventAny *evt)
on_mark_set	src/watchers.cpp	/^  void NoteRenameWatcher::on_mark_set(const Gtk::TextIter &, $/;"	f	class:gnote::NoteRenameWatcher	signature:(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>& mark)
on_mark_set	src/watchers.hpp	/^    void on_mark_set(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>&);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const Gtk::TextIter &, const Glib::RefPtr<Gtk::TextMark>&)
on_menu_hidden	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::on_menu_hidden()$/;"	f	class:backlinks::BacklinkAction	signature:()
on_menu_hidden	src/addins/backlinks/backlinkmenuitem.hpp	/^  void on_menu_hidden();$/;"	p	class:backlinks::BacklinkAction	access:private	signature:()
on_menu_hidden	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::on_menu_hidden()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
on_menu_hidden	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  void on_menu_hidden();$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:()
on_menu_hidden	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_menu_hidden()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_menu_hidden	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_menu_hidden();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
on_menu_item_activated	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_menu_item_activated()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
on_menu_item_activated	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  void on_menu_item_activated();$/;"	p	class:inserttimestamp::InsertTimestampNoteAddin	access:private	signature:()
on_menu_item_toggled	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::on_menu_item_toggled()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
on_menu_item_toggled	src/addins/readonly/readonlynoteaddin.hpp	/^  void on_menu_item_toggled();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:private	signature:()
on_menu_shown	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_menu_shown()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
on_menu_shown	src/notebooks/notebooknoteaddin.hpp	/^    void on_menu_shown();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
on_method_call	src/dbus/remotecontrol-glue.cpp	/^void RemoteControl_adaptor::on_method_call(const Glib::RefPtr<Gio::DBus::Connection> &,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
on_method_call	src/dbus/remotecontrol-glue.hpp	/^  void on_method_call(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const Glib::ustring & sender, const Glib::ustring & object_path, const Glib::ustring & interface_name, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
on_method_call	src/dbus/searchprovider.cpp	/^void SearchProvider::on_method_call(const Glib::RefPtr<Gio::DBus::Connection> &,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
on_method_call	src/dbus/searchprovider.hpp	/^  void on_method_call(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const Glib::ustring & sender, const Glib::ustring & object_path, const Glib::ustring & interface_name, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
on_mnemonic_activate	src/utils.cpp	/^    bool ToolMenuButton::on_mnemonic_activate(bool group_cycling)$/;"	f	class:gnote::utils::ToolMenuButton	signature:(bool group_cycling)
on_motion_notify_event	src/tray.cpp	/^  bool NoteMenuItem::on_motion_notify_event(GdkEventMotion *ev)$/;"	f	class:gnote::NoteMenuItem	signature:(GdkEventMotion *ev)
on_name_acquired	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_name_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring &)
on_name_acquired	src/remotecontrolproxy.hpp	/^  static void on_name_acquired(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
on_name_entry_changed	src/notebooks/createnotebookdialog.cpp	/^    void CreateNotebookDialog::on_name_entry_changed()$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:()
on_name_entry_changed	src/notebooks/createnotebookdialog.hpp	/^  void on_name_entry_changed();$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:private	signature:()
on_name_lost	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::on_name_lost(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &)$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &)
on_name_lost	src/remotecontrolproxy.hpp	/^  static void on_name_lost(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name);$/;"	p	class:gnote::RemoteControlProxy	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const Glib::ustring & name)
on_never_rename_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_never_rename_clicked()$/;"	f	class:gnote::NoteRenameDialog	signature:()
on_never_rename_clicked	src/noterenamedialog.hpp	/^  void on_never_rename_clicked();$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:()
on_new_note_activate	src/tray.cpp	/^  void Tray::on_new_note_activate()$/;"	f	class:gnote::Tray	signature:()
on_new_note_activate	src/tray.hpp	/^  void on_new_note_activate();$/;"	p	class:gnote::Tray	access:private	signature:()
on_new_note_app_action	src/gnote.cpp	/^  void Gnote::on_new_note_app_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_new_note_app_action	src/gnote.hpp	/^  void on_new_note_app_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::VariantBase&)
on_new_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_new_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_new_notebook	src/searchnoteswidget.hpp	/^  void on_new_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_new_notebook_action	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_new_notebook_action(const Glib::VariantBase&)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const Glib::VariantBase&)
on_new_notebook_action	src/notebooks/notebookapplicationaddin.hpp	/^      void on_new_notebook_action(const Glib::VariantBase&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const Glib::VariantBase&)
on_new_notebook_menu_item	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_new_notebook_menu_item()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
on_new_notebook_menu_item	src/notebooks/notebookapplicationaddin.hpp	/^      void on_new_notebook_menu_item();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
on_new_notebook_menu_item	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_new_notebook_menu_item()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
on_new_notebook_menu_item	src/notebooks/notebooknoteaddin.hpp	/^    void on_new_notebook_menu_item();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
on_new_window_action	src/gnote.cpp	/^  void Gnote::on_new_window_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_new_window_action	src/gnote.hpp	/^  void on_new_window_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::VariantBase&)
on_note_added	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
on_note_added	src/dbus/remotecontrol.hpp	/^  void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
on_note_added	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr & note)
on_note_added	src/notebooks/notebookapplicationaddin.hpp	/^      void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr &)
on_note_added	src/notemanagerbase.cpp	/^  void on_note_added(const NoteBase::Ptr & added);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & added)
on_note_added	src/notemanagerbase.cpp	/^void TrieController::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr & note)
on_note_added	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_added(const NoteBase::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note)
on_note_added	src/searchnoteswidget.hpp	/^  void on_note_added(const NoteBase::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr & note)
on_note_added	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_added(const NoteBase::Ptr & added)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & added)
on_note_added	src/watchers.hpp	/^    void on_note_added(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &)
on_note_added_to_notebook	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_added_to_notebook(const Note & note, $/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Note & note, const Notebook::Ptr & notebook)
on_note_added_to_notebook	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_added_to_notebook(const Note &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Note &, const Notebook::Ptr &)
on_note_added_to_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_added_to_notebook(const Note &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, const notebooks::Notebook::Ptr &)
on_note_added_to_notebook	src/searchnoteswidget.hpp	/^  void on_note_added_to_notebook(const Note & note, const notebooks::Notebook::Ptr & notebook);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note & note, const notebooks::Notebook::Ptr & notebook)
on_note_backgrounded	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_note_backgrounded()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
on_note_backgrounded	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void on_note_backgrounded();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
on_note_backgrounded	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_note_backgrounded()$/;"	f	class:underline::UnderlineMenuItem	signature:()
on_note_backgrounded	src/addins/underline/underlinemenuitem.hpp	/^  void on_note_backgrounded();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
on_note_deleted	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
on_note_deleted	src/dbus/remotecontrol.hpp	/^  void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
on_note_deleted	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_note_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr &)
on_note_deleted	src/notebooks/notebookapplicationaddin.hpp	/^      void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr &)
on_note_deleted	src/notebooks/specialnotebooks.cpp	/^void ActiveNotesNotebook::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::notebooks::ActiveNotesNotebook	signature:(const NoteBase::Ptr & note)
on_note_deleted	src/notebooks/specialnotebooks.hpp	/^  void on_note_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::notebooks::ActiveNotesNotebook	access:private	signature:(const NoteBase::Ptr & note)
on_note_deleted	src/notemanagerbase.cpp	/^  void on_note_deleted (const NoteBase::Ptr & deleted);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & deleted)
on_note_deleted	src/notemanagerbase.cpp	/^void TrieController::on_note_deleted(const NoteBase::Ptr &)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr &)
on_note_deleted	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_deleted(const NoteBase::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note)
on_note_deleted	src/searchnoteswidget.hpp	/^  void on_note_deleted(const NoteBase::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr & note)
on_note_deleted	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_deleted(const NoteBase::Ptr & deleted)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr & deleted)
on_note_deleted	src/watchers.hpp	/^    void on_note_deleted(const NoteBase::Ptr &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr &)
on_note_foregrounded	src/addins/fixedwidth/fixedwidthmenuitem.cpp	/^  void FixedWidthMenuItem::on_note_foregrounded()$/;"	f	class:fixedwidth::FixedWidthMenuItem	signature:()
on_note_foregrounded	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  void on_note_foregrounded();$/;"	p	class:fixedwidth::FixedWidthMenuItem	access:private	signature:()
on_note_foregrounded	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_note_foregrounded()$/;"	f	class:underline::UnderlineMenuItem	signature:()
on_note_foregrounded	src/addins/underline/underlinemenuitem.hpp	/^  void on_note_foregrounded();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
on_note_list_changed	src/addins/statistics/statisticswidget.cpp	/^  void on_note_list_changed(const gnote::NoteBase::Ptr &)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(const gnote::NoteBase::Ptr &)
on_note_opened	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::on_note_opened ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
on_note_opened	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::on_note_opened()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
on_note_opened	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::on_note_opened()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
on_note_opened	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::on_note_opened()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
on_note_opened	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::on_note_opened ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
on_note_opened	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::on_note_opened()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
on_note_opened	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_note_opened()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
on_note_opened	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::on_note_opened()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
on_note_opened	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::on_note_opened()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
on_note_opened	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_note_opened ()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_note_opened	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_note_opened()$/;"	f	class:todo::Todo	signature:()
on_note_opened	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::on_note_opened ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
on_note_opened	src/noteaddin.hpp	/^  virtual void on_note_opened () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
on_note_opened	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_opened ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
on_note_opened	src/watchers.cpp	/^  void MouseHandWatcher::on_note_opened ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_opened ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteRenameWatcher::on_note_opened ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteSpellChecker::on_note_opened ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteTagsWatcher::on_note_opened ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteUrlWatcher::on_note_opened ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
on_note_opened	src/watchers.cpp	/^  void NoteWikiWatcher::on_note_opened ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
on_note_opened_event	src/noteaddin.cpp	/^  void NoteAddin::on_note_opened_event(Note & )$/;"	f	class:gnote::NoteAddin	signature:(Note & )
on_note_opened_event	src/noteaddin.hpp	/^  void on_note_opened_event(Note & );$/;"	p	class:gnote::NoteAddin	access:public	signature:(Note & )
on_note_pin_status_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_pin_status_changed(const Note &, bool)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, bool)
on_note_pin_status_changed	src/searchnoteswidget.hpp	/^  void on_note_pin_status_changed(const Note &, bool);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note &, bool)
on_note_removed_from_notebook	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_removed_from_notebook(const Note & note, $/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Note & note, const Notebook::Ptr &)
on_note_removed_from_notebook	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_removed_from_notebook(const Note &, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Note &, const Notebook::Ptr &)
on_note_removed_from_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_removed_from_notebook(const Note &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note &, const notebooks::Notebook::Ptr &)
on_note_removed_from_notebook	src/searchnoteswidget.hpp	/^  void on_note_removed_from_notebook(const Note & note, const notebooks::Notebook::Ptr & notebook);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note & note, const notebooks::Notebook::Ptr & notebook)
on_note_rename	src/notemanagerbase.cpp	/^void NoteManagerBase::on_note_rename(const NoteBase::Ptr & note, const Glib::ustring & old_title)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note, const Glib::ustring & old_title)
on_note_rename	src/notemanagerbase.hpp	/^  void on_note_rename(const NoteBase::Ptr & note, const Glib::ustring & old_title);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr & note, const Glib::ustring & old_title)
on_note_renamed	src/notemanagerbase.cpp	/^  void on_note_renamed(const NoteBase::Ptr & renamed, const Glib::ustring & old_title);$/;"	p	class:gnote::TrieController	file:	access:private	signature:(const NoteBase::Ptr & renamed, const Glib::ustring & old_title)
on_note_renamed	src/notemanagerbase.cpp	/^void TrieController::on_note_renamed(const NoteBase::Ptr &, const Glib::ustring &)$/;"	f	class:gnote::TrieController	signature:(const NoteBase::Ptr &, const Glib::ustring &)
on_note_renamed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_renamed(const NoteBase::Ptr & note,$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr & note, const std::string &)
on_note_renamed	src/searchnoteswidget.hpp	/^  void on_note_renamed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr&, const std::string&)
on_note_renamed	src/watchers.cpp	/^  void NoteLinkWatcher::on_note_renamed(const NoteBase::Ptr& renamed, const Glib::ustring& \/*old_title*\/)$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteBase::Ptr& renamed, const Glib::ustring& )
on_note_renamed	src/watchers.hpp	/^    void on_note_renamed(const NoteBase::Ptr&, const Glib::ustring&);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteBase::Ptr&, const Glib::ustring&)
on_note_save	src/notemanagerbase.cpp	/^void NoteManagerBase::on_note_save (const NoteBase::Ptr & note)$/;"	f	class:gnote::NoteManagerBase	signature:(const NoteBase::Ptr & note)
on_note_save	src/notemanagerbase.hpp	/^  void on_note_save(const NoteBase::Ptr & note);$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:(const NoteBase::Ptr & note)
on_note_saved	src/dbus/remotecontrol.cpp	/^void RemoteControl::on_note_saved(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
on_note_saved	src/dbus/remotecontrol.hpp	/^  void on_note_saved(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
on_note_saved	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_note_saved(const NoteBase::Ptr&)$/;"	f	class:gnote::SearchNotesWidget	signature:(const NoteBase::Ptr&)
on_note_saved	src/searchnoteswidget.hpp	/^  void on_note_saved(const NoteBase::Ptr&);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const NoteBase::Ptr&)
on_note_tag_added	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_tag_added(const NoteBase & note, const Tag::Ptr & tag)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const NoteBase & note, const Tag::Ptr & tag)
on_note_tag_added	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_tag_added(const NoteBase &, const Tag::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const NoteBase &, const Tag::Ptr &)
on_note_tag_added	src/notewindow.cpp	/^  void NoteWindow::on_note_tag_added(const NoteBase&, const Tag::Ptr & tag)$/;"	f	class:gnote::NoteWindow	signature:(const NoteBase&, const Tag::Ptr & tag)
on_note_tag_added	src/notewindow.hpp	/^  void on_note_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const NoteBase&, const Tag::Ptr&)
on_note_tag_removed	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::on_note_tag_removed(const NoteBase::Ptr & taggedNote, const std::string & tag)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const NoteBase::Ptr & taggedNote, const std::string & tag)
on_note_tag_removed	src/notebooks/notebooknoteaddin.hpp	/^    void on_note_tag_removed(const NoteBase::Ptr &, const std::string &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const NoteBase::Ptr &, const std::string &)
on_note_tag_removed	src/notewindow.cpp	/^  void NoteWindow::on_note_tag_removed(const NoteBase::Ptr&, const std::string & tag)$/;"	f	class:gnote::NoteWindow	signature:(const NoteBase::Ptr&, const std::string & tag)
on_note_tag_removed	src/notewindow.hpp	/^  void on_note_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const NoteBase::Ptr&, const std::string&)
on_note_window_embedded	src/note.cpp	/^  void Note::on_note_window_embedded()$/;"	f	class:gnote::Note	signature:()
on_note_window_embedded	src/note.hpp	/^  void on_note_window_embedded();$/;"	p	class:gnote::Note	access:private	signature:()
on_note_window_foregrounded	src/note.cpp	/^  void Note::on_note_window_foregrounded()$/;"	f	class:gnote::Note	signature:()
on_note_window_foregrounded	src/note.hpp	/^  void on_note_window_foregrounded();$/;"	p	class:gnote::Note	access:private	signature:()
on_notebook_note_list_changed	src/addins/statistics/statisticswidget.cpp	/^  void on_notebook_note_list_changed(const gnote::Note &, const gnote::notebooks::Notebook::Ptr &)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(const gnote::Note &, const gnote::notebooks::Notebook::Ptr &)
on_notebook_row_activated	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_row_activated(const Gtk::TreePath &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
on_notebook_row_activated	src/searchnoteswidget.hpp	/^  void on_notebook_row_activated(const Gtk::TreePath &, Gtk::TreeViewColumn*);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
on_notebook_row_edited	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_row_edited(const Glib::ustring& \/*tree_path*\/,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring& , const Glib::ustring& new_text)
on_notebook_row_edited	src/searchnoteswidget.hpp	/^  void on_notebook_row_edited(const Glib::ustring& path, const Glib::ustring& new_text);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring& path, const Glib::ustring& new_text)
on_notebook_selection_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_notebook_selection_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_notebook_selection_changed	src/searchnoteswidget.hpp	/^  void on_notebook_selection_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_notebooks_key_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_notebooks_key_pressed(GdkEventKey *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventKey *ev)
on_notebooks_key_pressed	src/searchnoteswidget.hpp	/^  bool on_notebooks_key_pressed(GdkEventKey *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventKey *)
on_notebooks_tree_button_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_notebooks_tree_button_pressed(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
on_notebooks_tree_button_pressed	src/searchnoteswidget.hpp	/^  bool on_notebooks_tree_button_pressed(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
on_notes_model_foreach_iter_accumulate	src/noterenamedialog.cpp	/^bool NoteRenameDialog::on_notes_model_foreach_iter_accumulate($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreeIter & iter, const MapPtr & notes) const
on_notes_model_foreach_iter_accumulate	src/noterenamedialog.hpp	/^  bool on_notes_model_foreach_iter_accumulate($/;"	p	class:gnote::NoteRenameDialog	access:private	signature:( const Gtk::TreeIter & iter, const MapPtr & notes) const
on_notes_model_foreach_iter_select	src/noterenamedialog.cpp	/^bool NoteRenameDialog::on_notes_model_foreach_iter_select($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreeIter & iter, bool select)
on_notes_model_foreach_iter_select	src/noterenamedialog.hpp	/^  bool on_notes_model_foreach_iter_select(const Gtk::TreeIter & iter,$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const Gtk::TreeIter & iter, bool select)
on_notes_view_row_activated	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_notes_view_row_activated($/;"	f	class:gnote::NoteRenameDialog	signature:( const Gtk::TreePath & p, Gtk::TreeView::Column *, const std::string & old_title)
on_notes_view_row_activated	src/noterenamedialog.hpp	/^  void on_notes_view_row_activated(const Gtk::TreeModel::Path & p,$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const Gtk::TreeModel::Path & p, Gtk::TreeView::Column *, const std::string & old_title)
on_notes_widget_key_press	src/recentchanges.cpp	/^  bool NoteRecentChanges::on_notes_widget_key_press(GdkEventKey *evt)$/;"	f	class:gnote::NoteRecentChanges	signature:(GdkEventKey *evt)
on_notes_widget_key_press	src/recentchanges.hpp	/^  bool on_notes_widget_key_press(GdkEventKey*);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(GdkEventKey*)
on_open_note	src/recentchanges.cpp	/^  void NoteRecentChanges::on_open_note(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
on_open_note	src/recentchanges.hpp	/^  void on_open_note(const Note::Ptr &);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Note::Ptr &)
on_open_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_open_note	src/searchnoteswidget.hpp	/^  void on_open_note();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_open_note_new_window	src/recentchanges.cpp	/^  void NoteRecentChanges::on_open_note_new_window(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
on_open_note_new_window	src/recentchanges.hpp	/^  void on_open_note_new_window(const Note::Ptr &);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Note::Ptr &)
on_open_note_new_window	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_note_new_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_open_note_new_window	src/searchnoteswidget.hpp	/^  void on_open_note_new_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_open_notebook_template_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_open_notebook_template_note()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_open_notebook_template_note	src/searchnoteswidget.hpp	/^  void on_open_notebook_template_note();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_pin_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_pin_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
on_pin_button_clicked	src/notewindow.hpp	/^  void on_pin_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_pin_status_changed	src/notewindow.cpp	/^  void NoteWindow::on_pin_status_changed(const Note & note, bool pinned)$/;"	f	class:gnote::NoteWindow	signature:(const Note & note, bool pinned)
on_pin_status_changed	src/notewindow.hpp	/^  void on_pin_status_changed(const Note &, bool);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const Note &, bool)
on_populate_popup	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_populate_popup (Gtk::Menu* popup_menu)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu* popup_menu)
on_populate_popup	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_populate_popup (Gtk::Menu* popup_menu);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu* popup_menu)
on_populate_popup	src/notewindow.cpp	/^  void NoteWindow::on_populate_popup(Gtk::Menu* menu)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Menu* menu)
on_populate_popup	src/notewindow.hpp	/^  void on_populate_popup(Gtk::Menu*);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Menu*)
on_populate_popup	src/watchers.cpp	/^  void NoteUrlWatcher::on_populate_popup(Gtk::Menu *menu)$/;"	f	class:gnote::NoteUrlWatcher	signature:(Gtk::Menu *menu)
on_populate_popup	src/watchers.hpp	/^    void on_populate_popup(Gtk::Menu *);$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(Gtk::Menu *)
on_popup_menu	src/tray.cpp	/^  void TrayIcon::on_popup_menu(guint button, guint32 activate_time)$/;"	f	class:gnote::TrayIcon	signature:(guint button, guint32 activate_time)
on_popup_menu	src/tray.hpp	/^  void on_popup_menu(guint button, guint32 activate_time);$/;"	p	class:gnote::TrayIcon	access:public	signature:(guint button, guint32 activate_time)
on_popup_menu	src/watchers.cpp	/^  bool NoteUrlWatcher::on_popup_menu()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
on_popup_menu	src/watchers.hpp	/^    bool on_popup_menu();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
on_preferences_response	src/gnote.cpp	/^  void Gnote::on_preferences_response(int \/*res*\/)$/;"	f	class:gnote::Gnote	signature:(int )
on_preferences_response	src/gnote.hpp	/^  void on_preferences_response(int res);$/;"	p	class:gnote::Gnote	access:public	signature:(int res)
on_preferences_setting_changed	src/preferencesdialog.cpp	/^  void  PreferencesDialog::on_preferences_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::PreferencesDialog	signature:(const Glib::ustring & key)
on_preferences_setting_changed	src/preferencesdialog.hpp	/^  void on_preferences_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const Glib::ustring & key)
on_pulse_progress_bar	src/synchronization/syncdialog.cpp	/^bool SyncDialog::on_pulse_progress_bar()$/;"	f	class:gnote::sync::SyncDialog	signature:()
on_pulse_progress_bar	src/synchronization/syncdialog.hpp	/^    bool on_pulse_progress_bar();$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:()
on_quit_gnote_action	src/gnote.cpp	/^  void Gnote::on_quit_gnote_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_quit_gnote_action	src/gnote.hpp	/^  void on_quit_gnote_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
on_realize	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::on_realize()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
on_realize	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_realize()$/;"	f	class:gnote::sync::SyncDialog	signature:()
on_remove_tag	src/notebuffer.cpp	/^  void NoteBuffer::on_remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end_iter)
on_rename_behavior_changed	src/preferencesdialog.cpp	/^  void  PreferencesDialog::on_rename_behavior_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_rename_behavior_changed	src/preferencesdialog.hpp	/^  void on_rename_behavior_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_rename_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_rename_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_rename_notebook	src/searchnoteswidget.hpp	/^  void on_rename_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_reset_sync_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_reset_sync_addin_button(bool signal)$/;"	f	class:gnote::PreferencesDialog	signature:(bool signal)
on_reset_sync_addin_button	src/preferencesdialog.hpp	/^  void on_reset_sync_addin_button(bool signal);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(bool signal)
on_row_activated	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_row_activated(const Gtk::TreePath & p, Gtk::TreeViewColumn*)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Gtk::TreePath & p, Gtk::TreeViewColumn*)
on_row_activated	src/searchnoteswidget.hpp	/^  void on_row_activated(const Gtk::TreePath &, Gtk::TreeViewColumn*);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Gtk::TreePath &, Gtk::TreeViewColumn*)
on_row_activated	src/synchronization/syncdialog.cpp	/^void SyncDialog::on_row_activated(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn*)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn*)
on_row_activated	src/synchronization/syncdialog.hpp	/^    void on_row_activated(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn *column);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Gtk::TreeModel::Path & path, Gtk::TreeViewColumn *column)
on_save_selection_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_selection_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
on_save_selection_check_button_toggled	src/notewindow.hpp	/^  void on_save_selection_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_save_size_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_size_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
on_save_size_check_button_toggled	src/notewindow.hpp	/^  void on_save_size_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_save_sync_addin_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_save_sync_addin_button()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_save_sync_addin_button	src/preferencesdialog.hpp	/^  void on_save_sync_addin_button();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_save_timeout	src/note.cpp	/^  void Note::on_save_timeout()$/;"	f	class:gnote::Note	signature:()
on_save_timeout	src/note.hpp	/^  void on_save_timeout();$/;"	p	class:gnote::Note	access:private	signature:()
on_save_title_check_button_toggled	src/notewindow.cpp	/^  void NoteWindow::on_save_title_check_button_toggled()$/;"	f	class:gnote::NoteWindow	signature:()
on_save_title_check_button_toggled	src/notewindow.hpp	/^  void on_save_title_check_button_toggled();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_search_button_toggled	src/recentchanges.cpp	/^  void NoteRecentChanges::on_search_button_toggled()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_search_button_toggled	src/recentchanges.hpp	/^  void on_search_button_toggled();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_search_notes_activate	src/tray.cpp	/^  void Tray::on_search_notes_activate()$/;"	f	class:gnote::Tray	signature:()
on_search_notes_activate	src/tray.hpp	/^  void on_search_notes_activate();$/;"	p	class:gnote::Tray	access:private	signature:()
on_select_all_button_clicked	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_select_all_button_clicked(bool select)$/;"	f	class:gnote::NoteRenameDialog	signature:(bool select)
on_select_all_button_clicked	src/noterenamedialog.hpp	/^  void on_select_all_button_clicked(bool select);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(bool select)
on_selected_radio_toggled	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::on_selected_radio_toggled ()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
on_selected_radio_toggled	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  void on_selected_radio_toggled();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
on_selection_changed	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  void InsertTimestampPreferences::on_selection_changed ()$/;"	f	class:inserttimestamp::InsertTimestampPreferences	signature:()
on_selection_changed	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  void on_selection_changed();$/;"	p	class:inserttimestamp::InsertTimestampPreferences	access:private	signature:()
on_selection_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_selection_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_selection_changed	src/searchnoteswidget.hpp	/^  void on_selection_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_selection_mark_set	src/notewindow.cpp	/^  void NoteWindow::on_selection_mark_set(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)$/;"	f	class:gnote::NoteWindow	signature:(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)
on_selection_mark_set	src/notewindow.hpp	/^  void on_selection_mark_set(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&);$/;"	p	class:gnote::NoteWindow	access:private	signature:(const Gtk::TextIter&, const Glib::RefPtr<Gtk::TextMark>&)
on_setting_changed	src/addinmanager.cpp	/^  void AddinManager::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::AddinManager	signature:(const Glib::ustring & key)
on_setting_changed	src/addinmanager.hpp	/^  void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::AddinManager	access:private	signature:(const Glib::ustring & key)
on_setting_changed	src/gnote.cpp	/^  void Gnote::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::Gnote	signature:(const Glib::ustring & key)
on_setting_changed	src/gnote.hpp	/^  void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::Gnote	access:private	signature:(const Glib::ustring & key)
on_setting_changed	src/notemanager.cpp	/^  void NoteManager::on_setting_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteManager	signature:(const Glib::ustring & key)
on_setting_changed	src/notemanager.hpp	/^    void on_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteManager	access:public	signature:(const Glib::ustring & key)
on_settings_changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::on_settings_changed(const Glib::ustring & key)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const Glib::ustring & key)
on_settings_changed	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::ustring & key)
on_settings_changed	src/recentchanges.cpp	/^  void NoteRecentChanges::on_settings_changed(const Glib::ustring & key)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Glib::ustring & key)
on_settings_changed	src/recentchanges.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(const Glib::ustring & key)
on_settings_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_settings_changed(const Glib::ustring & key)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring & key)
on_settings_changed	src/searchnoteswidget.hpp	/^  void on_settings_changed(const Glib::ustring & key);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring & key)
on_show	src/notewindow.cpp	/^  void NoteTextMenu::on_show()$/;"	f	class:gnote::NoteTextMenu	signature:()
on_show	src/recentchanges.cpp	/^  void NoteRecentChanges::on_show()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_show_about_action	src/gnote.cpp	/^  void Gnote::on_show_about_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_show_about_action	src/gnote.hpp	/^  void on_show_about_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
on_show_help_action	src/gnote.cpp	/^  void Gnote::on_show_help_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_show_help_action	src/gnote.hpp	/^  void on_show_help_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
on_show_preferences_action	src/gnote.cpp	/^  void Gnote::on_show_preferences_action(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
on_show_preferences_action	src/gnote.hpp	/^  void on_show_preferences_action(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
on_show_statistics	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::on_show_statistics()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
on_show_statistics	src/addins/statistics/statisticsapplicationaddin.hpp	/^  void on_show_statistics();$/;"	p	class:statistics::StatisticsApplicationAddin	access:private	signature:()
on_show_window_menu	src/recentchanges.cpp	/^  void NoteRecentChanges::on_show_window_menu()$/;"	f	class:gnote::NoteRecentChanges	signature:()
on_show_window_menu	src/recentchanges.hpp	/^  void on_show_window_menu();$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:()
on_size_changed	src/tray.cpp	/^  bool TrayIcon::on_size_changed(int size)$/;"	f	class:gnote::TrayIcon	signature:(int size)
on_sorting_changed	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_sorting_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
on_sorting_changed	src/searchnoteswidget.hpp	/^  void on_sorting_changed();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
on_spell_check_enable_action	src/watchers.cpp	/^  void NoteSpellChecker::on_spell_check_enable_action()$/;"	f	class:gnote::NoteSpellChecker	signature:()
on_spell_check_enable_action	src/watchers.hpp	/^    void on_spell_check_enable_action();$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:()
on_startup	src/gnote.cpp	/^  void Gnote::on_startup()$/;"	f	class:gnote::Gnote	signature:()
on_sync_addin_combo_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_sync_addin_combo_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_sync_addin_combo_changed	src/preferencesdialog.hpp	/^  void on_sync_addin_combo_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_sync_addin_prefs_changed	src/preferencesdialog.cpp	/^  void PreferencesDialog::on_sync_addin_prefs_changed()$/;"	f	class:gnote::PreferencesDialog	signature:()
on_sync_addin_prefs_changed	src/preferencesdialog.hpp	/^  void on_sync_addin_prefs_changed();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
on_sync_dialog_response	src/gnote.cpp	/^  void Gnote::on_sync_dialog_response(int)$/;"	f	class:gnote::Gnote	signature:(int)
on_sync_dialog_response	src/gnote.hpp	/^  void on_sync_dialog_response(int response_id);$/;"	p	class:gnote::Gnote	access:private	signature:(int response_id)
on_tag_added	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tag_added(const NoteBase & note, const Tag::Ptr& tag)$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase & note, const Tag::Ptr& tag)
on_tag_added	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase&, const Tag::Ptr&)
on_tag_added	src/notetag.cpp	/^  void NoteTagTable::on_tag_added(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
on_tag_added	src/watchers.hpp	/^    void on_tag_added(const NoteBase&, const Tag::Ptr&);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase&, const Tag::Ptr&)
on_tag_applied	src/notebuffer.cpp	/^  void NoteBuffer::on_tag_applied(const Glib::RefPtr<Gtk::TextTag> & tag1,$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag1, const Gtk::TextIter & start_char, const Gtk::TextIter &end_char)
on_tag_applied	src/notebuffer.hpp	/^  void on_tag_applied(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &,const Gtk::TextIter &)
on_tag_applied	src/undo.cpp	/^  void UndoManager::on_tag_applied(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::UndoManager	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
on_tag_applied	src/undo.hpp	/^  void on_tag_applied(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::UndoManager	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
on_tag_changed	src/notebuffer.cpp	/^  void NoteBuffer::on_tag_changed(const Glib::RefPtr<Gtk::TextTag> & tag, bool)$/;"	f	class:gnote::NoteBuffer	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, bool)
on_tag_changed	src/notebuffer.hpp	/^  void on_tag_changed(const Glib::RefPtr<Gtk::TextTag> &, bool);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> &, bool)
on_tag_removed	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tag_removed(const NoteBase::Ptr& note, $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(const NoteBase::Ptr& note, const std::string& normalizedTagName)
on_tag_removed	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(const NoteBase::Ptr&, const std::string&)
on_tag_removed	src/notetag.cpp	/^  void NoteTagTable::on_tag_removed(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
on_tag_removed	src/undo.cpp	/^  void UndoManager::on_tag_removed(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::UndoManager	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
on_tag_removed	src/undo.hpp	/^  void on_tag_removed(const Glib::RefPtr<Gtk::TextTag> &,$/;"	p	class:gnote::UndoManager	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
on_tag_removed	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_removed(const NoteBase::Ptr&, const std::string& tag_name)$/;"	f	class:gnote::NoteTagsWatcher	signature:(const NoteBase::Ptr&, const std::string& tag_name)
on_tag_removed	src/watchers.hpp	/^    void on_tag_removed(const NoteBase::Ptr&, const std::string&);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase::Ptr&, const std::string&)
on_tag_removing	src/watchers.cpp	/^  void NoteTagsWatcher::on_tag_removing(const NoteBase& note, const Tag & tag)$/;"	f	class:gnote::NoteTagsWatcher	signature:(const NoteBase& note, const Tag & tag)
on_tag_removing	src/watchers.hpp	/^    void on_tag_removing(const NoteBase&, const Tag &);$/;"	p	class:gnote::NoteTagsWatcher	access:private	signature:(const NoteBase&, const Tag &)
on_text_button_clicked	src/notewindow.cpp	/^  void NoteWindow::on_text_button_clicked()$/;"	f	class:gnote::NoteWindow	signature:()
on_text_button_clicked	src/notewindow.hpp	/^  void on_text_button_clicked();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_toc_help_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_toc_help_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_toc_help_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_toc_help_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
on_toc_popup_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_toc_popup_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
on_toc_popup_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_toc_popup_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
on_toggle_cell_toggled	src/noterenamedialog.cpp	/^void NoteRenameDialog::on_toggle_cell_toggled(const std::string & p)$/;"	f	class:gnote::NoteRenameDialog	signature:(const std::string & p)
on_toggle_cell_toggled	src/noterenamedialog.hpp	/^  void on_toggle_cell_toggled(const std::string & p);$/;"	p	class:gnote::NoteRenameDialog	access:private	signature:(const std::string & p)
on_tray_notebook_menu_hidden	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tray_notebook_menu_hidden()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
on_tray_notebook_menu_hidden	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tray_notebook_menu_hidden();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
on_tray_notebook_menu_shown	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::on_tray_notebook_menu_shown()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
on_tray_notebook_menu_shown	src/notebooks/notebookapplicationaddin.hpp	/^      void on_tray_notebook_menu_shown();$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:()
on_treeview_button_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_button_pressed(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
on_treeview_button_pressed	src/searchnoteswidget.hpp	/^  bool on_treeview_button_pressed(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
on_treeview_button_released	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_button_released(GdkEventButton *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventButton *ev)
on_treeview_button_released	src/searchnoteswidget.hpp	/^  bool on_treeview_button_released(GdkEventButton *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventButton *)
on_treeview_drag_data_get	src/searchnoteswidget.cpp	/^void SearchNotesWidget::on_treeview_drag_data_get(const Glib::RefPtr<Gdk::DragContext> &,$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::RefPtr<Gdk::DragContext> &, Gtk::SelectionData &selection_data, guint, guint)
on_treeview_drag_data_get	src/searchnoteswidget.hpp	/^  void on_treeview_drag_data_get(const Glib::RefPtr<Gdk::DragContext> &,$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::RefPtr<Gdk::DragContext> &, Gtk::SelectionData &, guint, guint)
on_treeview_key_pressed	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_key_pressed(GdkEventKey * ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventKey * ev)
on_treeview_key_pressed	src/searchnoteswidget.hpp	/^  bool on_treeview_key_pressed(GdkEventKey *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventKey *)
on_treeview_motion_notify	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::on_treeview_motion_notify(GdkEventMotion *ev)$/;"	f	class:gnote::SearchNotesWidget	signature:(GdkEventMotion *ev)
on_treeview_motion_notify	src/searchnoteswidget.hpp	/^  bool on_treeview_motion_notify(GdkEventMotion *);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(GdkEventMotion *)
on_untemplate_button_click	src/notewindow.cpp	/^  void NoteWindow::on_untemplate_button_click()$/;"	f	class:gnote::NoteWindow	signature:()
on_untemplate_button_click	src/notewindow.hpp	/^  void on_untemplate_button_click();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
on_url_tag_activated	src/watchers.cpp	/^  bool NoteUrlWatcher::on_url_tag_activated(const NoteEditor &,$/;"	f	class:gnote::NoteUrlWatcher	signature:(const NoteEditor &, const Gtk::TextIter & start, const Gtk::TextIter & end)
on_url_tag_activated	src/watchers.hpp	/^    bool on_url_tag_activated(const NoteEditor &,$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &, const Gtk::TextIter &)
on_window_backgrounded	src/watchers.cpp	/^  void NoteRenameWatcher::on_window_backgrounded()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
on_window_backgrounded	src/watchers.hpp	/^    void on_window_backgrounded();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
on_window_destroyed	src/note.cpp	/^  bool Note::on_window_destroyed(GdkEventAny * \/*ev*\/)$/;"	f	class:gnote::Note	signature:(GdkEventAny * )
on_window_destroyed	src/note.hpp	/^  bool on_window_destroyed(GdkEventAny *ev);$/;"	p	class:gnote::Note	access:private	signature:(GdkEventAny *ev)
open_help_activate	src/notewindow.cpp	/^  void NoteWindow::open_help_activate()$/;"	f	class:gnote::NoteWindow	signature:()
open_help_activate	src/notewindow.hpp	/^  void open_help_activate();$/;"	p	class:gnote::NoteWindow	access:private	signature:()
open_link_activate	src/watchers.cpp	/^  void NoteUrlWatcher::open_link_activate()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
open_link_activate	src/watchers.hpp	/^    void open_link_activate();$/;"	p	class:gnote::NoteUrlWatcher	access:private	signature:()
open_note	src/gnote.cpp	/^  void Gnote::open_note(const Note::Ptr & note)$/;"	f	class:gnote::Gnote	signature:(const Note::Ptr & note)
open_note	src/ignote.hpp	/^  virtual void open_note(const Note::Ptr & note) = 0;$/;"	p	class:gnote::IGnote	access:public	signature:(const Note::Ptr & note)
open_note_sync_window	src/gnote.cpp	/^  void Gnote::open_note_sync_window(const Glib::VariantBase&)$/;"	f	class:gnote::Gnote	signature:(const Glib::VariantBase&)
open_note_sync_window	src/gnote.hpp	/^  void open_note_sync_window(const Glib::VariantBase&);$/;"	p	class:gnote::Gnote	access:public	signature:(const Glib::VariantBase&)
open_or_create_link	src/watchers.cpp	/^  bool NoteLinkWatcher::open_or_create_link(const NoteEditor &,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const NoteEditor &, const Gtk::TextIter & start, const Gtk::TextIter & end)
open_or_create_link	src/watchers.hpp	/^    bool open_or_create_link(const NoteEditor &, const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const NoteEditor &, const Gtk::TextIter &,const Gtk::TextIter &)
open_search_all	src/gnote.cpp	/^  void Gnote::open_search_all()$/;"	f	class:gnote::Gnote	signature:()
open_search_all	src/ignote.hpp	/^  virtual void open_search_all() = 0;$/;"	p	class:gnote::IGnote	access:public	signature:()
open_template_button_clicked	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^void NoteOfTheDayPreferences::open_template_button_clicked() const$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:() const
open_template_button_clicked	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  void open_template_button_clicked() const;$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:private	signature:() const
open_template_button_clicked	src/preferencesdialog.cpp	/^  void  PreferencesDialog::open_template_button_clicked()$/;"	f	class:gnote::PreferencesDialog	signature:()
open_template_button_clicked	src/preferencesdialog.hpp	/^  void open_template_button_clicked();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
open_url	src/utils.cpp	/^    void open_url(const std::string & url)$/;"	f	namespace:gnote::utils	signature:(const std::string & url)
open_url	src/utils.hpp	/^    void open_url(const std::string & url) throw (Glib::Error);$/;"	p	namespace:gnote::utils	signature:(const std::string & url)
operator !=	src/sharp/datetime.hpp	/^  bool operator!=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator ()	src/actionmanager.hpp	/^      bool operator() (const AppMenuItem *x, const AppMenuItem *y)$/;"	f	struct:gnote::ActionManager::AppMenuItem::ptr_comparator	access:public	signature:(const AppMenuItem *x, const AppMenuItem *y)
operator ()	src/noterenamedialog.cpp	/^  void operator()(const NoteBase::Ptr & note);$/;"	p	class:gnote::ModelFiller	file:	access:public	signature:(const NoteBase::Ptr & note)
operator ()	src/noterenamedialog.cpp	/^void ModelFiller::operator()(const NoteBase::Ptr & note)$/;"	f	class:gnote::ModelFiller	signature:(const NoteBase::Ptr & note)
operator ()	src/preferencesdialog.cpp	/^    bool operator()(sync::SyncServiceAddin *x, sync::SyncServiceAddin *y)$/;"	f	struct:gnote::CompareSyncAddinsByName	access:public	signature:(sync::SyncServiceAddin *x, sync::SyncServiceAddin *y)
operator ()	src/sharp/modulefactory.hpp	/^  virtual IInterface *operator()() = 0;$/;"	p	class:sharp::IfaceFactoryBase	access:public	signature:()
operator -	src/sharp/datetime.cpp	/^  DateTime DateTime::operator-(const TimeSpan & ts) const$/;"	f	class:sharp::DateTime	signature:(const TimeSpan & ts) const
operator -	src/sharp/datetime.cpp	/^  TimeSpan DateTime::operator-(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
operator -	src/sharp/datetime.hpp	/^  DateTime operator-(const TimeSpan & ts) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const TimeSpan & ts) const
operator -	src/sharp/datetime.hpp	/^  TimeSpan operator-(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator -	src/sharp/timespan.cpp	/^  TimeSpan TimeSpan::operator-(const TimeSpan & ts)$/;"	f	class:sharp::TimeSpan	signature:(const TimeSpan & ts)
operator -	src/sharp/timespan.hpp	/^    TimeSpan operator-(const TimeSpan & ts);$/;"	p	class:sharp::TimeSpan	access:public	signature:(const TimeSpan & ts)
operator <	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator<(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
operator <	src/notebooks/notebookmenuitem.hpp	/^      bool operator<(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
operator <	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator<(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
operator <	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator<(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
operator <	src/sharp/datetime.hpp	/^  bool operator<(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator <=	src/sharp/datetime.hpp	/^  bool operator<=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator =	src/notebooks/notebook.hpp	/^  Notebook & operator=(const Notebook &);$/;"	p	class:gnote::notebooks::Notebook	access:private	signature:(const Notebook &)
operator ==	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator==(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
operator ==	src/notebooks/notebookmenuitem.hpp	/^      bool operator==(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
operator ==	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator==(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
operator ==	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator==(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
operator ==	src/sharp/datetime.cpp	/^  bool DateTime::operator==(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
operator ==	src/sharp/datetime.hpp	/^  bool operator==(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator >	src/notebooks/notebookmenuitem.cpp	/^    bool NotebookMenuItem::operator>(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookMenuItem	signature:(const NotebookMenuItem & rhs)
operator >	src/notebooks/notebookmenuitem.hpp	/^      bool operator>(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookMenuItem	access:public	signature:(const NotebookMenuItem &)
operator >	src/notebooks/notebooknewnotemenuitem.cpp	/^    bool NotebookNewNoteMenuItem::operator>(const NotebookMenuItem & rhs)$/;"	f	class:gnote::notebooks::NotebookNewNoteMenuItem	signature:(const NotebookMenuItem & rhs)
operator >	src/notebooks/notebooknewnotemenuitem.hpp	/^  bool operator>(const NotebookMenuItem &);$/;"	p	class:gnote::notebooks::NotebookNewNoteMenuItem	access:public	signature:(const NotebookMenuItem &)
operator >	src/sharp/datetime.cpp	/^  bool DateTime::operator>(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
operator >	src/sharp/datetime.hpp	/^  bool operator>(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator >=	src/sharp/datetime.hpp	/^  bool operator>=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
operator []	src/iactionmanager.hpp	/^  virtual Glib::RefPtr<Gtk::Action> operator[](const std::string & n) const = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & n) const
order	src/actionmanager.hpp	/^    int order;$/;"	m	struct:gnote::ActionManager::AppMenuItem	access:public
org	src/dbus/remotecontrol-client-glue.hpp	/^namespace org {$/;"	n
org	src/dbus/remotecontrol-glue.hpp	/^namespace org {$/;"	n
org	src/dbus/searchprovider.cpp	/^namespace org {$/;"	n	file:
org	src/dbus/searchprovider.hpp	/^namespace org {$/;"	n
org	src/remotecontrolproxy.hpp	/^namespace org {$/;"	n
org::gnome	src/dbus/remotecontrol-client-glue.hpp	/^namespace gnome {$/;"	n	namespace:org
org::gnome	src/dbus/remotecontrol-glue.hpp	/^namespace gnome {$/;"	n	namespace:org
org::gnome	src/dbus/searchprovider.cpp	/^namespace gnome {$/;"	n	namespace:org	file:
org::gnome	src/dbus/searchprovider.hpp	/^namespace gnome {$/;"	n	namespace:org
org::gnome	src/remotecontrolproxy.hpp	/^namespace gnome {$/;"	n	namespace:org
org::gnome::Gnote	src/dbus/remotecontrol-client-glue.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
org::gnome::Gnote	src/dbus/remotecontrol-glue.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
org::gnome::Gnote	src/dbus/searchprovider.cpp	/^namespace Gnote {$/;"	n	namespace:org::gnome	file:
org::gnome::Gnote	src/dbus/searchprovider.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
org::gnome::Gnote	src/remotecontrolproxy.hpp	/^namespace Gnote {$/;"	n	namespace:org::gnome
org::gnome::Gnote::RemoteControl_adaptor	src/dbus/remotecontrol-glue.hpp	/^class RemoteControl_adaptor$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::InterfaceVTable
org::gnome::Gnote::RemoteControl_adaptor::AddTagToNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool AddTagToNote(const std::string& uri, const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& tag_name)
org::gnome::Gnote::RemoteControl_adaptor::AddTagToNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase AddTagToNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::CreateNamedNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string CreateNamedNote(const std::string& linked_title) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& linked_title)
org::gnome::Gnote::RemoteControl_adaptor::CreateNamedNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase CreateNamedNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::CreateNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string CreateNote() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
org::gnome::Gnote::RemoteControl_adaptor::CreateNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase CreateNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::DeleteNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DeleteNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::DeleteNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DeleteNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::DisplayNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DisplayNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::DisplayNoteWithSearch	src/dbus/remotecontrol-glue.hpp	/^  virtual bool DisplayNoteWithSearch(const std::string& uri, const std::string& search) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& search)
org::gnome::Gnote::RemoteControl_adaptor::DisplayNoteWithSearch_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplayNoteWithSearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::DisplayNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplayNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::DisplaySearch	src/dbus/remotecontrol-glue.hpp	/^  virtual void DisplaySearch() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
org::gnome::Gnote::RemoteControl_adaptor::DisplaySearchWithText	src/dbus/remotecontrol-glue.hpp	/^  virtual void DisplaySearchWithText(const std::string& search_text) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& search_text)
org::gnome::Gnote::RemoteControl_adaptor::DisplaySearchWithText_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplaySearchWithText_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::DisplaySearch_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase DisplaySearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::FindNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string FindNote(const std::string& linked_title) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& linked_title)
org::gnome::Gnote::RemoteControl_adaptor::FindNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase FindNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::FindStartHereNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string FindStartHereNote() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
org::gnome::Gnote::RemoteControl_adaptor::FindStartHereNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase FindStartHereNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetAllNotesWithTag	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> GetAllNotesWithTag(const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& tag_name)
org::gnome::Gnote::RemoteControl_adaptor::GetAllNotesWithTag_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetAllNotesWithTag_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteChangeDate	src/dbus/remotecontrol-glue.hpp	/^  virtual int32_t GetNoteChangeDate(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteChangeDate_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteChangeDate_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteCompleteXml	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteCompleteXml(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteCompleteXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteContents	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteContents(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteContentsXml	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteContentsXml(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteContentsXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteContentsXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteContents_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteContents_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteCreateDate	src/dbus/remotecontrol-glue.hpp	/^  virtual int32_t GetNoteCreateDate(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteCreateDate_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteCreateDate_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteTitle	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string GetNoteTitle(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetNoteTitle_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetNoteTitle_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::GetTagsForNote	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> GetTagsForNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::GetTagsForNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase GetTagsForNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::Glib::stub_func	src/dbus/remotecontrol-glue.hpp	/^  typedef Glib::VariantContainerBase (RemoteControl_adaptor::*stub_func)(const Glib::VariantContainerBase &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::Glib	access:private
org::gnome::Gnote::RemoteControl_adaptor::HideNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool HideNote(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::HideNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase HideNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::ListAllNotes	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> ListAllNotes() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
org::gnome::Gnote::RemoteControl_adaptor::ListAllNotes_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase ListAllNotes_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::NoteAdded	src/dbus/remotecontrol-glue.hpp	/^  void NoteAdded(const std::string & );$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string & )
org::gnome::Gnote::RemoteControl_adaptor::NoteDeleted	src/dbus/remotecontrol-glue.hpp	/^  void NoteDeleted(const std::string &, const std::string &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string &, const std::string &)
org::gnome::Gnote::RemoteControl_adaptor::NoteExists	src/dbus/remotecontrol-glue.hpp	/^  virtual bool NoteExists(const std::string& uri) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri)
org::gnome::Gnote::RemoteControl_adaptor::NoteExists_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase NoteExists_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::NoteSaved	src/dbus/remotecontrol-glue.hpp	/^  void NoteSaved(const std::string &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string &)
org::gnome::Gnote::RemoteControl_adaptor::RemoteControl_adaptor	src/dbus/remotecontrol-glue.hpp	/^  RemoteControl_adaptor(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const char *interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
org::gnome::Gnote::RemoteControl_adaptor::RemoveTagFromNote	src/dbus/remotecontrol-glue.hpp	/^  virtual bool RemoveTagFromNote(const std::string& uri, const std::string& tag_name) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& tag_name)
org::gnome::Gnote::RemoteControl_adaptor::RemoveTagFromNote_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase RemoveTagFromNote_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::SearchNotes	src/dbus/remotecontrol-glue.hpp	/^  virtual std::vector<std::string> SearchNotes(const std::string& query, const bool& case_sensitive) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& query, const bool& case_sensitive)
org::gnome::Gnote::RemoteControl_adaptor::SearchNotes_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SearchNotes_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteCompleteXml	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteCompleteXml(const std::string& uri, const std::string& xml_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& xml_contents)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteCompleteXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteCompleteXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteContents	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteContents(const std::string& uri, const std::string& text_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& text_contents)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteContentsXml	src/dbus/remotecontrol-glue.hpp	/^  virtual bool SetNoteContentsXml(const std::string& uri, const std::string& xml_contents) = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:(const std::string& uri, const std::string& xml_contents)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteContentsXml_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteContentsXml_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::SetNoteContents_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase SetNoteContents_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::Version	src/dbus/remotecontrol-glue.hpp	/^  virtual std::string Version() = 0;$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:public	signature:()
org::gnome::Gnote::RemoteControl_adaptor::Version_stub	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase Version_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::RemoteControl_adaptor::bool_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef bool (RemoteControl_adaptor::*bool_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::bool_string_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef bool (RemoteControl_adaptor::*bool_string_string_func)(const std::string &, const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::emit_signal	src/dbus/remotecontrol-glue.hpp	/^  void emit_signal(const Glib::ustring & name, const Glib::VariantContainerBase & parameters);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::ustring & name, const Glib::VariantContainerBase & parameters)
org::gnome::Gnote::RemoteControl_adaptor::int_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef int32_t (RemoteControl_adaptor::*int_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::m_connection	src/dbus/remotecontrol-glue.hpp	/^  Glib::RefPtr<Gio::DBus::Connection> m_connection;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::m_interface_name	src/dbus/remotecontrol-glue.hpp	/^  const char *m_interface_name;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::m_path	src/dbus/remotecontrol-glue.hpp	/^  const char *m_path;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::m_stubs	src/dbus/remotecontrol-glue.hpp	/^  std::map<Glib::ustring, stub_func> m_stubs;$/;"	m	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_adaptor::on_method_call	src/dbus/remotecontrol-glue.hpp	/^  void on_method_call(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const Glib::ustring & sender, const Glib::ustring & object_path, const Glib::ustring & interface_name, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
org::gnome::Gnote::RemoteControl_adaptor::std::string_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::string (RemoteControl_adaptor::*string_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
org::gnome::Gnote::RemoteControl_adaptor::std::vectorstring_string_bool_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_string_bool_func)(const std::string &, const bool &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
org::gnome::Gnote::RemoteControl_adaptor::std::vectorstring_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
org::gnome::Gnote::RemoteControl_adaptor::std::vectorstring_void_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_void_func)();$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
org::gnome::Gnote::RemoteControl_adaptor::stub_bool_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_bool_string(const Glib::VariantContainerBase &, bool_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, bool_string_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_bool_string_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_bool_string_string(const Glib::VariantContainerBase &, bool_string_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, bool_string_string_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_int_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_int_string(const Glib::VariantContainerBase &, int_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, int_string_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_string_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_string_string(const Glib::VariantContainerBase &, string_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, string_string_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_vectorstring_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_string(const Glib::VariantContainerBase &, vectorstring_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_string_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_vectorstring_string_bool	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_string_bool(const Glib::VariantContainerBase &, vectorstring_string_bool_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_string_bool_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_vectorstring_void	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_void(const Glib::VariantContainerBase &, vectorstring_void_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_void_func)
org::gnome::Gnote::RemoteControl_adaptor::stub_void_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_void_string(const Glib::VariantContainerBase &, void_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, void_string_func)
org::gnome::Gnote::RemoteControl_adaptor::void_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef void (RemoteControl_adaptor::*void_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
org::gnome::Gnote::RemoteControl_proxy	src/dbus/remotecontrol-client-glue.hpp	/^class RemoteControl_proxy$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::Proxy
org::gnome::Gnote::RemoteControl_proxy::CreateNamedNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string CreateNamedNote(const std::string & linked_title);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & linked_title)
org::gnome::Gnote::RemoteControl_proxy::CreateNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string CreateNote();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
org::gnome::Gnote::RemoteControl_proxy::DisplayNote	src/dbus/remotecontrol-client-glue.hpp	/^  bool DisplayNote(const std::string & uri);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri)
org::gnome::Gnote::RemoteControl_proxy::DisplayNoteWithSearch	src/dbus/remotecontrol-client-glue.hpp	/^  bool DisplayNoteWithSearch(const std::string & uri, const std::string & search);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri, const std::string & search)
org::gnome::Gnote::RemoteControl_proxy::DisplaySearch	src/dbus/remotecontrol-client-glue.hpp	/^  void DisplaySearch();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
org::gnome::Gnote::RemoteControl_proxy::DisplaySearchWithText	src/dbus/remotecontrol-client-glue.hpp	/^  void DisplaySearchWithText(const std::string & search_text);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & search_text)
org::gnome::Gnote::RemoteControl_proxy::FindNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string FindNote(const std::string & linked_title);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & linked_title)
org::gnome::Gnote::RemoteControl_proxy::FindStartHereNote	src/dbus/remotecontrol-client-glue.hpp	/^  std::string FindStartHereNote();$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:()
org::gnome::Gnote::RemoteControl_proxy::RemoteControl_proxy	src/dbus/remotecontrol-client-glue.hpp	/^  RemoteControl_proxy(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const char * name, const char * p, const char * interface_name, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & gnote_interface)
org::gnome::Gnote::RemoteControl_proxy::SetNoteCompleteXml	src/dbus/remotecontrol-client-glue.hpp	/^  bool SetNoteCompleteXml(const std::string & uri, const std::string & xml_contents);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:public	signature:(const std::string & uri, const std::string & xml_contents)
org::gnome::Gnote::RemoteControl_proxy::call_remote	src/dbus/remotecontrol-client-glue.hpp	/^  Glib::VariantContainerBase call_remote(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters);$/;"	p	class:org::gnome::Gnote::RemoteControl_proxy	access:private	signature:(const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters)
org::gnome::Gnote::SearchProvider	src/dbus/searchprovider.hpp	/^class SearchProvider$/;"	c	namespace:org::gnome::Gnote	inherits:Gio::DBus::InterfaceVTable
org::gnome::Gnote::SearchProvider::ActivateResult	src/dbus/searchprovider.cpp	/^void SearchProvider::ActivateResult(const Glib::ustring & identifier,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::ustring & identifier, const std::vector<Glib::ustring> & , guint32 )
org::gnome::Gnote::SearchProvider::ActivateResult	src/dbus/searchprovider.hpp	/^  void ActivateResult(const Glib::ustring & identifier, const std::vector<Glib::ustring> & terms, guint32 timestamp);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const Glib::ustring & identifier, const std::vector<Glib::ustring> & terms, guint32 timestamp)
org::gnome::Gnote::SearchProvider::ActivateResult_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::ActivateResult_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
org::gnome::Gnote::SearchProvider::ActivateResult_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase ActivateResult_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::GetInitialResultSet	src/dbus/searchprovider.cpp	/^std::vector<Glib::ustring> SearchProvider::GetInitialResultSet(const std::vector<Glib::ustring> & terms)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const std::vector<Glib::ustring> & terms)
org::gnome::Gnote::SearchProvider::GetInitialResultSet	src/dbus/searchprovider.hpp	/^  std::vector<Glib::ustring> GetInitialResultSet(const std::vector<Glib::ustring> & terms);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const std::vector<Glib::ustring> & terms)
org::gnome::Gnote::SearchProvider::GetInitialResultSet_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetInitialResultSet_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
org::gnome::Gnote::SearchProvider::GetInitialResultSet_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetInitialResultSet_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::GetResultMetas	src/dbus/searchprovider.cpp	/^std::vector<std::map<Glib::ustring, Glib::ustring> > SearchProvider::GetResultMetas($/;"	f	class:org::gnome::Gnote::SearchProvider	signature:( const std::vector<Glib::ustring> & identifiers)
org::gnome::Gnote::SearchProvider::GetResultMetas	src/dbus/searchprovider.hpp	/^  std::vector<std::map<Glib::ustring, Glib::ustring> > GetResultMetas($/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:( const std::vector<Glib::ustring> & identifiers)
org::gnome::Gnote::SearchProvider::GetResultMetas_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetResultMetas_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
org::gnome::Gnote::SearchProvider::GetResultMetas_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetResultMetas_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::GetSubsearchResultSet	src/dbus/searchprovider.cpp	/^std::vector<Glib::ustring> SearchProvider::GetSubsearchResultSet($/;"	f	class:org::gnome::Gnote::SearchProvider	signature:( const std::vector<Glib::ustring> & previous_results, const std::vector<Glib::ustring> & terms)
org::gnome::Gnote::SearchProvider::GetSubsearchResultSet	src/dbus/searchprovider.hpp	/^  std::vector<Glib::ustring> GetSubsearchResultSet(const std::vector<Glib::ustring> & previous_results,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const std::vector<Glib::ustring> & previous_results, const std::vector<Glib::ustring> & terms)
org::gnome::Gnote::SearchProvider::GetSubsearchResultSet_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::GetSubsearchResultSet_stub(const Glib::VariantContainerBase & params)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase & params)
org::gnome::Gnote::SearchProvider::GetSubsearchResultSet_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase GetSubsearchResultSet_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::Glib::stub_func	src/dbus/searchprovider.hpp	/^  typedef Glib::VariantContainerBase (SearchProvider::*stub_func)(const Glib::VariantContainerBase &);$/;"	t	class:org::gnome::Gnote::SearchProvider::Glib	access:private
org::gnome::Gnote::SearchProvider::LaunchSearch_stub	src/dbus/searchprovider.cpp	/^Glib::VariantContainerBase SearchProvider::LaunchSearch_stub(const Glib::VariantContainerBase &)$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::LaunchSearch_stub	src/dbus/searchprovider.hpp	/^  Glib::VariantContainerBase LaunchSearch_stub(const Glib::VariantContainerBase &);$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::VariantContainerBase &)
org::gnome::Gnote::SearchProvider::SearchProvider	src/dbus/searchprovider.cpp	/^SearchProvider::SearchProvider(const Glib::RefPtr<Gio::DBus::Connection> & conn,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & search_interface, gnote::NoteManager & manager)
org::gnome::Gnote::SearchProvider::SearchProvider	src/dbus/searchprovider.hpp	/^  SearchProvider(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, const char *object_path, const Glib::RefPtr<Gio::DBus::InterfaceInfo> & search_interface, gnote::NoteManager & manager)
org::gnome::Gnote::SearchProvider::get_icon	src/dbus/searchprovider.cpp	/^gchar *SearchProvider::get_icon()$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:()
org::gnome::Gnote::SearchProvider::get_icon	src/dbus/searchprovider.hpp	/^  gchar *get_icon();$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:()
org::gnome::Gnote::SearchProvider::m_manager	src/dbus/searchprovider.hpp	/^  gnote::NoteManager & m_manager;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
org::gnome::Gnote::SearchProvider::m_note_icon	src/dbus/searchprovider.hpp	/^  Glib::RefPtr<Gio::Icon> m_note_icon;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
org::gnome::Gnote::SearchProvider::m_stubs	src/dbus/searchprovider.hpp	/^  std::map<Glib::ustring, stub_func> m_stubs;$/;"	m	class:org::gnome::Gnote::SearchProvider	access:private
org::gnome::Gnote::SearchProvider::on_method_call	src/dbus/searchprovider.cpp	/^void SearchProvider::on_method_call(const Glib::RefPtr<Gio::DBus::Connection> &,$/;"	f	class:org::gnome::Gnote::SearchProvider	signature:(const Glib::RefPtr<Gio::DBus::Connection> &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring &, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
org::gnome::Gnote::SearchProvider::on_method_call	src/dbus/searchprovider.hpp	/^  void on_method_call(const Glib::RefPtr<Gio::DBus::Connection> & connection,$/;"	p	class:org::gnome::Gnote::SearchProvider	access:private	signature:(const Glib::RefPtr<Gio::DBus::Connection> & connection, const Glib::ustring & sender, const Glib::ustring & object_path, const Glib::ustring & interface_name, const Glib::ustring & method_name, const Glib::VariantContainerBase & parameters, const Glib::RefPtr<Gio::DBus::MethodInvocation> & invocation)
override	src/actionmanager.hpp	/^                                 const std::string & action_def) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> add_app_action(const std::string & name) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual Glib::RefPtr<Gio::SimpleAction> get_app_action(const std::string & name) const override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_main_window_search_actions() override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual std::vector<Gtk::MenuItem*> get_tray_menu_items() override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual void add_main_window_search_action(const Glib::RefPtr<Gtk::Action> & action, int order) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual void add_tray_menu_item(Gtk::MenuItem & item) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual void remove_main_window_search_action(const std::string & name) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/actionmanager.hpp	/^  virtual void remove_tray_menu_item(Gtk::MenuItem & item) override;$/;"	m	class:gnote::ActionManager	access:public
override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:backlinks::BacklinkAction	access:public
override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:backlinks::BacklinkAction	access:protected
override	src/addins/backlinks/backlinkmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:backlinks::BacklinkMenuItem	access:protected
override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
override	src/addins/backlinks/backlinksnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:backlinks::BacklinksNoteAddin	access:public
override	src/addins/bugzilla/bugzillalink.hpp	/^                           const Gtk::TextIter &) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
override	src/addins/bugzilla/bugzillalink.hpp	/^  virtual void initialize(const std::string & element_name) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
override	src/addins/bugzilla/bugzillalink.hpp	/^  virtual void on_attribute_read(const std::string &) override;$/;"	m	class:bugzilla::BugzillaLink	access:protected
override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
override	src/addins/bugzilla/bugzillanoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:bugzilla::BugzillaNoteAddin	access:public
override	src/addins/bugzilla/bugzillapreferences.hpp	/^  virtual void on_realize() override;$/;"	m	class:bugzilla::BugzillaPreferences	access:protected
override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
override	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:public
override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
override	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool is_configured() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool is_supported() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual bool save_configuration() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual gnote::sync::SyncServer::Ptr create_sync_server() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual std::string id() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual std::string name() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void post_sync_cleanup() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void reset_configuration() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:filesystemsyncservice::FileSystemSyncServiceAddin	access:public
override	src/addins/fixedwidth/fixedwidthmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:fixedwidth::FixedWidthMenuItem	access:protected
override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
override	src/addins/fixedwidth/fixedwidthnoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:fixedwidth::FixedWidthNoteAddin	access:public
override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
override	src/addins/inserttimestamp/inserttimestampnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:inserttimestamp::InsertTimestampNoteAddin	access:public
override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
override	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:public
override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
override	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public
override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
override	src/addins/statistics/statisticswidget.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:statistics::StatisticsWidget	access:public
override	src/addins/statistics/statisticswidget.hpp	/^  virtual void background() override;$/;"	m	class:statistics::StatisticsWidget	access:public
override	src/addins/statistics/statisticswidget.hpp	/^  virtual void foreground() override;$/;"	m	class:statistics::StatisticsWidget	access:public
override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual bool first_run(gnote::NoteManager & manager) override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual bool want_to_run(gnote::NoteManager & manager) override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
override	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:tableofcontents::TableofcontentsAction	access:protected
override	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  virtual void on_activate() override;$/;"	m	class:tableofcontents::TableofcontentsAction	access:protected
override	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:protected
override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
override	src/addins/todo/todonoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:todo::Todo	access:public
override	src/addins/todo/todonoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:todo::Todo	access:public
override	src/addins/todo/todonoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:todo::Todo	access:public
override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual bool first_run(gnote::NoteManager & manager) override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual bool want_to_run(gnote::NoteManager & manager) override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
override	src/addins/underline/underlinemenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:underline::UnderlineMenuItem	access:protected
override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool are_settings_valid() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool is_configured() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool verify_configuration() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string fuse_mount_directory_error() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string fuse_mount_exe_name() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string id() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string name() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual void reset_configuration_values() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual void save_configuration_values() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
override	src/base/macros.hpp	51;"	d
override	src/dbus/remotecontrol.hpp	/^  virtual bool AddTagToNote(const std::string& uri, const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool DeleteNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool DisplayNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool DisplayNoteWithSearch(const std::string& uri, const std::string& search) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool HideNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool NoteExists(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool RemoveTagFromNote(const std::string& uri, const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteCompleteXml(const std::string& uri, const std::string& xml_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteContents(const std::string& uri, const std::string& text_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual bool SetNoteContentsXml(const std::string& uri, const std::string& xml_contents) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual int32_t GetNoteChangeDate(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual int32_t GetNoteCreateDate(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string CreateNamedNote(const std::string& linked_title) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string CreateNote() override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string FindNote(const std::string& linked_title) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string FindStartHereNote() override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteCompleteXml(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteContents(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteContentsXml(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string GetNoteTitle(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::string Version() override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > GetAllNotesWithTag(const std::string& tag_name) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > GetTagsForNote(const std::string& uri) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > ListAllNotes() override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual std::vector< std::string > SearchNotes(const std::string& query, const bool& case_sensitive) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual void DisplaySearch() override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/dbus/remotecontrol.hpp	/^  virtual void DisplaySearchWithText(const std::string& search_text) override;$/;"	m	class:gnote::RemoteControl	access:public
override	src/gnote.hpp	/^  virtual MainWindow & get_main_window() override;$/;"	m	class:gnote::Gnote	access:public
override	src/gnote.hpp	/^  virtual MainWindow & get_window_for_note() override;$/;"	m	class:gnote::Gnote	access:public
override	src/gnote.hpp	/^  virtual MainWindow & new_main_window() override;$/;"	m	class:gnote::Gnote	access:public
override	src/gnote.hpp	/^  virtual int on_command_line(const Glib::RefPtr<Gio::ApplicationCommandLine> & command_line) override;$/;"	m	class:gnote::Gnote	access:protected
override	src/gnote.hpp	/^  virtual void on_startup() override;$/;"	m	class:gnote::Gnote	access:protected
override	src/gnote.hpp	/^  virtual void open_note(const Note::Ptr & note) override;$/;"	m	class:gnote::Gnote	access:public
override	src/gnote.hpp	/^  virtual void open_search_all() override;$/;"	m	class:gnote::Gnote	access:public
override	src/importaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:gnote::ImportAddin	access:public
override	src/note.hpp	/^                                  const NoteBase::Ptr & renamed, bool rename) override;$/;"	m	class:gnote::Note	access:private
override	src/note.hpp	/^  virtual const Glib::ustring & text() override;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:public
override	src/note.hpp	/^  virtual void delete_note() override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void enabled(bool is_enabled) override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void queue_save(ChangeType c) override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void remove_tag(Tag &) override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void rename_without_link_update(const Glib::ustring & newTitle) override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void save() override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void set_text(const Glib::ustring & t) override;$/;"	m	class:gnote::NoteDataBufferSynchronizer	access:public
override	src/note.hpp	/^  virtual void set_title(const Glib::ustring & new_title, bool from_user_action) override;$/;"	m	class:gnote::Note	access:public
override	src/note.hpp	/^  virtual void set_xml_content(const Glib::ustring & xml) override;$/;"	m	class:gnote::Note	access:public
override	src/noteaddin.hpp	/^  virtual void dispose(bool) override;$/;"	m	class:gnote::NoteAddin	access:public
override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual bool initialized() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual void initialize() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
override	src/notebooks/notebookapplicationaddin.hpp	/^      virtual void shutdown() override;$/;"	m	class:gnote::notebooks::NotebookApplicationAddin	access:public
override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
override	src/notebooks/notebooknoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:public
override	src/notebooks/notebookstreeview.hpp	/^                                        guint info, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
override	src/notebooks/notebookstreeview.hpp	/^                                int x, int y, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
override	src/notebooks/notebookstreeview.hpp	/^    virtual void on_drag_leave(const Glib::RefPtr<Gdk::DragContext> & context, guint time) override;$/;"	m	class:gnote::notebooks::NotebooksTreeView	access:protected
override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual Glib::RefPtr<Gdk::Pixbuf> get_icon() override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual Note::Ptr   get_template_note() const override;$/;"	m	class:gnote::notebooks::SpecialNotebook	access:protected
override	src/notebooks/specialnotebooks.hpp	/^  virtual Tag::Ptr    get_tag() const override;$/;"	m	class:gnote::notebooks::SpecialNotebook	access:protected
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        add_note(const Note::Ptr &) override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual bool        contains_note(const Note::Ptr & note, bool include_system = false) override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::AllNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::PinnedNotesNotebook	access:public
override	src/notebooks/specialnotebooks.hpp	/^  virtual std::string get_normalized_name() const override;$/;"	m	class:gnote::notebooks::UnfiledNotesNotebook	access:public
override	src/notebuffer.hpp	/^                       const Gtk::TextIter &,  const Gtk::TextIter &) override;$/;"	m	class:gnote::NoteBuffer	access:protected
override	src/noteeditor.hpp	/^                                     guint info,  guint time) override;$/;"	m	class:gnote::NoteEditor	access:protected
override	src/notemanager.hpp	/^                                                    const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^                                          const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual NoteBase::Ptr create_new_note(Glib::ustring title, const std::string & guid) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual NoteBase::Ptr get_or_create_template_note() override;$/;"	m	class:gnote::NoteManager	access:public
override	src/notemanager.hpp	/^    virtual NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual NoteBase::Ptr note_load(const Glib::ustring & file_name) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual void _common_init(const Glib::ustring & directory, const Glib::ustring & backup) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual void migrate_notes(const std::string & old_note_dir) override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notemanager.hpp	/^    virtual void post_load() override;$/;"	m	class:gnote::NoteManager	access:protected
override	src/notetag.hpp	/^  virtual bool on_event(const Glib::RefPtr<Glib::Object> &, GdkEvent *, const Gtk::TextIter & ) override;$/;"	m	class:gnote::NoteTag	access:protected
override	src/notetag.hpp	/^  virtual void on_tag_added(const Glib::RefPtr<Gtk::TextTag> &) override;$/;"	m	class:gnote::NoteTagTable	access:protected
override	src/notetag.hpp	/^  virtual void on_tag_removed(const Glib::RefPtr<Gtk::TextTag> &) override;$/;"	m	class:gnote::NoteTagTable	access:protected
override	src/notetag.hpp	/^  virtual void read(sharp::XmlReader &, bool) override;$/;"	m	class:gnote::DynamicNoteTag	access:public
override	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const override;$/;"	m	class:gnote::DepthNoteTag	access:public
override	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const override;$/;"	m	class:gnote::DynamicNoteTag	access:public
override	src/notewindow.hpp	/^    virtual void reference() const override;$/;"	m	class:gnote::NoteWindow::NonModifyingAction	access:public
override	src/notewindow.hpp	/^    virtual void unreference() const override;$/;"	m	class:gnote::NoteWindow::NonModifyingAction	access:public
override	src/notewindow.hpp	/^  virtual Gtk::Grid *embeddable_toolbar() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual bool goto_next_result() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual bool goto_previous_result() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual bool supports_goto_result() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual void background() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual void foreground() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual void hint_size(int & width, int & height) override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual void on_show() override;$/;"	m	class:gnote::NoteTextMenu	access:protected
override	src/notewindow.hpp	/^  virtual void perform_search(const std::string & text) override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/notewindow.hpp	/^  virtual void size_internals() override;$/;"	m	class:gnote::NoteWindow	access:public
override	src/recentchanges.hpp	/^  virtual bool contains(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual bool is_foreground(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual bool on_map_event(GdkEventAny *evt) override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
override	src/recentchanges.hpp	/^  virtual void background_embedded(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void close_window() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void embed_widget(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void foreground_embedded(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void new_note() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void on_show() override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
override	src/recentchanges.hpp	/^  virtual void present_note(const Note::Ptr & note) override;$/;"	m	class:gnote::NoteRecentChanges	access:protected
override	src/recentchanges.hpp	/^  virtual void present_search() override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void set_search_text(const std::string & value) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void show_search_bar(bool grab_focus = true) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/recentchanges.hpp	/^  virtual void unembed_widget(EmbeddableWidget &) override;$/;"	m	class:gnote::NoteRecentChanges	access:public
override	src/searchnoteswidget.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual std::vector<Glib::RefPtr<Gtk::Action> > get_widget_actions() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual void background() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual void foreground() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual void hint_size(int & width, int & height) override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual void perform_search(const std::string & search_text) override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/searchnoteswidget.hpp	/^  virtual void size_internals() override;$/;"	m	class:gnote::SearchNotesWidget	access:public
override	src/sharp/exception.hpp	/^  virtual const char *what() const throw() override;$/;"	m	class:sharp::Exception	access:public
override	src/sharp/propertyeditor.hpp	/^    virtual void setup() override;$/;"	m	class:sharp::PropertyEditor	access:public
override	src/sharp/propertyeditor.hpp	/^    virtual void setup() override;$/;"	m	class:sharp::PropertyEditorBool	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual SyncLockInfo current_sync_lock() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool begin_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool cancel_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool commit_sync_transaction() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual bool updates_available_since(int revision) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual int latest_revision() override; \/\/ NOTE: Only reliable during a transaction$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::list<std::string> get_all_note_uuids() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::map<std::string, NoteUpdate> get_note_updates_since(int revision) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual std::string id() override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual void delete_notes(const std::list<std::string> & deletedNoteUUIDs) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/filesystemsyncserver.hpp	/^  virtual void upload_notes(const std::list<Note::Ptr> & notes) override;$/;"	m	class:gnote::sync::FileSystemSyncServer	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual SyncServer::Ptr create_sync_server() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool is_supported() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool save_configuration() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void post_sync_cleanup() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void reset_configuration() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:gnote::sync::FuseSyncServiceAddin	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual int get_revision(const NoteBase::Ptr & note) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual void associated_server_id(const std::string &) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual void last_sync_date(const sharp::DateTime &) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual void last_synchronized_revision(int) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual void reset() override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/gnotesyncclient.hpp	/^    virtual void set_revision(const NoteBase::Ptr & note, int revision) override;$/;"	m	class:gnote::sync::GnoteSyncClient	access:public
override	src/synchronization/silentui.hpp	/^                                        const std::list<std::string> & noteUpdateTitles) override;$/;"	m	class:gnote::sync::SilentUI	access:private
override	src/synchronization/silentui.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) override;$/;"	m	class:gnote::sync::SilentUI	access:private
override	src/synchronization/silentui.hpp	/^    virtual void present_ui() override;$/;"	m	class:gnote::sync::SilentUI	access:private
override	src/synchronization/silentui.hpp	/^    virtual void sync_state_changed(SyncState state) override;$/;"	m	class:gnote::sync::SilentUI	access:private
override	src/synchronization/syncdialog.hpp	/^                                        const std::list<std::string> & noteUpdateTitles) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
override	src/synchronization/syncdialog.hpp	/^    virtual void note_synchronized(const std::string & noteTitle, NoteSyncType type) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
override	src/synchronization/syncdialog.hpp	/^    virtual void on_realize() override;$/;"	m	class:gnote::sync::SyncDialog	access:protected
override	src/synchronization/syncdialog.hpp	/^    virtual void present_ui() override;$/;"	m	class:gnote::sync::SyncDialog	access:public
override	src/synchronization/syncdialog.hpp	/^    virtual void sync_state_changed(SyncState state) override;$/;"	m	class:gnote::sync::SyncDialog	access:public
override	src/synchronization/syncmanager.hpp	/^    virtual bool synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2) override;$/;"	m	class:gnote::sync::SyncManager	access:public
override	src/synchronization/syncmanager.hpp	/^    virtual void perform_synchronization(const SyncUI::Ptr & sync_ui) override;$/;"	m	class:gnote::sync::SyncManager	access:public
override	src/synchronization/syncmanager.hpp	/^    virtual void reset_client() override;$/;"	m	class:gnote::sync::SyncManager	access:public
override	src/synchronization/syncmanager.hpp	/^    virtual void resolve_conflict(SyncTitleConflictResolution resolution) override;$/;"	m	class:gnote::sync::SyncManager	access:public
override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_or_create_system_tag(const std::string & name) override;$/;"	m	class:gnote::TagManager	access:public
override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_or_create_tag(const std::string &) override;$/;"	m	class:gnote::TagManager	access:public
override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_system_tag(const std::string & tag_name) const override;$/;"	m	class:gnote::TagManager	access:public
override	src/tagmanager.hpp	/^  virtual Tag::Ptr get_tag(const std::string & tag_name) const override;$/;"	m	class:gnote::TagManager	access:public
override	src/tagmanager.hpp	/^  virtual void all_tags(std::list<Tag::Ptr> &) const override;$/;"	m	class:gnote::TagManager	access:public
override	src/tagmanager.hpp	/^  virtual void remove_tag(const Tag::Ptr & tag) override;$/;"	m	class:gnote::TagManager	access:public
override	src/test/testnotemanager.hpp	/^  virtual gnote::NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) override;$/;"	m	class:test::NoteManager	access:protected
override	src/test/testnotemanager.hpp	/^  virtual gnote::NoteBase::Ptr note_load(const Glib::ustring & file_name) override;$/;"	m	class:test::NoteManager	access:protected
override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_or_create_system_tag(const std::string & name) override;$/;"	m	class:test::TagManager	access:public
override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_or_create_tag(const std::string &) override;$/;"	m	class:test::TagManager	access:public
override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_system_tag(const std::string & tag_name) const override;$/;"	m	class:test::TagManager	access:public
override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_tag(const std::string & tag_name) const override;$/;"	m	class:test::TagManager	access:public
override	src/test/testtagmanager.hpp	/^  virtual void all_tags(std::list<gnote::Tag::Ptr> &) const override;$/;"	m	class:test::TagManager	access:public
override	src/test/testtagmanager.hpp	/^  virtual void remove_tag(const gnote::Tag::Ptr & tag) override;$/;"	m	class:test::TagManager	access:public
override	src/tray.hpp	/^  virtual bool on_button_press_event(GdkEventButton *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
override	src/tray.hpp	/^  virtual bool on_button_release_event(GdkEventButton *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
override	src/tray.hpp	/^  virtual bool on_leave_notify_event(GdkEventCrossing *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
override	src/tray.hpp	/^  virtual bool on_motion_notify_event(GdkEventMotion *) override;$/;"	m	class:gnote::NoteMenuItem	access:protected
override	src/tray.hpp	/^  virtual bool on_size_changed(int size) override;$/;"	m	class:gnote::TrayIcon	access:protected
override	src/tray.hpp	/^  virtual void on_activate() override;$/;"	m	class:gnote::NoteMenuItem	access:protected
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::ChangeDepthAction	access:public
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::EraseAction	access:public
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::InsertAction	access:public
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::InsertBulletAction	access:public
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::TagApplyAction	access:public
override	src/undo.hpp	/^  virtual bool can_merge(const EditAction * action) const override;$/;"	m	class:gnote::TagRemoveAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::ChangeDepthAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::EraseAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::InsertAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::InsertBulletAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::TagApplyAction	access:public
override	src/undo.hpp	/^  virtual void destroy() override;$/;"	m	class:gnote::TagRemoveAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::EraseAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::InsertAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::InsertBulletAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::TagApplyAction	access:public
override	src/undo.hpp	/^  virtual void merge(EditAction * action) override;$/;"	m	class:gnote::TagRemoveAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::EraseAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertBulletAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagApplyAction	access:public
override	src/undo.hpp	/^  virtual void redo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagRemoveAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::ChangeDepthAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::EraseAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::InsertBulletAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagApplyAction	access:public
override	src/undo.hpp	/^  virtual void undo(Gtk::TextBuffer * buffer) override;$/;"	m	class:gnote::TagRemoveAction	access:public
override	src/utils.hpp	/^      virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:gnote::utils::CheckAction	access:protected
override	src/utils.hpp	/^      virtual bool on_button_press_event(GdkEventButton *) override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
override	src/utils.hpp	/^      virtual bool on_mnemonic_activate(bool group_cycling) override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
override	src/utils.hpp	/^      virtual void on_activate() override;$/;"	m	class:gnote::utils::CheckAction	access:protected
override	src/utils.hpp	/^      virtual void on_clicked() override;$/;"	m	class:gnote::utils::ToolMenuButton	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
override	src/watchers.hpp	/^    virtual void initialize() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
override	src/watchers.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::MouseHandWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteLinkWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteRenameWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteSpellChecker	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteTagsWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteUrlWatcher	access:public
override	src/watchers.hpp	/^    virtual void shutdown() override;$/;"	m	class:gnote::NoteWikiWatcher	access:public
override	src/xkeybinder.hpp	/^                              Gdk::ModifierType & mods) override;$/;"	m	class:gnote::XKeybinder	access:public
override	src/xkeybinder.hpp	/^  virtual void bind(const std::string & keystring, const sigc::slot<void> & handler) override;$/;"	m	class:gnote::XKeybinder	access:public
override	src/xkeybinder.hpp	/^  virtual void unbind(const std::string & keystring) override;$/;"	m	class:gnote::XKeybinder	access:public
override	src/xkeybinder.hpp	/^  virtual void unbind_all() override;$/;"	m	class:gnote::XKeybinder	access:public
overwriteOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *overwriteOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
parse	src/gnote.cpp	/^  void GnoteCommandLine::parse(int &argc, gchar ** & argv)$/;"	f	class:gnote::GnoteCommandLine	signature:(int &argc, gchar ** & argv)
parse	src/gnote.hpp	/^  void parse(int &argc, gchar ** & argv);$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:(int &argc, gchar ** & argv)
parse	src/sharp/timespan.cpp	/^  TimeSpan TimeSpan::parse(const std::string & s)$/;"	f	class:sharp::TimeSpan	signature:(const std::string & s)
parse	src/sharp/timespan.hpp	/^    static TimeSpan parse(const std::string & s);$/;"	p	class:sharp::TimeSpan	access:public	signature:(const std::string & s)
parse	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::parse(const std::string & manifest_path)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & manifest_path)
parse	src/synchronization/gnotesyncclient.hpp	/^    void parse(const std::string & manifest_path);$/;"	p	class:gnote::sync::GnoteSyncClient	access:protected	signature:(const std::string & manifest_path)
parse_func	src/gnote.cpp	/^  gboolean GnoteCommandLine::parse_func(const gchar *option_name,$/;"	f	class:gnote::GnoteCommandLine	signature:(const gchar *option_name, const gchar *value, gpointer data, GError ** )
parse_func	src/gnote.hpp	/^  static gboolean parse_func(const gchar *option_name,$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:(const gchar *option_name, const gchar *value, gpointer data, GError **error)
parse_host	src/addins/bugzilla/bugzillapreferences.cpp	/^  std::string BugzillaPreferences::parse_host(const sharp::FileInfo & file_info)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const sharp::FileInfo & file_info)
parse_host	src/addins/bugzilla/bugzillapreferences.hpp	/^  std::string parse_host(const sharp::FileInfo &);$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const sharp::FileInfo &)
parse_sorting_setting	src/searchnoteswidget.cpp	/^void SearchNotesWidget::parse_sorting_setting(const Glib::ustring & sorting)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Glib::ustring & sorting)
parse_sorting_setting	src/searchnoteswidget.hpp	/^  void parse_sorting_setting(const Glib::ustring & sorting);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Glib::ustring & sorting)
parse_tags	src/notebase.cpp	/^void NoteBase::parse_tags(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)$/;"	f	class:gnote::NoteBase	signature:(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)
parse_tags	src/notebase.hpp	/^  static void parse_tags(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags);$/;"	p	class:gnote::NoteBase	access:public	signature:(const xmlNodePtr tagnodes, std::list<Glib::ustring> & tags)
payload	src/trie.hpp	/^    value_t payload() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
payload	src/trie.hpp	/^    void payload(const value_t & p)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(const value_t & p)
payload_present	src/trie.hpp	/^    bool payload_present() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
payload_present	src/trie.hpp	/^    void payload_present(bool pp)$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:(bool pp)
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	data/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	data/appdata/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	data/icons/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	help/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libtomboy/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/backlinks/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/bugzilla/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/exporttogtg/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/exporttohtml/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/filesystemsyncservice/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/fixedwidth/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/inserttimestamp/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/notedirectorywatcher/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/noteoftheday/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/printnotes/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/readonly/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/replacetitle/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/specialnotes/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/statistics/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/stickynoteimport/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/tableofcontents/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/todo/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/tomboyimport/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/underline/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/addins/webdavsyncservice/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	src/dbus/Makefile	/^pdfdir = ${docdir}$/;"	m
perform_read	src/sharp/process.cpp	/^bool Process::perform_read(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
perform_read	src/sharp/process.hpp	/^  bool perform_read(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
perform_search	src/mainwindowembeds.hpp	/^  virtual void perform_search(const std::string & search_text) = 0;$/;"	p	class:gnote::SearchableItem	access:public	signature:(const std::string & search_text)
perform_search	src/notewindow.cpp	/^  void NoteFindHandler::perform_search(const std::string & txt)$/;"	f	class:gnote::NoteFindHandler	signature:(const std::string & txt)
perform_search	src/notewindow.cpp	/^  void NoteWindow::perform_search(const std::string & text)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & text)
perform_search	src/notewindow.hpp	/^  void perform_search (bool scroll_to_hit);$/;"	p	class:gnote::NoteFindHandler	access:private	signature:(bool scroll_to_hit)
perform_search	src/notewindow.hpp	/^  void perform_search(const std::string & text);$/;"	p	class:gnote::NoteFindHandler	access:public	signature:(const std::string & text)
perform_search	src/searchnoteswidget.cpp	/^void SearchNotesWidget::perform_search()$/;"	f	class:gnote::SearchNotesWidget	signature:()
perform_search	src/searchnoteswidget.cpp	/^void SearchNotesWidget::perform_search(const std::string & search_text)$/;"	f	class:gnote::SearchNotesWidget	signature:(const std::string & search_text)
perform_search	src/searchnoteswidget.hpp	/^  void perform_search();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
perform_synchronization	src/synchronization/isyncmanager.hpp	/^  virtual void perform_synchronization(const SyncUI::Ptr & sync_ui) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(const SyncUI::Ptr & sync_ui)
perform_synchronization	src/synchronization/syncmanager.cpp	/^  void SyncManager::perform_synchronization(const SyncUI::Ptr & sync_ui)$/;"	f	class:gnote::sync::SyncManager	signature:(const SyncUI::Ptr & sync_ui)
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	data/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	data/appdata/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	data/icons/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	help/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	libtomboy/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/backlinks/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/bugzilla/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/exporttogtg/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/exporttohtml/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/filesystemsyncservice/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/fixedwidth/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/inserttimestamp/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/notedirectorywatcher/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/noteoftheday/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/printnotes/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/readonly/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/replacetitle/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/specialnotes/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/statistics/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/stickynoteimport/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/tableofcontents/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/todo/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/tomboyimport/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/underline/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/addins/webdavsyncservice/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgdatadir	src/dbus/Makefile	/^pkgdatadir = $(datadir)\/gnote$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	data/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	data/appdata/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	data/icons/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	help/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	libtomboy/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/backlinks/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/bugzilla/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/exporttogtg/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/exporttohtml/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/filesystemsyncservice/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/fixedwidth/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/inserttimestamp/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/notedirectorywatcher/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/noteoftheday/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/printnotes/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/readonly/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/replacetitle/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/specialnotes/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/statistics/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/stickynoteimport/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/tableofcontents/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/todo/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/tomboyimport/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/underline/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/addins/webdavsyncservice/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkgincludedir	src/dbus/Makefile	/^pkgincludedir = $(includedir)\/gnote$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	data/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	data/appdata/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	data/icons/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	help/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	libtomboy/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/backlinks/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/bugzilla/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/exporttogtg/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/exporttohtml/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/filesystemsyncservice/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/fixedwidth/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/inserttimestamp/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/notedirectorywatcher/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/noteoftheday/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/printnotes/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/readonly/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/replacetitle/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/specialnotes/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/statistics/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/stickynoteimport/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/tableofcontents/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/todo/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/tomboyimport/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/underline/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/addins/webdavsyncservice/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibdir	src/dbus/Makefile	/^pkglibdir = $(libdir)\/gnote$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	data/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	data/appdata/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	data/icons/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	help/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	libtomboy/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/backlinks/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/bugzilla/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/exporttogtg/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/exporttohtml/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/filesystemsyncservice/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/fixedwidth/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/inserttimestamp/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/notedirectorywatcher/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/noteoftheday/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/printnotes/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/readonly/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/replacetitle/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/specialnotes/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/statistics/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/stickynoteimport/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/tableofcontents/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/todo/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/tomboyimport/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/underline/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/addins/webdavsyncservice/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
pkglibexecdir	src/dbus/Makefile	/^pkglibexecdir = $(libexecdir)\/gnote$/;"	m
place_cursor_and_selection	src/note.cpp	/^    void place_cursor_and_selection(const NoteData & data, const Glib::RefPtr<NoteBuffer> & buffer)$/;"	f	namespace:gnote::__anon9	signature:(const NoteData & data, const Glib::RefPtr<NoteBuffer> & buffer)
popularity	src/tag.cpp	/^  int Tag::popularity() const$/;"	f	class:gnote::Tag	signature:() const
popularity	src/tag.hpp	/^    int popularity() const;$/;"	p	class:gnote::Tag	access:public	signature:() const
populate_action_groups	src/actionmanager.cpp	/^  void ActionManager::populate_action_groups()$/;"	f	class:gnote::ActionManager	signature:()
populate_action_groups	src/actionmanager.hpp	/^  void populate_action_groups();$/;"	p	class:gnote::ActionManager	access:public	signature:()
populate_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::populate_toc_menu (Gtk::Menu *toc_menu, bool has_action_entries)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu *toc_menu, bool has_action_entries)
populate_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void populate_toc_menu (Gtk::Menu *toc_menu, bool has_action_entries = true);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu *toc_menu, bool has_action_entries = true)
popup_context_menu_at_location	src/searchnoteswidget.cpp	/^void SearchNotesWidget::popup_context_menu_at_location(Gtk::Menu *menu, int x, int y)$/;"	f	class:gnote::SearchNotesWidget	signature:(Gtk::Menu *menu, int x, int y)
popup_context_menu_at_location	src/searchnoteswidget.hpp	/^  void popup_context_menu_at_location(Gtk::Menu *, int, int);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(Gtk::Menu *, int, int)
popup_menu	src/utils.cpp	/^    void popup_menu(Gtk::Menu &menu, const GdkEventButton * ev)$/;"	f	namespace:gnote::utils	signature:(Gtk::Menu &menu, const GdkEventButton * ev)
popup_menu	src/utils.hpp	/^    void popup_menu(Gtk::Menu &menu, const GdkEventButton *);$/;"	p	namespace:gnote::utils	signature:(Gtk::Menu &menu, const GdkEventButton *)
position	src/notebuffer.hpp	/^    Glib::RefPtr<Gtk::TextMark>   position;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
position_context_menu	src/searchnoteswidget.cpp	/^void SearchNotesWidget::position_context_menu(int & x, int & y, bool & push_in)$/;"	f	class:gnote::SearchNotesWidget	signature:(int & x, int & y, bool & push_in)
position_context_menu	src/searchnoteswidget.hpp	/^  void position_context_menu(int & x, int & y, bool & push_in);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(int & x, int & y, bool & push_in)
post_load	src/notemanager.cpp	/^  void NoteManager::post_load()$/;"	f	class:gnote::NoteManager	signature:()
post_load	src/notemanagerbase.cpp	/^void NoteManagerBase::post_load()$/;"	f	class:gnote::NoteManagerBase	signature:()
post_load	src/notemanagerbase.hpp	/^  virtual void post_load();$/;"	p	class:gnote::NoteManagerBase	access:protected	signature:()
post_sync_cleanup	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::post_sync_cleanup()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
post_sync_cleanup	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::post_sync_cleanup()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
post_sync_cleanup	src/synchronization/syncserviceaddin.hpp	/^    virtual void post_sync_cleanup() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
preferences_setting_changed	src/synchronization/syncmanager.cpp	/^  void SyncManager::preferences_setting_changed(const Glib::ustring &)$/;"	f	class:gnote::sync::SyncManager	signature:(const Glib::ustring &)
preferences_setting_changed	src/synchronization/syncmanager.hpp	/^    void preferences_setting_changed(const Glib::ustring & key);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Glib::ustring & key)
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	data/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	data/appdata/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	data/icons/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	help/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libtomboy/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	po/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/backlinks/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/bugzilla/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/exporttogtg/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/exporttohtml/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/filesystemsyncservice/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/fixedwidth/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/inserttimestamp/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/notedirectorywatcher/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/noteoftheday/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/printnotes/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/readonly/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/replacetitle/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/specialnotes/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/statistics/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/stickynoteimport/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/tableofcontents/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/todo/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/tomboyimport/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/underline/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/addins/webdavsyncservice/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	src/dbus/Makefile	/^prefix = \/usr\/local$/;"	m
prepare_mount_path	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::prepare_mount_path()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
prepare_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  void prepare_mount_path();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
present	src/utils.hpp	/^      void present()$/;"	f	class:gnote::utils::ForcedPresentWindow	access:public	signature:()
present_active	src/mainwindow.cpp	/^MainWindow *MainWindow::present_active(const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note)
present_active	src/mainwindow.hpp	/^  static MainWindow *present_active(const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note)
present_default	src/mainwindow.cpp	/^MainWindow *MainWindow::present_default(const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note)
present_default	src/mainwindow.hpp	/^  static MainWindow *present_default(const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note)
present_in	src/mainwindow.cpp	/^void MainWindow::present_in(MainWindow & win, const Note::Ptr & note)$/;"	f	class:gnote::MainWindow	signature:(MainWindow & win, const Note::Ptr & note)
present_in	src/mainwindow.hpp	/^  static void present_in(MainWindow & win, const Note::Ptr & note);$/;"	p	class:gnote::MainWindow	access:public	signature:(MainWindow & win, const Note::Ptr & note)
present_in_new_window	src/mainwindow.cpp	/^MainWindow *MainWindow::present_in_new_window(const Note::Ptr & note, bool close_on_esc)$/;"	f	class:gnote::MainWindow	signature:(const Note::Ptr & note, bool close_on_esc)
present_in_new_window	src/mainwindow.hpp	/^  static MainWindow *present_in_new_window(const Note::Ptr & note, bool close_on_esacpe);$/;"	p	class:gnote::MainWindow	access:public	signature:(const Note::Ptr & note, bool close_on_esacpe)
present_note	src/dbus/remotecontrol.cpp	/^MainWindow & RemoteControl::present_note(const NoteBase::Ptr & note)$/;"	f	class:gnote::RemoteControl	signature:(const NoteBase::Ptr & note)
present_note	src/dbus/remotecontrol.hpp	/^  MainWindow & present_note(const NoteBase::Ptr &);$/;"	p	class:gnote::RemoteControl	access:private	signature:(const NoteBase::Ptr &)
present_note	src/mainwindow.hpp	/^  virtual void present_note(const Note::Ptr & note) = 0;$/;"	p	class:gnote::MainWindow	access:protected	signature:(const Note::Ptr & note)
present_note	src/recentchanges.cpp	/^  void NoteRecentChanges::present_note(const Note::Ptr & note)$/;"	f	class:gnote::NoteRecentChanges	signature:(const Note::Ptr & note)
present_note	src/synchronization/syncdialog.cpp	/^void SyncDialog::present_note(const Note::Ptr & note)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & note)
present_note	src/synchronization/syncdialog.hpp	/^    void present_note(const Note::Ptr &);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr &)
present_search	src/mainwindow.hpp	/^  virtual void present_search() = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:()
present_search	src/recentchanges.cpp	/^  void NoteRecentChanges::present_search()$/;"	f	class:gnote::NoteRecentChanges	signature:()
present_ui	src/synchronization/silentui.cpp	/^  void SilentUI::present_ui()$/;"	f	class:gnote::sync::SilentUI	signature:()
present_ui	src/synchronization/syncdialog.cpp	/^void SyncDialog::present_ui()$/;"	f	class:gnote::sync::SyncDialog	signature:()
present_ui	src/synchronization/syncui.hpp	/^    virtual void present_ui() = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
print_button_clicked	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::print_button_clicked()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
print_button_clicked	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void print_button_clicked();$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:()
print_footer	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void print_footer(const Glib::RefPtr<Gtk::PrintContext>&, guint);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&, guint)
print_usage	test-driver	/^print_usage ()$/;"	f
print_version	src/gnote.cpp	/^  void GnoteCommandLine::print_version()$/;"	f	class:gnote::GnoteCommandLine	signature:()
print_version	src/gnote.hpp	/^  void        print_version();$/;"	p	class:gnote::GnoteCommandLine	access:private	signature:()
printnotes	src/addins/printnotes/printnotesnoteaddin.cpp	/^namespace printnotes {$/;"	n	file:
printnotes	src/addins/printnotes/printnotesnoteaddin.hpp	/^namespace printnotes {$/;"	n
printnotes::DECLARE_MODULE	src/addins/printnotes/printnotesnoteaddin.hpp	/^DECLARE_MODULE(PrintNotesModule);$/;"	p	namespace:printnotes	signature:(PrintNotesModule)
printnotes::PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PageBreak$/;"	c	namespace:printnotes
printnotes::PageBreak::PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PageBreak()$/;"	f	class:printnotes::PageBreak	access:public	signature:()
printnotes::PageBreak::PageBreak	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PageBreak(int paragraph, int line)$/;"	f	class:printnotes::PageBreak	access:public	signature:(int paragraph, int line)
printnotes::PageBreak::get_line	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int get_line() const$/;"	f	class:printnotes::PageBreak	access:public	signature:() const
printnotes::PageBreak::get_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int get_paragraph() const$/;"	f	class:printnotes::PageBreak	access:public	signature:() const
printnotes::PageBreak::m_break_line	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int m_break_line;$/;"	m	class:printnotes::PageBreak	access:private
printnotes::PageBreak::m_break_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int m_break_paragraph;$/;"	m	class:printnotes::PageBreak	access:private
printnotes::PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PrintNotesModule$/;"	c	namespace:printnotes	inherits:sharp::DynamicModule
printnotes::PrintNotesModule::PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesModule::PrintNotesModule()$/;"	f	class:printnotes::PrintNotesModule	signature:()
printnotes::PrintNotesModule::PrintNotesModule	src/addins/printnotes/printnotesnoteaddin.hpp	/^  PrintNotesModule();$/;"	p	class:printnotes::PrintNotesModule	access:public	signature:()
printnotes::PrintNotesNoteAddin	src/addins/printnotes/printnotesnoteaddin.hpp	/^class PrintNotesNoteAddin$/;"	c	namespace:printnotes	inherits:gnote::NoteAddin
printnotes::PrintNotesNoteAddin::cm_to_pixel	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static int cm_to_pixel(double cm, double dpi)$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:(double cm, double dpi)
printnotes::PrintNotesNoteAddin::compute_footer_height	src/addins/printnotes/printnotesnoteaddin.cpp	/^  int PrintNotesNoteAddin::compute_footer_height(const Glib::RefPtr<Gtk::PrintContext> & context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
printnotes::PrintNotesNoteAddin::compute_footer_height	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int compute_footer_height(const Glib::RefPtr<Gtk::PrintContext> & context);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
printnotes::PrintNotesNoteAddin::create	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static PrintNotesNoteAddin* create()$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:()
printnotes::PrintNotesNoteAddin::create_layout_for_pagenumbers	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_pagenumbers(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages)
printnotes::PrintNotesNoteAddin::create_layout_for_pagenumbers	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_pagenumbers(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, int page_number, int total_pages)
printnotes::PrintNotesNoteAddin::create_layout_for_paragraph	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_paragraph(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, Gtk::TextIter p_start, Gtk::TextIter p_end, int & indentation)
printnotes::PrintNotesNoteAddin::create_layout_for_paragraph	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_paragraph(const Glib::RefPtr<Gtk::PrintContext> & context, $/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context, Gtk::TextIter p_start, Gtk::TextIter p_end, int & indentation)
printnotes::PrintNotesNoteAddin::create_layout_for_timestamp	src/addins/printnotes/printnotesnoteaddin.cpp	/^  PrintNotesNoteAddin::create_layout_for_timestamp(const Glib::RefPtr<Gtk::PrintContext> & context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
printnotes::PrintNotesNoteAddin::create_layout_for_timestamp	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> create_layout_for_timestamp(const Glib::RefPtr<Gtk::PrintContext> & context);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext> & context)
printnotes::PrintNotesNoteAddin::get_paragraph_attributes	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::get_paragraph_attributes(const Glib::RefPtr<Pango::Layout> & layout,$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Pango::Layout> & layout, double dpiX, int & indentation, Gtk::TextIter & position, const Gtk::TextIter & limit, std::list<Pango::Attribute> & attributes)
printnotes::PrintNotesNoteAddin::get_paragraph_attributes	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void get_paragraph_attributes(const Glib::RefPtr<Pango::Layout> & layout,$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Pango::Layout> & layout, double dpiX, int & indentation, Gtk::TextIter & position, const Gtk::TextIter & limit, std::list<Pango::Attribute> & attributes)
printnotes::PrintNotesNoteAddin::inch_to_pixel	src/addins/printnotes/printnotesnoteaddin.hpp	/^  static int inch_to_pixel(double inch, double dpi)$/;"	f	class:printnotes::PrintNotesNoteAddin	access:public	signature:(double inch, double dpi)
printnotes::PrintNotesNoteAddin::initialize	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::initialize()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
printnotes::PrintNotesNoteAddin::m_margin_bottom	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_bottom;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_margin_left	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_left;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_margin_right	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_right;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_margin_top	src/addins/printnotes/printnotesnoteaddin.hpp	/^  int                  m_margin_top;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_page_breaks	src/addins/printnotes/printnotesnoteaddin.hpp	/^  std::vector<PageBreak> m_page_breaks;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_print_op	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Gtk::PrintOperation> m_print_op;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::m_timestamp_footer	src/addins/printnotes/printnotesnoteaddin.hpp	/^  Glib::RefPtr<Pango::Layout> m_timestamp_footer;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:private
printnotes::PrintNotesNoteAddin::on_begin_print	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_begin_print(const Glib::RefPtr<Gtk::PrintContext>& context)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>& context)
printnotes::PrintNotesNoteAddin::on_begin_print	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_begin_print(const Glib::RefPtr<Gtk::PrintContext>&);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
printnotes::PrintNotesNoteAddin::on_draw_page	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_draw_page(const Glib::RefPtr<Gtk::PrintContext>& context, guint page_nr)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>& context, guint page_nr)
printnotes::PrintNotesNoteAddin::on_draw_page	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_draw_page(const Glib::RefPtr<Gtk::PrintContext>&, guint);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&, guint)
printnotes::PrintNotesNoteAddin::on_end_print	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_end_print(const Glib::RefPtr<Gtk::PrintContext>&)$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
printnotes::PrintNotesNoteAddin::on_end_print	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void on_end_print(const Glib::RefPtr<Gtk::PrintContext>&);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&)
printnotes::PrintNotesNoteAddin::on_note_opened	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::on_note_opened()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
printnotes::PrintNotesNoteAddin::override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
printnotes::PrintNotesNoteAddin::override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
printnotes::PrintNotesNoteAddin::override	src/addins/printnotes/printnotesnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:printnotes::PrintNotesNoteAddin	access:public
printnotes::PrintNotesNoteAddin::print_button_clicked	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::print_button_clicked()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
printnotes::PrintNotesNoteAddin::print_button_clicked	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void print_button_clicked();$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:()
printnotes::PrintNotesNoteAddin::print_footer	src/addins/printnotes/printnotesnoteaddin.hpp	/^  void print_footer(const Glib::RefPtr<Gtk::PrintContext>&, guint);$/;"	p	class:printnotes::PrintNotesNoteAddin	access:private	signature:(const Glib::RefPtr<Gtk::PrintContext>&, guint)
printnotes::PrintNotesNoteAddin::shutdown	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::shutdown()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
printnotes::__anon13::PrintNotesAction	src/addins/printnotes/printnotesnoteaddin.cpp	/^    class PrintNotesAction$/;"	c	namespace:printnotes::__anon13	file:	inherits:gnote::NoteWindow::NonModifyingAction
printnotes::__anon13::PrintNotesAction::PrintNotesAction	src/addins/printnotes/printnotesnoteaddin.cpp	/^      PrintNotesAction(gnote::NoteWindow *note_window)$/;"	f	class:printnotes::__anon13::PrintNotesAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
printnotes::__anon13::PrintNotesAction::create	src/addins/printnotes/printnotesnoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:printnotes::__anon13::PrintNotesAction	access:public	signature:(gnote::NoteWindow *note_window)
printnotes::__anon13::PrintNotesAction::create_menu_item_vfunc	src/addins/printnotes/printnotesnoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:printnotes::__anon13::PrintNotesAction	access:protected	signature:()
printnotes::__anon13::PrintNotesAction::m_note_window	src/addins/printnotes/printnotesnoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:printnotes::__anon13::PrintNotesAction	file:	access:private
printnotes_la_LIBADD	src/addins/printnotes/Makefile	/^printnotes_la_LIBADD =$/;"	m
printnotes_la_OBJECTS	src/addins/printnotes/Makefile	/^printnotes_la_OBJECTS = $(am_printnotes_la_OBJECTS)$/;"	m
printnotes_la_SOURCES	src/addins/printnotes/Makefile	/^printnotes_la_SOURCES = printnotesnoteaddin.hpp printnotesnoteaddin.cpp\\$/;"	m
private_icons	data/icons/Makefile	/^private_icons = \\$/;"	m
process_child_widget_queue	src/note.cpp	/^  void Note::process_child_widget_queue()$/;"	f	class:gnote::Note	signature:()
process_child_widget_queue	src/note.hpp	/^  void process_child_widget_queue();$/;"	p	class:gnote::Note	access:private	signature:()
process_rename_link_update	src/note.cpp	/^  void Note::process_rename_link_update(const std::string & old_title)$/;"	f	class:gnote::Note	signature:(const std::string & old_title)
process_rename_link_update	src/note.hpp	/^  void process_rename_link_update(const std::string & old_title);$/;"	p	class:gnote::Note	access:private	signature:(const std::string & old_title)
process_rename_link_update	src/notebase.cpp	/^void NoteBase::process_rename_link_update(const Glib::ustring & old_title)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title)
process_rename_link_update	src/notebase.hpp	/^  virtual void process_rename_link_update(const Glib::ustring & old_title);$/;"	p	class:gnote::NoteBase	access:protected	signature:(const Glib::ustring & old_title)
process_rename_link_update_end	src/note.cpp	/^  void Note::process_rename_link_update_end(int response, Gtk::Dialog *dialog,$/;"	f	class:gnote::Note	signature:(int response, Gtk::Dialog *dialog, const std::string & old_title, const Note::Ptr & self)
process_rename_link_update_end	src/note.hpp	/^  void process_rename_link_update_end(int response, Gtk::Dialog *dialog,$/;"	p	class:gnote::Note	access:private	signature:(int response, Gtk::Dialog *dialog, const std::string & old_title, const Note::Ptr & self)
processing_event	libtomboy/tomboykeybinder.c	/^static gboolean processing_event = FALSE;$/;"	v	file:
program_details	missing	/^program_details ()$/;"	f
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	data/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	data/appdata/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	data/icons/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	help/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libtomboy/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/backlinks/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/bugzilla/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/exporttogtg/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/exporttohtml/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/filesystemsyncservice/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/fixedwidth/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/inserttimestamp/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/notedirectorywatcher/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/noteoftheday/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/printnotes/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/readonly/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/replacetitle/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/specialnotes/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/statistics/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/stickynoteimport/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/tableofcontents/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/todo/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/tomboyimport/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/underline/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/addins/webdavsyncservice/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	src/dbus/Makefile	/^program_transform_name = s,x,x,$/;"	m
progress_text	src/synchronization/syncdialog.cpp	/^std::string SyncDialog::progress_text() const$/;"	f	class:gnote::sync::SyncDialog	signature:() const
progress_text	src/synchronization/syncdialog.cpp	/^void SyncDialog::progress_text(const std::string & value)$/;"	f	class:gnote::sync::SyncDialog	signature:(const std::string & value)
progress_text	src/synchronization/syncdialog.hpp	/^    std::string progress_text() const;$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:() const
progress_text	src/synchronization/syncdialog.hpp	/^    void progress_text(const std::string &);$/;"	p	class:gnote::sync::SyncDialog	access:public	signature:(const std::string &)
promptOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *promptOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
prompt_create_new_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::prompt_create_new_notebook(Gtk::Window *parent)$/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window *parent)
prompt_create_new_notebook	src/notebooks/notebookmanager.cpp	/^    Notebook::Ptr NotebookManager::prompt_create_new_notebook(Gtk::Window *parent,$/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window *parent, const Note::List & notesToAdd)
prompt_create_new_notebook	src/notebooks/notebookmanager.hpp	/^  static Notebook::Ptr prompt_create_new_notebook(Gtk::Window *);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *)
prompt_create_new_notebook	src/notebooks/notebookmanager.hpp	/^  static Notebook::Ptr prompt_create_new_notebook(Gtk::Window *,$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *, const Note::List & notesToAdd)
prompt_delete_notebook	src/notebooks/notebookmanager.cpp	/^    void NotebookManager::prompt_delete_notebook(Gtk::Window * parent, $/;"	f	class:gnote::notebooks::NotebookManager	signature:(Gtk::Window * parent, const Notebook::Ptr & notebook)
prompt_delete_notebook	src/notebooks/notebookmanager.hpp	/^  static void prompt_delete_notebook(Gtk::Window *, const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookManager	access:public	signature:(Gtk::Window *, const Notebook::Ptr &)
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	data/Makefile	/^psdir = ${docdir}$/;"	m
psdir	data/appdata/Makefile	/^psdir = ${docdir}$/;"	m
psdir	data/icons/Makefile	/^psdir = ${docdir}$/;"	m
psdir	help/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libtomboy/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/backlinks/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/bugzilla/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/exporttogtg/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/exporttohtml/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/filesystemsyncservice/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/fixedwidth/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/inserttimestamp/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/notedirectorywatcher/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/noteoftheday/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/printnotes/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/readonly/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/replacetitle/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/specialnotes/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/statistics/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/stickynoteimport/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/tableofcontents/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/todo/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/tomboyimport/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/underline/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/addins/webdavsyncservice/Makefile	/^psdir = ${docdir}$/;"	m
psdir	src/dbus/Makefile	/^psdir = ${docdir}$/;"	m
ptr_comparator	src/actionmanager.hpp	/^    struct ptr_comparator$/;"	s	struct:gnote::ActionManager::AppMenuItem	access:public
public_icons	data/icons/Makefile	/^public_icons = \\$/;"	m
public_icons_themes	data/icons/Makefile	/^public_icons_themes = \\$/;"	m
query_interface	src/sharp/dynamicmodule.cpp	/^  IfaceFactoryBase * DynamicModule::query_interface(const char * intf) const$/;"	f	class:sharp::DynamicModule	signature:(const char * intf) const
query_interface	src/sharp/dynamicmodule.hpp	/^  IfaceFactoryBase * query_interface(const char *) const;$/;"	p	class:sharp::DynamicModule	access:public	signature:(const char *) const
queue_save	src/note.cpp	/^  void Note::queue_save (ChangeType changeType)$/;"	f	class:gnote::Note	signature:(ChangeType changeType)
queue_save	src/notebase.cpp	/^void NoteBase::queue_save(ChangeType c)$/;"	f	class:gnote::NoteBase	signature:(ChangeType c)
queue_save	src/notebase.hpp	/^  virtual void queue_save(ChangeType c);$/;"	p	class:gnote::NoteBase	access:public	signature:(ChangeType c)
quit	src/tray.cpp	/^  void TrayIcon::quit()$/;"	f	class:gnote::TrayIcon	signature:()
quit	src/tray.hpp	/^  void quit();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
radio_toggled	src/synchronization/syncdialog.cpp	/^  void radio_toggled()$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:()
range_deleted_event	src/notebuffer.cpp	/^  void NoteBuffer::range_deleted_event(const Gtk::TextIter & start,const Gtk::TextIter & end_iter)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter & start,const Gtk::TextIter & end_iter)
range_deleted_event	src/notebuffer.hpp	/^  void range_deleted_event(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
read	src/notebase.cpp	/^void NoteArchiver::read(const Glib::ustring & read_file, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & read_file, NoteData & data)
read	src/notebase.cpp	/^void NoteArchiver::read(sharp::XmlReader & xml, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlReader & xml, NoteData & data)
read	src/notebase.hpp	/^  static void read(const Glib::ustring & read_file, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & read_file, NoteData & data)
read	src/notebase.hpp	/^  void read(sharp::XmlReader & xml, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(sharp::XmlReader & xml, NoteData & data)
read	src/notetag.cpp	/^  void DynamicNoteTag::read(sharp::XmlReader & xml, bool start)$/;"	f	class:gnote::DynamicNoteTag	signature:(sharp::XmlReader & xml, bool start)
read	src/notetag.cpp	/^  void NoteTag::read(sharp::XmlReader & xml, bool start)$/;"	f	class:gnote::NoteTag	signature:(sharp::XmlReader & xml, bool start)
read	src/notetag.hpp	/^  virtual void read(sharp::XmlReader &, bool);$/;"	p	class:gnote::NoteTag	access:public	signature:(sharp::XmlReader &, bool)
read	src/sharp/xmlreader.cpp	/^  bool XmlReader::read()$/;"	f	class:sharp::XmlReader	signature:()
read	src/sharp/xmlreader.hpp	/^  bool read();$/;"	p	class:sharp::XmlReader	access:public	signature:()
read_attribute_value	src/sharp/xmlreader.cpp	/^  bool XmlReader::read_attribute_value()$/;"	f	class:sharp::XmlReader	signature:()
read_attribute_value	src/sharp/xmlreader.hpp	/^  bool           read_attribute_value();$/;"	p	class:sharp::XmlReader	access:public	signature:()
read_deleted_note_atts	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_deleted_note_atts(sharp::XmlReader & reader)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader)
read_deleted_note_atts	src/synchronization/gnotesyncclient.hpp	/^    void read_deleted_note_atts(sharp::XmlReader & reader);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader)
read_file	src/notebase.cpp	/^void NoteArchiver::read_file(const Glib::ustring & file, NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & file, NoteData & data)
read_file	src/notebase.hpp	/^  void read_file(const Glib::ustring & file, NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & file, NoteData & data)
read_inner_xml	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_inner_xml()$/;"	f	class:sharp::XmlReader	signature:()
read_inner_xml	src/sharp/xmlreader.hpp	/^  std::string    read_inner_xml();$/;"	p	class:sharp::XmlReader	access:public	signature:()
read_line	src/sharp/process.cpp	/^std::string Process::read_line(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
read_line	src/sharp/process.hpp	/^  std::string read_line(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
read_notes	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_notes(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))
read_notes	src/synchronization/gnotesyncclient.hpp	/^    void read_notes(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&));$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader, void (GnoteSyncClient::*read_note_atts)(sharp::XmlReader&))
read_only	src/notemanagerbase.hpp	/^  bool read_only() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
read_only	src/notemanagerbase.hpp	/^  void read_only(bool ro)$/;"	f	class:gnote::NoteManagerBase	access:public	signature:(bool ro)
read_outer_xml	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_outer_xml()$/;"	f	class:sharp::XmlReader	signature:()
read_outer_xml	src/sharp/xmlreader.hpp	/^  std::string    read_outer_xml();$/;"	p	class:sharp::XmlReader	access:public	signature:()
read_string	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_string()$/;"	f	class:sharp::XmlReader	signature:()
read_string	src/sharp/xmlreader.hpp	/^  std::string    read_string();$/;"	p	class:sharp::XmlReader	access:public	signature:()
read_to_end	src/sharp/streamreader.cpp	/^void StreamReader::read_to_end(std::string & text)$/;"	f	class:sharp::StreamReader	signature:(std::string & text)
read_to_end	src/sharp/streamreader.hpp	/^  void read_to_end(std::string &);$/;"	p	class:sharp::StreamReader	access:public	signature:(std::string &)
read_updated_note_atts	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::read_updated_note_atts(sharp::XmlReader & reader)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(sharp::XmlReader & reader)
read_updated_note_atts	src/synchronization/gnotesyncclient.hpp	/^    void read_updated_note_atts(sharp::XmlReader & reader);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(sharp::XmlReader & reader)
readonly	src/addins/readonly/readonlynoteaddin.cpp	/^namespace readonly {$/;"	n	file:
readonly	src/addins/readonly/readonlynoteaddin.hpp	/^namespace readonly {$/;"	n
readonly::DECLARE_MODULE	src/addins/readonly/readonlynoteaddin.cpp	/^DECLARE_MODULE(ReadOnlyModule);$/;"	p	namespace:readonly	file:	signature:(ReadOnlyModule)
readonly::ReadOnlyModule	src/addins/readonly/readonlynoteaddin.hpp	/^class ReadOnlyModule$/;"	c	namespace:readonly	inherits:sharp::DynamicModule
readonly::ReadOnlyModule::ReadOnlyModule	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyModule::ReadOnlyModule()$/;"	f	class:readonly::ReadOnlyModule	signature:()
readonly::ReadOnlyModule::ReadOnlyModule	src/addins/readonly/readonlynoteaddin.hpp	/^  ReadOnlyModule();$/;"	p	class:readonly::ReadOnlyModule	access:public	signature:()
readonly::ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^class ReadOnlyNoteAddin$/;"	c	namespace:readonly	inherits:gnote::NoteAddin
readonly::ReadOnlyNoteAddin::ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyNoteAddin::ReadOnlyNoteAddin()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^  ReadOnlyNoteAddin();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:private	signature:()
readonly::ReadOnlyNoteAddin::create	src/addins/readonly/readonlynoteaddin.hpp	/^  static ReadOnlyNoteAddin * create()$/;"	f	class:readonly::ReadOnlyNoteAddin	access:public	signature:()
readonly::ReadOnlyNoteAddin::initialize	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::initialize()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::m_action	src/addins/readonly/readonlynoteaddin.hpp	/^  Glib::RefPtr<Gtk::Action> m_action;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:private
readonly::ReadOnlyNoteAddin::on_menu_item_toggled	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::on_menu_item_toggled()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::on_menu_item_toggled	src/addins/readonly/readonlynoteaddin.hpp	/^  void on_menu_item_toggled();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:private	signature:()
readonly::ReadOnlyNoteAddin::on_note_opened	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::on_note_opened()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
readonly::ReadOnlyNoteAddin::override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
readonly::ReadOnlyNoteAddin::override	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:readonly::ReadOnlyNoteAddin	access:public
readonly::ReadOnlyNoteAddin::shutdown	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::shutdown()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::~ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyNoteAddin::~ReadOnlyNoteAddin()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
readonly::ReadOnlyNoteAddin::~ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual ~ReadOnlyNoteAddin();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:public	signature:()
readonly_la_LIBADD	src/addins/readonly/Makefile	/^readonly_la_LIBADD =$/;"	m
readonly_la_OBJECTS	src/addins/readonly/Makefile	/^readonly_la_OBJECTS = $(am_readonly_la_OBJECTS)$/;"	m
readonly_la_SOURCES	src/addins/readonly/Makefile	/^readonly_la_SOURCES = \\$/;"	m
redirect_output	src/sharp/process.cpp	/^void Process::redirect_output(bool redirect, int fileno, int *pipedes)$/;"	f	class:sharp::Process	signature:(bool redirect, int fileno, int *pipedes)
redirect_output	src/sharp/process.hpp	/^  static void redirect_output(bool redirect, int fileno, int *pipedes);$/;"	p	class:sharp::Process	access:private	signature:(bool redirect, int fileno, int *pipedes)
redirect_standard_error	src/sharp/process.hpp	/^  bool redirect_standard_error() const$/;"	f	class:sharp::Process	access:public	signature:() const
redirect_standard_error	src/sharp/process.hpp	/^  void redirect_standard_error(bool redirect)$/;"	f	class:sharp::Process	access:public	signature:(bool redirect)
redirect_standard_error	src/synchronization/fusesyncserviceaddin.hpp	/^  static void redirect_standard_error();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
redirect_standard_output	src/sharp/process.hpp	/^  bool redirect_standard_output() const$/;"	f	class:sharp::Process	access:public	signature:() const
redirect_standard_output	src/sharp/process.hpp	/^  void redirect_standard_output(bool redirect)$/;"	f	class:sharp::Process	access:public	signature:(bool redirect)
redo	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:bugzilla::InsertBugAction	signature:(Gtk::TextBuffer * buffer)
redo	src/addins/bugzilla/insertbugaction.hpp	/^  void redo (Gtk::TextBuffer * buffer);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void ChangeDepthAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::ChangeDepthAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void EraseAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::EraseAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void InsertAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void InsertBulletAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertBulletAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void TagApplyAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagApplyAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.cpp	/^  void TagRemoveAction::redo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagRemoveAction	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.hpp	/^  virtual void redo (Gtk::TextBuffer * buffer) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(Gtk::TextBuffer * buffer)
redo	src/undo.hpp	/^  void redo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
redo_clicked	src/notewindow.cpp	/^  void NoteTextMenu::redo_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
redo_clicked	src/notewindow.hpp	/^  void redo_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
reference	src/notewindow.cpp	/^  void NoteWindow::NonModifyingAction::reference() const$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:() const
reference	src/notewindow.hpp	/^    virtual void reference() const = 0;$/;"	p	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:() const
refresh_sizing_state	src/notewindow.cpp	/^  void NoteTextMenu::refresh_sizing_state()$/;"	f	class:gnote::NoteTextMenu	signature:()
refresh_sizing_state	src/notewindow.hpp	/^  void refresh_sizing_state();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
refresh_state	src/notewindow.cpp	/^  void NoteTextMenu::refresh_state ()$/;"	f	class:gnote::NoteTextMenu	signature:()
refresh_state	src/notewindow.hpp	/^  void refresh_state();$/;"	p	class:gnote::NoteTextMenu	access:public	signature:()
register_dynamic_tag	src/notetag.cpp	/^  void NoteTagTable::register_dynamic_tag(const std::string & tag_name, const Factory & factory)$/;"	f	class:gnote::NoteTagTable	signature:(const std::string & tag_name, const Factory & factory)
register_dynamic_tag	src/notetag.hpp	/^  void register_dynamic_tag (const std::string & tag_name, const Factory & factory);$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const std::string & tag_name, const Factory & factory)
register_object	src/gnote.cpp	/^  void Gnote::register_object()$/;"	f	class:gnote::Gnote	signature:()
register_object	src/gnote.hpp	/^  void register_object();$/;"	p	class:gnote::Gnote	access:private	signature:()
register_object	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::register_object(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager,$/;"	f	class:gnote::RemoteControlProxy	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager, const slot_name_acquire_finish & on_finish)
register_object	src/remotecontrolproxy.hpp	/^  static void register_object(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager,$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:(const Glib::RefPtr<Gio::DBus::Connection> & conn, NoteManager & manager, const slot_name_acquire_finish & on_finish)
register_remote	src/remotecontrolproxy.cpp	/^void RemoteControlProxy::register_remote(NoteManager & manager, const slot_name_acquire_finish & on_finish)$/;"	f	class:gnote::RemoteControlProxy	signature:(NoteManager & manager, const slot_name_acquire_finish & on_finish)
register_remote	src/remotecontrolproxy.hpp	/^  static void register_remote(NoteManager & manager, const slot_name_acquire_finish & on_finish);$/;"	p	class:gnote::RemoteControlProxy	access:public	signature:(NoteManager & manager, const slot_name_acquire_finish & on_finish)
register_remote_control	src/gnote.cpp	/^  void Gnote::register_remote_control(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)$/;"	f	class:gnote::Gnote	signature:(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)
register_remote_control	src/gnote.hpp	/^  static void register_remote_control(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish);$/;"	p	class:gnote::Gnote	access:public	signature:(NoteManager & manager, RemoteControlProxy::slot_name_acquire_finish on_finish)
release_button	src/utils.cpp	/^    void ToolMenuButton::release_button()$/;"	f	class:gnote::utils::ToolMenuButton	signature:()
release_button	src/utils.hpp	/^      void release_button();        $/;"	p	class:gnote::utils::ToolMenuButton	access:private	signature:()
reload_modmap	libtomboy/eggaccelerators.c	/^reload_modmap (GdkKeymap *keymap,$/;"	f	file:	signature:(GdkKeymap *keymap, EggModmap *modmap)
remove_accel_group	src/notewindow.cpp	/^  void NoteWindow::remove_accel_group(Gtk::Window & window)$/;"	f	class:gnote::NoteWindow	signature:(Gtk::Window & window)
remove_accel_group	src/notewindow.hpp	/^  void remove_accel_group(Gtk::Window &);$/;"	p	class:gnote::NoteWindow	access:private	signature:(Gtk::Window &)
remove_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::remove_active_tag (const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
remove_active_tag	src/notebuffer.hpp	/^  void remove_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
remove_bullet	src/notebuffer.cpp	/^  void NoteBuffer::remove_bullet(Gtk::TextIter & iter)$/;"	f	class:gnote::NoteBuffer	signature:(Gtk::TextIter & iter)
remove_bullet	src/notebuffer.hpp	/^  void remove_bullet(Gtk::TextIter & iter);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(Gtk::TextIter & iter)
remove_button	src/addins/bugzilla/bugzillapreferences.hpp	/^  Gtk::Button *remove_button;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
remove_clicked	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::remove_clicked()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
remove_clicked	src/addins/bugzilla/bugzillapreferences.hpp	/^  void remove_clicked();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
remove_link_tag	src/watchers.cpp	/^  void NoteLinkWatcher::remove_link_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
remove_link_tag	src/watchers.hpp	/^    void remove_link_tag(const Glib::RefPtr<Gtk::TextTag> & tag,$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Glib::RefPtr<Gtk::TextTag> & tag, const Gtk::TextIter & start, const Gtk::TextIter & end)
remove_links	src/notebase.cpp	/^void NoteBase::remove_links(const Glib::ustring & old_title, const Ptr & renamed)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title, const Ptr & renamed)
remove_links	src/notebase.hpp	/^  void remove_links(const Glib::ustring & old_title, const Ptr & renamed);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & old_title, const Ptr & renamed)
remove_main_window_action	src/actionmanager.cpp	/^  void ActionManager::remove_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions,$/;"	f	class:gnote::ActionManager	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name)
remove_main_window_action	src/actionmanager.hpp	/^  void remove_main_window_action(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name);$/;"	p	class:gnote::ActionManager	access:private	signature:(std::map<int, Glib::RefPtr<Gtk::Action> > & actions, const std::string & name)
remove_main_window_search_action	src/actionmanager.cpp	/^  void ActionManager::remove_main_window_search_action(const std::string & name)$/;"	f	class:gnote::ActionManager	signature:(const std::string & name)
remove_main_window_search_action	src/iactionmanager.hpp	/^  virtual void remove_main_window_search_action(const std::string & name) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(const std::string & name)
remove_matches_column	src/searchnoteswidget.cpp	/^void SearchNotesWidget::remove_matches_column()$/;"	f	class:gnote::SearchNotesWidget	signature:()
remove_matches_column	src/searchnoteswidget.hpp	/^  void remove_matches_column();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
remove_menu_items	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::remove_menu_items(Gtk::Menu * menu, $/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:(Gtk::Menu * menu, std::list<Gtk::MenuItem*> & menu_items)
remove_menu_items	src/notebooks/notebookapplicationaddin.hpp	/^      void remove_menu_items(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items);$/;"	p	class:gnote::notebooks::NotebookApplicationAddin	access:private	signature:(Gtk::Menu *, std::list<Gtk::MenuItem*> & menu_items)
remove_note	src/tag.cpp	/^  void Tag::remove_note(const NoteBase & note)$/;"	f	class:gnote::Tag	signature:(const NoteBase & note)
remove_note	src/tag.hpp	/^    void remove_note(const NoteBase & );$/;"	p	class:gnote::Tag	access:public	signature:(const NoteBase & )
remove_split_tags	src/undo.cpp	/^  void SplitterAction::remove_split_tags(Gtk::TextBuffer *buffer)$/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextBuffer *buffer)
remove_split_tags	src/undo.hpp	/^  void remove_split_tags(Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:protected	signature:(Gtk::TextBuffer *)
remove_tab	src/notebuffer.cpp	/^  bool NoteBuffer::remove_tab()$/;"	f	class:gnote::NoteBuffer	signature:()
remove_tab	src/notebuffer.hpp	/^  bool remove_tab();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
remove_tag	src/itagmanager.hpp	/^  virtual void remove_tag(const Tag::Ptr & tag) = 0;$/;"	p	class:gnote::ITagManager	access:public	signature:(const Tag::Ptr & tag)
remove_tag	src/note.cpp	/^  void Note::remove_tag(Tag & tag)$/;"	f	class:gnote::Note	signature:(Tag & tag)
remove_tag	src/notebase.cpp	/^void NoteBase::remove_tag(Tag & tag)$/;"	f	class:gnote::NoteBase	signature:(Tag & tag)
remove_tag	src/notebase.cpp	/^void NoteBase::remove_tag(const Tag::Ptr & tag)$/;"	f	class:gnote::NoteBase	signature:(const Tag::Ptr & tag)
remove_tag	src/notebase.hpp	/^  virtual void remove_tag(Tag &);$/;"	p	class:gnote::NoteBase	access:public	signature:(Tag &)
remove_tag	src/notebase.hpp	/^  void remove_tag(const Tag::Ptr &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Tag::Ptr &)
remove_tag	src/tagmanager.cpp	/^  void TagManager::remove_tag (const Tag::Ptr & tag)$/;"	f	class:gnote::TagManager	signature:(const Tag::Ptr & tag)
remove_tag	src/test/testtagmanager.cpp	/^void TagManager::remove_tag(const gnote::Tag::Ptr & tag)$/;"	f	class:test::TagManager	signature:(const gnote::Tag::Ptr & tag)
remove_tag	src/utils.cpp	/^    void TextRange::remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::utils::TextRange	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
remove_tag	src/utils.hpp	/^      void remove_tag(const Glib::RefPtr<Gtk::TextTag> & tag);$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
remove_tray_menu_item	src/actionmanager.cpp	/^  void ActionManager::remove_tray_menu_item(Gtk::MenuItem & item)$/;"	f	class:gnote::ActionManager	signature:(Gtk::MenuItem & item)
remove_tray_menu_item	src/iactionmanager.hpp	/^  virtual void remove_tray_menu_item(Gtk::MenuItem & item) = 0;$/;"	p	class:gnote::IActionManager	access:public	signature:(Gtk::MenuItem & item)
remove_widget_action	src/notewindow.cpp	/^  void NoteWindow::remove_widget_action(const std::string & name)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & name)
remove_widget_action	src/notewindow.hpp	/^  void remove_widget_action(const std::string & name);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const std::string & name)
renameEntry	src/synchronization/syncdialog.cpp	/^  Gtk::Entry *renameEntry;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
renameOnConflictRadio	src/preferencesdialog.hpp	/^  Gtk::RadioButton *renameOnConflictRadio;$/;"	m	class:gnote::PreferencesDialog	access:private
renameRadio	src/synchronization/syncdialog.cpp	/^  Gtk::RadioButton *renameRadio;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
renameUpdateCheck	src/synchronization/syncdialog.cpp	/^  Gtk::CheckButton *renameUpdateCheck;$/;"	m	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private
rename_entry_changed	src/synchronization/syncdialog.cpp	/^  void rename_entry_changed()$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	file:	access:private	signature:()
rename_links	src/notebase.cpp	/^void NoteBase::rename_links(const Glib::ustring & old_title, const Ptr & renamed)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & old_title, const Ptr & renamed)
rename_links	src/notebase.hpp	/^  void rename_links(const Glib::ustring & old_title, const Ptr & renamed);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & old_title, const Ptr & renamed)
rename_note	src/searchnoteswidget.cpp	/^void SearchNotesWidget::rename_note(const Note::Ptr & note)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::Ptr & note)
rename_note	src/searchnoteswidget.hpp	/^  void rename_note(const Note::Ptr & note);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::Ptr & note)
rename_note	src/synchronization/syncdialog.cpp	/^void SyncDialog::rename_note(const Note::Ptr & note, const std::string & newTitle, bool)$/;"	f	class:gnote::sync::SyncDialog	signature:(const Note::Ptr & note, const std::string & newTitle, bool)
rename_note	src/synchronization/syncdialog.hpp	/^    void rename_note(const Note::Ptr & note, const std::string & newTitle, bool updateReferencingNotes);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(const Note::Ptr & note, const std::string & newTitle, bool updateReferencingNotes)
rename_without_link_update	src/note.cpp	/^  void Note::rename_without_link_update(const Glib::ustring & newTitle)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & newTitle)
rename_without_link_update	src/notebase.cpp	/^void NoteBase::rename_without_link_update(const Glib::ustring & newTitle)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & newTitle)
rename_without_link_update	src/notebase.hpp	/^  virtual void rename_without_link_update(const Glib::ustring & newTitle);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & newTitle)
renamed_title	src/synchronization/syncdialog.cpp	/^  std::string renamed_title() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
render_foreground	src/notetag.cpp	/^  Gdk::Color NoteTag::render_foreground(ContrastPaletteColor symbol)$/;"	f	class:gnote::NoteTag	signature:(ContrastPaletteColor symbol)
render_foreground	src/notetag.hpp	/^  Gdk::Color render_foreground(ContrastPaletteColor symbol);$/;"	p	class:gnote::NoteTag	access:private	signature:(ContrastPaletteColor symbol)
renew_count	src/synchronization/isyncmanager.hpp	/^  int renew_count;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
reparse	src/test/testsyncclient.hpp	/^  void reparse()$/;"	f	class:test::SyncClient	access:public	signature:()
replacetitle	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^namespace replacetitle {$/;"	n	file:
replacetitle	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^namespace replacetitle {$/;"	n
replacetitle::DECLARE_MODULE	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^DECLARE_MODULE(ReplaceTitleModule);$/;"	p	namespace:replacetitle	signature:(ReplaceTitleModule)
replacetitle::ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^class ReplaceTitleModule$/;"	c	namespace:replacetitle	inherits:sharp::DynamicModule
replacetitle::ReplaceTitleModule::ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^ReplaceTitleModule::ReplaceTitleModule()$/;"	f	class:replacetitle::ReplaceTitleModule	signature:()
replacetitle::ReplaceTitleModule::ReplaceTitleModule	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  ReplaceTitleModule();$/;"	p	class:replacetitle::ReplaceTitleModule	access:public	signature:()
replacetitle::ReplaceTitleNoteAddin	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^class ReplaceTitleNoteAddin$/;"	c	namespace:replacetitle	inherits:gnote::NoteAddin
replacetitle::ReplaceTitleNoteAddin::create	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  static ReplaceTitleNoteAddin * create()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	access:public	signature:()
replacetitle::ReplaceTitleNoteAddin::initialize	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::initialize()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
replacetitle::ReplaceTitleNoteAddin::on_note_opened	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::on_note_opened()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
replacetitle::ReplaceTitleNoteAddin::override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
replacetitle::ReplaceTitleNoteAddin::override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
replacetitle::ReplaceTitleNoteAddin::override	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:replacetitle::ReplaceTitleNoteAddin	access:public
replacetitle::ReplaceTitleNoteAddin::replacetitle_button_clicked	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::replacetitle_button_clicked()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
replacetitle::ReplaceTitleNoteAddin::replacetitle_button_clicked	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  void replacetitle_button_clicked();$/;"	p	class:replacetitle::ReplaceTitleNoteAddin	access:private	signature:()
replacetitle::ReplaceTitleNoteAddin::shutdown	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::shutdown()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
replacetitle::__anon16::ReplaceTitleAction	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^    class ReplaceTitleAction$/;"	c	namespace:replacetitle::__anon16	file:	inherits:Gtk::Action
replacetitle::__anon16::ReplaceTitleAction::ReplaceTitleAction	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      ReplaceTitleAction(gnote::NoteWindow *note_window)$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	file:	access:private	signature:(gnote::NoteWindow *note_window)
replacetitle::__anon16::ReplaceTitleAction::create	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      static Glib::RefPtr<Gtk::Action> create(gnote::NoteWindow *note_window)$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	access:public	signature:(gnote::NoteWindow *note_window)
replacetitle::__anon16::ReplaceTitleAction::create_menu_item_vfunc	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      virtual Gtk::Widget *create_menu_item_vfunc()$/;"	f	class:replacetitle::__anon16::ReplaceTitleAction	access:protected	signature:()
replacetitle::__anon16::ReplaceTitleAction::m_note_window	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^      gnote::NoteWindow *m_note_window;$/;"	m	class:replacetitle::__anon16::ReplaceTitleAction	file:	access:private
replacetitle_button_clicked	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::replacetitle_button_clicked()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
replacetitle_button_clicked	src/addins/replacetitle/replacetitlenoteaddin.hpp	/^  void replacetitle_button_clicked();$/;"	p	class:replacetitle::ReplaceTitleNoteAddin	access:private	signature:()
replacetitle_la_LIBADD	src/addins/replacetitle/Makefile	/^replacetitle_la_LIBADD =$/;"	m
replacetitle_la_OBJECTS	src/addins/replacetitle/Makefile	/^replacetitle_la_OBJECTS = $(am_replacetitle_la_OBJECTS)$/;"	m
replacetitle_la_SOURCES	src/addins/replacetitle/Makefile	/^replacetitle_la_SOURCES = \\$/;"	m
reset	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::reset()$/;"	f	class:gnote::sync::GnoteSyncClient	signature:()
reset	src/synchronization/isyncmanager.hpp	/^  virtual void reset() = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
reset	src/utils.cpp	/^    void InterruptableTimeout::reset(guint timeout_millis)$/;"	f	class:gnote::utils::InterruptableTimeout	signature:(guint timeout_millis)
reset	src/utils.hpp	/^      void reset()$/;"	f	class:gnote::utils::TextTagEnumerator	access:public	signature:()
reset	src/utils.hpp	/^      void reset(guint timeout_millis);$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:(guint timeout_millis)
reset_client	src/synchronization/isyncmanager.hpp	/^  virtual void reset_client() = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:()
reset_client	src/synchronization/syncmanager.cpp	/^  void SyncManager::reset_client()$/;"	f	class:gnote::sync::SyncManager	signature:()
reset_configuration	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::reset_configuration()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
reset_configuration	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::reset_configuration()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
reset_configuration	src/synchronization/syncserviceaddin.hpp	/^    virtual void reset_configuration() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
reset_configuration_values	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::reset_configuration_values()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
reset_configuration_values	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void reset_configuration_values() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
resize_if_needed	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::resize_if_needed(const std::string & p)$/;"	f	class:bugzilla::BugzillaPreferences	signature:(const std::string & p)
resize_if_needed	src/addins/bugzilla/bugzillapreferences.hpp	/^  void resize_if_needed(const std::string & path);$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:(const std::string & path)
resolution	src/synchronization/syncdialog.cpp	/^  SyncTitleConflictResolution resolution() const$/;"	f	class:gnote::sync::__anon19::SyncTitleConflictDialog	access:public	signature:() const
resolve_addin_category	src/addininfo.cpp	/^    AddinCategory resolve_addin_category(const std::string & cat)$/;"	f	namespace:gnote::__anon8	signature:(const std::string & cat)
resolve_conflict	src/synchronization/isyncmanager.hpp	/^  virtual void resolve_conflict(SyncTitleConflictResolution resolution) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(SyncTitleConflictResolution resolution)
resolve_conflict	src/synchronization/syncmanager.cpp	/^  void SyncManager::resolve_conflict(SyncTitleConflictResolution resolution)$/;"	f	class:gnote::sync::SyncManager	signature:(SyncTitleConflictResolution resolution)
restore_matches_window	src/searchnoteswidget.cpp	/^void SearchNotesWidget::restore_matches_window()$/;"	f	class:gnote::SearchNotesWidget	signature:()
restore_matches_window	src/searchnoteswidget.hpp	/^  void restore_matches_window();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
revision	src/synchronization/isyncmanager.hpp	/^  int revision;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
rgb_to_lab	src/contrast.cpp	/^rgb_to_lab(guint16  R,$/;"	f	file:	signature:(guint16 R, guint16 G, guint16 B, float *L, float *a, float *b)
run_widget_queue	src/notebuffer.cpp	/^  bool NoteBuffer::run_widget_queue()$/;"	f	class:gnote::NoteBuffer	signature:()
run_widget_queue	src/notebuffer.hpp	/^  bool run_widget_queue();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
running	src/mainwindowembeds.hpp	/^  virtual bool running() = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:()
running	src/recentchanges.hpp	/^  virtual bool running()$/;"	f	class:gnote::NoteRecentChanges	access:public	signature:()
s_accel_group	src/tray.cpp	/^  Glib::RefPtr<Gtk::AccelGroup> KeybindingToAccel::s_accel_group;$/;"	m	class:gnote::KeybindingToAccel	file:
s_accel_group	src/tray.hpp	/^  static Glib::RefPtr<Gtk::AccelGroup> s_accel_group;$/;"	m	class:gnote::KeybindingToAccel	access:private
s_bus_acquired	src/remotecontrolproxy.cpp	/^bool RemoteControlProxy::s_bus_acquired;$/;"	m	class:gnote::RemoteControlProxy	file:
s_bus_acquired	src/remotecontrolproxy.hpp	/^  static bool s_bus_acquired;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_connection	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::Connection> RemoteControlProxy::s_connection;$/;"	m	class:gnote::RemoteControlProxy	file:
s_connection	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::Connection> s_connection;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_formats	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  std::vector<std::string> InsertTimestampPreferences::s_formats;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	file:
s_formats	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static std::vector<std::string> s_formats;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
s_gnote_interface	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> RemoteControlProxy::s_gnote_interface;$/;"	m	class:gnote::RemoteControlProxy	file:
s_gnote_interface	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_gnote_interface;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_gtg_interface	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> ExportToGTGNoteAddin::s_gtg_interface;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	file:
s_gtg_interface	src/addins/exporttogtg/exporttogtgnoteaddin.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_gtg_interface;$/;"	m	class:exporttogtg::ExportToGTGNoteAddin	access:private
s_hand_cursor	src/watchers.cpp	/^  Glib::RefPtr<Gdk::Cursor> MouseHandWatcher::s_hand_cursor;$/;"	m	class:gnote::MouseHandWatcher	file:
s_hand_cursor	src/watchers.hpp	/^    static Glib::RefPtr<Gdk::Cursor> s_hand_cursor;$/;"	m	class:gnote::MouseHandWatcher	access:private
s_image_dir	src/addins/bugzilla/bugzillapreferences.cpp	/^  std::string BugzillaPreferences::s_image_dir;$/;"	m	class:bugzilla::BugzillaPreferences	file:
s_image_dir	src/addins/bugzilla/bugzillapreferences.hpp	/^  static std::string s_image_dir;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
s_indent_bullets	src/notebuffer.cpp	/^  const gunichar NoteBuffer::s_indent_bullets[NUM_INDENT_BULLETS] = { 0x2022, 0x2218, 0x2023 };$/;"	m	class:gnote::NoteBuffer	file:
s_indent_bullets	src/notebuffer.hpp	/^  static const gunichar s_indent_bullets[];$/;"	m	class:gnote::NoteBuffer	access:private
s_instance	src/notetag.cpp	/^  NoteTagTable::Ptr NoteTagTable::s_instance;$/;"	m	class:gnote::NoteTagTable	file:
s_instance	src/notetag.hpp	/^  static NoteTagTable::Ptr           s_instance;$/;"	m	class:gnote::NoteTagTable	access:private
s_manager	src/remotecontrolproxy.cpp	/^NoteManager *RemoteControlProxy::s_manager;$/;"	m	class:gnote::RemoteControlProxy	file:
s_manager	src/remotecontrolproxy.hpp	/^  static NoteManager * s_manager;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_noPosition	src/note.cpp	/^  const int  NoteData::s_noPosition = -1;$/;"	m	class:gnote::NoteData	file:
s_noPosition	src/notebase.hpp	/^  static const int s_noPosition;$/;"	m	class:gnote::NoteData	access:public
s_normal_cursor	src/watchers.cpp	/^  Glib::RefPtr<Gdk::Cursor> MouseHandWatcher::s_normal_cursor;$/;"	m	class:gnote::MouseHandWatcher	file:
s_normal_cursor	src/watchers.hpp	/^    static Glib::RefPtr<Gdk::Cursor> s_normal_cursor;$/;"	m	class:gnote::MouseHandWatcher	access:private
s_obj	src/iconmanager.cpp	/^IconManager IconManager::s_obj;$/;"	m	class:gnote::IconManager	file:
s_obj	src/iconmanager.hpp	/^  static IconManager s_obj;$/;"	m	class:gnote::IconManager	access:private
s_obj	src/notebase.cpp	/^NoteArchiver NoteArchiver::s_obj;$/;"	m	class:gnote::NoteArchiver	file:
s_obj	src/notebase.hpp	/^  static NoteArchiver s_obj;$/;"	m	class:gnote::NoteArchiver	access:protected
s_obj	src/synchronization/syncutils.cpp	/^  SyncUtils SyncUtils::s_obj;$/;"	m	class:gnote::sync::SyncUtils	file:
s_obj	src/synchronization/syncutils.hpp	/^    static SyncUtils s_obj;$/;"	m	class:gnote::sync::SyncUtils	access:private
s_on_name_acquire_finish	src/remotecontrolproxy.cpp	/^RemoteControlProxy::slot_name_acquire_finish RemoteControlProxy::s_on_name_acquire_finish;$/;"	m	class:gnote::RemoteControlProxy	file:
s_on_name_acquire_finish	src/remotecontrolproxy.hpp	/^  static slot_name_acquire_finish s_on_name_acquire_finish;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_remote_control	src/remotecontrolproxy.cpp	/^RemoteControl *RemoteControlProxy::s_remote_control;$/;"	m	class:gnote::RemoteControlProxy	file:
s_remote_control	src/remotecontrolproxy.hpp	/^  static RemoteControl * s_remote_control;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_remote_control_proxy	src/remotecontrolproxy.cpp	/^Glib::RefPtr<RemoteControlClient> RemoteControlProxy::s_remote_control_proxy;$/;"	m	class:gnote::RemoteControlProxy	file:
s_remote_control_proxy	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<RemoteControlClient> s_remote_control_proxy;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_request_attributes	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::map<std::string, std::string> WebDavSyncServiceAddin::s_request_attributes;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	file:
s_request_attributes	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static std::map<std::string, std::string> s_request_attributes;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
s_schema	src/gnome_keyring/ring.cpp	/^SecretSchema Ring::s_schema = {$/;"	m	class:gnome::keyring::Ring	file:
s_schema	src/gnome_keyring/ring.hpp	/^  static SecretSchema s_schema;$/;"	m	class:gnome::keyring::Ring	access:private
s_search_provider	src/remotecontrolproxy.cpp	/^org::gnome::Gnote::SearchProvider *RemoteControlProxy::s_search_provider;$/;"	m	class:gnote::RemoteControlProxy	file:
s_search_provider	src/remotecontrolproxy.hpp	/^  static org::gnome::Gnote::SearchProvider * s_search_provider;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_search_provider_interface	src/remotecontrolproxy.cpp	/^Glib::RefPtr<Gio::DBus::InterfaceInfo> RemoteControlProxy::s_search_provider_interface;$/;"	m	class:gnote::RemoteControlProxy	file:
s_search_provider_interface	src/remotecontrolproxy.hpp	/^  static Glib::RefPtr<Gio::DBus::InterfaceInfo> s_search_provider_interface;$/;"	m	class:gnote::RemoteControlProxy	access:private
s_static_inited	src/addins/bugzilla/bugzillapreferences.cpp	/^  bool BugzillaPreferences::s_static_inited = false;;$/;"	m	class:bugzilla::BugzillaPreferences	file:
s_static_inited	src/addins/bugzilla/bugzillapreferences.hpp	/^  static bool        s_static_inited;$/;"	m	class:bugzilla::BugzillaPreferences	access:private
s_static_inited	src/addins/inserttimestamp/inserttimestamppreferences.cpp	/^  bool InsertTimestampPreferences::s_static_inited = false;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	file:
s_static_inited	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  static bool       s_static_inited;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
s_static_inited	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_static_inited = false;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
s_static_inited	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_static_inited;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
s_static_inited	src/watchers.cpp	/^  bool MouseHandWatcher::s_static_inited = false;$/;"	m	class:gnote::MouseHandWatcher	file:
s_static_inited	src/watchers.hpp	/^    static bool s_static_inited;$/;"	m	class:gnote::MouseHandWatcher	access:private
s_sticky_file_existence_confirmed	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_sticky_file_existence_confirmed = false;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
s_sticky_file_existence_confirmed	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_sticky_file_existence_confirmed;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
s_sticky_file_might_exist	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_sticky_file_might_exist = true;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
s_sticky_file_might_exist	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_sticky_file_might_exist;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
s_sticky_xml_path	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^std::string StickyNoteImportNoteAddin::s_sticky_xml_path;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
s_sticky_xml_path	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static std::string s_sticky_xml_path;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
s_templateTag	src/notebooks/notebooknoteaddin.cpp	/^  Tag::Ptr           NotebookNoteAddin::s_templateTag;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	file:
s_templateTag	src/notebooks/notebooknoteaddin.hpp	/^    static Tag::Ptr           s_templateTag;$/;"	m	class:gnote::notebooks::NotebookNoteAddin	access:private
s_template_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::s_template_tag;$/;"	m	class:gnote::notebooks::Notebook	file:
s_template_tag	src/notebooks/notebook.hpp	/^  static Tag::Ptr s_template_tag;$/;"	m	class:gnote::notebooks::Notebook	access:private
s_template_title	src/addins/noteoftheday/noteoftheday.cpp	/^const Glib::ustring NoteOfTheDay::s_template_title$/;"	m	class:noteoftheday::NoteOfTheDay	file:
s_template_title	src/addins/noteoftheday/noteoftheday.hpp	/^  static const Glib::ustring s_template_title;$/;"	m	class:noteoftheday::NoteOfTheDay	access:public
s_text_event_connected	src/watchers.cpp	/^  bool NoteLinkWatcher::s_text_event_connected = false;$/;"	m	class:gnote::NoteLinkWatcher	file:
s_text_event_connected	src/watchers.cpp	/^  bool NoteUrlWatcher::s_text_event_connected = false;$/;"	m	class:gnote::NoteUrlWatcher	file:
s_text_event_connected	src/watchers.hpp	/^    static bool  s_text_event_connected;$/;"	m	class:gnote::NoteUrlWatcher	access:private
s_text_event_connected	src/watchers.hpp	/^    static bool s_text_event_connected;$/;"	m	class:gnote::NoteLinkWatcher	access:private
s_title_prefix	src/addins/noteoftheday/noteoftheday.cpp	/^const Glib::ustring NoteOfTheDay::s_title_prefix$/;"	m	class:noteoftheday::NoteOfTheDay	file:
s_title_prefix	src/addins/noteoftheday/noteoftheday.hpp	/^  static const Glib::ustring s_title_prefix;$/;"	m	class:noteoftheday::NoteOfTheDay	access:private
s_todo_patterns	src/addins/todo/todonoteaddin.cpp	/^static std::vector<std::string> s_todo_patterns;$/;"	m	namespace:todo	file:
s_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^sharp::XslTransform *ExportToHtmlNoteAddin::s_xsl = NULL;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	file:
s_xsl	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  static sharp::XslTransform *s_xsl;$/;"	m	class:exporttohtml::ExportToHtmlNoteAddin	access:private
sanitize_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::sanitize_check_interval(const Glib::RefPtr<Gio::Settings> & settings)$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:(const Glib::RefPtr<Gio::Settings> & settings)
sanitize_check_interval	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.hpp	/^  void sanitize_check_interval(const Glib::RefPtr<Gio::Settings> & settings);$/;"	p	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	access:private	signature:(const Glib::RefPtr<Gio::Settings> & settings)
sanitize_hostname	src/addins/bugzilla/bugzillapreferences.cpp	/^    bool sanitize_hostname(std::string & hostname)$/;"	f	namespace:bugzilla::__anon11	signature:(std::string & hostname)
sanitize_xml_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::sanitize_xml_content(const Glib::ustring & xml_content)$/;"	f	class:gnote::NoteManagerBase	signature:(const Glib::ustring & xml_content)
sanitize_xml_content	src/notemanagerbase.hpp	/^  static Glib::ustring sanitize_xml_content(const Glib::ustring & xml_content);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(const Glib::ustring & xml_content)
save	src/note.cpp	/^  void Note::save()$/;"	f	class:gnote::Note	signature:()
save	src/notebase.cpp	/^void NoteBase::save()$/;"	f	class:gnote::NoteBase	signature:()
save	src/notebase.hpp	/^  virtual void save();$/;"	p	class:gnote::NoteBase	access:public	signature:()
save_addins_prefs	src/addinmanager.cpp	/^  void AddinManager::save_addins_prefs() const$/;"	f	class:gnote::AddinManager	signature:() const
save_addins_prefs	src/addinmanager.hpp	/^  void save_addins_prefs() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
save_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::save_config_settings(const std::string & url, const std::string & username, const std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & url, const std::string & username, const std::string & password)
save_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  void save_config_settings(const std::string & url, const std::string & username, const std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(const std::string & url, const std::string & username, const std::string & password)
save_configuration	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^bool FileSystemSyncServiceAddin::save_configuration()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
save_configuration	src/synchronization/fusesyncserviceaddin.cpp	/^bool FuseSyncServiceAddin::save_configuration()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
save_configuration	src/synchronization/syncserviceaddin.hpp	/^    virtual bool save_configuration() = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
save_configuration_values	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::save_configuration_values()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
save_configuration_values	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual void save_configuration_values() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
save_position	src/searchnoteswidget.cpp	/^void SearchNotesWidget::save_position()$/;"	f	class:gnote::SearchNotesWidget	signature:()
save_position	src/searchnoteswidget.hpp	/^  void save_position();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
save_preferences	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::save_preferences()$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:()
save_preferences	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void save_preferences();$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:()
save_type	src/notetag.hpp	/^  TagSaveType save_type() const$/;"	f	class:gnote::NoteTag	access:public	signature:() const
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	data/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	data/appdata/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	data/icons/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	help/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libtomboy/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/backlinks/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/bugzilla/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/exporttogtg/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/exporttohtml/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/filesystemsyncservice/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/fixedwidth/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/inserttimestamp/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/notedirectorywatcher/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/noteoftheday/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/printnotes/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/readonly/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/replacetitle/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/specialnotes/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/statistics/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/stickynoteimport/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/tableofcontents/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/todo/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/tomboyimport/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/underline/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/addins/webdavsyncservice/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	src/dbus/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
scroll	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::ScrolledWindow         *scroll;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
scroll_lock_mask	libtomboy/tomboykeybinder.c	/^static guint num_lock_mask, caps_lock_mask, scroll_lock_mask;$/;"	v	file:
search_notes	src/search.cpp	/^  Search::ResultsPtr Search::search_notes(const std::string & query, bool case_sensitive, $/;"	f	class:gnote::Search	signature:(const std::string & query, bool case_sensitive, const notebooks::Notebook::Ptr & selected_notebook)
search_notes	src/search.hpp	/^  ResultsPtr search_notes(const std::string &, bool, $/;"	p	class:gnote::Search	access:public	signature:(const std::string &, bool, const notebooks::Notebook::Ptr & )
searchprovider_DATA	src/dbus/Makefile	/^searchprovider_DATA = gnote-search-provider.ini$/;"	m
searchproviderdir	src/dbus/Makefile	/^searchproviderdir = $(datadir)\/gnome-shell\/search-providers$/;"	m
sec	src/sharp/datetime.hpp	/^  glong sec() const$/;"	f	class:sharp::DateTime	access:public	signature:() const
seconds	src/sharp/timespan.hpp	/^    int seconds() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
select_all_notes_notebook	src/searchnoteswidget.cpp	/^void SearchNotesWidget::select_all_notes_notebook()$/;"	f	class:gnote::SearchNotesWidget	signature:()
select_all_notes_notebook	src/searchnoteswidget.hpp	/^  void select_all_notes_notebook();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
select_note_body	src/notebuffer.cpp	/^  void NoteBuffer::select_note_body()$/;"	f	class:gnote::NoteBuffer	signature:()
select_note_body	src/notebuffer.hpp	/^  void select_note_body();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
select_notes	src/searchnoteswidget.cpp	/^void SearchNotesWidget::select_notes(const Note::List & notes)$/;"	f	class:gnote::SearchNotesWidget	signature:(const Note::List & notes)
select_notes	src/searchnoteswidget.hpp	/^  void select_notes(const Note::List &);$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:(const Note::List &)
selected_radio	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::RadioButton *selected_radio;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
selection_bound_position	src/notebase.hpp	/^  int selection_bound_position() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
selection_changed	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::selection_changed()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
selection_changed	src/addins/bugzilla/bugzillapreferences.hpp	/^  void selection_changed();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
serialize	src/notebuffer.cpp	/^  std::string NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer)$/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer)
serialize	src/notebuffer.cpp	/^  std::string NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, const Gtk::TextIter & end)
serialize	src/notebuffer.cpp	/^  void NoteBufferArchiver::serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter & start, const Gtk::TextIter & end, sharp::XmlWriter & xml)
serialize	src/notebuffer.hpp	/^  static std::string serialize(const Glib::RefPtr<Gtk::TextBuffer> & );$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & )
serialize	src/notebuffer.hpp	/^  static std::string serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &, const Gtk::TextIter &)
serialize	src/notebuffer.hpp	/^  static void serialize(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &,$/;"	p	class:gnote::NoteBufferArchiver	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer> & buffer, const Gtk::TextIter &, const Gtk::TextIter &, sharp::XmlWriter & xml)
set_accels	src/notewindow.cpp	/^  void NoteTextMenu::set_accels(utils::GlobalKeybinder & keybinder,$/;"	f	class:gnote::NoteTextMenu	signature:(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> & accel_group)
set_accels	src/notewindow.hpp	/^  void set_accels(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> &);$/;"	p	class:gnote::NoteTextMenu	access:public	signature:(utils::GlobalKeybinder & keybinder, const Glib::RefPtr<Gtk::AccelGroup> &)
set_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::set_active_tag (const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
set_active_tag	src/notebuffer.hpp	/^  void set_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
set_addin_id	src/preferencesdialog.cpp	/^    void set_addin_id(const std::string & id)$/;"	f	class:gnote::AddinInfoDialog	access:public	signature:(const std::string & id)
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_binding	src/prefskeybinder.cpp	/^    void set_binding();$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:()
set_binding	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::set_binding()$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:()
set_buffer	src/note.cpp	/^  void NoteDataBufferSynchronizer::set_buffer(const Glib::RefPtr<NoteBuffer> & b)$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::RefPtr<NoteBuffer> & b)
set_buffer	src/note.hpp	/^  void set_buffer(const Glib::RefPtr<NoteBuffer> & b);$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:public	signature:(const Glib::RefPtr<NoteBuffer> & b)
set_bug_url	src/addins/bugzilla/bugzillalink.cpp	/^  void BugzillaLink::set_bug_url(const std::string & value)$/;"	f	class:bugzilla::BugzillaLink	signature:(const std::string & value)
set_bug_url	src/addins/bugzilla/bugzillalink.hpp	/^  void set_bug_url(const std::string & );$/;"	p	class:bugzilla::BugzillaLink	access:public	signature:(const std::string & )
set_can_activate	src/notetag.cpp	/^  void NoteTag::set_can_activate(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_activate	src/notetag.hpp	/^  void set_can_activate(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_can_grow	src/notetag.cpp	/^  void NoteTag::set_can_grow(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_grow	src/notetag.hpp	/^  void set_can_grow(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_can_serialize	src/notetag.cpp	/^  void NoteTag::set_can_serialize(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_serialize	src/notetag.hpp	/^  void set_can_serialize(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_can_spell_check	src/notetag.cpp	/^  void NoteTag::set_can_spell_check(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_spell_check	src/notetag.hpp	/^  void set_can_spell_check(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_can_split	src/notetag.cpp	/^  void NoteTag::set_can_split(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_split	src/notetag.hpp	/^  void set_can_split(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_can_undo	src/notetag.cpp	/^  void NoteTag::set_can_undo(bool value)$/;"	f	class:gnote::NoteTag	signature:(bool value)
set_can_undo	src/notetag.hpp	/^  void set_can_undo(bool value);$/;"	p	class:gnote::NoteTag	access:public	signature:(bool value)
set_change_date	src/notebase.hpp	/^  void set_change_date(const sharp::DateTime & date)$/;"	f	class:gnote::NoteData	access:public	signature:(const sharp::DateTime & date)
set_change_type	src/notebase.cpp	/^void NoteBase::set_change_type(ChangeType c)$/;"	f	class:gnote::NoteBase	signature:(ChangeType c)
set_change_type	src/notebase.hpp	/^  void set_change_type(ChangeType c);$/;"	p	class:gnote::NoteBase	access:protected	signature:(ChangeType c)
set_columns	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::set_columns(Gtk::TreeView *treeview)$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::TreeView *treeview)
set_columns	src/sharp/addinstreemodel.hpp	/^  void set_columns(Gtk::TreeView *v);$/;"	p	class:sharp::AddinsTreeModel	access:protected	signature:(Gtk::TreeView *v)
set_cursor_position	src/notebase.hpp	/^  void set_cursor_position(int new_pos)$/;"	f	class:gnote::NoteData	access:public	signature:(int new_pos)
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_end	src/utils.cpp	/^    void TextRange::set_end(const Gtk::TextIter & value)$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & value)
set_end	src/utils.hpp	/^      void set_end(const Gtk::TextIter &);  $/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter &)
set_export_linked	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::set_export_linked(bool value)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(bool value)
set_export_linked	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void set_export_linked(bool);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(bool)
set_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.cpp	/^void ExportToHtmlDialog::set_export_linked_all(bool value)$/;"	f	class:exporttohtml::ExportToHtmlDialog	signature:(bool value)
set_export_linked_all	src/addins/exporttohtml/exporttohtmldialog.hpp	/^  void set_export_linked_all(bool);$/;"	p	class:exporttohtml::ExportToHtmlDialog	access:public	signature:(bool)
set_extent	src/note.cpp	/^  void NoteData::set_extent(int _width, int _height)$/;"	f	class:gnote::NoteData	signature:(int _width, int _height)
set_extent	src/notebase.hpp	/^  void set_extent(int width, int height);$/;"	p	class:gnote::NoteData	access:public	signature:(int width, int height)
set_extra_widget	src/utils.cpp	/^    void HIGMessageDialog::set_extra_widget(Gtk::Widget *value)$/;"	f	class:gnote::utils::HIGMessageDialog	signature:(Gtk::Widget *value)
set_extra_widget	src/utils.hpp	/^      void set_extra_widget(Gtk::Widget *);$/;"	p	class:gnote::utils::HIGMessageDialog	access:public	signature:(Gtk::Widget *)
set_image	src/notetag.cpp	/^  void NoteTag::set_image(const Glib::RefPtr<Gdk::Pixbuf> & value)$/;"	f	class:gnote::NoteTag	signature:(const Glib::RefPtr<Gdk::Pixbuf> & value)
set_image	src/notetag.hpp	/^  virtual void set_image(const Glib::RefPtr<Gdk::Pixbuf> &);$/;"	p	class:gnote::NoteTag	access:public	signature:(const Glib::RefPtr<Gdk::Pixbuf> &)
set_manifest_path	src/test/testsyncclient.hpp	/^  void set_manifest_path(const std::string & path)$/;"	f	class:test::SyncClient	access:public	signature:(const std::string & path)
set_module	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::set_module(const Gtk::TreeIter & iter, const sharp::DynamicModule * dmod)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter, const sharp::DynamicModule * dmod)
set_module	src/sharp/addinstreemodel.hpp	/^  void set_module(const Gtk::TreeIter &, const sharp::DynamicModule *);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &, const sharp::DynamicModule *)
set_module_for_selected_addin	src/preferencesdialog.cpp	/^  void PreferencesDialog::set_module_for_selected_addin(sharp::DynamicModule * module)$/;"	f	class:gnote::PreferencesDialog	signature:(sharp::DynamicModule * module)
set_module_for_selected_addin	src/preferencesdialog.hpp	/^  void set_module_for_selected_addin(sharp::DynamicModule * module);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(sharp::DynamicModule * module)
set_name	src/notebooks/notebook.cpp	/^  void Notebook::set_name(const std::string & value)$/;"	f	class:gnote::notebooks::Notebook	signature:(const std::string & value)
set_name	src/notebooks/notebook.hpp	/^  void set_name(const std::string &);$/;"	p	class:gnote::notebooks::Notebook	access:public	signature:(const std::string &)
set_name	src/notewindow.cpp	/^  void NoteWindow::set_name(const std::string & name)$/;"	f	class:gnote::NoteWindow	signature:(const std::string & name)
set_name	src/notewindow.hpp	/^  void set_name(const std::string & name);$/;"	p	class:gnote::NoteWindow	access:public	signature:(const std::string & name)
set_name	src/tag.cpp	/^  void Tag::set_name(const std::string & value)$/;"	f	class:gnote::Tag	signature:(const std::string & value)
set_name	src/tag.hpp	/^    void set_name(const std::string & );$/;"	p	class:gnote::Tag	access:public	signature:(const std::string & )
set_notebook_name	src/notebooks/createnotebookdialog.cpp	/^    void CreateNotebookDialog::set_notebook_name(const std::string & value)$/;"	f	class:gnote::notebooks::CreateNotebookDialog	signature:(const std::string & value)
set_notebook_name	src/notebooks/createnotebookdialog.hpp	/^  void set_notebook_name(const std::string &);$/;"	p	class:gnote::notebooks::CreateNotebookDialog	access:public	signature:(const std::string &)
set_palette_foreground	src/notetag.hpp	/^  void set_palette_foreground(ContrastPaletteColor value)$/;"	f	class:gnote::NoteTag	access:public	signature:(ContrastPaletteColor value)
set_pinned	src/note.cpp	/^  void Note::set_pinned(bool pinned) const$/;"	f	class:gnote::Note	signature:(bool pinned) const
set_pinned	src/note.hpp	/^  void set_pinned(bool pinned) const;$/;"	p	class:gnote::Note	access:public	signature:(bool pinned) const
set_revision	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::set_revision(const NoteBase::Ptr & note, int revision)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const NoteBase::Ptr & note, int revision)
set_revision	src/synchronization/isyncmanager.hpp	/^  virtual void set_revision(const NoteBase::Ptr & note, int revision) = 0;$/;"	p	class:gnote::sync::SyncClient	access:public	signature:(const NoteBase::Ptr & note, int revision)
set_save_type	src/notetag.hpp	/^  void set_save_type(TagSaveType type)$/;"	f	class:gnote::NoteTag	access:public	signature:(TagSaveType type)
set_search_text	src/mainwindow.hpp	/^  virtual void set_search_text(const std::string & value) = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:(const std::string & value)
set_search_text	src/recentchanges.cpp	/^  void NoteRecentChanges::set_search_text(const std::string & value)$/;"	f	class:gnote::NoteRecentChanges	signature:(const std::string & value)
set_selection_bound_position	src/notebase.hpp	/^  void set_selection_bound_position(int pos)$/;"	f	class:gnote::NoteData	access:public	signature:(int pos)
set_size	src/notewindow.hpp	/^  void set_size(int width, int height)$/;"	f	class:gnote::NoteWindow	access:public	signature:(int width, int height)
set_start	src/utils.cpp	/^    void TextRange::set_start(const Gtk::TextIter & value)$/;"	f	class:gnote::utils::TextRange	signature:(const Gtk::TextIter & value)
set_start	src/utils.hpp	/^      void set_start(const Gtk::TextIter &);$/;"	p	class:gnote::utils::TextRange	access:public	signature:(const Gtk::TextIter &)
set_state	src/synchronization/syncmanager.cpp	/^  void SyncManager::set_state(SyncState new_state)$/;"	f	class:gnote::sync::SyncManager	signature:(SyncState new_state)
set_state	src/synchronization/syncmanager.hpp	/^    void set_state(SyncState new_state);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(SyncState new_state)
set_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::set_text(const Glib::ustring & t)$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:(const Glib::ustring & t)
set_text	src/notebase.cpp	/^void NoteDataBufferSynchronizerBase::set_text(const Glib::ustring & t)$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:(const Glib::ustring & t)
set_text	src/notebase.hpp	/^  virtual void set_text(const Glib::ustring & t);$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:(const Glib::ustring & t)
set_text_content	src/note.cpp	/^  void Note::set_text_content(const std::string & text)$/;"	f	class:gnote::Note	signature:(const std::string & text)
set_text_content	src/note.hpp	/^  void set_text_content(const std::string & text);$/;"	p	class:gnote::Note	access:public	signature:(const std::string & text)
set_title	src/note.cpp	/^  void Note::set_title(const Glib::ustring & new_title,$/;"	f	class:gnote::Note	signature:(const Glib::ustring & new_title, bool from_user_action)
set_title	src/notebase.cpp	/^void NoteBase::set_title(const Glib::ustring & new_title)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & new_title)
set_title	src/notebase.cpp	/^void NoteBase::set_title(const Glib::ustring & new_title, bool from_user_action)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & new_title, bool from_user_action)
set_title	src/notebase.hpp	/^  virtual void set_title(const Glib::ustring & new_title, bool from_user_action);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & new_title, bool from_user_action)
set_title	src/notebase.hpp	/^  void set_title(const Glib::ustring & new_title);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & new_title)
set_tray	src/gnote.hpp	/^  void set_tray(const Tray::Ptr & tray)$/;"	f	class:gnote::Gnote	access:public	signature:(const Tray::Ptr & tray)
set_up_mount_path	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::set_up_mount_path()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
set_up_mount_path	src/synchronization/fusesyncserviceaddin.hpp	/^  void set_up_mount_path();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
set_usec	src/sharp/datetime.hpp	/^  void set_usec(glong _usec) $/;"	f	class:sharp::DateTime	access:public	signature:(glong _usec)
set_widget	src/notetag.cpp	/^  void NoteTag::set_widget(Gtk::Widget * value)$/;"	f	class:gnote::NoteTag	signature:(Gtk::Widget * value)
set_widget	src/notetag.hpp	/^  virtual void set_widget(Gtk::Widget *);$/;"	p	class:gnote::NoteTag	access:public	signature:(Gtk::Widget *)
set_widget_location	src/notetag.hpp	/^  void set_widget_location(const Glib::RefPtr<Gtk::TextMark> & value)$/;"	f	class:gnote::NoteTag	access:public	signature:(const Glib::RefPtr<Gtk::TextMark> & value)
set_widget_tooltip	src/preferencesdialog.cpp	/^  void PreferencesDialog::set_widget_tooltip(Gtk::Widget & widget, std::string label_text)$/;"	f	class:gnote::PreferencesDialog	signature:(Gtk::Widget & widget, std::string label_text)
set_widget_tooltip	src/preferencesdialog.hpp	/^  void set_widget_tooltip(Gtk::Widget & widget, std::string label_text);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(Gtk::Widget & widget, std::string label_text)
set_xml_content	src/note.cpp	/^  void Note::set_xml_content(const Glib::ustring & xml)$/;"	f	class:gnote::Note	signature:(const Glib::ustring & xml)
set_xml_content	src/notebase.cpp	/^void NoteBase::set_xml_content(const Glib::ustring & xml)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & xml)
set_xml_content	src/notebase.hpp	/^  virtual void set_xml_content(const Glib::ustring & xml);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring & xml)
setup	src/sharp/propertyeditor.cpp	/^  void PropertyEditor::setup()$/;"	f	class:sharp::PropertyEditor	signature:()
setup	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::setup()$/;"	f	class:sharp::PropertyEditorBool	signature:()
setup	src/sharp/propertyeditor.hpp	/^    virtual void setup() = 0;$/;"	p	class:sharp::PropertyEditorBase	access:public	signature:()
setup_error_handling	src/sharp/xmlreader.cpp	/^  void XmlReader::setup_error_handling()$/;"	f	class:sharp::XmlReader	signature:()
setup_error_handling	src/sharp/xmlreader.hpp	/^  void setup_error_handling();$/;"	p	class:sharp::XmlReader	access:private	signature:()
setup_global_actions	src/gnote.cpp	/^  void Gnote::setup_global_actions()$/;"	f	class:gnote::Gnote	signature:()
setup_global_actions	src/gnote.hpp	/^  void setup_global_actions();$/;"	p	class:gnote::Gnote	access:public	signature:()
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	data/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	data/appdata/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	data/icons/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	help/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libtomboy/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/backlinks/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/bugzilla/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/exporttogtg/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/exporttohtml/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/filesystemsyncservice/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/fixedwidth/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/inserttimestamp/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/notedirectorywatcher/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/noteoftheday/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/printnotes/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/readonly/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/replacetitle/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/specialnotes/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/statistics/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/stickynoteimport/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/tableofcontents/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/todo/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/tomboyimport/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/underline/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/addins/webdavsyncservice/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	src/dbus/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharp	src/addins/bugzilla/bugzillapreferences.hpp	/^namespace sharp {$/;"	n
sharp	src/notebuffer.hpp	/^namespace sharp {$/;"	n
sharp	src/notetag.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/addinstreemodel.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/addinstreemodel.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/datetime.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/datetime.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/directory.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/directory.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/dynamicmodule.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/dynamicmodule.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/exception.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/exception.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/fileinfo.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/fileinfo.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/files.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/files.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/map.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/modulefactory.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/modulemanager.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/modulemanager.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/process.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/process.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/propertyeditor.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/propertyeditor.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/streamreader.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/streamreader.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/streamwriter.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/streamwriter.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/string.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/string.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/timespan.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/timespan.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/uri.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/uri.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/uuid.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xml.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xml.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xmlconvert.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xmlconvert.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xmlreader.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xmlreader.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xmlresolver.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xmlwriter.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xmlwriter.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xsltargumentlist.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xsltargumentlist.hpp	/^namespace sharp {$/;"	n
sharp	src/sharp/xsltransform.cpp	/^namespace sharp {$/;"	n	file:
sharp	src/sharp/xsltransform.hpp	/^namespace sharp {$/;"	n
sharp	src/utils.hpp	/^namespace sharp {$/;"	n
sharp::AddinsTreeModel	src/sharp/addinstreemodel.hpp	/^class AddinsTreeModel$/;"	c	namespace:sharp	inherits:Gtk::TreeStore
sharp::AddinsTreeModel::AddinsColumns	src/sharp/addinstreemodel.hpp	/^  class AddinsColumns$/;"	c	class:sharp::AddinsTreeModel	inherits:Gtk::TreeModelColumnRecord	access:public
sharp::AddinsTreeModel::AddinsColumns::AddinsColumns	src/sharp/addinstreemodel.hpp	/^    AddinsColumns()$/;"	f	class:sharp::AddinsTreeModel::AddinsColumns	access:public	signature:()
sharp::AddinsTreeModel::AddinsColumns::addin	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<const sharp::DynamicModule *> addin;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
sharp::AddinsTreeModel::AddinsColumns::category	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<gnote::AddinCategory> category;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
sharp::AddinsTreeModel::AddinsColumns::id	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          id;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
sharp::AddinsTreeModel::AddinsColumns::name	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          name;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
sharp::AddinsTreeModel::AddinsColumns::version	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          version;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
sharp::AddinsTreeModel::AddinsTreeModel	src/sharp/addinstreemodel.cpp	/^  AddinsTreeModel::AddinsTreeModel()$/;"	f	class:sharp::AddinsTreeModel	signature:()
sharp::AddinsTreeModel::AddinsTreeModel	src/sharp/addinstreemodel.hpp	/^  AddinsTreeModel();$/;"	p	class:sharp::AddinsTreeModel	access:protected	signature:()
sharp::AddinsTreeModel::Ptr	src/sharp/addinstreemodel.hpp	/^  typedef Glib::RefPtr<AddinsTreeModel> Ptr;$/;"	t	class:sharp::AddinsTreeModel	access:public
sharp::AddinsTreeModel::append	src/sharp/addinstreemodel.cpp	/^  Gtk::TreeIter AddinsTreeModel::append(const gnote::AddinInfo & module_info,$/;"	f	class:sharp::AddinsTreeModel	signature:(const gnote::AddinInfo & module_info, const sharp::DynamicModule *module)
sharp::AddinsTreeModel::append	src/sharp/addinstreemodel.hpp	/^  Gtk::TreeIter append(const gnote::AddinInfo &, const sharp::DynamicModule *);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const gnote::AddinInfo &, const sharp::DynamicModule *)
sharp::AddinsTreeModel::create	src/sharp/addinstreemodel.cpp	/^  AddinsTreeModel::Ptr AddinsTreeModel::create(Gtk::TreeView * treeview)$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::TreeView * treeview)
sharp::AddinsTreeModel::create	src/sharp/addinstreemodel.hpp	/^  static Ptr create(Gtk::TreeView * treeview);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(Gtk::TreeView * treeview)
sharp::AddinsTreeModel::get_addin_category_name	src/sharp/addinstreemodel.cpp	/^  std::string AddinsTreeModel::get_addin_category_name(gnote::AddinCategory category)$/;"	f	class:sharp::AddinsTreeModel	signature:(gnote::AddinCategory category)
sharp::AddinsTreeModel::get_addin_category_name	src/sharp/addinstreemodel.hpp	/^  static std::string get_addin_category_name(gnote::AddinCategory category);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(gnote::AddinCategory category)
sharp::AddinsTreeModel::get_module	src/sharp/addinstreemodel.cpp	/^  sharp::DynamicModule * AddinsTreeModel::get_module(const Gtk::TreeIter & iter)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::get_module	src/sharp/addinstreemodel.hpp	/^  sharp::DynamicModule * get_module(const Gtk::TreeIter &);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &)
sharp::AddinsTreeModel::get_module_id	src/sharp/addinstreemodel.cpp	/^  std::string AddinsTreeModel::get_module_id(const Gtk::TreeIter & iter)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::get_module_id	src/sharp/addinstreemodel.hpp	/^  std::string get_module_id(const Gtk::TreeIter &);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &)
sharp::AddinsTreeModel::m_columns	src/sharp/addinstreemodel.hpp	/^  AddinsColumns m_columns;$/;"	m	class:sharp::AddinsTreeModel	access:public
sharp::AddinsTreeModel::name_cell_data_func	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::name_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::name_cell_data_func	src/sharp/addinstreemodel.hpp	/^  void name_cell_data_func(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter);$/;"	p	class:sharp::AddinsTreeModel	access:private	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::name_pixbuf_cell_data_func	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::name_pixbuf_cell_data_func(Gtk::CellRenderer * renderer,$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::name_pixbuf_cell_data_func	src/sharp/addinstreemodel.hpp	/^  void name_pixbuf_cell_data_func(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter);$/;"	p	class:sharp::AddinsTreeModel	access:private	signature:(Gtk::CellRenderer * renderer, const Gtk::TreeIter & iter)
sharp::AddinsTreeModel::set_columns	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::set_columns(Gtk::TreeView *treeview)$/;"	f	class:sharp::AddinsTreeModel	signature:(Gtk::TreeView *treeview)
sharp::AddinsTreeModel::set_columns	src/sharp/addinstreemodel.hpp	/^  void set_columns(Gtk::TreeView *v);$/;"	p	class:sharp::AddinsTreeModel	access:protected	signature:(Gtk::TreeView *v)
sharp::AddinsTreeModel::set_module	src/sharp/addinstreemodel.cpp	/^  void AddinsTreeModel::set_module(const Gtk::TreeIter & iter, const sharp::DynamicModule * dmod)$/;"	f	class:sharp::AddinsTreeModel	signature:(const Gtk::TreeIter & iter, const sharp::DynamicModule * dmod)
sharp::AddinsTreeModel::set_module	src/sharp/addinstreemodel.hpp	/^  void set_module(const Gtk::TreeIter &, const sharp::DynamicModule *);$/;"	p	class:sharp::AddinsTreeModel	access:public	signature:(const Gtk::TreeIter &, const sharp::DynamicModule *)
sharp::DateTime	src/sharp/datetime.hpp	/^class DateTime$/;"	c	namespace:sharp
sharp::DateTime::DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime()$/;"	f	class:sharp::DateTime	signature:()
sharp::DateTime::DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime(const Glib::TimeVal & v)$/;"	f	class:sharp::DateTime	signature:(const Glib::TimeVal & v)
sharp::DateTime::DateTime	src/sharp/datetime.cpp	/^  DateTime::DateTime(time_t t, glong _usec)$/;"	f	class:sharp::DateTime	signature:(time_t t, glong _usec)
sharp::DateTime::DateTime	src/sharp/datetime.hpp	/^  DateTime();$/;"	p	class:sharp::DateTime	access:public	signature:()
sharp::DateTime::DateTime	src/sharp/datetime.hpp	/^  explicit DateTime(const Glib::TimeVal & v);$/;"	p	class:sharp::DateTime	access:public	signature:(const Glib::TimeVal & v)
sharp::DateTime::DateTime	src/sharp/datetime.hpp	/^  explicit DateTime(time_t t, glong _usec = 0);$/;"	p	class:sharp::DateTime	access:public	signature:(time_t t, glong _usec = 0)
sharp::DateTime::_to_string	src/sharp/datetime.cpp	/^  std::string DateTime::_to_string(const char * format, struct tm * t) const$/;"	f	class:sharp::DateTime	signature:(const char * format, struct tm * t) const
sharp::DateTime::_to_string	src/sharp/datetime.hpp	/^  std::string _to_string(const char * format, struct tm *) const;$/;"	p	class:sharp::DateTime	access:private	signature:(const char * format, struct tm *) const
sharp::DateTime::add_days	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_days(int days)$/;"	f	class:sharp::DateTime	signature:(int days)
sharp::DateTime::add_days	src/sharp/datetime.hpp	/^  DateTime & add_days(int days);$/;"	p	class:sharp::DateTime	access:public	signature:(int days)
sharp::DateTime::add_hours	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_hours(int hours)$/;"	f	class:sharp::DateTime	signature:(int hours)
sharp::DateTime::add_hours	src/sharp/datetime.hpp	/^  DateTime & add_hours(int hours);$/;"	p	class:sharp::DateTime	access:public	signature:(int hours)
sharp::DateTime::add_seconds	src/sharp/datetime.cpp	/^  DateTime & DateTime::add_seconds(int seconds)$/;"	f	class:sharp::DateTime	signature:(int seconds)
sharp::DateTime::add_seconds	src/sharp/datetime.hpp	/^  DateTime & add_seconds(int seconds);$/;"	p	class:sharp::DateTime	access:public	signature:(int seconds)
sharp::DateTime::compare	src/sharp/datetime.cpp	/^  int DateTime::compare(const DateTime &a, const DateTime &b)$/;"	f	class:sharp::DateTime	signature:(const DateTime &a, const DateTime &b)
sharp::DateTime::compare	src/sharp/datetime.hpp	/^  static int compare(const DateTime &, const DateTime &);$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime &, const DateTime &)
sharp::DateTime::day	src/sharp/datetime.cpp	/^  int DateTime::day() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::day	src/sharp/datetime.hpp	/^  int day() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::day_of_year	src/sharp/datetime.cpp	/^  int DateTime::day_of_year() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::day_of_year	src/sharp/datetime.hpp	/^  int day_of_year() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::from_iso8601	src/sharp/datetime.cpp	/^  DateTime DateTime::from_iso8601(const std::string &iso8601)$/;"	f	class:sharp::DateTime	signature:(const std::string &iso8601)
sharp::DateTime::from_iso8601	src/sharp/datetime.hpp	/^  static DateTime from_iso8601(const std::string &);$/;"	p	class:sharp::DateTime	access:public	signature:(const std::string &)
sharp::DateTime::is_valid	src/sharp/datetime.cpp	/^  bool DateTime::is_valid() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::is_valid	src/sharp/datetime.hpp	/^  bool is_valid() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::m_date	src/sharp/datetime.hpp	/^  Glib::TimeVal m_date;$/;"	m	class:sharp::DateTime	access:private
sharp::DateTime::month	src/sharp/datetime.cpp	/^  int DateTime::month() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::month	src/sharp/datetime.hpp	/^  int month() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::now	src/sharp/datetime.cpp	/^  DateTime DateTime::now()$/;"	f	class:sharp::DateTime	signature:()
sharp::DateTime::now	src/sharp/datetime.hpp	/^  static DateTime now();$/;"	p	class:sharp::DateTime	access:public	signature:()
sharp::DateTime::operator !=	src/sharp/datetime.hpp	/^  bool operator!=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator -	src/sharp/datetime.cpp	/^  DateTime DateTime::operator-(const TimeSpan & ts) const$/;"	f	class:sharp::DateTime	signature:(const TimeSpan & ts) const
sharp::DateTime::operator -	src/sharp/datetime.cpp	/^  TimeSpan DateTime::operator-(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
sharp::DateTime::operator -	src/sharp/datetime.hpp	/^  DateTime operator-(const TimeSpan & ts) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const TimeSpan & ts) const
sharp::DateTime::operator -	src/sharp/datetime.hpp	/^  TimeSpan operator-(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator <	src/sharp/datetime.hpp	/^  bool operator<(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator <=	src/sharp/datetime.hpp	/^  bool operator<=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator ==	src/sharp/datetime.cpp	/^  bool DateTime::operator==(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
sharp::DateTime::operator ==	src/sharp/datetime.hpp	/^  bool operator==(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator >	src/sharp/datetime.cpp	/^  bool DateTime::operator>(const DateTime & dt) const$/;"	f	class:sharp::DateTime	signature:(const DateTime & dt) const
sharp::DateTime::operator >	src/sharp/datetime.hpp	/^  bool operator>(const DateTime & dt) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::operator >=	src/sharp/datetime.hpp	/^  bool operator>=(const DateTime & dt) const$/;"	f	class:sharp::DateTime	access:public	signature:(const DateTime & dt) const
sharp::DateTime::sec	src/sharp/datetime.hpp	/^  glong sec() const$/;"	f	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::set_usec	src/sharp/datetime.hpp	/^  void set_usec(glong _usec) $/;"	f	class:sharp::DateTime	access:public	signature:(glong _usec)
sharp::DateTime::to_iso8601	src/sharp/datetime.cpp	/^  std::string DateTime::to_iso8601() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::to_iso8601	src/sharp/datetime.hpp	/^  std::string to_iso8601() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::to_short_time_string	src/sharp/datetime.cpp	/^  std::string DateTime::to_short_time_string() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::to_short_time_string	src/sharp/datetime.hpp	/^  std::string to_short_time_string() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::to_string	src/sharp/datetime.cpp	/^  std::string DateTime::to_string(const char * format) const$/;"	f	class:sharp::DateTime	signature:(const char * format) const
sharp::DateTime::to_string	src/sharp/datetime.hpp	/^  std::string to_string(const char * format) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const char * format) const
sharp::DateTime::to_string	src/sharp/datetime.hpp	/^  std::string to_string(const std::string & format) const$/;"	f	class:sharp::DateTime	access:public	signature:(const std::string & format) const
sharp::DateTime::usec	src/sharp/datetime.hpp	/^  glong usec() const$/;"	f	class:sharp::DateTime	access:public	signature:() const
sharp::DateTime::year	src/sharp/datetime.cpp	/^  int DateTime::year() const$/;"	f	class:sharp::DateTime	signature:() const
sharp::DateTime::year	src/sharp/datetime.hpp	/^  int year() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
sharp::DynamicModule	src/sharp/dynamicmodule.hpp	/^class DynamicModule$/;"	c	namespace:sharp
sharp::DynamicModule::DynamicModule	src/sharp/dynamicmodule.cpp	/^  DynamicModule::DynamicModule()$/;"	f	class:sharp::DynamicModule	signature:()
sharp::DynamicModule::DynamicModule	src/sharp/dynamicmodule.hpp	/^  DynamicModule();$/;"	p	class:sharp::DynamicModule	access:protected	signature:()
sharp::DynamicModule::add	src/sharp/dynamicmodule.cpp	/^  void DynamicModule::add(const char * iface, IfaceFactoryBase* mod)$/;"	f	class:sharp::DynamicModule	signature:(const char * iface, IfaceFactoryBase* mod)
sharp::DynamicModule::add	src/sharp/dynamicmodule.hpp	/^  void add(const char * iface, IfaceFactoryBase*);$/;"	p	class:sharp::DynamicModule	access:protected	signature:(const char * iface, IfaceFactoryBase*)
sharp::DynamicModule::enabled	src/sharp/dynamicmodule.cpp	/^  void DynamicModule::enabled(bool enable)$/;"	f	class:sharp::DynamicModule	signature:(bool enable)
sharp::DynamicModule::enabled	src/sharp/dynamicmodule.hpp	/^  void enabled(bool enable=true);$/;"	p	class:sharp::DynamicModule	access:public	signature:(bool enable=true)
sharp::DynamicModule::has_interface	src/sharp/dynamicmodule.cpp	/^  bool DynamicModule::has_interface(const char * intf) const$/;"	f	class:sharp::DynamicModule	signature:(const char * intf) const
sharp::DynamicModule::has_interface	src/sharp/dynamicmodule.hpp	/^  bool has_interface(const char *) const;$/;"	p	class:sharp::DynamicModule	access:public	signature:(const char *) const
sharp::DynamicModule::is_enabled	src/sharp/dynamicmodule.hpp	/^  bool is_enabled() const$/;"	f	class:sharp::DynamicModule	access:public	signature:() const
sharp::DynamicModule::load	src/sharp/dynamicmodule.hpp	/^  void load();$/;"	p	class:sharp::DynamicModule	access:public	signature:()
sharp::DynamicModule::m_enabled	src/sharp/dynamicmodule.hpp	/^  bool m_enabled;$/;"	m	class:sharp::DynamicModule	access:private
sharp::DynamicModule::m_interfaces	src/sharp/dynamicmodule.hpp	/^  std::map<std::string, IfaceFactoryBase *> m_interfaces;$/;"	m	class:sharp::DynamicModule	access:private
sharp::DynamicModule::query_interface	src/sharp/dynamicmodule.cpp	/^  IfaceFactoryBase * DynamicModule::query_interface(const char * intf) const$/;"	f	class:sharp::DynamicModule	signature:(const char * intf) const
sharp::DynamicModule::query_interface	src/sharp/dynamicmodule.hpp	/^  IfaceFactoryBase * query_interface(const char *) const;$/;"	p	class:sharp::DynamicModule	access:public	signature:(const char *) const
sharp::DynamicModule::~DynamicModule	src/sharp/dynamicmodule.cpp	/^  DynamicModule::~DynamicModule()$/;"	f	class:sharp::DynamicModule	signature:()
sharp::DynamicModule::~DynamicModule	src/sharp/dynamicmodule.hpp	/^  virtual ~DynamicModule();$/;"	p	class:sharp::DynamicModule	access:public	signature:()
sharp::Exception	src/sharp/exception.hpp	/^class Exception$/;"	c	namespace:sharp	inherits:std::exception
sharp::Exception::Exception	src/sharp/exception.hpp	/^  Exception(const std::string & m) throw()$/;"	f	class:sharp::Exception	access:public	signature:(const std::string & m)
sharp::Exception::m_what	src/sharp/exception.hpp	/^  std::string m_what;$/;"	m	class:sharp::Exception	access:private
sharp::Exception::override	src/sharp/exception.hpp	/^  virtual const char *what() const throw() override;$/;"	m	class:sharp::Exception	access:public
sharp::Exception::what	src/sharp/exception.cpp	/^  const char *Exception::what() const throw()$/;"	f	class:sharp::Exception	signature:() const
sharp::Exception::~Exception	src/sharp/exception.cpp	/^  Exception::~Exception() throw()$/;"	f	class:sharp::Exception	signature:()
sharp::Exception::~Exception	src/sharp/exception.hpp	/^  virtual ~Exception() throw();$/;"	p	class:sharp::Exception	access:public	signature:()
sharp::FileInfo	src/sharp/fileinfo.hpp	/^class FileInfo$/;"	c	namespace:sharp
sharp::FileInfo::FileInfo	src/sharp/fileinfo.cpp	/^  FileInfo::FileInfo(const std::string & s)$/;"	f	class:sharp::FileInfo	signature:(const std::string & s)
sharp::FileInfo::FileInfo	src/sharp/fileinfo.hpp	/^  FileInfo(const std::string & );$/;"	p	class:sharp::FileInfo	access:public	signature:(const std::string & )
sharp::FileInfo::get_extension	src/sharp/fileinfo.cpp	/^  std::string FileInfo::get_extension() const$/;"	f	class:sharp::FileInfo	signature:() const
sharp::FileInfo::get_extension	src/sharp/fileinfo.hpp	/^  std::string get_extension() const;$/;"	p	class:sharp::FileInfo	access:public	signature:() const
sharp::FileInfo::get_name	src/sharp/fileinfo.cpp	/^  std::string FileInfo::get_name() const$/;"	f	class:sharp::FileInfo	signature:() const
sharp::FileInfo::get_name	src/sharp/fileinfo.hpp	/^  std::string get_name() const;$/;"	p	class:sharp::FileInfo	access:public	signature:() const
sharp::FileInfo::m_path	src/sharp/fileinfo.hpp	/^  std::string m_path;$/;"	m	class:sharp::FileInfo	access:private
sharp::IInterface	src/sharp/modulefactory.hpp	/^class IInterface$/;"	c	namespace:sharp
sharp::IInterface::IInterface	src/sharp/modulefactory.hpp	/^  IInterface()$/;"	f	class:sharp::IInterface	access:protected	signature:()
sharp::IInterface::~IInterface	src/sharp/modulefactory.hpp	/^  virtual ~IInterface()$/;"	f	class:sharp::IInterface	access:public	signature:()
sharp::IfaceFactory	src/sharp/modulefactory.hpp	/^class IfaceFactory$/;"	c	namespace:sharp	inherits:IfaceFactoryBase
sharp::IfaceFactoryBase	src/sharp/modulefactory.hpp	/^class IfaceFactoryBase$/;"	c	namespace:sharp
sharp::IfaceFactoryBase::operator ()	src/sharp/modulefactory.hpp	/^  virtual IInterface *operator()() = 0;$/;"	p	class:sharp::IfaceFactoryBase	access:public	signature:()
sharp::IfaceFactoryBase::~IfaceFactoryBase	src/sharp/modulefactory.hpp	/^  virtual ~IfaceFactoryBase()$/;"	f	class:sharp::IfaceFactoryBase	access:public	signature:()
sharp::ModuleManager	src/sharp/modulemanager.hpp	/^class ModuleManager $/;"	c	namespace:sharp
sharp::ModuleManager::get_module	src/sharp/modulemanager.cpp	/^  DynamicModule * ModuleManager::get_module(const std::string & module) const$/;"	f	class:sharp::ModuleManager	signature:(const std::string & module) const
sharp::ModuleManager::get_module	src/sharp/modulemanager.hpp	/^  DynamicModule *get_module(const std::string & module) const;$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::string & module) const
sharp::ModuleManager::get_modules	src/sharp/modulemanager.hpp	/^  const ModuleMap & get_modules() const$/;"	f	class:sharp::ModuleManager	access:public	signature:() const
sharp::ModuleManager::load_module	src/sharp/modulemanager.cpp	/^  DynamicModule *ModuleManager::load_module(const std::string & mod)$/;"	f	class:sharp::ModuleManager	signature:(const std::string & mod)
sharp::ModuleManager::load_module	src/sharp/modulemanager.hpp	/^  DynamicModule *load_module(const std::string & module);$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::string & module)
sharp::ModuleManager::load_modules	src/sharp/modulemanager.cpp	/^  void ModuleManager::load_modules(const std::list<std::string> & modules)$/;"	f	class:sharp::ModuleManager	signature:(const std::list<std::string> & modules)
sharp::ModuleManager::load_modules	src/sharp/modulemanager.hpp	/^  void load_modules(const std::list<std::string> & modules);$/;"	p	class:sharp::ModuleManager	access:public	signature:(const std::list<std::string> & modules)
sharp::ModuleManager::m_modules	src/sharp/modulemanager.hpp	/^  ModuleMap m_modules;$/;"	m	class:sharp::ModuleManager	access:private
sharp::ModuleManager::~ModuleManager	src/sharp/modulemanager.cpp	/^  ModuleManager::~ModuleManager()$/;"	f	class:sharp::ModuleManager	signature:()
sharp::ModuleManager::~ModuleManager	src/sharp/modulemanager.hpp	/^  ~ModuleManager();$/;"	p	class:sharp::ModuleManager	access:public	signature:()
sharp::ModuleMap	src/sharp/modulemanager.hpp	/^typedef std::map<std::string, DynamicModule*> ModuleMap;$/;"	t	namespace:sharp
sharp::Process	src/sharp/process.hpp	/^class Process$/;"	c	namespace:sharp
sharp::Process::Process	src/sharp/process.cpp	/^Process::Process()$/;"	f	class:sharp::Process	signature:()
sharp::Process::Process	src/sharp/process.hpp	/^  Process();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::arguments	src/sharp/process.hpp	/^  std::vector<std::string> arguments() const$/;"	f	class:sharp::Process	access:public	signature:() const
sharp::Process::arguments	src/sharp/process.hpp	/^  void arguments(const std::vector<std::string> & args)$/;"	f	class:sharp::Process	access:public	signature:(const std::vector<std::string> & args)
sharp::Process::eof	src/sharp/process.cpp	/^bool Process::eof(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
sharp::Process::eof	src/sharp/process.hpp	/^  bool eof(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
sharp::Process::execv_error	src/sharp/process.cpp	/^const char *Process::execv_error(int error)$/;"	f	class:sharp::Process	signature:(int error)
sharp::Process::execv_error	src/sharp/process.hpp	/^  static const char *execv_error(int error);$/;"	p	class:sharp::Process	access:private	signature:(int error)
sharp::Process::exit_code	src/sharp/process.hpp	/^  int exit_code() const$/;"	f	class:sharp::Process	access:public	signature:() const
sharp::Process::file_name	src/sharp/process.hpp	/^  std::string file_name() const$/;"	f	class:sharp::Process	access:public	signature:() const
sharp::Process::file_name	src/sharp/process.hpp	/^  void file_name(const std::string & fname)$/;"	f	class:sharp::Process	access:public	signature:(const std::string & fname)
sharp::Process::line_available	src/sharp/process.cpp	/^bool Process::line_available(std::stringstream & stream)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream)
sharp::Process::line_available	src/sharp/process.hpp	/^  bool line_available(std::stringstream & stream);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream)
sharp::Process::m_args	src/sharp/process.hpp	/^  std::vector<std::string> m_args;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_exit_code	src/sharp/process.hpp	/^  int m_exit_code;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_file_name	src/sharp/process.hpp	/^  std::string m_file_name;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_pid	src/sharp/process.hpp	/^  int m_pid;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_redirect_stderr	src/sharp/process.hpp	/^  bool m_redirect_stderr;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_redirect_stdout	src/sharp/process.hpp	/^  bool m_redirect_stdout;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_stderr	src/sharp/process.hpp	/^  int m_stderr;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_stderr_stream	src/sharp/process.hpp	/^  std::stringstream m_stderr_stream;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_stdout	src/sharp/process.hpp	/^  int m_stdout;$/;"	m	class:sharp::Process	access:private
sharp::Process::m_stdout_stream	src/sharp/process.hpp	/^  std::stringstream m_stdout_stream;$/;"	m	class:sharp::Process	access:private
sharp::Process::perform_read	src/sharp/process.cpp	/^bool Process::perform_read(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
sharp::Process::perform_read	src/sharp/process.hpp	/^  bool perform_read(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
sharp::Process::read_line	src/sharp/process.cpp	/^std::string Process::read_line(std::stringstream & stream, int & m_file)$/;"	f	class:sharp::Process	signature:(std::stringstream & stream, int & m_file)
sharp::Process::read_line	src/sharp/process.hpp	/^  std::string read_line(std::stringstream & stream, int & m_file);$/;"	p	class:sharp::Process	access:private	signature:(std::stringstream & stream, int & m_file)
sharp::Process::redirect_output	src/sharp/process.cpp	/^void Process::redirect_output(bool redirect, int fileno, int *pipedes)$/;"	f	class:sharp::Process	signature:(bool redirect, int fileno, int *pipedes)
sharp::Process::redirect_output	src/sharp/process.hpp	/^  static void redirect_output(bool redirect, int fileno, int *pipedes);$/;"	p	class:sharp::Process	access:private	signature:(bool redirect, int fileno, int *pipedes)
sharp::Process::redirect_standard_error	src/sharp/process.hpp	/^  bool redirect_standard_error() const$/;"	f	class:sharp::Process	access:public	signature:() const
sharp::Process::redirect_standard_error	src/sharp/process.hpp	/^  void redirect_standard_error(bool redirect)$/;"	f	class:sharp::Process	access:public	signature:(bool redirect)
sharp::Process::redirect_standard_output	src/sharp/process.hpp	/^  bool redirect_standard_output() const$/;"	f	class:sharp::Process	access:public	signature:() const
sharp::Process::redirect_standard_output	src/sharp/process.hpp	/^  void redirect_standard_output(bool redirect)$/;"	f	class:sharp::Process	access:public	signature:(bool redirect)
sharp::Process::standard_error_eof	src/sharp/process.cpp	/^bool Process::standard_error_eof()$/;"	f	class:sharp::Process	signature:()
sharp::Process::standard_error_eof	src/sharp/process.hpp	/^  bool standard_error_eof();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::standard_error_read_line	src/sharp/process.cpp	/^std::string Process::standard_error_read_line()$/;"	f	class:sharp::Process	signature:()
sharp::Process::standard_error_read_line	src/sharp/process.hpp	/^  std::string standard_error_read_line();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::standard_output_eof	src/sharp/process.cpp	/^bool Process::standard_output_eof()$/;"	f	class:sharp::Process	signature:()
sharp::Process::standard_output_eof	src/sharp/process.hpp	/^  bool standard_output_eof();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::standard_output_read_line	src/sharp/process.cpp	/^std::string Process::standard_output_read_line()$/;"	f	class:sharp::Process	signature:()
sharp::Process::standard_output_read_line	src/sharp/process.hpp	/^  std::string standard_output_read_line();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::start	src/sharp/process.cpp	/^void Process::start()$/;"	f	class:sharp::Process	signature:()
sharp::Process::start	src/sharp/process.hpp	/^  void start();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::Process::wait_for_exit	src/sharp/process.cpp	/^bool Process::wait_for_exit(unsigned timeout)$/;"	f	class:sharp::Process	signature:(unsigned timeout)
sharp::Process::wait_for_exit	src/sharp/process.cpp	/^void Process::wait_for_exit()$/;"	f	class:sharp::Process	signature:()
sharp::Process::wait_for_exit	src/sharp/process.hpp	/^  bool wait_for_exit(unsigned timeout);$/;"	p	class:sharp::Process	access:public	signature:(unsigned timeout)
sharp::Process::wait_for_exit	src/sharp/process.hpp	/^  void wait_for_exit();$/;"	p	class:sharp::Process	access:public	signature:()
sharp::PropertyEditor	src/sharp/propertyeditor.hpp	/^  class PropertyEditor$/;"	c	namespace:sharp	inherits:PropertyEditorBase
sharp::PropertyEditor::PropertyEditor	src/sharp/propertyeditor.cpp	/^  PropertyEditor::PropertyEditor(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)$/;"	f	class:sharp::PropertyEditor	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)
sharp::PropertyEditor::PropertyEditor	src/sharp/propertyeditor.hpp	/^    PropertyEditor(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry);$/;"	p	class:sharp::PropertyEditor	access:public	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::Entry &entry)
sharp::PropertyEditor::on_changed	src/sharp/propertyeditor.cpp	/^  void PropertyEditor::on_changed()$/;"	f	class:sharp::PropertyEditor	signature:()
sharp::PropertyEditor::on_changed	src/sharp/propertyeditor.hpp	/^    void on_changed();$/;"	p	class:sharp::PropertyEditor	access:private	signature:()
sharp::PropertyEditor::override	src/sharp/propertyeditor.hpp	/^    virtual void setup() override;$/;"	m	class:sharp::PropertyEditor	access:public
sharp::PropertyEditor::setup	src/sharp/propertyeditor.cpp	/^  void PropertyEditor::setup()$/;"	f	class:sharp::PropertyEditor	signature:()
sharp::PropertyEditorBase	src/sharp/propertyeditor.hpp	/^  class PropertyEditorBase$/;"	c	namespace:sharp
sharp::PropertyEditorBase::PropertyEditorBase	src/sharp/propertyeditor.cpp	/^  PropertyEditorBase::PropertyEditorBase(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)$/;"	f	class:sharp::PropertyEditorBase	signature:(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)
sharp::PropertyEditorBase::PropertyEditorBase	src/sharp/propertyeditor.hpp	/^    PropertyEditorBase(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w);$/;"	p	class:sharp::PropertyEditorBase	access:protected	signature:(Glib::RefPtr<Gio::Settings> & settings, const char *key, Gtk::Widget &w)
sharp::PropertyEditorBase::destroy_notify	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBase::destroy_notify(gpointer data)$/;"	f	class:sharp::PropertyEditorBase	signature:(gpointer data)
sharp::PropertyEditorBase::destroy_notify	src/sharp/propertyeditor.hpp	/^    void static destroy_notify(gpointer data);$/;"	p	class:sharp::PropertyEditorBase	access:private	signature:(gpointer data)
sharp::PropertyEditorBase::m_connection	src/sharp/propertyeditor.hpp	/^    sigc::connection m_connection;$/;"	m	class:sharp::PropertyEditorBase	access:protected
sharp::PropertyEditorBase::m_key	src/sharp/propertyeditor.hpp	/^    std::string m_key;$/;"	m	class:sharp::PropertyEditorBase	access:protected
sharp::PropertyEditorBase::m_settings	src/sharp/propertyeditor.hpp	/^    Glib::RefPtr<Gio::Settings> m_settings;$/;"	m	class:sharp::PropertyEditorBase	access:protected
sharp::PropertyEditorBase::m_widget	src/sharp/propertyeditor.hpp	/^    Gtk::Widget &m_widget;$/;"	m	class:sharp::PropertyEditorBase	access:protected
sharp::PropertyEditorBase::setup	src/sharp/propertyeditor.hpp	/^    virtual void setup() = 0;$/;"	p	class:sharp::PropertyEditorBase	access:public	signature:()
sharp::PropertyEditorBase::~PropertyEditorBase	src/sharp/propertyeditor.cpp	/^  PropertyEditorBase::~PropertyEditorBase()$/;"	f	class:sharp::PropertyEditorBase	signature:()
sharp::PropertyEditorBase::~PropertyEditorBase	src/sharp/propertyeditor.hpp	/^    virtual ~PropertyEditorBase();$/;"	p	class:sharp::PropertyEditorBase	access:public	signature:()
sharp::PropertyEditorBool	src/sharp/propertyeditor.hpp	/^  class PropertyEditorBool$/;"	c	namespace:sharp	inherits:PropertyEditorBase
sharp::PropertyEditorBool::PropertyEditorBool	src/sharp/propertyeditor.cpp	/^  PropertyEditorBool::PropertyEditorBool(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)$/;"	f	class:sharp::PropertyEditorBool	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)
sharp::PropertyEditorBool::PropertyEditorBool	src/sharp/propertyeditor.hpp	/^    PropertyEditorBool(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button);$/;"	p	class:sharp::PropertyEditorBool	access:public	signature:(Glib::RefPtr<Gio::Settings> & settings, const char * key, Gtk::ToggleButton &button)
sharp::PropertyEditorBool::add_guard	src/sharp/propertyeditor.hpp	/^    void add_guard(Gtk::Widget* w)$/;"	f	class:sharp::PropertyEditorBool	access:public	signature:(Gtk::Widget* w)
sharp::PropertyEditorBool::guard	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::guard(bool v)$/;"	f	class:sharp::PropertyEditorBool	signature:(bool v)
sharp::PropertyEditorBool::guard	src/sharp/propertyeditor.hpp	/^    void guard(bool v);$/;"	p	class:sharp::PropertyEditorBool	access:private	signature:(bool v)
sharp::PropertyEditorBool::m_guarded	src/sharp/propertyeditor.hpp	/^    std::vector<Gtk::Widget*> m_guarded;$/;"	m	class:sharp::PropertyEditorBool	access:private
sharp::PropertyEditorBool::on_changed	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::on_changed()$/;"	f	class:sharp::PropertyEditorBool	signature:()
sharp::PropertyEditorBool::on_changed	src/sharp/propertyeditor.hpp	/^    void on_changed();$/;"	p	class:sharp::PropertyEditorBool	access:private	signature:()
sharp::PropertyEditorBool::override	src/sharp/propertyeditor.hpp	/^    virtual void setup() override;$/;"	m	class:sharp::PropertyEditorBool	access:public
sharp::PropertyEditorBool::setup	src/sharp/propertyeditor.cpp	/^  void PropertyEditorBool::setup()$/;"	f	class:sharp::PropertyEditorBool	signature:()
sharp::StreamReader	src/sharp/streamreader.hpp	/^class StreamReader$/;"	c	namespace:sharp
sharp::StreamReader::StreamReader	src/sharp/streamreader.cpp	/^StreamReader::StreamReader()$/;"	f	class:sharp::StreamReader	signature:()
sharp::StreamReader::StreamReader	src/sharp/streamreader.hpp	/^  StreamReader();$/;"	p	class:sharp::StreamReader	access:public	signature:()
sharp::StreamReader::close	src/sharp/streamreader.cpp	/^void StreamReader::close()$/;"	f	class:sharp::StreamReader	signature:()
sharp::StreamReader::close	src/sharp/streamreader.hpp	/^  void close();$/;"	p	class:sharp::StreamReader	access:public	signature:()
sharp::StreamReader::file	src/sharp/streamreader.hpp	/^  FILE * file()$/;"	f	class:sharp::StreamReader	access:public	signature:()
sharp::StreamReader::init	src/sharp/streamreader.cpp	/^void StreamReader::init(const std::string & filename)$/;"	f	class:sharp::StreamReader	signature:(const std::string & filename)
sharp::StreamReader::init	src/sharp/streamreader.hpp	/^  void init(const std::string &);$/;"	p	class:sharp::StreamReader	access:public	signature:(const std::string &)
sharp::StreamReader::m_file	src/sharp/streamreader.hpp	/^  FILE * m_file;$/;"	m	class:sharp::StreamReader	access:private
sharp::StreamReader::read_to_end	src/sharp/streamreader.cpp	/^void StreamReader::read_to_end(std::string & text)$/;"	f	class:sharp::StreamReader	signature:(std::string & text)
sharp::StreamReader::read_to_end	src/sharp/streamreader.hpp	/^  void read_to_end(std::string &);$/;"	p	class:sharp::StreamReader	access:public	signature:(std::string &)
sharp::StreamReader::~StreamReader	src/sharp/streamreader.cpp	/^StreamReader::~StreamReader()$/;"	f	class:sharp::StreamReader	signature:()
sharp::StreamReader::~StreamReader	src/sharp/streamreader.hpp	/^  ~StreamReader();$/;"	p	class:sharp::StreamReader	access:public	signature:()
sharp::StreamWriter	src/sharp/streamwriter.hpp	/^class StreamWriter$/;"	c	namespace:sharp
sharp::StreamWriter::StreamWriter	src/sharp/streamwriter.cpp	/^StreamWriter::StreamWriter()$/;"	f	class:sharp::StreamWriter	signature:()
sharp::StreamWriter::StreamWriter	src/sharp/streamwriter.hpp	/^  StreamWriter();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
sharp::StreamWriter::close	src/sharp/streamwriter.cpp	/^void StreamWriter::close()$/;"	f	class:sharp::StreamWriter	signature:()
sharp::StreamWriter::close	src/sharp/streamwriter.hpp	/^  void close();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
sharp::StreamWriter::file	src/sharp/streamwriter.hpp	/^  FILE * file()$/;"	f	class:sharp::StreamWriter	access:public	signature:()
sharp::StreamWriter::init	src/sharp/streamwriter.cpp	/^void StreamWriter::init(const std::string & filename)$/;"	f	class:sharp::StreamWriter	signature:(const std::string & filename)
sharp::StreamWriter::init	src/sharp/streamwriter.hpp	/^  void init(const std::string &);$/;"	p	class:sharp::StreamWriter	access:public	signature:(const std::string &)
sharp::StreamWriter::m_file	src/sharp/streamwriter.hpp	/^  FILE * m_file;$/;"	m	class:sharp::StreamWriter	access:private
sharp::StreamWriter::write	src/sharp/streamwriter.cpp	/^  void StreamWriter::write(const xmlBufferPtr buffer)$/;"	f	class:sharp::StreamWriter	signature:(const xmlBufferPtr buffer)
sharp::StreamWriter::write	src/sharp/streamwriter.cpp	/^void StreamWriter::write(const std::string & text)$/;"	f	class:sharp::StreamWriter	signature:(const std::string & text)
sharp::StreamWriter::write	src/sharp/streamwriter.hpp	/^  void write(const std::string & );$/;"	p	class:sharp::StreamWriter	access:public	signature:(const std::string & )
sharp::StreamWriter::write	src/sharp/streamwriter.hpp	/^  void write(const xmlBufferPtr);$/;"	p	class:sharp::StreamWriter	access:public	signature:(const xmlBufferPtr)
sharp::StreamWriter::~StreamWriter	src/sharp/streamwriter.cpp	/^StreamWriter::~StreamWriter()$/;"	f	class:sharp::StreamWriter	signature:()
sharp::StreamWriter::~StreamWriter	src/sharp/streamwriter.hpp	/^  ~StreamWriter();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
sharp::TimeSpan	src/sharp/timespan.hpp	/^  class TimeSpan$/;"	c	namespace:sharp
sharp::TimeSpan::TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int d, int hrs, int mins, int secs)$/;"	f	class:sharp::TimeSpan	signature:(int d, int hrs, int mins, int secs)
sharp::TimeSpan::TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int d, int hrs, int mins, int secs, int usecs)$/;"	f	class:sharp::TimeSpan	signature:(int d, int hrs, int mins, int secs, int usecs)
sharp::TimeSpan::TimeSpan	src/sharp/timespan.cpp	/^  TimeSpan::TimeSpan(int hrs, int mins, int secs)$/;"	f	class:sharp::TimeSpan	signature:(int hrs, int mins, int secs)
sharp::TimeSpan::TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int days, int hrs, int mins, int secs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int days, int hrs, int mins, int secs)
sharp::TimeSpan::TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int days, int hrs, int mins, int secs, int usecs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int days, int hrs, int mins, int secs, int usecs)
sharp::TimeSpan::TimeSpan	src/sharp/timespan.hpp	/^    TimeSpan(int hrs, int mins, int secs);$/;"	p	class:sharp::TimeSpan	access:public	signature:(int hrs, int mins, int secs)
sharp::TimeSpan::_remaining_hours	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_remaining_hours	src/sharp/timespan.hpp	/^    double _remaining_hours() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::_remaining_minutes	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_remaining_minutes	src/sharp/timespan.hpp	/^    double _remaining_minutes() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::_remaining_seconds	src/sharp/timespan.cpp	/^  double TimeSpan::_remaining_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_remaining_seconds	src/sharp/timespan.hpp	/^    double _remaining_seconds() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::_total_hours	src/sharp/timespan.cpp	/^  int TimeSpan::_total_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_total_hours	src/sharp/timespan.hpp	/^    int _total_hours() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::_total_minutes	src/sharp/timespan.cpp	/^  int TimeSpan::_total_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_total_minutes	src/sharp/timespan.hpp	/^    int _total_minutes() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::_total_seconds	src/sharp/timespan.cpp	/^  int TimeSpan::_total_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::_total_seconds	src/sharp/timespan.hpp	/^    int _total_seconds() const;$/;"	p	class:sharp::TimeSpan	access:private	signature:() const
sharp::TimeSpan::days	src/sharp/timespan.hpp	/^    int days() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::hours	src/sharp/timespan.hpp	/^    int hours() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::m_days	src/sharp/timespan.hpp	/^    int m_days;$/;"	m	class:sharp::TimeSpan	access:private
sharp::TimeSpan::m_hours	src/sharp/timespan.hpp	/^    int m_hours;$/;"	m	class:sharp::TimeSpan	access:private
sharp::TimeSpan::m_minutes	src/sharp/timespan.hpp	/^    int m_minutes;$/;"	m	class:sharp::TimeSpan	access:private
sharp::TimeSpan::m_seconds	src/sharp/timespan.hpp	/^    int m_seconds;$/;"	m	class:sharp::TimeSpan	access:private
sharp::TimeSpan::m_usecs	src/sharp/timespan.hpp	/^    int m_usecs;$/;"	m	class:sharp::TimeSpan	access:private
sharp::TimeSpan::microseconds	src/sharp/timespan.hpp	/^    int microseconds() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::minutes	src/sharp/timespan.hpp	/^    int minutes() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::operator -	src/sharp/timespan.cpp	/^  TimeSpan TimeSpan::operator-(const TimeSpan & ts)$/;"	f	class:sharp::TimeSpan	signature:(const TimeSpan & ts)
sharp::TimeSpan::operator -	src/sharp/timespan.hpp	/^    TimeSpan operator-(const TimeSpan & ts);$/;"	p	class:sharp::TimeSpan	access:public	signature:(const TimeSpan & ts)
sharp::TimeSpan::parse	src/sharp/timespan.cpp	/^  TimeSpan TimeSpan::parse(const std::string & s)$/;"	f	class:sharp::TimeSpan	signature:(const std::string & s)
sharp::TimeSpan::parse	src/sharp/timespan.hpp	/^    static TimeSpan parse(const std::string & s);$/;"	p	class:sharp::TimeSpan	access:public	signature:(const std::string & s)
sharp::TimeSpan::seconds	src/sharp/timespan.hpp	/^    int seconds() const$/;"	f	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::string	src/sharp/timespan.cpp	/^  std::string TimeSpan::string() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::string	src/sharp/timespan.hpp	/^    std::string string() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::total_days	src/sharp/timespan.cpp	/^  double TimeSpan::total_days() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::total_days	src/sharp/timespan.hpp	/^    double total_days() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::total_hours	src/sharp/timespan.cpp	/^  double TimeSpan::total_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::total_hours	src/sharp/timespan.hpp	/^    double total_hours() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::total_milliseconds	src/sharp/timespan.cpp	/^  double TimeSpan::total_milliseconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::total_milliseconds	src/sharp/timespan.hpp	/^    double total_milliseconds() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::total_minutes	src/sharp/timespan.cpp	/^  double TimeSpan::total_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::total_minutes	src/sharp/timespan.hpp	/^    double total_minutes() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::TimeSpan::total_seconds	src/sharp/timespan.cpp	/^  double TimeSpan::total_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
sharp::TimeSpan::total_seconds	src/sharp/timespan.hpp	/^    double total_seconds() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
sharp::Uri	src/sharp/uri.hpp	/^  class Uri$/;"	c	namespace:sharp
sharp::Uri::Uri	src/sharp/uri.hpp	/^    Uri(const std::string & u)$/;"	f	class:sharp::Uri	access:public	signature:(const std::string & u)
sharp::Uri::_is_scheme	src/sharp/uri.cpp	/^  bool Uri::_is_scheme(const std::string & scheme) const$/;"	f	class:sharp::Uri	signature:(const std::string & scheme) const
sharp::Uri::_is_scheme	src/sharp/uri.hpp	/^    bool _is_scheme(const std::string & scheme) const;$/;"	p	class:sharp::Uri	access:private	signature:(const std::string & scheme) const
sharp::Uri::escape_uri_string	src/sharp/uri.cpp	/^  std::string Uri::escape_uri_string(const std::string &s)$/;"	f	class:sharp::Uri	signature:(const std::string &s)
sharp::Uri::escape_uri_string	src/sharp/uri.hpp	/^    static std::string escape_uri_string(const std::string &);$/;"	p	class:sharp::Uri	access:public	signature:(const std::string &)
sharp::Uri::get_absolute_uri	src/sharp/uri.cpp	/^  std::string Uri::get_absolute_uri() const$/;"	f	class:sharp::Uri	signature:() const
sharp::Uri::get_absolute_uri	src/sharp/uri.hpp	/^    std::string get_absolute_uri() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
sharp::Uri::get_host	src/sharp/uri.cpp	/^  std::string Uri::get_host() const$/;"	f	class:sharp::Uri	signature:() const
sharp::Uri::get_host	src/sharp/uri.hpp	/^    std::string get_host() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
sharp::Uri::is_file	src/sharp/uri.cpp	/^  bool Uri::is_file() const$/;"	f	class:sharp::Uri	signature:() const
sharp::Uri::is_file	src/sharp/uri.hpp	/^    bool is_file() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
sharp::Uri::local_path	src/sharp/uri.cpp	/^  std::string Uri::local_path() const$/;"	f	class:sharp::Uri	signature:() const
sharp::Uri::local_path	src/sharp/uri.hpp	/^    std::string local_path() const;$/;"	p	class:sharp::Uri	access:public	signature:() const
sharp::Uri::m_uri	src/sharp/uri.hpp	/^    std::string m_uri;$/;"	m	class:sharp::Uri	access:private
sharp::Uri::to_string	src/sharp/uri.hpp	/^    const std::string & to_string() const$/;"	f	class:sharp::Uri	access:public	signature:() const
sharp::XmlConvert	src/sharp/xmlconvert.hpp	/^  class XmlConvert$/;"	c	namespace:sharp
sharp::XmlConvert::to_date_time	src/sharp/xmlconvert.cpp	/^  DateTime XmlConvert::to_date_time(const std::string & date)$/;"	f	class:sharp::XmlConvert	signature:(const std::string & date)
sharp::XmlConvert::to_date_time	src/sharp/xmlconvert.hpp	/^    static DateTime to_date_time(const std::string & date);$/;"	p	class:sharp::XmlConvert	access:public	signature:(const std::string & date)
sharp::XmlConvert::to_string	src/sharp/xmlconvert.cpp	/^  std::string XmlConvert::to_string(const DateTime & date)$/;"	f	class:sharp::XmlConvert	signature:(const DateTime & date)
sharp::XmlConvert::to_string	src/sharp/xmlconvert.hpp	/^    static std::string to_string(const DateTime & date);$/;"	p	class:sharp::XmlConvert	access:public	signature:(const DateTime & date)
sharp::XmlNodeSet	src/sharp/xml.hpp	/^  typedef std::vector<xmlNodePtr> XmlNodeSet;$/;"	t	namespace:sharp
sharp::XmlReader	src/sharp/xmlreader.hpp	/^class XmlReader$/;"	c	namespace:sharp	inherits:boost::noncopyable
sharp::XmlReader::XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::XmlReader()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::XmlReader(const std::string & filename)$/;"	f	class:sharp::XmlReader	signature:(const std::string & filename)
sharp::XmlReader::XmlReader	src/sharp/xmlreader.hpp	/^  XmlReader();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::XmlReader	src/sharp/xmlreader.hpp	/^  XmlReader(const std::string & filename);$/;"	p	class:sharp::XmlReader	access:public	signature:(const std::string & filename)
sharp::XmlReader::close	src/sharp/xmlreader.cpp	/^  void XmlReader::close()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::close	src/sharp/xmlreader.hpp	/^  void           close();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::error_handler	src/sharp/xmlreader.cpp	/^  void XmlReader::error_handler(void* arg, const char* msg, $/;"	f	class:sharp::XmlReader	signature:(void* arg, const char* msg, int , void* )
sharp::XmlReader::error_handler	src/sharp/xmlreader.hpp	/^  static void error_handler(void* arg, const char* msg, int severity, void* locator);$/;"	p	class:sharp::XmlReader	access:private	signature:(void* arg, const char* msg, int severity, void* locator)
sharp::XmlReader::get_attribute	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_attribute(const char * name)$/;"	f	class:sharp::XmlReader	signature:(const char * name)
sharp::XmlReader::get_attribute	src/sharp/xmlreader.hpp	/^  std::string    get_attribute(const char *);$/;"	p	class:sharp::XmlReader	access:public	signature:(const char *)
sharp::XmlReader::get_name	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_name()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::get_name	src/sharp/xmlreader.hpp	/^  std::string    get_name();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::get_node_type	src/sharp/xmlreader.cpp	/^  xmlReaderTypes XmlReader::get_node_type()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::get_node_type	src/sharp/xmlreader.hpp	/^  xmlReaderTypes get_node_type();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::get_value	src/sharp/xmlreader.cpp	/^  std::string XmlReader::get_value()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::get_value	src/sharp/xmlreader.hpp	/^  std::string    get_value();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::load_buffer	src/sharp/xmlreader.cpp	/^  void XmlReader::load_buffer(const std::string &s)$/;"	f	class:sharp::XmlReader	signature:(const std::string &s)
sharp::XmlReader::load_buffer	src/sharp/xmlreader.hpp	/^  void load_buffer(const std::string &s);$/;"	p	class:sharp::XmlReader	access:public	signature:(const std::string &s)
sharp::XmlReader::m_buffer	src/sharp/xmlreader.hpp	/^  std::string      m_buffer;$/;"	m	class:sharp::XmlReader	access:private
sharp::XmlReader::m_error	src/sharp/xmlreader.hpp	/^  bool             m_error;$/;"	m	class:sharp::XmlReader	access:private
sharp::XmlReader::m_reader	src/sharp/xmlreader.hpp	/^  xmlTextReaderPtr m_reader;$/;"	m	class:sharp::XmlReader	access:private
sharp::XmlReader::move_to_next_attribute	src/sharp/xmlreader.cpp	/^  bool XmlReader::move_to_next_attribute()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::move_to_next_attribute	src/sharp/xmlreader.hpp	/^  bool           move_to_next_attribute();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::read	src/sharp/xmlreader.cpp	/^  bool XmlReader::read()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::read	src/sharp/xmlreader.hpp	/^  bool read();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::read_attribute_value	src/sharp/xmlreader.cpp	/^  bool XmlReader::read_attribute_value()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::read_attribute_value	src/sharp/xmlreader.hpp	/^  bool           read_attribute_value();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::read_inner_xml	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_inner_xml()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::read_inner_xml	src/sharp/xmlreader.hpp	/^  std::string    read_inner_xml();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::read_outer_xml	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_outer_xml()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::read_outer_xml	src/sharp/xmlreader.hpp	/^  std::string    read_outer_xml();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::read_string	src/sharp/xmlreader.cpp	/^  std::string XmlReader::read_string()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::read_string	src/sharp/xmlreader.hpp	/^  std::string    read_string();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlReader::setup_error_handling	src/sharp/xmlreader.cpp	/^  void XmlReader::setup_error_handling()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::setup_error_handling	src/sharp/xmlreader.hpp	/^  void setup_error_handling();$/;"	p	class:sharp::XmlReader	access:private	signature:()
sharp::XmlReader::~XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::~XmlReader()$/;"	f	class:sharp::XmlReader	signature:()
sharp::XmlReader::~XmlReader	src/sharp/xmlreader.hpp	/^  ~XmlReader();$/;"	p	class:sharp::XmlReader	access:public	signature:()
sharp::XmlResolver	src/sharp/xmlresolver.hpp	/^class XmlResolver$/;"	c	namespace:sharp
sharp::XmlWriter	src/sharp/xmlwriter.hpp	/^  class XmlWriter$/;"	c	namespace:sharp	inherits:boost::noncopyable
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter(const std::string & filename)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & filename)
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::XmlWriter(xmlDocPtr doc)$/;"	f	class:sharp::XmlWriter	signature:(xmlDocPtr doc)
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter(const std::string & filename);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & filename)
sharp::XmlWriter::XmlWriter	src/sharp/xmlwriter.hpp	/^    XmlWriter(xmlDocPtr doc);$/;"	p	class:sharp::XmlWriter	access:public	signature:(xmlDocPtr doc)
sharp::XmlWriter::close	src/sharp/xmlwriter.cpp	/^  int  XmlWriter::close()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::close	src/sharp/xmlwriter.hpp	/^    int close();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::m_buf	src/sharp/xmlwriter.hpp	/^    xmlBufferPtr     m_buf;$/;"	m	class:sharp::XmlWriter	access:private
sharp::XmlWriter::m_writer	src/sharp/xmlwriter.hpp	/^    xmlTextWriterPtr m_writer;$/;"	m	class:sharp::XmlWriter	access:private
sharp::XmlWriter::to_string	src/sharp/xmlwriter.cpp	/^  std::string XmlWriter::to_string()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::to_string	src/sharp/xmlwriter.hpp	/^    std::string to_string();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_attribute_string	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_attribute_string(const std::string & prefix,const std::string & local_name,$/;"	f	class:sharp::XmlWriter	signature:(const std::string & prefix,const std::string & local_name, const std::string & ns ,const std::string & value)
sharp::XmlWriter::write_attribute_string	src/sharp/xmlwriter.hpp	/^    int write_attribute_string(const std::string & prefix,const std::string & local_name,$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & prefix,const std::string & local_name, const std::string & ns ,const std::string & value)
sharp::XmlWriter::write_char_entity	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_char_entity(gunichar ch)$/;"	f	class:sharp::XmlWriter	signature:(gunichar ch)
sharp::XmlWriter::write_char_entity	src/sharp/xmlwriter.hpp	/^    int write_char_entity(gunichar ch);$/;"	p	class:sharp::XmlWriter	access:public	signature:(gunichar ch)
sharp::XmlWriter::write_end_attribute	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_attribute()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::write_end_attribute	src/sharp/xmlwriter.hpp	/^    int write_end_attribute();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_end_document	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_document()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::write_end_document	src/sharp/xmlwriter.hpp	/^    int write_end_document();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_end_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_element()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::write_end_element	src/sharp/xmlwriter.hpp	/^    int write_end_element();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_full_end_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_full_end_element()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::write_full_end_element	src/sharp/xmlwriter.hpp	/^    int write_full_end_element();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_raw	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_raw(const std::string & raw)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & raw)
sharp::XmlWriter::write_raw	src/sharp/xmlwriter.hpp	/^    int write_raw(const std::string & raw);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & raw)
sharp::XmlWriter::write_start_attribute	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_attribute(const std::string & name)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & name)
sharp::XmlWriter::write_start_attribute	src/sharp/xmlwriter.hpp	/^    int write_start_attribute(const std::string & name);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & name)
sharp::XmlWriter::write_start_document	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_document()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::write_start_document	src/sharp/xmlwriter.hpp	/^    int write_start_document();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XmlWriter::write_start_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_element(const std::string & prefix,$/;"	f	class:sharp::XmlWriter	signature:(const std::string & prefix, const std::string & name, const std::string & nsuri)
sharp::XmlWriter::write_start_element	src/sharp/xmlwriter.hpp	/^    int write_start_element(const std::string & prefix, const std::string & name, const std::string & nsuri);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & prefix, const std::string & name, const std::string & nsuri)
sharp::XmlWriter::write_string	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_string(const std::string & s)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & s)
sharp::XmlWriter::write_string	src/sharp/xmlwriter.hpp	/^    int write_string(const std::string & );$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & )
sharp::XmlWriter::~XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::~XmlWriter()$/;"	f	class:sharp::XmlWriter	signature:()
sharp::XmlWriter::~XmlWriter	src/sharp/xmlwriter.hpp	/^    ~XmlWriter();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
sharp::XslTransform	src/sharp/xsltransform.hpp	/^class XslTransform$/;"	c	namespace:sharp
sharp::XslTransform::XslTransform	src/sharp/xsltransform.cpp	/^XslTransform:: XslTransform()$/;"	f	class:sharp::XslTransform	signature:()
sharp::XslTransform::XslTransform	src/sharp/xsltransform.hpp	/^  XslTransform();$/;"	p	class:sharp::XslTransform	access:public	signature:()
sharp::XslTransform::load	src/sharp/xsltransform.cpp	/^void XslTransform::load(const std::string & sheet)$/;"	f	class:sharp::XslTransform	signature:(const std::string & sheet)
sharp::XslTransform::load	src/sharp/xsltransform.hpp	/^  void load(const std::string &);$/;"	p	class:sharp::XslTransform	access:public	signature:(const std::string &)
sharp::XslTransform::m_stylesheet	src/sharp/xsltransform.hpp	/^  xsltStylesheetPtr m_stylesheet;$/;"	m	class:sharp::XslTransform	access:private
sharp::XslTransform::transform	src/sharp/xsltransform.cpp	/^void XslTransform::transform(xmlDocPtr doc, const XsltArgumentList & args, StreamWriter & output, const XmlResolver & \/*resolved*\/)$/;"	f	class:sharp::XslTransform	signature:(xmlDocPtr doc, const XsltArgumentList & args, StreamWriter & output, const XmlResolver & )
sharp::XslTransform::transform	src/sharp/xsltransform.hpp	/^  void transform(xmlDocPtr, const XsltArgumentList &, StreamWriter &, const XmlResolver &);$/;"	p	class:sharp::XslTransform	access:public	signature:(xmlDocPtr, const XsltArgumentList &, StreamWriter &, const XmlResolver &)
sharp::XslTransform::~XslTransform	src/sharp/xsltransform.cpp	/^XslTransform::~XslTransform()$/;"	f	class:sharp::XslTransform	signature:()
sharp::XslTransform::~XslTransform	src/sharp/xsltransform.hpp	/^  ~XslTransform();$/;"	p	class:sharp::XslTransform	access:public	signature:()
sharp::XsltArgumentList	src/sharp/xsltargumentlist.hpp	/^class XsltArgumentList$/;"	c	namespace:sharp
sharp::XsltArgumentList::add_param	src/sharp/xsltargumentlist.cpp	/^void XsltArgumentList::add_param(const char* name, const char * \/*uri*\/, bool value)$/;"	f	class:sharp::XsltArgumentList	signature:(const char* name, const char * , bool value)
sharp::XsltArgumentList::add_param	src/sharp/xsltargumentlist.cpp	/^void XsltArgumentList::add_param(const char* name, const char * \/*uri*\/, const std::string & value)$/;"	f	class:sharp::XsltArgumentList	signature:(const char* name, const char * , const std::string & value)
sharp::XsltArgumentList::add_param	src/sharp/xsltargumentlist.hpp	/^  void add_param(const char* name, const char *uri, bool);$/;"	p	class:sharp::XsltArgumentList	access:public	signature:(const char* name, const char *uri, bool)
sharp::XsltArgumentList::add_param	src/sharp/xsltargumentlist.hpp	/^  void add_param(const char* name, const char *uri, const std::string &);$/;"	p	class:sharp::XsltArgumentList	access:public	signature:(const char* name, const char *uri, const std::string &)
sharp::XsltArgumentList::begin	src/sharp/xsltargumentlist.hpp	/^  const_iterator begin() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
sharp::XsltArgumentList::const_iterator	src/sharp/xsltargumentlist.hpp	/^  typedef container_t::const_iterator const_iterator;$/;"	t	class:sharp::XsltArgumentList	access:public
sharp::XsltArgumentList::container_t	src/sharp/xsltargumentlist.hpp	/^  typedef std::list<std::pair<std::string,std::string> > container_t;$/;"	t	class:sharp::XsltArgumentList	access:public
sharp::XsltArgumentList::end	src/sharp/xsltargumentlist.hpp	/^  const_iterator end() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
sharp::XsltArgumentList::get_xlst_params	src/sharp/xsltargumentlist.cpp	/^const char ** XsltArgumentList::get_xlst_params() const$/;"	f	class:sharp::XsltArgumentList	signature:() const
sharp::XsltArgumentList::get_xlst_params	src/sharp/xsltargumentlist.hpp	/^  const char ** get_xlst_params() const;$/;"	p	class:sharp::XsltArgumentList	access:public	signature:() const
sharp::XsltArgumentList::m_args	src/sharp/xsltargumentlist.hpp	/^  container_t m_args;$/;"	m	class:sharp::XsltArgumentList	access:private
sharp::XsltArgumentList::size	src/sharp/xsltargumentlist.hpp	/^  size_t size() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
sharp::directory_copy	src/sharp/directory.cpp	/^  void directory_copy(const Glib::RefPtr<Gio::File> & src,$/;"	f	namespace:sharp	signature:(const Glib::RefPtr<Gio::File> & src, const Glib::RefPtr<Gio::File> & dest)
sharp::directory_copy	src/sharp/directory.hpp	/^  void directory_copy(const Glib::RefPtr<Gio::File> & src,$/;"	p	namespace:sharp	signature:(const Glib::RefPtr<Gio::File> & src, const Glib::RefPtr<Gio::File> & dest)
sharp::directory_create	src/sharp/directory.cpp	/^  bool directory_create(const std::string & dir)$/;"	f	namespace:sharp	signature:(const std::string & dir)
sharp::directory_create	src/sharp/directory.hpp	/^  bool directory_create(const std::string & dir);$/;"	p	namespace:sharp	signature:(const std::string & dir)
sharp::directory_delete	src/sharp/directory.cpp	/^  bool directory_delete(const std::string & dir, bool recursive)$/;"	f	namespace:sharp	signature:(const std::string & dir, bool recursive)
sharp::directory_delete	src/sharp/directory.hpp	/^  bool directory_delete(const std::string & dir, bool recursive);$/;"	p	namespace:sharp	signature:(const std::string & dir, bool recursive)
sharp::directory_exists	src/sharp/directory.cpp	/^  bool directory_exists(const std::string & dir)$/;"	f	namespace:sharp	signature:(const std::string & dir)
sharp::directory_exists	src/sharp/directory.hpp	/^  bool directory_exists(const std::string & dir);$/;"	p	namespace:sharp	signature:(const std::string & dir)
sharp::directory_get_directories	src/sharp/directory.cpp	/^  void directory_get_directories(const std::string & dir,$/;"	f	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
sharp::directory_get_directories	src/sharp/directory.hpp	/^  void directory_get_directories(const std::string & dir,$/;"	p	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
sharp::directory_get_files	src/sharp/directory.cpp	/^  void directory_get_files(const std::string & dir, std::list<std::string>  & files)$/;"	f	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
sharp::directory_get_files	src/sharp/directory.hpp	/^  void directory_get_files(const std::string & dir, $/;"	p	namespace:sharp	signature:(const std::string & dir, std::list<std::string> & files)
sharp::directory_get_files_with_ext	src/sharp/directory.cpp	/^  void directory_get_files_with_ext(const std::string & dir, $/;"	f	namespace:sharp	signature:(const std::string & dir, const std::string & ext, std::list<std::string> & list)
sharp::directory_get_files_with_ext	src/sharp/directory.hpp	/^  void directory_get_files_with_ext(const std::string & dir, $/;"	p	namespace:sharp	signature:(const std::string & dir, const std::string & ext, std::list<std::string> & files)
sharp::file_basename	src/sharp/files.cpp	/^  std::string file_basename(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
sharp::file_basename	src/sharp/files.hpp	/^  std::string file_basename(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
sharp::file_copy	src/sharp/files.cpp	/^  void file_copy(const std::string & source, const std::string & dest)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & dest)
sharp::file_copy	src/sharp/files.hpp	/^  void file_copy(const std::string & source, const std::string & dest);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & dest)
sharp::file_delete	src/sharp/files.cpp	/^  void file_delete(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
sharp::file_delete	src/sharp/files.hpp	/^  void file_delete(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
sharp::file_dirname	src/sharp/files.cpp	/^  std::string file_dirname(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
sharp::file_dirname	src/sharp/files.hpp	/^  std::string file_dirname(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
sharp::file_exists	src/sharp/files.cpp	/^  bool file_exists(const std::string & file)$/;"	f	namespace:sharp	signature:(const std::string & file)
sharp::file_exists	src/sharp/files.hpp	/^  bool file_exists(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
sharp::file_filename	src/sharp/files.cpp	/^  std::string file_filename(const std::string & p)$/;"	f	namespace:sharp	signature:(const std::string & p)
sharp::file_filename	src/sharp/files.hpp	/^  std::string file_filename(const std::string & p);$/;"	p	namespace:sharp	signature:(const std::string & p)
sharp::file_modification_time	src/sharp/fileinfo.cpp	/^  DateTime file_modification_time(const std::string &path)$/;"	f	namespace:sharp	signature:(const std::string &path)
sharp::file_modification_time	src/sharp/fileinfo.hpp	/^DateTime file_modification_time(const std::string &);$/;"	p	namespace:sharp	signature:(const std::string &)
sharp::file_move	src/sharp/files.cpp	/^  void file_move(const std::string & from, const std::string & to)$/;"	f	namespace:sharp	signature:(const std::string & from, const std::string & to)
sharp::file_move	src/sharp/files.hpp	/^  void file_move(const std::string & from, const std::string & to);$/;"	p	namespace:sharp	signature:(const std::string & from, const std::string & to)
sharp::instanciate_func_t	src/sharp/dynamicmodule.hpp	/^typedef DynamicModule* (*instanciate_func_t)();$/;"	t	namespace:sharp
sharp::map_delete_all_second	src/sharp/map.hpp	/^  void map_delete_all_second(const _Map & m)$/;"	f	namespace:sharp	signature:(const _Map & m)
sharp::map_get_keys	src/sharp/map.hpp	/^  void map_get_keys(const _Map & m, std::vector<typename _Map::mapped_type> & l) $/;"	f	namespace:sharp	signature:(const _Map & m, std::vector<typename _Map::mapped_type> & l)
sharp::map_get_values	src/sharp/map.hpp	/^  void map_get_values(const _Map & m, std::list<typename _Map::mapped_type> & l) $/;"	f	namespace:sharp	signature:(const _Map & m, std::list<typename _Map::mapped_type> & l)
sharp::string_index_of	src/sharp/string.cpp	/^  int string_index_of(const std::string & source, const std::string & search)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search)
sharp::string_index_of	src/sharp/string.cpp	/^  int string_index_of(const std::string & source, const std::string & search, int start_at)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search, int start_at)
sharp::string_index_of	src/sharp/string.hpp	/^  int string_index_of(const std::string & source, const std::string & with);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with)
sharp::string_index_of	src/sharp/string.hpp	/^  int string_index_of(const std::string & source, const std::string & with, int);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with, int)
sharp::string_last_index_of	src/sharp/string.cpp	/^  int string_last_index_of(const std::string & source, const std::string & search)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search)
sharp::string_last_index_of	src/sharp/string.hpp	/^  int string_last_index_of(const std::string & source, const std::string & with);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with)
sharp::string_match_iregex	src/sharp/string.cpp	/^  bool string_match_iregex(const std::string & source, const std::string & regex)  $/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & regex)
sharp::string_match_iregex	src/sharp/string.hpp	/^  bool string_match_iregex(const std::string & source, const std::string & regex);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & regex)
sharp::string_replace_all	src/sharp/string.cpp	/^  std::string string_replace_all(const std::string & source, const std::string & from,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
sharp::string_replace_all	src/sharp/string.hpp	/^  std::string string_replace_all(const std::string & source, const std::string & from,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
sharp::string_replace_first	src/sharp/string.cpp	/^  std::string string_replace_first(const std::string & source, const std::string & from,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
sharp::string_replace_first	src/sharp/string.hpp	/^  std::string string_replace_first(const std::string & source, const std::string & from,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
sharp::string_replace_regex	src/sharp/string.cpp	/^  std::string string_replace_regex(const std::string & source,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & regex, const std::string & with)
sharp::string_replace_regex	src/sharp/string.hpp	/^  std::string string_replace_regex(const std::string & source, const std::string & regex,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & regex, const std::string & with)
sharp::string_split	src/sharp/string.cpp	/^  void string_split(std::vector<std::string> & split, const std::string & source,$/;"	f	namespace:sharp	signature:(std::vector<std::string> & split, const std::string & source, const char * delimiters)
sharp::string_split	src/sharp/string.hpp	/^  void string_split(std::vector<std::string> & split, const std::string & source,$/;"	p	namespace:sharp	signature:(std::vector<std::string> & split, const std::string & source, const char * delimiters)
sharp::string_substring	src/sharp/string.cpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start)$/;"	f	namespace:sharp	signature:(const Glib::ustring & source, int start)
sharp::string_substring	src/sharp/string.cpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start, int len)$/;"	f	namespace:sharp	signature:(const Glib::ustring & source, int start, int len)
sharp::string_substring	src/sharp/string.hpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start);$/;"	p	namespace:sharp	signature:(const Glib::ustring & source, int start)
sharp::string_substring	src/sharp/string.hpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start, int len);$/;"	p	namespace:sharp	signature:(const Glib::ustring & source, int start, int len)
sharp::string_trim	src/sharp/string.cpp	/^  std::string string_trim(const std::string & source)$/;"	f	namespace:sharp	signature:(const std::string & source)
sharp::string_trim	src/sharp/string.cpp	/^  std::string string_trim(const std::string & source, const char * set_of_char)$/;"	f	namespace:sharp	signature:(const std::string & source, const char * set_of_char)
sharp::string_trim	src/sharp/string.hpp	/^  std::string string_trim(const std::string & source);$/;"	p	namespace:sharp	signature:(const std::string & source)
sharp::string_trim	src/sharp/string.hpp	/^  std::string string_trim(const std::string & source, const char * set_of_char);$/;"	p	namespace:sharp	signature:(const std::string & source, const char * set_of_char)
sharp::to_xmlchar	src/sharp/xmlwriter.hpp	/^  const xmlChar * to_xmlchar(const std::string & s)$/;"	f	namespace:sharp	signature:(const std::string & s)
sharp::uuid	src/sharp/uuid.hpp	/^  class uuid$/;"	c	namespace:sharp
sharp::uuid::m_uuid	src/sharp/uuid.hpp	/^    uuid_t m_uuid;$/;"	m	class:sharp::uuid	access:private
sharp::uuid::string	src/sharp/uuid.hpp	/^    std::string string()$/;"	f	class:sharp::uuid	access:public	signature:()
sharp::uuid::uuid	src/sharp/uuid.hpp	/^    uuid()$/;"	f	class:sharp::uuid	access:public	signature:()
sharp::xml_node_content	src/sharp/xml.cpp	/^  std::string xml_node_content(xmlNodePtr node)$/;"	f	namespace:sharp	signature:(xmlNodePtr node)
sharp::xml_node_content	src/sharp/xml.hpp	/^  std::string xml_node_content(xmlNodePtr node);$/;"	p	namespace:sharp	signature:(xmlNodePtr node)
sharp::xml_node_get_attribute	src/sharp/xml.cpp	/^  std::string xml_node_get_attribute(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * attr_name)
sharp::xml_node_get_attribute	src/sharp/xml.hpp	/^  std::string xml_node_get_attribute(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * attr_name)
sharp::xml_node_xpath_find	src/sharp/xml.cpp	/^  XmlNodeSet xml_node_xpath_find(const xmlNodePtr node, $/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xml_node_xpath_find	src/sharp/xml.hpp	/^  XmlNodeSet xml_node_xpath_find(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xml_node_xpath_find_single	src/sharp/xml.cpp	/^  std::string xml_node_xpath_find_single(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xml_node_xpath_find_single	src/sharp/xml.hpp	/^  std::string xml_node_xpath_find_single(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xml_node_xpath_find_single_node	src/sharp/xml.cpp	/^  xmlNodePtr xml_node_xpath_find_single_node(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xml_node_xpath_find_single_node	src/sharp/xml.hpp	/^  xmlNodePtr xml_node_xpath_find_single_node(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
sharp::xmlchar_to_string	src/sharp/xmlreader.cpp	/^  std::string xmlchar_to_string(const xmlChar * s)$/;"	f	namespace:sharp	signature:(const xmlChar * s)
sharp::xmlchar_to_string	src/sharp/xmlreader.cpp	/^  std::string xmlchar_to_string(xmlChar * s, bool freemem)$/;"	f	namespace:sharp	signature:(xmlChar * s, bool freemem)
shell_search	src/gnote.hpp	/^  bool shell_search()$/;"	f	class:gnote::GnoteCommandLine	access:public	signature:()
show_about	src/tray.cpp	/^  void TrayIcon::show_about()$/;"	f	class:gnote::TrayIcon	signature:()
show_about	src/tray.hpp	/^  void show_about();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
show_all_search_results	src/searchnoteswidget.cpp	/^bool SearchNotesWidget::show_all_search_results()$/;"	f	class:gnote::SearchNotesWidget	signature:()
show_all_search_results	src/searchnoteswidget.hpp	/^  bool show_all_search_results();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
show_deletion_dialog	src/note.cpp	/^    void show_deletion_dialog (const std::list<Note::Ptr> & notes, Gtk::Window * parent)$/;"	f	namespace:gnote::noteutils	signature:(const std::list<Note::Ptr> & notes, Gtk::Window * parent)
show_deletion_dialog	src/note.hpp	/^  void show_deletion_dialog (const std::list<Note::Ptr> & notes, Gtk::Window * parent);$/;"	p	namespace:gnote::noteutils	signature:(const std::list<Note::Ptr> & notes, Gtk::Window * parent)
show_help	src/utils.cpp	/^    void show_help(const std::string & filename, const std::string & link_id,$/;"	f	namespace:gnote::utils	signature:(const std::string & filename, const std::string & link_id, GdkScreen *screen, Gtk::Window *parent)
show_help	src/utils.hpp	/^    void show_help(const std::string & filename, const std::string & link_id,$/;"	p	namespace:gnote::utils	signature:(const std::string & filename, const std::string & link_id, GdkScreen *screen, Gtk::Window *parent)
show_help_contents	src/tray.cpp	/^  void TrayIcon::show_help_contents()$/;"	f	class:gnote::TrayIcon	signature:()
show_help_contents	src/tray.hpp	/^  void show_help_contents();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
show_io_error_dialog	src/note.cpp	/^    void show_io_error_dialog (Gtk::Window * parent)$/;"	f	namespace:gnote::__anon9	signature:(Gtk::Window * parent)
show_menu	src/tray.cpp	/^  void TrayIcon::show_menu(bool select_first_item)$/;"	f	class:gnote::TrayIcon	signature:(bool select_first_item)
show_menu	src/tray.hpp	/^  virtual void show_menu(bool select_first_item) = 0;$/;"	p	class:gnote::IGnoteTray	access:public	signature:(bool select_first_item)
show_menu	src/tray.hpp	/^  void show_menu(bool select_first_item);$/;"	p	class:gnote::TrayIcon	access:public	signature:(bool select_first_item)
show_message_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_message_dialog(const std::string & title,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const std::string & title, const std::string & message, Gtk::MessageType messageType)
show_message_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_message_dialog(const std::string & title, const std::string & message, $/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const std::string & title, const std::string & message, Gtk::MessageType messageType)
show_name_clash_error	src/watchers.cpp	/^  void NoteRenameWatcher::show_name_clash_error(const std::string & title, bool only_warn)$/;"	f	class:gnote::NoteRenameWatcher	signature:(const std::string & title, bool only_warn)
show_name_clash_error	src/watchers.hpp	/^    void show_name_clash_error(const std::string &, bool);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(const std::string &, bool)
show_no_sticky_xml_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_no_sticky_xml_dialog(const std::string & xml_path)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const std::string & xml_path)
show_no_sticky_xml_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_no_sticky_xml_dialog(const std::string & xml_path);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const std::string & xml_path)
show_opening_location_error	src/utils.cpp	/^    void show_opening_location_error(Gtk::Window * parent, $/;"	f	namespace:gnote::utils	signature:(Gtk::Window * parent, const std::string & url, const std::string & error)
show_opening_location_error	src/utils.hpp	/^    void show_opening_location_error(Gtk::Window * parent, $/;"	p	namespace:gnote::utils	signature:(Gtk::Window * parent, const std::string & url, const std::string & error)
show_preferences	src/tray.cpp	/^  void TrayIcon::show_preferences()$/;"	f	class:gnote::TrayIcon	signature:()
show_preferences	src/tray.hpp	/^  void show_preferences();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
show_results_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_results_dialog(int numNotesImported, int numNotesTotal)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(int numNotesImported, int numNotesTotal)
show_results_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_results_dialog(int numNotesImported, int numNotesTotal);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(int numNotesImported, int numNotesTotal)
show_search_bar	src/mainwindow.hpp	/^  virtual void show_search_bar(bool grab_focus = true) = 0;$/;"	p	class:gnote::MainWindow	access:public	signature:(bool grab_focus = true)
show_search_bar	src/recentchanges.cpp	/^  void NoteRecentChanges::show_search_bar(bool focus)$/;"	f	class:gnote::NoteRecentChanges	signature:(bool focus)
show_tray_icon_timeout	src/gnote.cpp	/^  bool Gnote::show_tray_icon_timeout()$/;"	f	class:gnote::Gnote	signature:()
show_tray_icon_timeout	src/gnote.hpp	/^  bool show_tray_icon_timeout();$/;"	p	class:gnote::Gnote	access:private	signature:()
shutdown	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::shutdown ()$/;"	f	class:backlinks::BacklinksNoteAddin	signature:()
shutdown	src/addins/bugzilla/bugzillanoteaddin.cpp	/^  void BugzillaNoteAddin::shutdown()$/;"	f	class:bugzilla::BugzillaNoteAddin	signature:()
shutdown	src/addins/exporttogtg/exporttogtgnoteaddin.cpp	/^void ExportToGTGNoteAddin::shutdown()$/;"	f	class:exporttogtg::ExportToGTGNoteAddin	signature:()
shutdown	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::shutdown()$/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:()
shutdown	src/addins/filesystemsyncservice/filesystemsyncserviceaddin.cpp	/^void FileSystemSyncServiceAddin::shutdown()$/;"	f	class:filesystemsyncservice::FileSystemSyncServiceAddin	signature:()
shutdown	src/addins/fixedwidth/fixedwidthnoteaddin.cpp	/^  void FixedWidthNoteAddin::shutdown ()$/;"	f	class:fixedwidth::FixedWidthNoteAddin	signature:()
shutdown	src/addins/inserttimestamp/inserttimestampnoteaddin.cpp	/^  void InsertTimestampNoteAddin::shutdown()$/;"	f	class:inserttimestamp::InsertTimestampNoteAddin	signature:()
shutdown	src/addins/notedirectorywatcher/notedirectorywatcherapplicationaddin.cpp	/^void NoteDirectoryWatcherApplicationAddin::shutdown()$/;"	f	class:notedirectorywatcher::NoteDirectoryWatcherApplicationAddin	signature:()
shutdown	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^void NoteOfTheDayApplicationAddin::shutdown()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
shutdown	src/addins/printnotes/printnotesnoteaddin.cpp	/^  void PrintNotesNoteAddin::shutdown()$/;"	f	class:printnotes::PrintNotesNoteAddin	signature:()
shutdown	src/addins/readonly/readonlynoteaddin.cpp	/^void ReadOnlyNoteAddin::shutdown()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
shutdown	src/addins/replacetitle/replacetitlenoteaddin.cpp	/^void ReplaceTitleNoteAddin::shutdown()$/;"	f	class:replacetitle::ReplaceTitleNoteAddin	signature:()
shutdown	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^void SpecialNotesApplicationAddin::shutdown()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
shutdown	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::shutdown()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
shutdown	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::shutdown()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
shutdown	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::shutdown   () {}$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
shutdown	src/addins/todo/todonoteaddin.cpp	/^void Todo::shutdown()$/;"	f	class:todo::Todo	signature:()
shutdown	src/addins/tomboyimport/tomboyimportaddin.cpp	/^void TomboyImportAddin::shutdown()$/;"	f	class:tomboyimport::TomboyImportAddin	signature:()
shutdown	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::shutdown ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
shutdown	src/applicationaddin.hpp	/^  virtual void shutdown () = 0;$/;"	p	class:gnote::ApplicationAddin	access:public	signature:()
shutdown	src/noteaddin.hpp	/^  virtual void shutdown () = 0;$/;"	p	class:gnote::NoteAddin	access:public	signature:()
shutdown	src/notebooks/notebookapplicationaddin.cpp	/^    void NotebookApplicationAddin::shutdown ()$/;"	f	class:gnote::notebooks::NotebookApplicationAddin	signature:()
shutdown	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::shutdown ()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
shutdown	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::shutdown()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
shutdown	src/synchronization/syncserviceaddin.hpp	/^    virtual void shutdown () = 0;$/;"	p	class:gnote::sync::SyncServiceAddin	access:public	signature:()
shutdown	src/watchers.cpp	/^  void MouseHandWatcher::shutdown ()$/;"	f	class:gnote::MouseHandWatcher	signature:()
shutdown	src/watchers.cpp	/^  void NoteLinkWatcher::shutdown ()$/;"	f	class:gnote::NoteLinkWatcher	signature:()
shutdown	src/watchers.cpp	/^  void NoteRenameWatcher::shutdown ()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
shutdown	src/watchers.cpp	/^  void NoteSpellChecker::shutdown ()$/;"	f	class:gnote::NoteSpellChecker	signature:()
shutdown	src/watchers.cpp	/^  void NoteTagsWatcher::shutdown ()$/;"	f	class:gnote::NoteTagsWatcher	signature:()
shutdown	src/watchers.cpp	/^  void NoteUrlWatcher::shutdown ()$/;"	f	class:gnote::NoteUrlWatcher	signature:()
shutdown	src/watchers.cpp	/^  void NoteWikiWatcher::shutdown ()$/;"	f	class:gnote::NoteWikiWatcher	signature:()
shutdown_application_addins	src/addinmanager.cpp	/^  void AddinManager::shutdown_application_addins() const$/;"	f	class:gnote::AddinManager	signature:() const
shutdown_application_addins	src/addinmanager.hpp	/^  void shutdown_application_addins() const;$/;"	p	class:gnote::AddinManager	access:public	signature:() const
signal_actions_changed	src/mainwindowembeds.hpp	/^  virtual sigc::signal<void> & signal_actions_changed() = 0;$/;"	p	class:gnote::HasActions	access:public	signature:()
signal_actions_changed	src/notewindow.cpp	/^  sigc::signal<void> & NoteWindow::signal_actions_changed()$/;"	f	class:gnote::NoteWindow	signature:()
signal_actions_changed	src/searchnoteswidget.cpp	/^sigc::signal<void> & SearchNotesWidget::signal_actions_changed()$/;"	f	class:gnote::SearchNotesWidget	signature:()
signal_activate	src/notetag.hpp	/^  TagActivatedHandler & signal_activate()$/;"	f	class:gnote::NoteTag	access:public	signature:()
signal_backgrounded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_backgrounded;$/;"	m	class:gnote::EmbeddableWidget	access:public
signal_change_text_depth	src/notebuffer.hpp	/^  ChangeDepthHandler                               signal_change_text_depth;$/;"	m	class:gnote::NoteBuffer	access:public
signal_changed	src/notetag.hpp	/^  sigc::signal<void,const Gtk::TextTag&,bool> & signal_changed()$/;"	f	class:gnote::NoteTag	access:public	signature:()
signal_connecting_connect	src/synchronization/syncui.cpp	/^  sigc::connection SyncUI::signal_connecting_connect(const SlotConnecting & slot)$/;"	f	class:gnote::sync::SyncUI	signature:(const SlotConnecting & slot)
signal_connecting_connect	src/synchronization/syncui.hpp	/^    sigc::connection signal_connecting_connect(const SlotConnecting & slot);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const SlotConnecting & slot)
signal_connecting_emit	src/synchronization/syncui.cpp	/^  void SyncUI::signal_connecting_emit()$/;"	f	class:gnote::sync::SyncUI	signature:()
signal_connecting_emit	src/synchronization/syncui.hpp	/^    void signal_connecting_emit();$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
signal_connecting_emit_	src/synchronization/syncui.hpp	/^    void signal_connecting_emit_()$/;"	f	class:gnote::sync::SyncUI	access:private	signature:()
signal_embedded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_embedded;$/;"	m	class:gnote::EmbeddableWidget	access:public
signal_foregrounded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_foregrounded;$/;"	m	class:gnote::EmbeddableWidget	access:public
signal_idle_connect	src/synchronization/syncui.cpp	/^  sigc::connection SyncUI::signal_idle_connect(const SlotIdle & slot)$/;"	f	class:gnote::sync::SyncUI	signature:(const SlotIdle & slot)
signal_idle_connect	src/synchronization/syncui.hpp	/^    sigc::connection signal_idle_connect(const SlotIdle & slot);$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(const SlotIdle & slot)
signal_idle_emit	src/synchronization/syncui.cpp	/^  void SyncUI::signal_idle_emit()$/;"	f	class:gnote::sync::SyncUI	signature:()
signal_idle_emit	src/synchronization/syncui.hpp	/^    void signal_idle_emit();$/;"	p	class:gnote::sync::SyncUI	access:public	signature:()
signal_idle_emit_	src/synchronization/syncui.hpp	/^    void signal_idle_emit_()$/;"	f	class:gnote::sync::SyncUI	access:private	signature:()
signal_insert_text_with_tags	src/notebuffer.hpp	/^  sigc::signal<void, const Gtk::TextIter &, const Glib::ustring &, int> signal_insert_text_with_tags;$/;"	m	class:gnote::NoteBuffer	access:public
signal_main_window_search_actions_changed	src/iactionmanager.hpp	/^  sigc::signal<void> signal_main_window_search_actions_changed;$/;"	m	class:gnote::IActionManager	access:public
signal_name_changed	src/mainwindowembeds.hpp	/^  sigc::signal<void, const std::string &> signal_name_changed;$/;"	m	class:gnote::EmbeddableWidget	access:public
signal_new_bullet_inserted	src/notebuffer.hpp	/^  NewBulletHandler                                 signal_new_bullet_inserted;$/;"	m	class:gnote::NoteBuffer	access:public
signal_note_added	src/notemanagerbase.hpp	/^  ChangedHandler signal_note_added;$/;"	m	class:gnote::NoteManagerBase	access:public
signal_note_added_to_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler & signal_note_added_to_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
signal_note_buffer_changed	src/notemanager.hpp	/^    ChangedHandler signal_note_buffer_changed;$/;"	m	class:gnote::NoteManager	access:public
signal_note_deleted	src/notemanagerbase.hpp	/^  ChangedHandler signal_note_deleted;$/;"	m	class:gnote::NoteManagerBase	access:public
signal_note_pin_status_changed	src/notebooks/notebookmanager.hpp	/^  sigc::signal<void, const Note &, bool> signal_note_pin_status_changed;$/;"	m	class:gnote::notebooks::NotebookManager	access:public
signal_note_removed_from_notebook	src/notebooks/notebookmanager.hpp	/^  NotebookEventHandler & signal_note_removed_from_notebook()$/;"	f	class:gnote::notebooks::NotebookManager	access:public	signature:()
signal_note_renamed	src/notemanagerbase.hpp	/^  NoteBase::RenamedHandler signal_note_renamed;$/;"	m	class:gnote::NoteManagerBase	access:public
signal_note_saved	src/notemanagerbase.hpp	/^  NoteBase::SavedHandler signal_note_saved;$/;"	m	class:gnote::NoteManagerBase	access:public
signal_open_note	src/searchnoteswidget.hpp	/^  sigc::signal<void, const Note::Ptr &> signal_open_note;$/;"	m	class:gnote::SearchNotesWidget	access:public
signal_open_note_new_window	src/searchnoteswidget.hpp	/^  sigc::signal<void, const Note::Ptr &> signal_open_note_new_window;$/;"	m	class:gnote::SearchNotesWidget	access:public
signal_opened	src/note.hpp	/^  sigc::signal<void,Note&> & signal_opened()$/;"	f	class:gnote::Note	access:public	signature:()
signal_quit	src/ignote.hpp	/^  sigc::signal<void> signal_quit;$/;"	m	class:gnote::IGnote	access:public
signal_renamed	src/notebase.hpp	/^  RenamedHandler signal_renamed;$/;"	m	class:gnote::NoteBase	access:public
signal_saved	src/notebase.hpp	/^  SavedHandler signal_saved;$/;"	m	class:gnote::NoteBase	access:public
signal_size_changed	src/notebooks/specialnotebooks.hpp	/^  sigc::signal<void> signal_size_changed;$/;"	m	class:gnote::notebooks::ActiveNotesNotebook	access:public
signal_tag_added	src/notebase.hpp	/^  TagAddedHandler signal_tag_added;$/;"	m	class:gnote::NoteBase	access:public
signal_tag_removed	src/notebase.hpp	/^  TagRemovedHandler signal_tag_removed;$/;"	m	class:gnote::NoteBase	access:public
signal_tag_removing	src/notebase.hpp	/^  TagRemovingHandler signal_tag_removing;$/;"	m	class:gnote::NoteBase	access:public
signal_timeout	src/utils.hpp	/^      sigc::signal<void> signal_timeout;$/;"	m	class:gnote::utils::InterruptableTimeout	access:public
signal_undo_changed	src/undo.hpp	/^  sigc::signal<void> & signal_undo_changed()$/;"	f	class:gnote::UndoManager	access:public	signature:()
signal_unembedded	src/mainwindowembeds.hpp	/^  sigc::signal<void> signal_unembedded;$/;"	m	class:gnote::EmbeddableWidget	access:public
size	src/sharp/xsltargumentlist.hpp	/^  size_t size() const$/;"	f	class:sharp::XsltArgumentList	access:public	signature:() const
size_internals	src/mainwindowembeds.cpp	/^void EmbeddableWidget::size_internals()$/;"	f	class:gnote::EmbeddableWidget	signature:()
size_internals	src/mainwindowembeds.hpp	/^  virtual void size_internals();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
size_internals	src/notewindow.cpp	/^  void NoteWindow::size_internals()$/;"	f	class:gnote::NoteWindow	signature:()
size_internals	src/searchnoteswidget.cpp	/^void SearchNotesWidget::size_internals()$/;"	f	class:gnote::SearchNotesWidget	signature:()
slot_connected	src/remotecontrolproxy.hpp	/^  typedef sigc::slot<void> slot_connected;$/;"	t	class:gnote::RemoteControlProxy	access:public
slot_name_acquire_finish	src/remotecontrolproxy.hpp	/^  typedef sigc::slot<void, bool, bool> slot_name_acquire_finish;$/;"	t	class:gnote::RemoteControlProxy	access:public
specialnotes	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^namespace specialnotes {$/;"	n	file:
specialnotes	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^namespace specialnotes {$/;"	n
specialnotes::DECLARE_MODULE	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^DECLARE_MODULE(SpecialNotesModule);$/;"	p	namespace:specialnotes	file:	signature:(SpecialNotesModule)
specialnotes::SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^class SpecialNotesApplicationAddin$/;"	c	namespace:specialnotes	inherits:gnote::ApplicationAddin
specialnotes::SpecialNotesApplicationAddin::IFACE_NAME	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^const char *SpecialNotesApplicationAddin::IFACE_NAME = "gnote::ApplicationAddin";$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	file:
specialnotes::SpecialNotesApplicationAddin::IFACE_NAME	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  static const char * IFACE_NAME;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
specialnotes::SpecialNotesApplicationAddin::SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesApplicationAddin::SpecialNotesApplicationAddin()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
specialnotes::SpecialNotesApplicationAddin::SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  SpecialNotesApplicationAddin();$/;"	p	class:specialnotes::SpecialNotesApplicationAddin	access:private	signature:()
specialnotes::SpecialNotesApplicationAddin::create	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  static SpecialNotesApplicationAddin *create()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	access:public	signature:()
specialnotes::SpecialNotesApplicationAddin::initialize	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^void SpecialNotesApplicationAddin::initialize()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
specialnotes::SpecialNotesApplicationAddin::initialized	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^bool SpecialNotesApplicationAddin::initialized()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
specialnotes::SpecialNotesApplicationAddin::m_initialized	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:private
specialnotes::SpecialNotesApplicationAddin::m_notebook	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  gnote::notebooks::Notebook::Ptr m_notebook;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:private
specialnotes::SpecialNotesApplicationAddin::override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
specialnotes::SpecialNotesApplicationAddin::override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
specialnotes::SpecialNotesApplicationAddin::override	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:specialnotes::SpecialNotesApplicationAddin	access:public
specialnotes::SpecialNotesApplicationAddin::shutdown	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^void SpecialNotesApplicationAddin::shutdown()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
specialnotes::SpecialNotesApplicationAddin::~SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesApplicationAddin::~SpecialNotesApplicationAddin()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
specialnotes::SpecialNotesApplicationAddin::~SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual ~SpecialNotesApplicationAddin();$/;"	p	class:specialnotes::SpecialNotesApplicationAddin	access:public	signature:()
specialnotes::SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^class SpecialNotesModule$/;"	c	namespace:specialnotes	inherits:sharp::DynamicModule
specialnotes::SpecialNotesModule::SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesModule::SpecialNotesModule()$/;"	f	class:specialnotes::SpecialNotesModule	signature:()
specialnotes::SpecialNotesModule::SpecialNotesModule	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  SpecialNotesModule();$/;"	p	class:specialnotes::SpecialNotesModule	access:public	signature:()
specialnotes_la_LIBADD	src/addins/specialnotes/Makefile	/^specialnotes_la_LIBADD =$/;"	m
specialnotes_la_OBJECTS	src/addins/specialnotes/Makefile	/^specialnotes_la_OBJECTS = $(am_specialnotes_la_OBJECTS)$/;"	m
specialnotes_la_SOURCES	src/addins/specialnotes/Makefile	/^specialnotes_la_SOURCES = \\$/;"	m
split	src/undo.cpp	/^  void SplitterAction::split(Gtk::TextIter iter, $/;"	f	class:gnote::SplitterAction	signature:(Gtk::TextIter iter, Gtk::TextBuffer * buffer)
split	src/undo.hpp	/^  void split(Gtk::TextIter iter, Gtk::TextBuffer *);$/;"	p	class:gnote::SplitterAction	access:public	signature:(Gtk::TextIter iter, Gtk::TextBuffer *)
split_title_from_content	src/notemanagerbase.cpp	/^Glib::ustring NoteManagerBase::split_title_from_content(Glib::ustring title, Glib::ustring & body)$/;"	f	class:gnote::NoteManagerBase	signature:(Glib::ustring title, Glib::ustring & body)
split_title_from_content	src/notemanagerbase.hpp	/^  static Glib::ustring split_title_from_content(Glib::ustring title, Glib::ustring & body);$/;"	p	class:gnote::NoteManagerBase	access:public	signature:(Glib::ustring title, Glib::ustring & body)
split_watching_quotes	src/search.hpp	/^  static void split_watching_quotes(std::vector<T> & split,$/;"	p	class:gnote::Search	access:public	signature:(std::vector<T> & split, const T & source)
split_watching_quotes	src/search.hpp	/^void Search::split_watching_quotes(std::vector<T> & split,$/;"	f	class:gnote::Search	signature:(std::vector<T> & split, const T & source)
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	data/Makefile	/^srcdir = .$/;"	m
srcdir	data/appdata/Makefile	/^srcdir = .$/;"	m
srcdir	data/icons/Makefile	/^srcdir = .$/;"	m
srcdir	help/Makefile	/^srcdir = .$/;"	m
srcdir	libtomboy/Makefile	/^srcdir = .$/;"	m
srcdir	po/Makefile	/^	srcdir=$(srcdir) $(INTLTOOL_UPDATE) -m$/;"	m
srcdir	po/Makefile	/^srcdir = .$/;"	m
srcdir	src/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/backlinks/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/bugzilla/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/exporttogtg/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/exporttohtml/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/filesystemsyncservice/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/fixedwidth/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/inserttimestamp/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/notedirectorywatcher/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/noteoftheday/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/printnotes/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/readonly/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/replacetitle/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/specialnotes/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/statistics/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/stickynoteimport/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/tableofcontents/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/todo/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/tomboyimport/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/underline/Makefile	/^srcdir = .$/;"	m
srcdir	src/addins/webdavsyncservice/Makefile	/^srcdir = .$/;"	m
srcdir	src/dbus/Makefile	/^srcdir = .$/;"	m
srgb_to_xyz_g	src/contrast.cpp	/^srgb_to_xyz_g(float K)$/;"	f	file:	signature:(float K)
standard_error_eof	src/sharp/process.cpp	/^bool Process::standard_error_eof()$/;"	f	class:sharp::Process	signature:()
standard_error_eof	src/sharp/process.hpp	/^  bool standard_error_eof();$/;"	p	class:sharp::Process	access:public	signature:()
standard_error_read_line	src/sharp/process.cpp	/^std::string Process::standard_error_read_line()$/;"	f	class:sharp::Process	signature:()
standard_error_read_line	src/sharp/process.hpp	/^  std::string standard_error_read_line();$/;"	p	class:sharp::Process	access:public	signature:()
standard_output_eof	src/sharp/process.cpp	/^bool Process::standard_output_eof()$/;"	f	class:sharp::Process	signature:()
standard_output_eof	src/sharp/process.hpp	/^  bool standard_output_eof();$/;"	p	class:sharp::Process	access:public	signature:()
standard_output_read_line	src/sharp/process.cpp	/^std::string Process::standard_output_read_line()$/;"	f	class:sharp::Process	signature:()
standard_output_read_line	src/sharp/process.hpp	/^  std::string standard_output_read_line();$/;"	p	class:sharp::Process	access:public	signature:()
start	src/notebuffer.cpp	/^    int start;$/;"	m	struct:gnote::TagStart	file:	access:public
start	src/sharp/process.cpp	/^void Process::start()$/;"	f	class:sharp::Process	signature:()
start	src/sharp/process.hpp	/^  void start();$/;"	p	class:sharp::Process	access:public	signature:()
start	src/triehit.hpp	/^  int start() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
start	src/undo.hpp	/^    int start;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
start	src/utils.cpp	/^    Gtk::TextIter TextRange::start() const$/;"	f	class:gnote::utils::TextRange	signature:() const
start	src/utils.hpp	/^      Gtk::TextIter start() const;$/;"	p	class:gnote::utils::TextRange	access:public	signature:() const
start_mark	src/notewindow.hpp	/^    Glib::RefPtr<Gtk::TextMark>  start_mark;$/;"	m	struct:gnote::NoteFindHandler::Match	access:public
start_note_uri	src/notemanagerbase.hpp	/^  const std::string & start_note_uri() const$/;"	f	class:gnote::NoteManagerBase	access:public	signature:() const
start_tray_icon	src/gnote.cpp	/^  void Gnote::start_tray_icon()$/;"	f	class:gnote::Gnote	signature:()
start_tray_icon	src/gnote.hpp	/^  void start_tray_icon();$/;"	p	class:gnote::Gnote	access:public	signature:()
state	src/synchronization/isyncmanager.hpp	/^  virtual SyncState state() const = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:() const
statistics	src/addins/statistics/statisticsapplicationaddin.cpp	/^namespace statistics {$/;"	n	file:
statistics	src/addins/statistics/statisticsapplicationaddin.hpp	/^namespace statistics {$/;"	n
statistics	src/addins/statistics/statisticswidget.cpp	/^namespace statistics {$/;"	n	file:
statistics	src/addins/statistics/statisticswidget.hpp	/^namespace statistics {$/;"	n
statistics::DECLARE_MODULE	src/addins/statistics/statisticsapplicationaddin.hpp	/^DECLARE_MODULE(StatisticsModule);$/;"	p	namespace:statistics	signature:(StatisticsModule)
statistics::StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.hpp	/^class StatisticsApplicationAddin$/;"	c	namespace:statistics	inherits:gnote::ApplicationAddin
statistics::StatisticsApplicationAddin::StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.cpp	/^StatisticsApplicationAddin::StatisticsApplicationAddin()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
statistics::StatisticsApplicationAddin::StatisticsApplicationAddin	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsApplicationAddin();$/;"	p	class:statistics::StatisticsApplicationAddin	access:private	signature:()
statistics::StatisticsApplicationAddin::create	src/addins/statistics/statisticsapplicationaddin.hpp	/^  static StatisticsApplicationAddin *create()$/;"	f	class:statistics::StatisticsApplicationAddin	access:public	signature:()
statistics::StatisticsApplicationAddin::initialize	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::initialize()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
statistics::StatisticsApplicationAddin::initialized	src/addins/statistics/statisticsapplicationaddin.cpp	/^bool StatisticsApplicationAddin::initialized()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
statistics::StatisticsApplicationAddin::m_action	src/addins/statistics/statisticsapplicationaddin.hpp	/^  Glib::RefPtr<Gtk::Action> m_action;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
statistics::StatisticsApplicationAddin::m_initialized	src/addins/statistics/statisticsapplicationaddin.hpp	/^  bool m_initialized;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
statistics::StatisticsApplicationAddin::m_widget	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsWidget *m_widget;$/;"	m	class:statistics::StatisticsApplicationAddin	access:private
statistics::StatisticsApplicationAddin::on_show_statistics	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::on_show_statistics()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
statistics::StatisticsApplicationAddin::on_show_statistics	src/addins/statistics/statisticsapplicationaddin.hpp	/^  void on_show_statistics();$/;"	p	class:statistics::StatisticsApplicationAddin	access:private	signature:()
statistics::StatisticsApplicationAddin::override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual bool initialized() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
statistics::StatisticsApplicationAddin::override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
statistics::StatisticsApplicationAddin::override	src/addins/statistics/statisticsapplicationaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:statistics::StatisticsApplicationAddin	access:public
statistics::StatisticsApplicationAddin::shutdown	src/addins/statistics/statisticsapplicationaddin.cpp	/^void StatisticsApplicationAddin::shutdown()$/;"	f	class:statistics::StatisticsApplicationAddin	signature:()
statistics::StatisticsModel	src/addins/statistics/statisticswidget.cpp	/^class StatisticsModel$/;"	c	namespace:statistics	file:	inherits:Gtk::TreeStore
statistics::StatisticsModel::Ptr	src/addins/statistics/statisticswidget.cpp	/^  typedef Glib::RefPtr<StatisticsModel> Ptr;$/;"	t	class:statistics::StatisticsModel	file:	access:public
statistics::StatisticsModel::StatisticsModel	src/addins/statistics/statisticswidget.cpp	/^  StatisticsModel(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(gnote::NoteManager & nm)
statistics::StatisticsModel::StatisticsRecord	src/addins/statistics/statisticswidget.cpp	/^  class StatisticsRecord$/;"	c	class:statistics::StatisticsModel	file:	inherits:Gtk::TreeModelColumnRecord	access:private
statistics::StatisticsModel::StatisticsRecord::StatisticsRecord	src/addins/statistics/statisticswidget.cpp	/^    StatisticsRecord()$/;"	f	class:statistics::StatisticsModel::StatisticsRecord	access:public	signature:()
statistics::StatisticsModel::StatisticsRecord::m_stat	src/addins/statistics/statisticswidget.cpp	/^    Gtk::TreeModelColumn<std::string> m_stat;$/;"	m	class:statistics::StatisticsModel::StatisticsRecord	file:	access:private
statistics::StatisticsModel::StatisticsRecord::m_value	src/addins/statistics/statisticswidget.cpp	/^    Gtk::TreeModelColumn<std::string> m_value;$/;"	m	class:statistics::StatisticsModel::StatisticsRecord	file:	access:private
statistics::StatisticsModel::active	src/addins/statistics/statisticswidget.cpp	/^  void active(bool is_active)$/;"	f	class:statistics::StatisticsModel	access:public	signature:(bool is_active)
statistics::StatisticsModel::build_stats	src/addins/statistics/statisticswidget.cpp	/^  void build_stats()$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:()
statistics::StatisticsModel::create	src/addins/statistics/statisticswidget.cpp	/^  static Ptr create(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsModel	access:public	signature:(gnote::NoteManager & nm)
statistics::StatisticsModel::m_active	src/addins/statistics/statisticswidget.cpp	/^  bool m_active;$/;"	m	class:statistics::StatisticsModel	file:	access:private
statistics::StatisticsModel::m_columns	src/addins/statistics/statisticswidget.cpp	/^  StatisticsRecord m_columns;$/;"	m	class:statistics::StatisticsModel	file:	access:private
statistics::StatisticsModel::m_note_manager	src/addins/statistics/statisticswidget.cpp	/^  gnote::NoteManager & m_note_manager;$/;"	m	class:statistics::StatisticsModel	file:	access:private
statistics::StatisticsModel::on_note_list_changed	src/addins/statistics/statisticswidget.cpp	/^  void on_note_list_changed(const gnote::NoteBase::Ptr &)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(const gnote::NoteBase::Ptr &)
statistics::StatisticsModel::on_notebook_note_list_changed	src/addins/statistics/statisticswidget.cpp	/^  void on_notebook_note_list_changed(const gnote::Note &, const gnote::notebooks::Notebook::Ptr &)$/;"	f	class:statistics::StatisticsModel	file:	access:private	signature:(const gnote::Note &, const gnote::notebooks::Notebook::Ptr &)
statistics::StatisticsModel::update	src/addins/statistics/statisticswidget.cpp	/^  void update()$/;"	f	class:statistics::StatisticsModel	access:public	signature:()
statistics::StatisticsModule	src/addins/statistics/statisticsapplicationaddin.hpp	/^class StatisticsModule$/;"	c	namespace:statistics	inherits:sharp::DynamicModule
statistics::StatisticsModule::StatisticsModule	src/addins/statistics/statisticsapplicationaddin.cpp	/^StatisticsModule::StatisticsModule()$/;"	f	class:statistics::StatisticsModule	signature:()
statistics::StatisticsModule::StatisticsModule	src/addins/statistics/statisticsapplicationaddin.hpp	/^  StatisticsModule();$/;"	p	class:statistics::StatisticsModule	access:public	signature:()
statistics::StatisticsWidget	src/addins/statistics/statisticswidget.hpp	/^class StatisticsWidget$/;"	c	namespace:statistics	inherits:Gtk::TreeView,gnote::EmbeddableWidget
statistics::StatisticsWidget::StatisticsWidget	src/addins/statistics/statisticswidget.cpp	/^StatisticsWidget::StatisticsWidget(gnote::NoteManager & nm)$/;"	f	class:statistics::StatisticsWidget	signature:(gnote::NoteManager & nm)
statistics::StatisticsWidget::StatisticsWidget	src/addins/statistics/statisticswidget.hpp	/^  StatisticsWidget(gnote::NoteManager & nm);$/;"	p	class:statistics::StatisticsWidget	access:public	signature:(gnote::NoteManager & nm)
statistics::StatisticsWidget::background	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::background()$/;"	f	class:statistics::StatisticsWidget	signature:()
statistics::StatisticsWidget::col1_data_func	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:statistics::StatisticsWidget	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
statistics::StatisticsWidget::col1_data_func	src/addins/statistics/statisticswidget.hpp	/^  void col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:statistics::StatisticsWidget	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
statistics::StatisticsWidget::col2_data_func	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:statistics::StatisticsWidget	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
statistics::StatisticsWidget::col2_data_func	src/addins/statistics/statisticswidget.hpp	/^  void col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:statistics::StatisticsWidget	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
statistics::StatisticsWidget::foreground	src/addins/statistics/statisticswidget.cpp	/^void StatisticsWidget::foreground()$/;"	f	class:statistics::StatisticsWidget	signature:()
statistics::StatisticsWidget::get_name	src/addins/statistics/statisticswidget.cpp	/^std::string StatisticsWidget::get_name() const$/;"	f	class:statistics::StatisticsWidget	signature:() const
statistics::StatisticsWidget::override	src/addins/statistics/statisticswidget.hpp	/^  virtual std::string get_name() const override;$/;"	m	class:statistics::StatisticsWidget	access:public
statistics::StatisticsWidget::override	src/addins/statistics/statisticswidget.hpp	/^  virtual void background() override;$/;"	m	class:statistics::StatisticsWidget	access:public
statistics::StatisticsWidget::override	src/addins/statistics/statisticswidget.hpp	/^  virtual void foreground() override;$/;"	m	class:statistics::StatisticsWidget	access:public
statistics_la_LIBADD	src/addins/statistics/Makefile	/^statistics_la_LIBADD =$/;"	m
statistics_la_OBJECTS	src/addins/statistics/Makefile	/^statistics_la_OBJECTS = $(am_statistics_la_OBJECTS)$/;"	m
statistics_la_SOURCES	src/addins/statistics/Makefile	/^statistics_la_SOURCES = \\$/;"	m
stickynote	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^namespace stickynote {$/;"	n	file:
stickynote	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^namespace stickynote {$/;"	n
stickynote::DEBUG_CREATE_ERROR_BASE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_CREATE_ERROR_BASE = "StickyNoteImporter: Error while trying to create note \\"%s\\": %s";$/;"	m	namespace:stickynote	file:
stickynote::DEBUG_FIRST_RUN_DETECTED	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_FIRST_RUN_DETECTED = "StickyNoteImporter: Detecting that importer has never been run...";$/;"	m	namespace:stickynote	file:
stickynote::DEBUG_NO_STICKY_FILE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * DEBUG_NO_STICKY_FILE = "StickyNoteImporter: Sticky Notes XML file does not exist or is invalid!";$/;"	m	namespace:stickynote	file:
stickynote::DECLARE_MODULE	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^DECLARE_MODULE(StickyNoteImportModule);$/;"	p	namespace:stickynote	signature:(StickyNoteImportModule)
stickynote::PREFS_FILE	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * PREFS_FILE = "stickynoteimport.ini";$/;"	m	namespace:stickynote	file:
stickynote::STICKY_NOTE_QUERY	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * STICKY_NOTE_QUERY = "\/\/note";$/;"	m	namespace:stickynote	file:
stickynote::STICKY_XML_REL_PATH	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^static const char * STICKY_XML_REL_PATH = "\/.gnome2\/stickynotes_applet";$/;"	m	namespace:stickynote	file:
stickynote::StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^class StickyNoteImportModule$/;"	c	namespace:stickynote	inherits:sharp::DynamicModule
stickynote::StickyNoteImportModule::StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^StickyNoteImportModule::StickyNoteImportModule()$/;"	f	class:stickynote::StickyNoteImportModule	signature:()
stickynote::StickyNoteImportModule::StickyNoteImportModule	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  StickyNoteImportModule();$/;"	p	class:stickynote::StickyNoteImportModule	access:public	signature:()
stickynote::StickyNoteImportNoteAddin	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^class StickyNoteImportNoteAddin$/;"	c	namespace:stickynote	inherits:gnote::ImportAddin
stickynote::StickyNoteImportNoteAddin::StickyNoteImportNoteAddin	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  StickyNoteImportNoteAddin()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	access:public	signature:()
stickynote::StickyNoteImportNoteAddin::_init_static	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::_init_static()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
stickynote::StickyNoteImportNoteAddin::_init_static	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static void _init_static();$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:()
stickynote::StickyNoteImportNoteAddin::check_for_first_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void check_for_first_run(gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::create	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static StickyNoteImportNoteAddin * create()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	access:public	signature:()
stickynote::StickyNoteImportNoteAddin::create_note_from_sticky	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::create_note_from_sticky(const char * stickyTitle,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const char * stickyTitle, const char* content, gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::create_note_from_sticky	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  bool create_note_from_sticky(const char * stickyTitle, const char* content,$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const char * stickyTitle, const char* content, gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::first_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::first_run(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::get_sticky_xml_doc	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^xmlDocPtr StickyNoteImportNoteAddin::get_sticky_xml_doc()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
stickynote::StickyNoteImportNoteAddin::get_sticky_xml_doc	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  xmlDocPtr get_sticky_xml_doc();$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:()
stickynote::StickyNoteImportNoteAddin::import_button_clicked	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::import_button_clicked(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::import_button_clicked	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void import_button_clicked(gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::import_notes	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::import_notes(xmlDocPtr xml_doc,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::import_notes	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void import_notes(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(xmlDocPtr xml_doc, bool showResultsDialog, gnote::NoteManager & manager)
stickynote::StickyNoteImportNoteAddin::initialize	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::initialize()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
stickynote::StickyNoteImportNoteAddin::m_item	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  Gtk::ImageMenuItem *m_item;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
stickynote::StickyNoteImportNoteAddin::override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual bool first_run(gnote::NoteManager & manager) override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
stickynote::StickyNoteImportNoteAddin::override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual bool want_to_run(gnote::NoteManager & manager) override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
stickynote::StickyNoteImportNoteAddin::override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
stickynote::StickyNoteImportNoteAddin::override	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:public
stickynote::StickyNoteImportNoteAddin::s_static_inited	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_static_inited = false;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
stickynote::StickyNoteImportNoteAddin::s_static_inited	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_static_inited;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
stickynote::StickyNoteImportNoteAddin::s_sticky_file_existence_confirmed	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_sticky_file_existence_confirmed = false;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
stickynote::StickyNoteImportNoteAddin::s_sticky_file_existence_confirmed	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_sticky_file_existence_confirmed;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
stickynote::StickyNoteImportNoteAddin::s_sticky_file_might_exist	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::s_sticky_file_might_exist = true;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
stickynote::StickyNoteImportNoteAddin::s_sticky_file_might_exist	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static bool s_sticky_file_might_exist;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
stickynote::StickyNoteImportNoteAddin::s_sticky_xml_path	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^std::string StickyNoteImportNoteAddin::s_sticky_xml_path;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	file:
stickynote::StickyNoteImportNoteAddin::s_sticky_xml_path	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  static std::string s_sticky_xml_path;$/;"	m	class:stickynote::StickyNoteImportNoteAddin	access:private
stickynote::StickyNoteImportNoteAddin::show_message_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_message_dialog(const std::string & title,$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const std::string & title, const std::string & message, Gtk::MessageType messageType)
stickynote::StickyNoteImportNoteAddin::show_message_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_message_dialog(const std::string & title, const std::string & message, $/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const std::string & title, const std::string & message, Gtk::MessageType messageType)
stickynote::StickyNoteImportNoteAddin::show_no_sticky_xml_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_no_sticky_xml_dialog(const std::string & xml_path)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(const std::string & xml_path)
stickynote::StickyNoteImportNoteAddin::show_no_sticky_xml_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_no_sticky_xml_dialog(const std::string & xml_path);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(const std::string & xml_path)
stickynote::StickyNoteImportNoteAddin::show_results_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::show_results_dialog(int numNotesImported, int numNotesTotal)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(int numNotesImported, int numNotesTotal)
stickynote::StickyNoteImportNoteAddin::show_results_dialog	src/addins/stickynoteimport/stickynoteimportnoteaddin.hpp	/^  void show_results_dialog(int numNotesImported, int numNotesTotal);$/;"	p	class:stickynote::StickyNoteImportNoteAddin	access:private	signature:(int numNotesImported, int numNotesTotal)
stickynote::StickyNoteImportNoteAddin::shutdown	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^void StickyNoteImportNoteAddin::shutdown()$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:()
stickynote::StickyNoteImportNoteAddin::want_to_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::want_to_run(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
stickynoteimport_la_LIBADD	src/addins/stickynoteimport/Makefile	/^stickynoteimport_la_LIBADD =$/;"	m
stickynoteimport_la_OBJECTS	src/addins/stickynoteimport/Makefile	/^stickynoteimport_la_OBJECTS = $(am_stickynoteimport_la_OBJECTS)$/;"	m
stickynoteimport_la_SOURCES	src/addins/stickynoteimport/Makefile	/^stickynoteimport_la_SOURCES = stickynoteimportnoteaddin.hpp stickynoteimportnoteaddin.cpp \\$/;"	m
store	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Glib::RefPtr<Gtk::ListStore> store;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
str_to_int	src/synchronization/filesystemsyncserver.cpp	/^int str_to_int(const std::string & s)$/;"	f	namespace:__anon18	signature:(const std::string & s)
string	src/sharp/timespan.cpp	/^  std::string TimeSpan::string() const$/;"	f	class:sharp::TimeSpan	signature:() const
string	src/sharp/timespan.hpp	/^    std::string string() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
string	src/sharp/uuid.hpp	/^    std::string string()$/;"	f	class:sharp::uuid	access:public	signature:()
string_ends_with	src/test/dttest.cpp	/^bool string_ends_with(const std::string & s, const std::string & other)$/;"	f	signature:(const std::string & s, const std::string & other)
string_index_of	src/sharp/string.cpp	/^  int string_index_of(const std::string & source, const std::string & search)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search)
string_index_of	src/sharp/string.cpp	/^  int string_index_of(const std::string & source, const std::string & search, int start_at)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search, int start_at)
string_index_of	src/sharp/string.hpp	/^  int string_index_of(const std::string & source, const std::string & with);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with)
string_index_of	src/sharp/string.hpp	/^  int string_index_of(const std::string & source, const std::string & with, int);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with, int)
string_last_index_of	src/sharp/string.cpp	/^  int string_last_index_of(const std::string & source, const std::string & search)$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & search)
string_last_index_of	src/sharp/string.hpp	/^  int string_last_index_of(const std::string & source, const std::string & with);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & with)
string_match_iregex	src/sharp/string.cpp	/^  bool string_match_iregex(const std::string & source, const std::string & regex)  $/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & regex)
string_match_iregex	src/sharp/string.hpp	/^  bool string_match_iregex(const std::string & source, const std::string & regex);$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & regex)
string_replace_all	src/sharp/string.cpp	/^  std::string string_replace_all(const std::string & source, const std::string & from,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
string_replace_all	src/sharp/string.hpp	/^  std::string string_replace_all(const std::string & source, const std::string & from,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
string_replace_first	src/sharp/string.cpp	/^  std::string string_replace_first(const std::string & source, const std::string & from,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
string_replace_first	src/sharp/string.hpp	/^  std::string string_replace_first(const std::string & source, const std::string & from,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & from, const std::string & with)
string_replace_regex	src/sharp/string.cpp	/^  std::string string_replace_regex(const std::string & source,$/;"	f	namespace:sharp	signature:(const std::string & source, const std::string & regex, const std::string & with)
string_replace_regex	src/sharp/string.hpp	/^  std::string string_replace_regex(const std::string & source, const std::string & regex,$/;"	p	namespace:sharp	signature:(const std::string & source, const std::string & regex, const std::string & with)
string_split	src/sharp/string.cpp	/^  void string_split(std::vector<std::string> & split, const std::string & source,$/;"	f	namespace:sharp	signature:(std::vector<std::string> & split, const std::string & source, const char * delimiters)
string_split	src/sharp/string.hpp	/^  void string_split(std::vector<std::string> & split, const std::string & source,$/;"	p	namespace:sharp	signature:(std::vector<std::string> & split, const std::string & source, const char * delimiters)
string_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::string (RemoteControl_adaptor::*string_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
string_substring	src/sharp/string.cpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start)$/;"	f	namespace:sharp	signature:(const Glib::ustring & source, int start)
string_substring	src/sharp/string.cpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start, int len)$/;"	f	namespace:sharp	signature:(const Glib::ustring & source, int start, int len)
string_substring	src/sharp/string.hpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start);$/;"	p	namespace:sharp	signature:(const Glib::ustring & source, int start)
string_substring	src/sharp/string.hpp	/^  Glib::ustring string_substring(const Glib::ustring & source, int start, int len);$/;"	p	namespace:sharp	signature:(const Glib::ustring & source, int start, int len)
string_to_lower	src/test/dttest.cpp	/^std::string string_to_lower(std::string s)$/;"	f	signature:(std::string s)
string_trim	src/sharp/string.cpp	/^  std::string string_trim(const std::string & source)$/;"	f	namespace:sharp	signature:(const std::string & source)
string_trim	src/sharp/string.cpp	/^  std::string string_trim(const std::string & source, const char * set_of_char)$/;"	f	namespace:sharp	signature:(const std::string & source, const char * set_of_char)
string_trim	src/sharp/string.hpp	/^  std::string string_trim(const std::string & source);$/;"	p	namespace:sharp	signature:(const std::string & source)
string_trim	src/sharp/string.hpp	/^  std::string string_trim(const std::string & source, const char * set_of_char);$/;"	p	namespace:sharp	signature:(const std::string & source, const char * set_of_char)
stringtest_DEPENDENCIES	src/Makefile	/^stringtest_DEPENDENCIES = libgnote.la$/;"	m
stringtest_LDADD	src/Makefile	/^stringtest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
stringtest_OBJECTS	src/Makefile	/^stringtest_OBJECTS = $(am_stringtest_OBJECTS)$/;"	m
stringtest_SOURCES	src/Makefile	/^stringtest_SOURCES = test\/stringtest.cpp$/;"	m
stub_bool_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_bool_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, bool_string_func func)
stub_bool_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_bool_string(const Glib::VariantContainerBase &, bool_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, bool_string_func)
stub_bool_string_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_bool_string_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, bool_string_string_func func)
stub_bool_string_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_bool_string_string(const Glib::VariantContainerBase &, bool_string_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, bool_string_string_func)
stub_func	src/dbus/remotecontrol-glue.hpp	/^  typedef Glib::VariantContainerBase (RemoteControl_adaptor::*stub_func)(const Glib::VariantContainerBase &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::Glib	access:private
stub_func	src/dbus/searchprovider.hpp	/^  typedef Glib::VariantContainerBase (SearchProvider::*stub_func)(const Glib::VariantContainerBase &);$/;"	t	class:org::gnome::Gnote::SearchProvider::Glib	access:private
stub_int_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_int_string(const Glib::VariantContainerBase & parameters, int_string_func func)$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, int_string_func func)
stub_int_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_int_string(const Glib::VariantContainerBase &, int_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, int_string_func)
stub_string_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_string_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, string_string_func func)
stub_string_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_string_string(const Glib::VariantContainerBase &, string_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, string_string_func)
stub_vectorstring_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, vectorstring_string_func func)
stub_vectorstring_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_string(const Glib::VariantContainerBase &, vectorstring_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_string_func)
stub_vectorstring_string_bool	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_string_bool(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, vectorstring_string_bool_func func)
stub_vectorstring_string_bool	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_string_bool(const Glib::VariantContainerBase &, vectorstring_string_bool_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_string_bool_func)
stub_vectorstring_void	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_vectorstring_void(const Glib::VariantContainerBase &,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase &, vectorstring_void_func func)
stub_vectorstring_void	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_vectorstring_void(const Glib::VariantContainerBase &, vectorstring_void_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, vectorstring_void_func)
stub_void_string	src/dbus/remotecontrol-glue.cpp	/^Glib::VariantContainerBase RemoteControl_adaptor::stub_void_string(const Glib::VariantContainerBase & parameters,$/;"	f	class:RemoteControl_adaptor	signature:(const Glib::VariantContainerBase & parameters, void_string_func func)
stub_void_string	src/dbus/remotecontrol-glue.hpp	/^  Glib::VariantContainerBase stub_void_string(const Glib::VariantContainerBase &, void_string_func);$/;"	p	class:org::gnome::Gnote::RemoteControl_adaptor	access:private	signature:(const Glib::VariantContainerBase &, void_string_func)
subdir	Makefile	/^subdir = .$/;"	m
subdir	data/Makefile	/^subdir = data$/;"	m
subdir	data/appdata/Makefile	/^subdir = data\/appdata$/;"	m
subdir	data/icons/Makefile	/^subdir = data\/icons$/;"	m
subdir	help/Makefile	/^subdir = help$/;"	m
subdir	libtomboy/Makefile	/^subdir = libtomboy$/;"	m
subdir	po/Makefile	/^subdir = po$/;"	m
subdir	src/Makefile	/^subdir = src$/;"	m
subdir	src/addins/Makefile	/^subdir = src\/addins$/;"	m
subdir	src/addins/backlinks/Makefile	/^subdir = src\/addins\/backlinks$/;"	m
subdir	src/addins/bugzilla/Makefile	/^subdir = src\/addins\/bugzilla$/;"	m
subdir	src/addins/exporttogtg/Makefile	/^subdir = src\/addins\/exporttogtg$/;"	m
subdir	src/addins/exporttohtml/Makefile	/^subdir = src\/addins\/exporttohtml$/;"	m
subdir	src/addins/filesystemsyncservice/Makefile	/^subdir = src\/addins\/filesystemsyncservice$/;"	m
subdir	src/addins/fixedwidth/Makefile	/^subdir = src\/addins\/fixedwidth$/;"	m
subdir	src/addins/inserttimestamp/Makefile	/^subdir = src\/addins\/inserttimestamp$/;"	m
subdir	src/addins/notedirectorywatcher/Makefile	/^subdir = src\/addins\/notedirectorywatcher$/;"	m
subdir	src/addins/noteoftheday/Makefile	/^subdir = src\/addins\/noteoftheday$/;"	m
subdir	src/addins/printnotes/Makefile	/^subdir = src\/addins\/printnotes$/;"	m
subdir	src/addins/readonly/Makefile	/^subdir = src\/addins\/readonly$/;"	m
subdir	src/addins/replacetitle/Makefile	/^subdir = src\/addins\/replacetitle$/;"	m
subdir	src/addins/specialnotes/Makefile	/^subdir = src\/addins\/specialnotes$/;"	m
subdir	src/addins/statistics/Makefile	/^subdir = src\/addins\/statistics$/;"	m
subdir	src/addins/stickynoteimport/Makefile	/^subdir = src\/addins\/stickynoteimport$/;"	m
subdir	src/addins/tableofcontents/Makefile	/^subdir = src\/addins\/tableofcontents$/;"	m
subdir	src/addins/todo/Makefile	/^subdir = src\/addins\/todo$/;"	m
subdir	src/addins/tomboyimport/Makefile	/^subdir = src\/addins\/tomboyimport$/;"	m
subdir	src/addins/underline/Makefile	/^subdir = src\/addins\/underline$/;"	m
subdir	src/addins/webdavsyncservice/Makefile	/^subdir = src\/addins\/webdavsyncservice$/;"	m
subdir	src/dbus/Makefile	/^subdir = src\/dbus$/;"	m
supports_goto_result	src/mainwindowembeds.cpp	/^bool SearchableItem::supports_goto_result()$/;"	f	class:gnote::SearchableItem	signature:()
supports_goto_result	src/mainwindowembeds.hpp	/^  virtual bool supports_goto_result();$/;"	p	class:gnote::SearchableItem	access:public	signature:()
supports_goto_result	src/notewindow.cpp	/^  bool NoteWindow::supports_goto_result()$/;"	f	class:gnote::NoteWindow	signature:()
sync	src/addinmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/filesystemsyncserver.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/filesystemsyncserver.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/fusesyncserviceaddin.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/fusesyncserviceaddin.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/gnotesyncclient.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/gnotesyncclient.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/isyncmanager.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/isyncmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/silentui.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/silentui.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/syncdialog.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/syncdialog.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/syncmanager.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/syncmanager.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/syncserviceaddin.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/syncserviceaddin.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/syncui.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/syncui.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync	src/synchronization/syncutils.cpp	/^namespace sync {$/;"	n	namespace:gnote	file:
sync	src/synchronization/syncutils.hpp	/^namespace sync {$/;"	n	namespace:gnote
sync_state_changed	src/synchronization/silentui.cpp	/^  void SilentUI::sync_state_changed(SyncState state)$/;"	f	class:gnote::sync::SilentUI	signature:(SyncState state)
sync_state_changed	src/synchronization/syncdialog.cpp	/^void SyncDialog::sync_state_changed(SyncState state)$/;"	f	class:gnote::sync::SyncDialog	signature:(SyncState state)
sync_state_changed	src/synchronization/syncui.hpp	/^    virtual void sync_state_changed(SyncState state) = 0;$/;"	p	class:gnote::sync::SyncUI	access:public	signature:(SyncState state)
sync_state_changed_	src/synchronization/syncdialog.cpp	/^void SyncDialog::sync_state_changed_(SyncState state)$/;"	f	class:gnote::sync::SyncDialog	signature:(SyncState state)
sync_state_changed_	src/synchronization/syncdialog.hpp	/^    void sync_state_changed_(SyncState state);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(SyncState state)
synchronization_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::synchronization_thread()$/;"	f	class:gnote::sync::SyncManager	signature:()
synchronization_thread	src/synchronization/syncmanager.hpp	/^    void synchronization_thread();$/;"	p	class:gnote::sync::SyncManager	access:public	signature:()
synchronize_buffer	src/note.cpp	/^  void NoteDataBufferSynchronizer::synchronize_buffer()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
synchronize_buffer	src/note.hpp	/^  void synchronize_buffer();$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:()
synchronize_text	src/note.cpp	/^  void NoteDataBufferSynchronizer::synchronize_text() const$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:() const
synchronize_text	src/note.hpp	/^  void synchronize_text() const;$/;"	p	class:gnote::NoteDataBufferSynchronizer	access:private	signature:() const
synchronized_data	src/notebase.hpp	/^  virtual NoteData & synchronized_data()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
synchronized_data	src/notebase.hpp	/^  virtual const NoteData & synchronized_data() const$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:() const
synchronized_note_xml_matches	src/synchronization/isyncmanager.hpp	/^  virtual bool synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2) = 0;$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:(const std::string & noteXml1, const std::string & noteXml2)
synchronized_note_xml_matches	src/synchronization/syncmanager.cpp	/^  bool SyncManager::synchronized_note_xml_matches(const std::string & noteXml1, const std::string & noteXml2)$/;"	f	class:gnote::sync::SyncManager	signature:(const std::string & noteXml1, const std::string & noteXml2)
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	data/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	data/appdata/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	data/icons/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	help/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libtomboy/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/backlinks/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/bugzilla/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/exporttogtg/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/exporttohtml/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/filesystemsyncservice/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/fixedwidth/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/inserttimestamp/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/notedirectorywatcher/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/noteoftheday/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/printnotes/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/readonly/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/replacetitle/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/specialnotes/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/statistics/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/stickynoteimport/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/tableofcontents/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/todo/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/tomboyimport/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/underline/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/addins/webdavsyncservice/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	src/dbus/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
tableofcontents	src/addins/tableofcontents/tableofcontents.hpp	/^namespace tableofcontents {$/;"	n
tableofcontents	src/addins/tableofcontents/tableofcontentsaction.cpp	/^namespace tableofcontents {$/;"	n	file:
tableofcontents	src/addins/tableofcontents/tableofcontentsaction.hpp	/^namespace tableofcontents {$/;"	n
tableofcontents	src/addins/tableofcontents/tableofcontentsmenuitem.cpp	/^namespace tableofcontents {$/;"	n	file:
tableofcontents	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^namespace tableofcontents {$/;"	n
tableofcontents	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^namespace tableofcontents {$/;"	n	file:
tableofcontents	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^namespace tableofcontents {$/;"	n
tableofcontents::DECLARE_MODULE	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^DECLARE_MODULE(TableofcontentsModule);$/;"	p	namespace:tableofcontents	signature:(TableofcontentsModule)
tableofcontents::Heading	src/addins/tableofcontents/tableofcontents.hpp	/^namespace Heading { \/\/ Heading level,$/;"	n	namespace:tableofcontents
tableofcontents::Heading::Level_1	src/addins/tableofcontents/tableofcontents.hpp	/^    Level_1,       \/\/  Heading::Level_1  == 1st level heading == Ctrl-1$/;"	e	enum:tableofcontents::Heading::Type
tableofcontents::Heading::Level_2	src/addins/tableofcontents/tableofcontents.hpp	/^    Level_2,       \/\/  Heading::Level_2  == 2nd level heading == Ctrl-2$/;"	e	enum:tableofcontents::Heading::Type
tableofcontents::Heading::None	src/addins/tableofcontents/tableofcontents.hpp	/^    None           \/\/  Heading::None$/;"	e	enum:tableofcontents::Heading::Type
tableofcontents::Heading::Title	src/addins/tableofcontents/tableofcontents.hpp	/^    Title,         \/\/  Heading::Title    == Note title$/;"	e	enum:tableofcontents::Heading::Type
tableofcontents::Heading::Type	src/addins/tableofcontents/tableofcontents.hpp	/^  enum Type {      \/\/  Heading::Type     (can be used as a type)$/;"	g	namespace:tableofcontents::Heading
tableofcontents::TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.hpp	/^class TableofcontentsAction$/;"	c	namespace:tableofcontents	inherits:Gtk::Action
tableofcontents::TableofcontentsAction::TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.cpp	/^TableofcontentsAction::TableofcontentsAction(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:tableofcontents::TableofcontentsAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
tableofcontents::TableofcontentsAction::TableofcontentsAction	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  TableofcontentsAction(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
tableofcontents::TableofcontentsAction::create	src/addins/tableofcontents/tableofcontentsaction.cpp	/^Glib::RefPtr<Gtk::Action> TableofcontentsAction::create(const sigc::slot<void, Gtk::Menu*> & slot)$/;"	f	class:tableofcontents::TableofcontentsAction	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
tableofcontents::TableofcontentsAction::create	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  static Glib::RefPtr<Gtk::Action> create(const sigc::slot<void, Gtk::Menu*> & slot);$/;"	p	class:tableofcontents::TableofcontentsAction	access:public	signature:(const sigc::slot<void, Gtk::Menu*> & slot)
tableofcontents::TableofcontentsAction::create_menu_item_vfunc	src/addins/tableofcontents/tableofcontentsaction.cpp	/^Gtk::Widget *TableofcontentsAction::create_menu_item_vfunc()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
tableofcontents::TableofcontentsAction::m_menu	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  Gtk::Menu *m_menu;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
tableofcontents::TableofcontentsAction::m_submenu_built	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  bool m_submenu_built;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
tableofcontents::TableofcontentsAction::m_update_menu_slot	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  sigc::slot<void, Gtk::Menu*> m_update_menu_slot;$/;"	m	class:tableofcontents::TableofcontentsAction	access:private
tableofcontents::TableofcontentsAction::on_activate	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::on_activate()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
tableofcontents::TableofcontentsAction::on_menu_hidden	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::on_menu_hidden()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
tableofcontents::TableofcontentsAction::on_menu_hidden	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  void on_menu_hidden();$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:()
tableofcontents::TableofcontentsAction::override	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  virtual Gtk::Widget *create_menu_item_vfunc() override;$/;"	m	class:tableofcontents::TableofcontentsAction	access:protected
tableofcontents::TableofcontentsAction::override	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  virtual void on_activate() override;$/;"	m	class:tableofcontents::TableofcontentsAction	access:protected
tableofcontents::TableofcontentsAction::update_menu	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::update_menu()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
tableofcontents::TableofcontentsAction::update_menu	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  void update_menu();$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:()
tableofcontents::TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^class TableofcontentsMenuItem : public Gtk::ImageMenuItem$/;"	c	namespace:tableofcontents	inherits:Gtk::ImageMenuItem
tableofcontents::TableofcontentsMenuItem::TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.cpp	/^TableofcontentsMenuItem::TableofcontentsMenuItem ($/;"	f	class:tableofcontents::TableofcontentsMenuItem	signature:( const gnote::Note::Ptr & note, const std::string & heading, Heading::Type heading_level, int heading_position)
tableofcontents::TableofcontentsMenuItem::TableofcontentsMenuItem	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  TableofcontentsMenuItem ( const gnote::Note::Ptr & note,$/;"	p	class:tableofcontents::TableofcontentsMenuItem	access:public	signature:( const gnote::Note::Ptr & note, const std::string & heading, Heading::Type heading_level, int heading_position )
tableofcontents::TableofcontentsMenuItem::m_heading_position	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  int              m_heading_position; \/\/the position of the heading in the Note$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:private
tableofcontents::TableofcontentsMenuItem::m_note	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  gnote::Note::Ptr m_note;            \/\/the Note referenced by the menu item$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:private
tableofcontents::TableofcontentsMenuItem::on_activate	src/addins/tableofcontents/tableofcontentsmenuitem.cpp	/^void TableofcontentsMenuItem::on_activate ()$/;"	f	class:tableofcontents::TableofcontentsMenuItem	signature:()
tableofcontents::TableofcontentsMenuItem::override	src/addins/tableofcontents/tableofcontentsmenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:tableofcontents::TableofcontentsMenuItem	access:protected
tableofcontents::TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^class TableofcontentsModule : public sharp::DynamicModule$/;"	c	namespace:tableofcontents	inherits:sharp::DynamicModule
tableofcontents::TableofcontentsModule::TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^TableofcontentsModule::TableofcontentsModule()$/;"	f	class:tableofcontents::TableofcontentsModule	signature:()
tableofcontents::TableofcontentsModule::TableofcontentsModule	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  TableofcontentsModule();$/;"	p	class:tableofcontents::TableofcontentsModule	access:public	signature:()
tableofcontents::TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^class TableofcontentsNoteAddin : public gnote::NoteAddin$/;"	c	namespace:tableofcontents	inherits:gnote::NoteAddin
tableofcontents::TableofcontentsNoteAddin::TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^TableofcontentsNoteAddin::TableofcontentsNoteAddin()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::TableofcontentsNoteAddin	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  TableofcontentsNoteAddin();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:public	signature:()
tableofcontents::TableofcontentsNoteAddin::create	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  static TableofcontentsNoteAddin *create()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	access:public	signature:()
tableofcontents::TableofcontentsNoteAddin::get_heading_level_for_range	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^Heading::Type TableofcontentsNoteAddin::get_heading_level_for_range (Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::TextIter start, Gtk::TextIter end)
tableofcontents::TableofcontentsNoteAddin::get_heading_level_for_range	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Heading::Type get_heading_level_for_range (Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
tableofcontents::TableofcontentsNoteAddin::get_tableofcontents_menu_items	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::get_tableofcontents_menu_items(std::list<TableofcontentsMenuItem*> & items)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(std::list<TableofcontentsMenuItem*> & items)
tableofcontents::TableofcontentsNoteAddin::get_tableofcontents_menu_items	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void get_tableofcontents_menu_items (std::list<TableofcontentsMenuItem*> & items);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(std::list<TableofcontentsMenuItem*> & items)
tableofcontents::TableofcontentsNoteAddin::has_tag_over_range	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^bool TableofcontentsNoteAddin::has_tag_over_range (Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)
tableofcontents::TableofcontentsNoteAddin::has_tag_over_range	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool has_tag_over_range (Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Glib::RefPtr<Gtk::TextTag> tag, Gtk::TextIter start, Gtk::TextIter end)
tableofcontents::TableofcontentsNoteAddin::headification_switch	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::headification_switch (Heading::Type heading_request)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Heading::Type heading_request)
tableofcontents::TableofcontentsNoteAddin::headification_switch	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void headification_switch (Heading::Type heading_request);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Heading::Type heading_request)
tableofcontents::TableofcontentsNoteAddin::initialize	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::initialize () {}$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::m_tag_bold	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_bold; \/\/ the tags used to mark headings$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
tableofcontents::TableofcontentsNoteAddin::m_tag_huge	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_huge;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
tableofcontents::TableofcontentsNoteAddin::m_tag_large	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Glib::RefPtr<Gtk::TextTag> m_tag_large;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
tableofcontents::TableofcontentsNoteAddin::m_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  Gtk::Menu          *m_toc_menu;        \/\/ the TOC submenu, containing the TOC$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
tableofcontents::TableofcontentsNoteAddin::m_toc_menu_built	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool                m_toc_menu_built;  \/\/ whereas toc_menu is already built$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:private
tableofcontents::TableofcontentsNoteAddin::on_key_pressed	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^bool TableofcontentsNoteAddin::on_key_pressed(GdkEventKey *ev)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(GdkEventKey *ev)
tableofcontents::TableofcontentsNoteAddin::on_key_pressed	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  bool on_key_pressed (GdkEventKey *ev);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(GdkEventKey *ev)
tableofcontents::TableofcontentsNoteAddin::on_level_1_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_level_1_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_level_1_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_level_1_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
tableofcontents::TableofcontentsNoteAddin::on_level_2_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_level_2_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_level_2_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_level_2_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
tableofcontents::TableofcontentsNoteAddin::on_menu_hidden	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_menu_hidden()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_menu_hidden	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_menu_hidden();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
tableofcontents::TableofcontentsNoteAddin::on_note_opened	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_note_opened ()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_populate_popup	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_populate_popup (Gtk::Menu* popup_menu)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu* popup_menu)
tableofcontents::TableofcontentsNoteAddin::on_populate_popup	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_populate_popup (Gtk::Menu* popup_menu);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu* popup_menu)
tableofcontents::TableofcontentsNoteAddin::on_toc_help_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_toc_help_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_toc_help_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_toc_help_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
tableofcontents::TableofcontentsNoteAddin::on_toc_popup_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::on_toc_popup_activated()$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::on_toc_popup_activated	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void on_toc_popup_activated ();$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:()
tableofcontents::TableofcontentsNoteAddin::override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
tableofcontents::TableofcontentsNoteAddin::override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
tableofcontents::TableofcontentsNoteAddin::override	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:tableofcontents::TableofcontentsNoteAddin	access:public
tableofcontents::TableofcontentsNoteAddin::populate_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::populate_toc_menu (Gtk::Menu *toc_menu, bool has_action_entries)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu *toc_menu, bool has_action_entries)
tableofcontents::TableofcontentsNoteAddin::populate_toc_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void populate_toc_menu (Gtk::Menu *toc_menu, bool has_action_entries = true);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu *toc_menu, bool has_action_entries = true)
tableofcontents::TableofcontentsNoteAddin::shutdown	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::shutdown   () {}$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:()
tableofcontents::TableofcontentsNoteAddin::update_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::update_menu(Gtk::Menu *menu)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu *menu)
tableofcontents::TableofcontentsNoteAddin::update_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void update_menu(Gtk::Menu *menu);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu *menu)
tableofcontents::new_toc_menu_item	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^Gtk::ImageMenuItem * new_toc_menu_item ()$/;"	f	namespace:tableofcontents	signature:()
tableofcontents_la_LIBADD	src/addins/tableofcontents/Makefile	/^tableofcontents_la_LIBADD =$/;"	m
tableofcontents_la_OBJECTS	src/addins/tableofcontents/Makefile	/^tableofcontents_la_OBJECTS = $(am_tableofcontents_la_OBJECTS)$/;"	m
tableofcontents_la_SOURCES	src/addins/tableofcontents/Makefile	/^tableofcontents_la_SOURCES = \\$/;"	m
tag	src/notebuffer.cpp	/^    Glib::RefPtr<Gtk::TextTag> tag;$/;"	m	struct:gnote::TagStart	file:	access:public
tag	src/notebuffer.hpp	/^    NoteTag::Ptr                  tag;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
tag	src/undo.hpp	/^    Glib::RefPtr<Gtk::TextTag> tag;$/;"	m	struct:gnote::SplitterAction::TagData	access:public
tag_applied	src/watchers.cpp	/^  void NoteSpellChecker::tag_applied(const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteSpellChecker	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & start_char, const Gtk::TextIter & end_char)
tag_applied	src/watchers.hpp	/^    void tag_applied(const Glib::RefPtr<const Gtk::TextTag> &,$/;"	p	class:gnote::NoteSpellChecker	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> &, const Gtk::TextIter &, const Gtk::TextIter &)
tag_ends_here	src/notebuffer.cpp	/^  bool NoteBufferArchiver::tag_ends_here (const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & iter, const Gtk::TextIter & next_iter)
tag_ends_here	src/notebuffer.hpp	/^  static bool tag_ends_here (const Glib::RefPtr<const Gtk::TextTag> & tag,$/;"	p	class:gnote::NoteBufferArchiver	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, const Gtk::TextIter & iter, const Gtk::TextIter & next_iter)
tag_has_depth	src/notetag.cpp	/^  bool NoteTagTable::tag_has_depth(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & tag)
tag_has_depth	src/notetag.hpp	/^  static bool tag_has_depth(const Glib::RefPtr<Gtk::TextBuffer::Tag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextBuffer::Tag> & )
tag_is_activatable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_activatable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
tag_is_activatable	src/notetag.hpp	/^  static bool tag_is_activatable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
tag_is_growable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_growable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
tag_is_growable	src/notetag.hpp	/^  static bool tag_is_growable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
tag_is_serializable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_serializable(const Glib::RefPtr<const Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag)
tag_is_serializable	src/notetag.hpp	/^  static bool tag_is_serializable(const Glib::RefPtr<const Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<const Gtk::TextTag> & )
tag_is_spell_checkable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_spell_checkable(const Glib::RefPtr<const Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag)
tag_is_spell_checkable	src/notetag.hpp	/^  static bool tag_is_spell_checkable(const Glib::RefPtr<const Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<const Gtk::TextTag> & )
tag_is_undoable	src/notetag.cpp	/^  bool NoteTagTable::tag_is_undoable(const Glib::RefPtr<Gtk::TextTag> & tag)$/;"	f	class:gnote::NoteTagTable	signature:(const Glib::RefPtr<Gtk::TextTag> & tag)
tag_is_undoable	src/notetag.hpp	/^  static bool tag_is_undoable(const Glib::RefPtr<Gtk::TextTag> & );$/;"	p	class:gnote::NoteTagTable	access:public	signature:(const Glib::RefPtr<Gtk::TextTag> & )
tags	src/notebase.hpp	/^  TagMap & tags()$/;"	f	class:gnote::NoteData	access:public	signature:()
tags	src/notebase.hpp	/^  const TagMap & tags() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	data/Makefile	/^target_alias = $/;"	m
target_alias	data/appdata/Makefile	/^target_alias = $/;"	m
target_alias	data/icons/Makefile	/^target_alias = $/;"	m
target_alias	help/Makefile	/^target_alias = $/;"	m
target_alias	libtomboy/Makefile	/^target_alias = $/;"	m
target_alias	src/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/backlinks/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/bugzilla/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/exporttogtg/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/exporttohtml/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/filesystemsyncservice/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/fixedwidth/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/inserttimestamp/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/notedirectorywatcher/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/noteoftheday/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/printnotes/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/readonly/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/replacetitle/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/specialnotes/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/statistics/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/stickynoteimport/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/tableofcontents/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/todo/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/tomboyimport/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/underline/Makefile	/^target_alias = $/;"	m
target_alias	src/addins/webdavsyncservice/Makefile	/^target_alias = $/;"	m
target_alias	src/dbus/Makefile	/^target_alias = $/;"	m
template_tag	src/notebooks/notebook.cpp	/^  Tag::Ptr Notebook::template_tag()$/;"	f	class:gnote::notebooks::Notebook	signature:()
template_tag	src/notebooks/notebook.hpp	/^  static Tag::Ptr template_tag();$/;"	p	class:gnote::notebooks::Notebook	access:protected	signature:()
test	src/test/testnote.cpp	/^namespace test {$/;"	n	file:
test	src/test/testnote.hpp	/^namespace test {$/;"	n
test	src/test/testnotemanager.cpp	/^namespace test {$/;"	n	file:
test	src/test/testnotemanager.hpp	/^namespace test {$/;"	n
test	src/test/testsyncclient.cpp	/^namespace test {$/;"	n	file:
test	src/test/testsyncclient.hpp	/^namespace test {$/;"	n
test	src/test/testtagmanager.cpp	/^namespace test {$/;"	n	file:
test	src/test/testtagmanager.hpp	/^namespace test {$/;"	n
test::Note	src/test/testnote.hpp	/^class Note$/;"	c	namespace:test	inherits:gnote::NoteBase
test::Note::Note	src/test/testnote.cpp	/^Note::Note(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager_)$/;"	f	class:test::Note	signature:(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager_)
test::Note::Note	src/test/testnote.hpp	/^  Note(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager);$/;"	p	class:test::Note	access:public	signature:(gnote::NoteData *_data, const Glib::ustring & filepath, gnote::NoteManagerBase & manager)
test::Note::data_synchronizer	src/test/testnote.cpp	/^const gnote::NoteDataBufferSynchronizerBase & Note::data_synchronizer() const$/;"	f	class:test::Note	signature:() const
test::Note::data_synchronizer	src/test/testnote.cpp	/^gnote::NoteDataBufferSynchronizerBase & Note::data_synchronizer()$/;"	f	class:test::Note	signature:()
test::Note::data_synchronizer	src/test/testnote.hpp	/^  virtual const gnote::NoteDataBufferSynchronizerBase & data_synchronizer() const;$/;"	p	class:test::Note	access:protected	signature:() const
test::Note::data_synchronizer	src/test/testnote.hpp	/^  virtual gnote::NoteDataBufferSynchronizerBase & data_synchronizer();$/;"	p	class:test::Note	access:protected	signature:()
test::Note::m_data_synchronizer	src/test/testnote.hpp	/^  gnote::NoteDataBufferSynchronizerBase m_data_synchronizer;$/;"	m	class:test::Note	access:private
test::NoteManager	src/test/testnotemanager.hpp	/^class NoteManager$/;"	c	namespace:test	inherits:gnote::NoteManagerBase
test::NoteManager::NoteManager	src/test/testnotemanager.cpp	/^NoteManager::NoteManager(const Glib::ustring & notesdir)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & notesdir)
test::NoteManager::NoteManager	src/test/testnotemanager.hpp	/^  explicit NoteManager(const Glib::ustring & notes_dir);$/;"	p	class:test::NoteManager	access:public	signature:(const Glib::ustring & notes_dir)
test::NoteManager::note_create_new	src/test/testnotemanager.cpp	/^gnote::NoteBase::Ptr NoteManager::note_create_new(const Glib::ustring & title, const Glib::ustring & file_name)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & title, const Glib::ustring & file_name)
test::NoteManager::note_load	src/test/testnotemanager.cpp	/^gnote::NoteBase::Ptr NoteManager::note_load(const Glib::ustring & file_name)$/;"	f	class:test::NoteManager	signature:(const Glib::ustring & file_name)
test::NoteManager::override	src/test/testnotemanager.hpp	/^  virtual gnote::NoteBase::Ptr note_create_new(const Glib::ustring & title, const Glib::ustring & file_name) override;$/;"	m	class:test::NoteManager	access:protected
test::NoteManager::override	src/test/testnotemanager.hpp	/^  virtual gnote::NoteBase::Ptr note_load(const Glib::ustring & file_name) override;$/;"	m	class:test::NoteManager	access:protected
test::NoteManager::test_notes_dir	src/test/testnotemanager.cpp	/^Glib::ustring NoteManager::test_notes_dir()$/;"	f	class:test::NoteManager	signature:()
test::NoteManager::test_notes_dir	src/test/testnotemanager.hpp	/^  static Glib::ustring test_notes_dir();$/;"	p	class:test::NoteManager	access:public	signature:()
test::SyncClient	src/test/testsyncclient.hpp	/^class SyncClient$/;"	c	namespace:test	inherits:gnote::sync::GnoteSyncClient
test::SyncClient::Ptr	src/test/testsyncclient.hpp	/^  typedef shared_ptr<SyncClient> Ptr;$/;"	t	class:test::SyncClient	access:public
test::SyncClient::SyncClient	src/test/testsyncclient.cpp	/^SyncClient::SyncClient(gnote::NoteManagerBase & \/*manager*\/)$/;"	f	class:test::SyncClient	signature:(gnote::NoteManagerBase & )
test::SyncClient::SyncClient	src/test/testsyncclient.hpp	/^  SyncClient(gnote::NoteManagerBase & manager);$/;"	p	class:test::SyncClient	access:public	signature:(gnote::NoteManagerBase & manager)
test::SyncClient::reparse	src/test/testsyncclient.hpp	/^  void reparse()$/;"	f	class:test::SyncClient	access:public	signature:()
test::SyncClient::set_manifest_path	src/test/testsyncclient.hpp	/^  void set_manifest_path(const std::string & path)$/;"	f	class:test::SyncClient	access:public	signature:(const std::string & path)
test::TagManager	src/test/testtagmanager.hpp	/^class TagManager$/;"	c	namespace:test	inherits:gnote::ITagManager
test::TagManager::all_tags	src/test/testtagmanager.cpp	/^void TagManager::all_tags(std::list<gnote::Tag::Ptr> & list) const$/;"	f	class:test::TagManager	signature:(std::list<gnote::Tag::Ptr> & list) const
test::TagManager::get_or_create_system_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_or_create_system_tag(const std::string & name)$/;"	f	class:test::TagManager	signature:(const std::string & name)
test::TagManager::get_or_create_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_or_create_tag(const std::string & tag_name)$/;"	f	class:test::TagManager	signature:(const std::string & tag_name)
test::TagManager::get_system_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_system_tag(const std::string & name) const$/;"	f	class:test::TagManager	signature:(const std::string & name) const
test::TagManager::get_tag	src/test/testtagmanager.cpp	/^gnote::Tag::Ptr TagManager::get_tag(const std::string & tag_name) const$/;"	f	class:test::TagManager	signature:(const std::string & tag_name) const
test::TagManager::m_tags	src/test/testtagmanager.hpp	/^  std::map<std::string, gnote::Tag::Ptr> m_tags;$/;"	m	class:test::TagManager	access:private
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_or_create_system_tag(const std::string & name) override;$/;"	m	class:test::TagManager	access:public
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_or_create_tag(const std::string &) override;$/;"	m	class:test::TagManager	access:public
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_system_tag(const std::string & tag_name) const override;$/;"	m	class:test::TagManager	access:public
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual gnote::Tag::Ptr get_tag(const std::string & tag_name) const override;$/;"	m	class:test::TagManager	access:public
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual void all_tags(std::list<gnote::Tag::Ptr> &) const override;$/;"	m	class:test::TagManager	access:public
test::TagManager::override	src/test/testtagmanager.hpp	/^  virtual void remove_tag(const gnote::Tag::Ptr & tag) override;$/;"	m	class:test::TagManager	access:public
test::TagManager::remove_tag	src/test/testtagmanager.cpp	/^void TagManager::remove_tag(const gnote::Tag::Ptr & tag)$/;"	f	class:test::TagManager	signature:(const gnote::Tag::Ptr & tag)
test_main	src/test/dttest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/fileinfotest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/filestest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/gnotesyncclienttest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/notemanagertest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/notetest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/stringtest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/trietest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/uritest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_main	src/test/xmlreadertest.cpp	/^int test_main(int \/*argc*\/, char ** \/*argv*\/)$/;"	f	signature:(int , char ** )
test_notes_dir	src/test/testnotemanager.cpp	/^Glib::ustring NoteManager::test_notes_dir()$/;"	f	class:test::NoteManager	signature:()
test_notes_dir	src/test/testnotemanager.hpp	/^  static Glib::ustring test_notes_dir();$/;"	p	class:test::NoteManager	access:public	signature:()
test_search_provider	tools/SearchProviderTest.py	/^def test_search_provider(proxy, notes):$/;"	f	access:public
text	src/note.cpp	/^  const Glib::ustring & NoteDataBufferSynchronizer::text()$/;"	f	class:gnote::NoteDataBufferSynchronizer	signature:()
text	src/notebase.cpp	/^const Glib::ustring & NoteDataBufferSynchronizerBase::text()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:()
text	src/notebase.hpp	/^  Glib::ustring & text()$/;"	f	class:gnote::NoteData	access:public	signature:()
text	src/notebase.hpp	/^  const Glib::ustring & text() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
text	src/notebase.hpp	/^  virtual const Glib::ustring & text();$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
text	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<Glib::ustring> text;$/;"	m	class:gnote::SearchNotesWidget::RecentSearchColumnTypes	access:public
text	src/utils.hpp	/^      const Glib::ustring text() const$/;"	f	class:gnote::utils::TextRange	access:public	signature:() const
text_content	src/note.cpp	/^  Glib::ustring Note::text_content()$/;"	f	class:gnote::Note	signature:()
text_content	src/note.hpp	/^  Glib::ustring text_content();$/;"	p	class:gnote::Note	access:public	signature:()
text_insert_event	src/notebuffer.cpp	/^  void NoteBuffer::text_insert_event(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)$/;"	f	class:gnote::NoteBuffer	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)
text_insert_event	src/notebuffer.hpp	/^  void text_insert_event(const Gtk::TextIter & pos, const Glib::ustring & text, int);$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int)
text_menu	src/notewindow.hpp	/^  Gtk::Menu * text_menu() const$/;"	f	class:gnote::NoteWindow	access:public	signature:() const
thaw_undo	src/undo.hpp	/^  void thaw_undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
timeout_expired	src/utils.cpp	/^    bool InterruptableTimeout::timeout_expired()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
timeout_expired	src/utils.hpp	/^      bool timeout_expired();$/;"	p	class:gnote::utils::InterruptableTimeout	access:private	signature:()
title	src/notebase.hpp	/^  Glib::ustring & title()$/;"	f	class:gnote::NoteData	access:public	signature:()
title	src/notebase.hpp	/^  const Glib::ustring & title() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
title	src/searchnoteswidget.hpp	/^    Gtk::TreeModelColumn<std::string> title;$/;"	m	class:gnote::SearchNotesWidget::RecentNotesColumnTypes	access:public
title_trie	src/notemanagerbase.cpp	/^  TrieTree<NoteBase::WeakPtr> *title_trie() const$/;"	f	class:gnote::TrieController	access:public	signature:() const
to_date_time	src/sharp/xmlconvert.cpp	/^  DateTime XmlConvert::to_date_time(const std::string & date)$/;"	f	class:sharp::XmlConvert	signature:(const std::string & date)
to_date_time	src/sharp/xmlconvert.hpp	/^    static DateTime to_date_time(const std::string & date);$/;"	p	class:sharp::XmlConvert	access:public	signature:(const std::string & date)
to_iso8601	src/sharp/datetime.cpp	/^  std::string DateTime::to_iso8601() const$/;"	f	class:sharp::DateTime	signature:() const
to_iso8601	src/sharp/datetime.hpp	/^  std::string to_iso8601() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
to_lower	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^static void to_lower(xmlXPathParserContextPtr ctxt,$/;"	f	namespace:exporttohtml	signature:(xmlXPathParserContextPtr ctxt, int)
to_short_time_string	src/sharp/datetime.cpp	/^  std::string DateTime::to_short_time_string() const$/;"	f	class:sharp::DateTime	signature:() const
to_short_time_string	src/sharp/datetime.hpp	/^  std::string to_short_time_string() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
to_string	src/sharp/datetime.cpp	/^  std::string DateTime::to_string(const char * format) const$/;"	f	class:sharp::DateTime	signature:(const char * format) const
to_string	src/sharp/datetime.hpp	/^  std::string to_string(const char * format) const;$/;"	p	class:sharp::DateTime	access:public	signature:(const char * format) const
to_string	src/sharp/datetime.hpp	/^  std::string to_string(const std::string & format) const$/;"	f	class:sharp::DateTime	access:public	signature:(const std::string & format) const
to_string	src/sharp/uri.hpp	/^    const std::string & to_string() const$/;"	f	class:sharp::Uri	access:public	signature:() const
to_string	src/sharp/xmlconvert.cpp	/^  std::string XmlConvert::to_string(const DateTime & date)$/;"	f	class:sharp::XmlConvert	signature:(const DateTime & date)
to_string	src/sharp/xmlconvert.hpp	/^    static std::string to_string(const DateTime & date);$/;"	p	class:sharp::XmlConvert	access:public	signature:(const DateTime & date)
to_string	src/sharp/xmlwriter.cpp	/^  std::string XmlWriter::to_string()$/;"	f	class:sharp::XmlWriter	signature:()
to_string	src/sharp/xmlwriter.hpp	/^    std::string to_string();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
to_string	src/utils.cpp	/^    std::string UriList::to_string() const$/;"	f	class:gnote::utils::UriList	signature:() const
to_string	src/utils.hpp	/^      std::string to_string() const;$/;"	p	class:gnote::utils::UriList	access:public	signature:() const
to_xmlchar	src/sharp/xmlwriter.hpp	/^  const xmlChar * to_xmlchar(const std::string & s)$/;"	f	namespace:sharp	signature:(const std::string & s)
todo	src/addins/todo/todonoteaddin.cpp	/^namespace todo {$/;"	n	file:
todo	src/addins/todo/todonoteaddin.hpp	/^namespace todo {$/;"	n
todo::DECLARE_MODULE	src/addins/todo/todonoteaddin.hpp	/^DECLARE_MODULE(TodoModule);$/;"	p	namespace:todo	signature:(TodoModule)
todo::Todo	src/addins/todo/todonoteaddin.hpp	/^class Todo$/;"	c	namespace:todo	inherits:gnote::NoteAddin
todo::Todo::create	src/addins/todo/todonoteaddin.hpp	/^  static Todo* create()$/;"	f	class:todo::Todo	access:public	signature:()
todo::Todo::highlight_note	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_note()$/;"	f	class:todo::Todo	signature:()
todo::Todo::highlight_note	src/addins/todo/todonoteaddin.hpp	/^  void highlight_note();$/;"	p	class:todo::Todo	access:private	signature:()
todo::Todo::highlight_region	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_region(Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:todo::Todo	signature:(Gtk::TextIter start, Gtk::TextIter end)
todo::Todo::highlight_region	src/addins/todo/todonoteaddin.cpp	/^void Todo::highlight_region(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)$/;"	f	class:todo::Todo	signature:(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)
todo::Todo::highlight_region	src/addins/todo/todonoteaddin.hpp	/^  void highlight_region(Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:todo::Todo	access:private	signature:(Gtk::TextIter start, Gtk::TextIter end)
todo::Todo::highlight_region	src/addins/todo/todonoteaddin.hpp	/^  void highlight_region(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end);$/;"	p	class:todo::Todo	access:private	signature:(const Glib::ustring & pattern, Gtk::TextIter start, Gtk::TextIter end)
todo::Todo::initialize	src/addins/todo/todonoteaddin.cpp	/^void Todo::initialize()$/;"	f	class:todo::Todo	signature:()
todo::Todo::on_delete_range	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_delete_range(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)$/;"	f	class:todo::Todo	signature:(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)
todo::Todo::on_delete_range	src/addins/todo/todonoteaddin.hpp	/^  void on_delete_range(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end);$/;"	p	class:todo::Todo	access:private	signature:(const Gtk::TextBuffer::iterator & start, const Gtk::TextBuffer::iterator & end)
todo::Todo::on_insert_text	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_insert_text(const Gtk::TextIter & pos, const Glib::ustring & \/*text*\/, int \/*bytes*\/)$/;"	f	class:todo::Todo	signature:(const Gtk::TextIter & pos, const Glib::ustring & , int )
todo::Todo::on_insert_text	src/addins/todo/todonoteaddin.hpp	/^  void on_insert_text(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes);$/;"	p	class:todo::Todo	access:private	signature:(const Gtk::TextIter & pos, const Glib::ustring & text, int bytes)
todo::Todo::on_note_opened	src/addins/todo/todonoteaddin.cpp	/^void Todo::on_note_opened()$/;"	f	class:todo::Todo	signature:()
todo::Todo::override	src/addins/todo/todonoteaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:todo::Todo	access:public
todo::Todo::override	src/addins/todo/todonoteaddin.hpp	/^  virtual void on_note_opened() override;$/;"	m	class:todo::Todo	access:public
todo::Todo::override	src/addins/todo/todonoteaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:todo::Todo	access:public
todo::Todo::shutdown	src/addins/todo/todonoteaddin.cpp	/^void Todo::shutdown()$/;"	f	class:todo::Todo	signature:()
todo::TodoModule	src/addins/todo/todonoteaddin.hpp	/^class TodoModule$/;"	c	namespace:todo	inherits:sharp::DynamicModule
todo::TodoModule::TodoModule	src/addins/todo/todonoteaddin.cpp	/^TodoModule::TodoModule()$/;"	f	class:todo::TodoModule	signature:()
todo::TodoModule::TodoModule	src/addins/todo/todonoteaddin.hpp	/^  TodoModule();$/;"	p	class:todo::TodoModule	access:public	signature:()
todo::s_todo_patterns	src/addins/todo/todonoteaddin.cpp	/^static std::vector<std::string> s_todo_patterns;$/;"	m	namespace:todo	file:
todo_la_LIBADD	src/addins/todo/Makefile	/^todo_la_LIBADD =$/;"	m
todo_la_OBJECTS	src/addins/todo/Makefile	/^todo_la_OBJECTS = $(am_todo_la_OBJECTS)$/;"	m
todo_la_SOURCES	src/addins/todo/Makefile	/^todo_la_SOURCES = \\$/;"	m
toggle_active_tag	src/notebuffer.cpp	/^  void NoteBuffer::toggle_active_tag(const std::string & tag_name)$/;"	f	class:gnote::NoteBuffer	signature:(const std::string & tag_name)
toggle_active_tag	src/notebuffer.hpp	/^  void toggle_active_tag(const std::string &);$/;"	p	class:gnote::NoteBuffer	access:public	signature:(const std::string &)
toggle_bullets_clicked	src/notewindow.cpp	/^  void  NoteTextMenu::toggle_bullets_clicked()$/;"	f	class:gnote::NoteTextMenu	signature:()
toggle_bullets_clicked	src/notewindow.hpp	/^  void toggle_bullets_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
toggle_selection_bullets	src/notebuffer.cpp	/^  void NoteBuffer::toggle_selection_bullets()$/;"	f	class:gnote::NoteBuffer	signature:()
toggle_selection_bullets	src/notebuffer.hpp	/^  void toggle_selection_bullets();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
tomboy_keybinder_bind	libtomboy/tomboykeybinder.c	/^tomboy_keybinder_bind (const char           *keystring,$/;"	f	signature:(const char *keystring, TomboyBindkeyHandler handler, gpointer user_data)
tomboy_keybinder_bind	libtomboy/tomboykeybinder.h	/^void tomboy_keybinder_bind   (const char           *keystring,$/;"	p	signature:(const char *keystring, TomboyBindkeyHandler handler, gpointer user_data)
tomboy_keybinder_get_current_event_time	libtomboy/tomboykeybinder.c	/^tomboy_keybinder_get_current_event_time (void)$/;"	f	signature:(void)
tomboy_keybinder_get_current_event_time	libtomboy/tomboykeybinder.h	/^guint32 tomboy_keybinder_get_current_event_time (void);$/;"	p	signature:(void)
tomboy_keybinder_init	libtomboy/tomboykeybinder.c	/^tomboy_keybinder_init (void)$/;"	f	signature:(void)
tomboy_keybinder_init	libtomboy/tomboykeybinder.h	/^void tomboy_keybinder_init   (void);$/;"	p	signature:(void)
tomboy_keybinder_is_modifier	libtomboy/tomboykeybinder.c	/^tomboy_keybinder_is_modifier (guint keycode)$/;"	f	signature:(guint keycode)
tomboy_keybinder_is_modifier	libtomboy/tomboykeybinder.h	/^gboolean tomboy_keybinder_is_modifier (guint keycode);$/;"	p	signature:(guint keycode)
tomboy_keybinder_unbind	libtomboy/tomboykeybinder.c	/^tomboy_keybinder_unbind (const char           *keystring, $/;"	f	signature:(const char *keystring, TomboyBindkeyHandler handler)
tomboy_keybinder_unbind	libtomboy/tomboykeybinder.h	/^void tomboy_keybinder_unbind (const char           *keystring,$/;"	p	signature:(const char *keystring, TomboyBindkeyHandler handler)
tomboy_window_get_workspace	libtomboy/tomboyutil.c	/^tomboy_window_get_workspace (GtkWindow *window)$/;"	f	signature:(GtkWindow *window)
tomboy_window_get_workspace	libtomboy/tomboyutil.h	/^gint tomboy_window_get_workspace (GtkWindow *window);$/;"	p	signature:(GtkWindow *window)
tomboy_window_move_to_current_workspace	libtomboy/tomboyutil.c	/^tomboy_window_move_to_current_workspace (GtkWindow *window)$/;"	f	signature:(GtkWindow *window)
tomboy_window_move_to_current_workspace	libtomboy/tomboyutil.h	/^void tomboy_window_move_to_current_workspace (GtkWindow *window);$/;"	p	signature:(GtkWindow *window)
tomboy_window_override_user_time	libtomboy/tomboyutil.c	/^tomboy_window_override_user_time (GtkWindow *window)$/;"	f	file:	signature:(GtkWindow *window)
tomboy_window_present_hardcore	libtomboy/tomboyutil.c	/^tomboy_window_present_hardcore (GtkWindow *window)$/;"	f	signature:(GtkWindow *window)
tomboy_window_present_hardcore	libtomboy/tomboyutil.h	/^void tomboy_window_present_hardcore (GtkWindow *window);$/;"	p	signature:(GtkWindow *window)
tomboyimport	src/addins/tomboyimport/tomboyimportaddin.cpp	/^namespace tomboyimport {$/;"	n	file:
tomboyimport	src/addins/tomboyimport/tomboyimportaddin.hpp	/^namespace tomboyimport {$/;"	n
tomboyimport::DECLARE_MODULE	src/addins/tomboyimport/tomboyimportaddin.hpp	/^DECLARE_MODULE(TomboyImportModule);$/;"	p	namespace:tomboyimport	signature:(TomboyImportModule)
tomboyimport::TomboyImportAddin	src/addins/tomboyimport/tomboyimportaddin.hpp	/^class TomboyImportAddin$/;"	c	namespace:tomboyimport	inherits:gnote::ImportAddin
tomboyimport::TomboyImportAddin::create	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  static TomboyImportAddin * create()$/;"	f	class:tomboyimport::TomboyImportAddin	access:public	signature:()
tomboyimport::TomboyImportAddin::first_run	src/addins/tomboyimport/tomboyimportaddin.cpp	/^bool TomboyImportAddin::first_run(gnote::NoteManager & manager)$/;"	f	class:tomboyimport::TomboyImportAddin	signature:(gnote::NoteManager & manager)
tomboyimport::TomboyImportAddin::initialize	src/addins/tomboyimport/tomboyimportaddin.cpp	/^void TomboyImportAddin::initialize()$/;"	f	class:tomboyimport::TomboyImportAddin	signature:()
tomboyimport::TomboyImportAddin::m_tomboy_path	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  std::string m_tomboy_path;$/;"	m	class:tomboyimport::TomboyImportAddin	access:private
tomboyimport::TomboyImportAddin::override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual bool first_run(gnote::NoteManager & manager) override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
tomboyimport::TomboyImportAddin::override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual bool want_to_run(gnote::NoteManager & manager) override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
tomboyimport::TomboyImportAddin::override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual void initialize() override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
tomboyimport::TomboyImportAddin::override	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  virtual void shutdown() override;$/;"	m	class:tomboyimport::TomboyImportAddin	access:public
tomboyimport::TomboyImportAddin::shutdown	src/addins/tomboyimport/tomboyimportaddin.cpp	/^void TomboyImportAddin::shutdown()$/;"	f	class:tomboyimport::TomboyImportAddin	signature:()
tomboyimport::TomboyImportAddin::want_to_run	src/addins/tomboyimport/tomboyimportaddin.cpp	/^bool TomboyImportAddin::want_to_run(gnote::NoteManager & )$/;"	f	class:tomboyimport::TomboyImportAddin	signature:(gnote::NoteManager & )
tomboyimport::TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.hpp	/^class TomboyImportModule$/;"	c	namespace:tomboyimport	inherits:sharp::DynamicModule
tomboyimport::TomboyImportModule::TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.cpp	/^TomboyImportModule::TomboyImportModule()$/;"	f	class:tomboyimport::TomboyImportModule	signature:()
tomboyimport::TomboyImportModule::TomboyImportModule	src/addins/tomboyimport/tomboyimportaddin.hpp	/^  TomboyImportModule();$/;"	p	class:tomboyimport::TomboyImportModule	access:public	signature:()
tomboyimport_la_LIBADD	src/addins/tomboyimport/Makefile	/^tomboyimport_la_LIBADD =$/;"	m
tomboyimport_la_OBJECTS	src/addins/tomboyimport/Makefile	/^tomboyimport_la_OBJECTS = $(am_tomboyimport_la_OBJECTS)$/;"	m
tomboyimport_la_SOURCES	src/addins/tomboyimport/Makefile	/^tomboyimport_la_SOURCES = tomboyimportaddin.hpp tomboyimportaddin.cpp \\$/;"	m
tomboylibdir	libtomboy/Makefile	/^tomboylibdir = $(pkglibdir)$/;"	m
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	data/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	data/appdata/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	data/icons/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	help/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libtomboy/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	src/addins/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	src/addins/backlinks/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/bugzilla/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/exporttogtg/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/exporttohtml/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/filesystemsyncservice/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/fixedwidth/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/inserttimestamp/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/notedirectorywatcher/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/noteoftheday/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/printnotes/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/readonly/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/replacetitle/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/specialnotes/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/statistics/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/stickynoteimport/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/tableofcontents/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/todo/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/tomboyimport/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/underline/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/addins/webdavsyncservice/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	src/dbus/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	data/Makefile	/^top_builddir = ..$/;"	m
top_builddir	data/appdata/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	data/icons/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	help/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libtomboy/Makefile	/^top_builddir = ..$/;"	m
top_builddir	po/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	src/addins/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	src/addins/backlinks/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/bugzilla/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/exporttogtg/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/exporttohtml/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/filesystemsyncservice/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/fixedwidth/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/inserttimestamp/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/notedirectorywatcher/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/noteoftheday/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/printnotes/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/readonly/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/replacetitle/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/specialnotes/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/statistics/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/stickynoteimport/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/tableofcontents/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/todo/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/tomboyimport/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/underline/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/addins/webdavsyncservice/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	src/dbus/Makefile	/^top_builddir = ..\/..$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	data/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	data/appdata/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	data/icons/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	help/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libtomboy/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	po/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	src/addins/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	src/addins/backlinks/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/bugzilla/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/exporttogtg/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/exporttohtml/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/filesystemsyncservice/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/fixedwidth/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/inserttimestamp/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/notedirectorywatcher/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/noteoftheday/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/printnotes/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/readonly/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/replacetitle/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/specialnotes/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/statistics/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/stickynoteimport/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/tableofcontents/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/todo/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/tomboyimport/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/underline/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/addins/webdavsyncservice/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	src/dbus/Makefile	/^top_srcdir = ..\/..$/;"	m
total_days	src/sharp/timespan.cpp	/^  double TimeSpan::total_days() const$/;"	f	class:sharp::TimeSpan	signature:() const
total_days	src/sharp/timespan.hpp	/^    double total_days() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
total_hours	src/sharp/timespan.cpp	/^  double TimeSpan::total_hours() const$/;"	f	class:sharp::TimeSpan	signature:() const
total_hours	src/sharp/timespan.hpp	/^    double total_hours() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
total_milliseconds	src/sharp/timespan.cpp	/^  double TimeSpan::total_milliseconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
total_milliseconds	src/sharp/timespan.hpp	/^    double total_milliseconds() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
total_minutes	src/sharp/timespan.cpp	/^  double TimeSpan::total_minutes() const$/;"	f	class:sharp::TimeSpan	signature:() const
total_minutes	src/sharp/timespan.hpp	/^    double total_minutes() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
total_seconds	src/sharp/timespan.cpp	/^  double TimeSpan::total_seconds() const$/;"	f	class:sharp::TimeSpan	signature:() const
total_seconds	src/sharp/timespan.hpp	/^    double total_seconds() const;$/;"	p	class:sharp::TimeSpan	access:public	signature:() const
transaction_id	src/synchronization/isyncmanager.hpp	/^  std::string transaction_id;$/;"	m	class:gnote::sync::SyncLockInfo	access:public
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	data/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	data/appdata/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	data/icons/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	help/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libtomboy/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/backlinks/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/bugzilla/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/exporttogtg/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/exporttohtml/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/filesystemsyncservice/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/fixedwidth/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/inserttimestamp/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/notedirectorywatcher/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/noteoftheday/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/printnotes/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/readonly/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/replacetitle/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/specialnotes/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/statistics/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/stickynoteimport/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/tableofcontents/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/todo/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/tomboyimport/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/underline/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/addins/webdavsyncservice/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/dbus/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	src/sharp/xsltransform.cpp	/^void XslTransform::transform(xmlDocPtr doc, const XsltArgumentList & args, StreamWriter & output, const XmlResolver & \/*resolved*\/)$/;"	f	class:sharp::XslTransform	signature:(xmlDocPtr doc, const XsltArgumentList & args, StreamWriter & output, const XmlResolver & )
transform	src/sharp/xsltransform.hpp	/^  void transform(xmlDocPtr, const XsltArgumentList &, StreamWriter &, const XmlResolver &);$/;"	p	class:sharp::XslTransform	access:public	signature:(xmlDocPtr, const XsltArgumentList &, StreamWriter &, const XmlResolver &)
transitions	src/trie.hpp	/^    TrieStateList & transitions()$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:()
tray	src/tray.hpp	/^  Tray::Ptr tray() const$/;"	f	class:gnote::TrayIcon	access:public	signature:() const
tray_icon_showing	src/gnote.hpp	/^  bool tray_icon_showing()$/;"	f	class:gnote::Gnote	access:public	signature:()
tray_menu	src/tray.hpp	/^  Gtk::Menu * tray_menu() $/;"	f	class:gnote::Tray	access:public	signature:()
tray_util_get_tooltip_text	src/tray.cpp	/^  std::string tray_util_get_tooltip_text()$/;"	f	namespace:gnote	signature:()
tray_util_get_tooltip_text	src/tray.hpp	/^std::string tray_util_get_tooltip_text();$/;"	p	namespace:gnote	signature:()
treeview_col1_data_func	src/synchronization/syncdialog.cpp	/^void SyncDialog::treeview_col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:gnote::sync::SyncDialog	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
treeview_col1_data_func	src/synchronization/syncdialog.hpp	/^    void treeview_col1_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
treeview_col2_data_func	src/synchronization/syncdialog.cpp	/^void SyncDialog::treeview_col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)$/;"	f	class:gnote::sync::SyncDialog	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
treeview_col2_data_func	src/synchronization/syncdialog.hpp	/^    void treeview_col2_data_func(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter);$/;"	p	class:gnote::sync::SyncDialog	access:private	signature:(Gtk::CellRenderer *renderer, const Gtk::TreeIter & iter)
trie_max_length	src/notemanagerbase.cpp	/^size_t NoteManagerBase::trie_max_length()$/;"	f	class:gnote::NoteManagerBase	signature:()
trie_max_length	src/notemanagerbase.hpp	/^  size_t trie_max_length();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
trietest_DEPENDENCIES	src/Makefile	/^trietest_DEPENDENCIES = libgnote.la$/;"	m
trietest_LDADD	src/Makefile	/^trietest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
trietest_OBJECTS	src/Makefile	/^trietest_OBJECTS = $(am_trietest_OBJECTS)$/;"	m
trietest_SOURCES	src/Makefile	/^trietest_SOURCES = test\/trietest.cpp$/;"	m
tv	src/addins/inserttimestamp/inserttimestamppreferences.hpp	/^  Gtk::TreeView               *tv;$/;"	m	class:inserttimestamp::InsertTimestampPreferences	access:private
unbind	src/keybinder.hpp	/^  virtual void unbind(const std::string & keystring) = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:(const std::string & keystring)
unbind	src/xkeybinder.cpp	/^  void XKeybinder::unbind(const std::string & keystring)$/;"	f	class:gnote::XKeybinder	signature:(const std::string & keystring)
unbind_all	src/keybinder.hpp	/^  virtual void unbind_all() = 0;$/;"	p	class:gnote::IKeybinder	access:public	signature:()
unbind_all	src/prefskeybinder.cpp	/^  void PrefsKeybinder::unbind_all()$/;"	f	class:gnote::PrefsKeybinder	signature:()
unbind_all	src/prefskeybinder.hpp	/^  void unbind_all();$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:()
unbind_all	src/xkeybinder.cpp	/^  void XKeybinder::unbind_all()$/;"	f	class:gnote::XKeybinder	signature:()
underline	src/addins/underline/underlinemenuitem.cpp	/^namespace underline {$/;"	n	file:
underline	src/addins/underline/underlinemenuitem.hpp	/^namespace underline {$/;"	n
underline	src/addins/underline/underlinenoteaddin.cpp	/^namespace underline {$/;"	n	file:
underline	src/addins/underline/underlinenoteaddin.hpp	/^namespace underline {$/;"	n
underline	src/addins/underline/underlinetag.hpp	/^namespace underline {$/;"	n
underline::DECLARE_MODULE	src/addins/underline/underlinenoteaddin.hpp	/^  DECLARE_MODULE(UnderlineModule);$/;"	p	namespace:underline	signature:(UnderlineModule)
underline::UnderlineMenuItem	src/addins/underline/underlinemenuitem.hpp	/^class UnderlineMenuItem$/;"	c	namespace:underline	inherits:Gtk::CheckMenuItem
underline::UnderlineMenuItem::UnderlineMenuItem	src/addins/underline/underlinemenuitem.cpp	/^  UnderlineMenuItem::UnderlineMenuItem(gnote::NoteAddin *addin)$/;"	f	class:underline::UnderlineMenuItem	signature:(gnote::NoteAddin *addin)
underline::UnderlineMenuItem::UnderlineMenuItem	src/addins/underline/underlinemenuitem.hpp	/^  UnderlineMenuItem(gnote::NoteAddin *);$/;"	p	class:underline::UnderlineMenuItem	access:public	signature:(gnote::NoteAddin *)
underline::UnderlineMenuItem::m_event_freeze	src/addins/underline/underlinemenuitem.hpp	/^  bool m_event_freeze;$/;"	m	class:underline::UnderlineMenuItem	access:private
underline::UnderlineMenuItem::m_note_addin	src/addins/underline/underlinemenuitem.hpp	/^  gnote::NoteAddin * m_note_addin;$/;"	m	class:underline::UnderlineMenuItem	access:private
underline::UnderlineMenuItem::menu_shown	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::menu_shown()$/;"	f	class:underline::UnderlineMenuItem	signature:()
underline::UnderlineMenuItem::menu_shown	src/addins/underline/underlinemenuitem.hpp	/^  void menu_shown();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
underline::UnderlineMenuItem::on_activate	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_activate()$/;"	f	class:underline::UnderlineMenuItem	signature:()
underline::UnderlineMenuItem::on_note_backgrounded	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_note_backgrounded()$/;"	f	class:underline::UnderlineMenuItem	signature:()
underline::UnderlineMenuItem::on_note_backgrounded	src/addins/underline/underlinemenuitem.hpp	/^  void on_note_backgrounded();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
underline::UnderlineMenuItem::on_note_foregrounded	src/addins/underline/underlinemenuitem.cpp	/^  void UnderlineMenuItem::on_note_foregrounded()$/;"	f	class:underline::UnderlineMenuItem	signature:()
underline::UnderlineMenuItem::on_note_foregrounded	src/addins/underline/underlinemenuitem.hpp	/^  void on_note_foregrounded();$/;"	p	class:underline::UnderlineMenuItem	access:private	signature:()
underline::UnderlineMenuItem::override	src/addins/underline/underlinemenuitem.hpp	/^  virtual void on_activate() override;$/;"	m	class:underline::UnderlineMenuItem	access:protected
underline::UnderlineModule	src/addins/underline/underlinenoteaddin.hpp	/^  class UnderlineModule$/;"	c	namespace:underline	inherits:sharp::DynamicModule
underline::UnderlineModule::UnderlineModule	src/addins/underline/underlinenoteaddin.cpp	/^  UnderlineModule::UnderlineModule()$/;"	f	class:underline::UnderlineModule	signature:()
underline::UnderlineModule::UnderlineModule	src/addins/underline/underlinenoteaddin.hpp	/^    UnderlineModule();$/;"	p	class:underline::UnderlineModule	access:public	signature:()
underline::UnderlineNoteAddin	src/addins/underline/underlinenoteaddin.hpp	/^  class UnderlineNoteAddin$/;"	c	namespace:underline	inherits:gnote::NoteAddin
underline::UnderlineNoteAddin::create	src/addins/underline/underlinenoteaddin.hpp	/^    static UnderlineNoteAddin* create()$/;"	f	class:underline::UnderlineNoteAddin	access:public	signature:()
underline::UnderlineNoteAddin::initialize	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::initialize ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
underline::UnderlineNoteAddin::m_tag	src/addins/underline/underlinenoteaddin.hpp	/^    Glib::RefPtr<Gtk::TextTag> m_tag;$/;"	m	class:underline::UnderlineNoteAddin	access:private
underline::UnderlineNoteAddin::on_note_opened	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::on_note_opened ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
underline::UnderlineNoteAddin::override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void initialize() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
underline::UnderlineNoteAddin::override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void on_note_opened() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
underline::UnderlineNoteAddin::override	src/addins/underline/underlinenoteaddin.hpp	/^    virtual void shutdown() override;$/;"	m	class:underline::UnderlineNoteAddin	access:public
underline::UnderlineNoteAddin::shutdown	src/addins/underline/underlinenoteaddin.cpp	/^  void UnderlineNoteAddin::shutdown ()$/;"	f	class:underline::UnderlineNoteAddin	signature:()
underline::UnderlineTag	src/addins/underline/underlinetag.hpp	/^class UnderlineTag$/;"	c	namespace:underline	inherits:gnote::NoteTag
underline::UnderlineTag::UnderlineTag	src/addins/underline/underlinetag.hpp	/^  UnderlineTag()$/;"	f	class:underline::UnderlineTag	access:public	signature:()
underline_la_LIBADD	src/addins/underline/Makefile	/^underline_la_LIBADD =$/;"	m
underline_la_OBJECTS	src/addins/underline/Makefile	/^underline_la_OBJECTS = $(am_underline_la_OBJECTS)$/;"	m
underline_la_SOURCES	src/addins/underline/Makefile	/^underline_la_SOURCES = underlinenoteaddin.hpp underlinenoteaddin.cpp \\$/;"	m
undo	src/addins/bugzilla/insertbugaction.cpp	/^  void InsertBugAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:bugzilla::InsertBugAction	signature:(Gtk::TextBuffer * buffer)
undo	src/addins/bugzilla/insertbugaction.hpp	/^  void undo (Gtk::TextBuffer * buffer);$/;"	p	class:bugzilla::InsertBugAction	access:public	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void ChangeDepthAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::ChangeDepthAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void EraseAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::EraseAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void InsertAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void InsertBulletAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::InsertBulletAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void TagApplyAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagApplyAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.cpp	/^  void TagRemoveAction::undo (Gtk::TextBuffer * buffer)$/;"	f	class:gnote::TagRemoveAction	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.hpp	/^  virtual void undo (Gtk::TextBuffer * buffer) = 0;$/;"	p	class:gnote::EditAction	access:public	signature:(Gtk::TextBuffer * buffer)
undo	src/undo.hpp	/^  void undo()$/;"	f	class:gnote::UndoManager	access:public	signature:()
undo_changed	src/notewindow.cpp	/^  void NoteTextMenu::undo_changed ()$/;"	f	class:gnote::NoteTextMenu	signature:()
undo_changed	src/notewindow.hpp	/^  void undo_changed();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
undo_clicked	src/notewindow.cpp	/^  void NoteTextMenu::undo_clicked ()$/;"	f	class:gnote::NoteTextMenu	signature:()
undo_clicked	src/notewindow.hpp	/^  void undo_clicked();$/;"	p	class:gnote::NoteTextMenu	access:private	signature:()
undo_redo	src/undo.cpp	/^  void UndoManager::undo_redo(std::stack<EditAction *> & pop_from,$/;"	f	class:gnote::UndoManager	signature:(std::stack<EditAction *> & pop_from, std::stack<EditAction *> & push_to, bool is_undo)
undo_redo	src/undo.hpp	/^  void undo_redo(std::stack<EditAction *> &, std::stack<EditAction *> &, bool);$/;"	p	class:gnote::UndoManager	access:public	signature:(std::stack<EditAction *> &, std::stack<EditAction *> &, bool)
undoer	src/notebuffer.hpp	/^  UndoManager & undoer()$/;"	f	class:gnote::NoteBuffer	access:public	signature:()
unembed	src/mainwindowembeds.cpp	/^void EmbeddableWidget::unembed()$/;"	f	class:gnote::EmbeddableWidget	signature:()
unembed	src/mainwindowembeds.hpp	/^  virtual void unembed();$/;"	p	class:gnote::EmbeddableWidget	access:public	signature:()
unembed_widget	src/mainwindowembeds.hpp	/^  virtual void unembed_widget(EmbeddableWidget &) = 0;$/;"	p	class:gnote::EmbeddableWidgetHost	access:public	signature:(EmbeddableWidget &)
unembed_widget	src/recentchanges.cpp	/^  void NoteRecentChanges::unembed_widget(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
unhighlight_in_block	src/watchers.cpp	/^  void NoteLinkWatcher::unhighlight_in_block(const Gtk::TextIter & start,$/;"	f	class:gnote::NoteLinkWatcher	signature:(const Gtk::TextIter & start, const Gtk::TextIter & end)
unhighlight_in_block	src/watchers.hpp	/^    void unhighlight_in_block(const Gtk::TextIter &,const Gtk::TextIter &);$/;"	p	class:gnote::NoteLinkWatcher	access:private	signature:(const Gtk::TextIter &,const Gtk::TextIter &)
unmount_timeout	src/synchronization/fusesyncserviceaddin.cpp	/^void FuseSyncServiceAddin::unmount_timeout()$/;"	f	class:gnote::sync::FuseSyncServiceAddin	signature:()
unmount_timeout	src/synchronization/fusesyncserviceaddin.hpp	/^  void unmount_timeout();$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:()
unreference	src/notewindow.cpp	/^  void NoteWindow::NonModifyingAction::unreference() const$/;"	f	class:gnote::NoteWindow::NonModifyingAction	signature:() const
unreference	src/notewindow.hpp	/^    virtual void unreference() const = 0;$/;"	p	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:() const
unset_binding	src/prefskeybinder.cpp	/^    void unset_binding();$/;"	p	class:gnote::PrefsKeybinder::Binding	file:	access:public	signature:()
unset_binding	src/prefskeybinder.cpp	/^  void PrefsKeybinder::Binding::unset_binding()$/;"	f	class:gnote::PrefsKeybinder::Binding	signature:()
update	src/addins/statistics/statisticswidget.cpp	/^  void update()$/;"	f	class:statistics::StatisticsModel	access:public	signature:()
update	src/notemanagerbase.cpp	/^  void update();$/;"	p	class:gnote::TrieController	file:	access:public	signature:()
update	src/notemanagerbase.cpp	/^void TrieController::update()$/;"	f	class:gnote::TrieController	signature:()
update	src/watchers.cpp	/^  void NoteRenameWatcher::update()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
update	src/watchers.hpp	/^    void update();$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:()
update_addin_buttons	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_addin_buttons()$/;"	f	class:gnote::PreferencesDialog	signature:()
update_addin_buttons	src/preferencesdialog.hpp	/^  void update_addin_buttons();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
update_button_sensitivity	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_button_sensitivity(bool isTemplate)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(bool isTemplate)
update_button_sensitivity	src/notebooks/notebooknoteaddin.hpp	/^    void update_button_sensitivity(bool);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(bool)
update_custom_font_setting	src/noteeditor.cpp	/^  void NoteEditor::update_custom_font_setting()$/;"	f	class:gnote::NoteEditor	signature:()
update_custom_font_setting	src/noteeditor.hpp	/^  void update_custom_font_setting();$/;"	p	class:gnote::NoteEditor	access:private	signature:()
update_font_button	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_font_button (const std::string & font_desc)$/;"	f	class:gnote::PreferencesDialog	signature:(const std::string & font_desc)
update_font_button	src/preferencesdialog.hpp	/^  void update_font_button(const std::string & font_desc);$/;"	p	class:gnote::PreferencesDialog	access:private	signature:(const std::string & font_desc)
update_icon_store	src/addins/bugzilla/bugzillapreferences.cpp	/^  void BugzillaPreferences::update_icon_store()$/;"	f	class:bugzilla::BugzillaPreferences	signature:()
update_icon_store	src/addins/bugzilla/bugzillapreferences.hpp	/^  void update_icon_store();$/;"	p	class:bugzilla::BugzillaPreferences	access:private	signature:()
update_local_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_local_note(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)$/;"	f	class:gnote::sync::SyncManager	signature:(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)
update_local_note	src/synchronization/syncmanager.hpp	/^    void update_local_note(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const NoteBase::Ptr & localNote, const NoteUpdate & serverNote, NoteSyncType syncType)
update_lock_file	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::update_lock_file(const SyncLockInfo & syncLockInfo)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const SyncLockInfo & syncLockInfo)
update_lock_file	src/synchronization/filesystemsyncserver.hpp	/^  void update_lock_file(const SyncLockInfo & syncLockInfo);$/;"	p	class:gnote::sync::FileSystemSyncServer	access:private	signature:(const SyncLockInfo & syncLockInfo)
update_menu	src/addins/backlinks/backlinkmenuitem.cpp	/^void BacklinkAction::update_menu()$/;"	f	class:backlinks::BacklinkAction	signature:()
update_menu	src/addins/backlinks/backlinkmenuitem.hpp	/^  void update_menu();$/;"	p	class:backlinks::BacklinkAction	access:private	signature:()
update_menu	src/addins/backlinks/backlinksnoteaddin.cpp	/^void BacklinksNoteAddin::update_menu(Gtk::Menu *menu)$/;"	f	class:backlinks::BacklinksNoteAddin	signature:(Gtk::Menu *menu)
update_menu	src/addins/backlinks/backlinksnoteaddin.hpp	/^  void update_menu(Gtk::Menu *menu);$/;"	p	class:backlinks::BacklinksNoteAddin	access:private	signature:(Gtk::Menu *menu)
update_menu	src/addins/tableofcontents/tableofcontentsaction.cpp	/^void TableofcontentsAction::update_menu()$/;"	f	class:tableofcontents::TableofcontentsAction	signature:()
update_menu	src/addins/tableofcontents/tableofcontentsaction.hpp	/^  void update_menu();$/;"	p	class:tableofcontents::TableofcontentsAction	access:private	signature:()
update_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.cpp	/^void TableofcontentsNoteAddin::update_menu(Gtk::Menu *menu)$/;"	f	class:tableofcontents::TableofcontentsNoteAddin	signature:(Gtk::Menu *menu)
update_menu	src/addins/tableofcontents/tableofcontentsnoteaddin.hpp	/^  void update_menu(Gtk::Menu *menu);$/;"	p	class:tableofcontents::TableofcontentsNoteAddin	access:private	signature:(Gtk::Menu *menu)
update_menu	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_menu()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
update_menu	src/notebooks/notebooknoteaddin.hpp	/^    void update_menu();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
update_note	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_note(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
update_note	src/synchronization/syncmanager.hpp	/^    void update_note(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
update_note_in_main_thread	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_note_in_main_thread(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)$/;"	f	class:gnote::sync::SyncManager	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
update_note_in_main_thread	src/synchronization/syncmanager.hpp	/^    void update_note_in_main_thread(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate);$/;"	p	class:gnote::sync::SyncManager	access:private	signature:(const Note::Ptr & existingNote, const NoteUpdate & noteUpdate)
update_note_title	src/watchers.cpp	/^  bool NoteRenameWatcher::update_note_title(bool only_warn)$/;"	f	class:gnote::NoteRenameWatcher	signature:(bool only_warn)
update_note_title	src/watchers.hpp	/^    bool update_note_title(bool only_warn);$/;"	p	class:gnote::NoteRenameWatcher	access:private	signature:(bool only_warn)
update_notebook_button_label	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_notebook_button_label()$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:()
update_notebook_button_label	src/notebooks/notebooknoteaddin.cpp	/^  void NotebookNoteAddin::update_notebook_button_label(const Notebook::Ptr & notebook)$/;"	f	class:gnote::notebooks::NotebookNoteAddin	signature:(const Notebook::Ptr & notebook)
update_notebook_button_label	src/notebooks/notebooknoteaddin.hpp	/^    void update_notebook_button_label();$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:()
update_notebook_button_label	src/notebooks/notebooknoteaddin.hpp	/^    void update_notebook_button_label(const Notebook::Ptr &);$/;"	p	class:gnote::notebooks::NotebookNoteAddin	access:private	signature:(const Notebook::Ptr &)
update_results	src/searchnoteswidget.cpp	/^void SearchNotesWidget::update_results()$/;"	f	class:gnote::SearchNotesWidget	signature:()
update_results	src/searchnoteswidget.hpp	/^  void update_results();$/;"	p	class:gnote::SearchNotesWidget	access:private	signature:()
update_search	src/notewindow.hpp	/^  void update_search();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
update_sensitivity	src/notewindow.hpp	/^  void update_sensitivity();$/;"	p	class:gnote::NoteFindHandler	access:private	signature:()
update_sync_action	src/synchronization/syncmanager.cpp	/^  void SyncManager::update_sync_action()$/;"	f	class:gnote::sync::SyncManager	signature:()
update_sync_action	src/synchronization/syncmanager.hpp	/^    void update_sync_action();$/;"	p	class:gnote::sync::SyncManager	access:private	signature:()
update_sync_services	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_sync_services()$/;"	f	class:gnote::PreferencesDialog	signature:()
update_sync_services	src/preferencesdialog.hpp	/^  void update_sync_services();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
update_timeout_pref	src/preferencesdialog.cpp	/^  void PreferencesDialog::update_timeout_pref()$/;"	f	class:gnote::PreferencesDialog	signature:()
update_timeout_pref	src/preferencesdialog.hpp	/^  void update_timeout_pref();$/;"	p	class:gnote::PreferencesDialog	access:private	signature:()
update_toolbar	src/recentchanges.cpp	/^  void NoteRecentChanges::update_toolbar(EmbeddableWidget & widget)$/;"	f	class:gnote::NoteRecentChanges	signature:(EmbeddableWidget & widget)
update_toolbar	src/recentchanges.hpp	/^  void update_toolbar(EmbeddableWidget & widget);$/;"	p	class:gnote::NoteRecentChanges	access:private	signature:(EmbeddableWidget & widget)
update_tray_menu	src/tray.cpp	/^  void Tray::update_tray_menu(Gtk::Widget * parent)$/;"	f	class:gnote::Tray	signature:(Gtk::Widget * parent)
update_tray_menu	src/tray.hpp	/^  void update_tray_menu(Gtk::Widget * parent);$/;"	p	class:gnote::Tray	access:public	signature:(Gtk::Widget * parent)
updates_available_since	src/synchronization/filesystemsyncserver.cpp	/^bool FileSystemSyncServer::updates_available_since(int revision)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(int revision)
updates_available_since	src/synchronization/isyncmanager.hpp	/^  virtual bool updates_available_since(int revision) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(int revision)
upload_notes	src/synchronization/filesystemsyncserver.cpp	/^void FileSystemSyncServer::upload_notes(const std::list<Note::Ptr> & notes)$/;"	f	class:gnote::sync::FileSystemSyncServer	signature:(const std::list<Note::Ptr> & notes)
upload_notes	src/synchronization/isyncmanager.hpp	/^  virtual void upload_notes(const std::list<Note::Ptr> & notes) = 0;$/;"	p	class:gnote::sync::SyncServer	access:public	signature:(const std::list<Note::Ptr> & notes)
uri	src/notebase.cpp	/^const std::string & NoteBase::uri() const$/;"	f	class:gnote::NoteBase	signature:() const
uri	src/notebase.hpp	/^  const std::string & uri() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
uri	src/notebase.hpp	/^  const std::string & uri() const;$/;"	p	class:gnote::NoteBase	access:public	signature:() const
uritest_DEPENDENCIES	src/Makefile	/^uritest_DEPENDENCIES = libgnote.la$/;"	m
uritest_LDADD	src/Makefile	/^uritest_LDADD = libgnote.la -lglibmm-2.4 -lgobject-2.0 -lglib-2.0 -lsigc-2.0 $/;"	m
uritest_OBJECTS	src/Makefile	/^uritest_OBJECTS = $(am_uritest_OBJECTS)$/;"	m
uritest_SOURCES	src/Makefile	/^uritest_SOURCES = test\/uritest.cpp$/;"	m
url_from_path	src/notebase.cpp	/^Glib::ustring NoteBase::url_from_path(const Glib::ustring & filepath)$/;"	f	class:gnote::NoteBase	signature:(const Glib::ustring & filepath)
url_from_path	src/notebase.hpp	/^  static Glib::ustring url_from_path(const Glib::ustring &);$/;"	p	class:gnote::NoteBase	access:public	signature:(const Glib::ustring &)
usage_error	test-driver	/^usage_error ()$/;"	f
usec	src/sharp/datetime.hpp	/^  glong usec() const$/;"	f	class:sharp::DateTime	access:public	signature:() const
user_data	libtomboy/tomboykeybinder.c	/^	gpointer              user_data;$/;"	m	struct:_Binding	file:	access:public
utils	src/debug.cpp	/^namespace utils {$/;"	n	file:
utils	src/debug.hpp	/^namespace utils {$/;"	n
utils	src/utils.cpp	/^  namespace utils {$/;"	n	namespace:gnote	file:
utils	src/utils.hpp	/^  namespace utils {$/;"	n	namespace:gnote
utils::_print	src/debug.cpp	/^  static void _print(const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(const char *prefix, const char *fmt, const char* func, ...)
utils::_print	src/debug.cpp	/^  static void _print(const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(const char *prefix, const char *fmt, const char* func, ...)
utils::_vfprint	src/debug.cpp	/^  static void _vfprint(FILE *file, const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(FILE *file, const char *prefix, const char *fmt, const char* func, va_list marker)
utils::_vfprint	src/debug.cpp	/^  static void _vfprint(FILE *file, const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(FILE *file, const char *prefix, const char *fmt, const char* func, va_list marker)
utils::_vprint	src/debug.cpp	/^  static void _vprint(const char *prefix, const char *fmt, $/;"	f	namespace:utils	signature:(const char *prefix, const char *fmt, const char* func, va_list marker)
utils::_vprint	src/debug.cpp	/^  static void _vprint(const char *prefix, const char *fmt, $/;"	p	namespace:utils	file:	signature:(const char *prefix, const char *fmt, const char* func, va_list marker)
utils::dbg_assert	src/debug.cpp	/^  void dbg_assert(bool condvalue, const char* cond, const char* filen,$/;"	f	namespace:utils	signature:(bool condvalue, const char* cond, const char* filen, int linen, const char* reason)
utils::dbg_assert	src/debug.hpp	/^  void dbg_assert(bool condvalue, const char* cond, const char* filen,$/;"	p	namespace:utils	signature:(bool condvalue, const char* cond, const char* filen, int linen, const char* reason)
utils::dbg_print	src/debug.cpp	/^  void dbg_print(const char *DBG(fmt), const char* DBG(func), ...)$/;"	f	namespace:utils	signature:(const char *DBG(fmt), const char* DBG(func), ...)
utils::err_print	src/debug.cpp	/^  void err_print(const char *fmt, const char* func, ...)$/;"	f	namespace:utils	signature:(const char *fmt, const char* func, ...)
utils::log_print	src/debug.cpp	/^  void log_print(const char *DBG(fmt), const char *DBG(func), ...)$/;"	f	namespace:utils	signature:(const char *DBG(fmt), const char *DBG(func), ...)
uuid	src/sharp/uuid.hpp	/^    uuid()$/;"	f	class:sharp::uuid	access:public	signature:()
uuid	src/sharp/uuid.hpp	/^  class uuid$/;"	c	namespace:sharp
validate	src/addininfo.cpp	/^bool AddinInfo::validate(const Glib::ustring & release, const Glib::ustring & version_info) const$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
validate	src/addininfo.hpp	/^  bool validate(const Glib::ustring & release, const Glib::ustring & version_info) const;$/;"	p	class:gnote::AddinInfo	access:public	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
validate_compatibility	src/addininfo.cpp	/^bool AddinInfo::validate_compatibility(const Glib::ustring & release, const Glib::ustring & version_info) const$/;"	f	class:gnote::AddinInfo	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
validate_compatibility	src/addininfo.hpp	/^  bool validate_compatibility(const Glib::ustring & release, const Glib::ustring & version_info) const;$/;"	p	class:gnote::AddinInfo	access:private	signature:(const Glib::ustring & release, const Glib::ustring & version_info) const
value	src/trie.hpp	/^    gunichar value() const$/;"	f	class:gnote::TrieTree::TrieState	access:public	signature:() const
value	src/triehit.hpp	/^  value_t value() const$/;"	f	class:gnote::TrieHit	access:public	signature:() const
vectorstring_string_bool_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_string_bool_func)(const std::string &, const bool &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
vectorstring_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
vectorstring_void_func	src/dbus/remotecontrol-glue.hpp	/^  typedef std::vector<std::string> (RemoteControl_adaptor::*vectorstring_void_func)();$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor::std	access:private
verify_configuration	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::verify_configuration()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
verify_configuration	src/synchronization/fusesyncserviceaddin.hpp	/^  virtual bool verify_configuration() = 0;$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:protected	signature:()
version	src/addininfo.hpp	/^  const std::string & version() const$/;"	f	class:gnote::AddinInfo	access:public	signature:() const
version	src/sharp/addinstreemodel.hpp	/^    Gtk::TreeModelColumn<std::string>          version;$/;"	m	class:sharp::AddinsTreeModel::AddinsColumns	access:public
void_string_func	src/dbus/remotecontrol-glue.hpp	/^  typedef void (RemoteControl_adaptor::*void_string_func)(const std::string &);$/;"	t	class:org::gnome::Gnote::RemoteControl_adaptor	access:private
wait_for_exit	src/sharp/process.cpp	/^bool Process::wait_for_exit(unsigned timeout)$/;"	f	class:sharp::Process	signature:(unsigned timeout)
wait_for_exit	src/sharp/process.cpp	/^void Process::wait_for_exit()$/;"	f	class:sharp::Process	signature:()
wait_for_exit	src/sharp/process.hpp	/^  bool wait_for_exit(unsigned timeout);$/;"	p	class:sharp::Process	access:public	signature:(unsigned timeout)
wait_for_exit	src/sharp/process.hpp	/^  void wait_for_exit();$/;"	p	class:sharp::Process	access:public	signature:()
wait_for_exit	src/synchronization/fusesyncserviceaddin.hpp	/^  static bool wait_for_exit(Glib::Pid, int timeout, int *exit_code);$/;"	p	class:gnote::sync::FuseSyncServiceAddin	access:private	signature:(Glib::Pid, int timeout, int *exit_code)
want_to_run	src/addins/stickynoteimport/stickynoteimportnoteaddin.cpp	/^bool StickyNoteImportNoteAddin::want_to_run(gnote::NoteManager & manager)$/;"	f	class:stickynote::StickyNoteImportNoteAddin	signature:(gnote::NoteManager & manager)
want_to_run	src/addins/tomboyimport/tomboyimportaddin.cpp	/^bool TomboyImportAddin::want_to_run(gnote::NoteManager & )$/;"	f	class:tomboyimport::TomboyImportAddin	signature:(gnote::NoteManager & )
want_to_run	src/importaddin.hpp	/^  virtual bool want_to_run(NoteManager & manager) = 0;$/;"	p	class:gnote::ImportAddin	access:public	signature:(NoteManager & manager)
webdavsyncservice_la_LIBADD	src/addins/webdavsyncservice/Makefile	/^webdavsyncservice_la_LIBADD =$/;"	m
webdavsyncservice_la_OBJECTS	src/addins/webdavsyncservice/Makefile	/^webdavsyncservice_la_OBJECTS = $(am_webdavsyncservice_la_OBJECTS)$/;"	m
webdavsyncservice_la_SOURCES	src/addins/webdavsyncservice/Makefile	/^webdavsyncservice_la_SOURCES = webdavsyncserviceaddin.hpp webdavsyncserviceaddin.cpp$/;"	m
webdavsyncserviceaddin	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^namespace webdavsyncserviceaddin {$/;"	n	file:
webdavsyncserviceaddin	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^namespace webdavsyncserviceaddin {$/;"	n
webdavsyncserviceaddin::WebDavSyncServiceAddin	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^class WebDavSyncServiceAddin$/;"	c	namespace:webdavsyncserviceaddin	inherits:gnote::sync::FuseSyncServiceAddin
webdavsyncserviceaddin::WebDavSyncServiceAddin::KEYRING_ITEM_NAME	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^const char *WebDavSyncServiceAddin::KEYRING_ITEM_NAME = "Tomboy sync WebDAV account";$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	file:
webdavsyncserviceaddin::WebDavSyncServiceAddin::KEYRING_ITEM_NAME	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static const char *KEYRING_ITEM_NAME;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
webdavsyncserviceaddin::WebDavSyncServiceAddin::accept_ssl_cert	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::accept_ssl_cert()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::accept_ssl_cert	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool accept_ssl_cert();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::add_row	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::add_row(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)
webdavsyncserviceaddin::WebDavSyncServiceAddin::add_row	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  void add_row(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(Gtk::Table *table, Gtk::Widget *widget, const std::string & labelText, uint row)
webdavsyncserviceaddin::WebDavSyncServiceAddin::are_settings_valid	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::are_settings_valid()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::create	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^WebDavSyncServiceAddin * WebDavSyncServiceAddin::create()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::create	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static WebDavSyncServiceAddin * create();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::create_preferences_control	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^Gtk::Widget *WebDavSyncServiceAddin::create_preferences_control(EventHandler requiredPrefChanged)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(EventHandler requiredPrefChanged)
webdavsyncserviceaddin::WebDavSyncServiceAddin::fuse_mount_directory_error	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::fuse_mount_directory_error()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::fuse_mount_exe_name	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::fuse_mount_exe_name()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::get_config_settings(std::string & url, std::string & username, std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(std::string & url, std::string & username, std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool get_config_settings(std::string & url, std::string & username, std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(std::string & url, std::string & username, std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::vector<std::string> WebDavSyncServiceAddin::get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, bool fromStoredValues)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::vector<std::string> WebDavSyncServiceAddin::get_fuse_mount_exe_args(const std::string & mountPath, const std::string & url,$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, const std::string & url, const std::string & username, const std::string & password, bool acceptSsl)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_fuse_mount_exe_args	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, const std::string & url,$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(const std::string & mountPath, const std::string & url, const std::string & username, const std::string & password, bool acceptSsl)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_fuse_mount_exe_args_for_display	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & mountPath, bool fromStoredValues)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_pref_widget_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::get_pref_widget_settings(std::string & url, std::string & username, std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(std::string & url, std::string & username, std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::get_pref_widget_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  bool get_pref_widget_settings(std::string & url, std::string & username, std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(std::string & url, std::string & username, std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::id	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::id()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::is_configured	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::is_configured()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::m_password_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_password_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
webdavsyncserviceaddin::WebDavSyncServiceAddin::m_url_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_url_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
webdavsyncserviceaddin::WebDavSyncServiceAddin::m_username_entry	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  Gtk::Entry *m_username_entry;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
webdavsyncserviceaddin::WebDavSyncServiceAddin::name	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::string WebDavSyncServiceAddin::name()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual Gtk::Widget *create_preferences_control(EventHandler requiredPrefChanged) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool are_settings_valid() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool is_configured() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual bool verify_configuration() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string fuse_mount_directory_error() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string fuse_mount_exe_name() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string get_fuse_mount_exe_args_for_display(const std::string & mountPath, bool fromStoredValues) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string id() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::string name() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:public
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual std::vector<std::string> get_fuse_mount_exe_args(const std::string & mountPath, bool fromStoredValues) override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual void reset_configuration_values() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::override	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  virtual void save_configuration_values() override;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:protected
webdavsyncserviceaddin::WebDavSyncServiceAddin::reset_configuration_values	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::reset_configuration_values()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::s_request_attributes	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^std::map<std::string, std::string> WebDavSyncServiceAddin::s_request_attributes;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	file:
webdavsyncserviceaddin::WebDavSyncServiceAddin::s_request_attributes	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  static std::map<std::string, std::string> s_request_attributes;$/;"	m	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private
webdavsyncserviceaddin::WebDavSyncServiceAddin::save_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::save_config_settings(const std::string & url, const std::string & username, const std::string & password)$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:(const std::string & url, const std::string & username, const std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::save_config_settings	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  void save_config_settings(const std::string & url, const std::string & username, const std::string & password);$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	access:private	signature:(const std::string & url, const std::string & username, const std::string & password)
webdavsyncserviceaddin::WebDavSyncServiceAddin::save_configuration_values	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^void WebDavSyncServiceAddin::save_configuration_values()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceAddin::verify_configuration	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^bool WebDavSyncServiceAddin::verify_configuration()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceAddin	signature:()
webdavsyncserviceaddin::WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^class WebDavSyncServiceModule$/;"	c	namespace:webdavsyncserviceaddin	inherits:sharp::DynamicModule
webdavsyncserviceaddin::WebDavSyncServiceModule::WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.cpp	/^WebDavSyncServiceModule::WebDavSyncServiceModule()$/;"	f	class:webdavsyncserviceaddin::WebDavSyncServiceModule	signature:()
webdavsyncserviceaddin::WebDavSyncServiceModule::WebDavSyncServiceModule	src/addins/webdavsyncservice/webdavsyncserviceaddin.hpp	/^  WebDavSyncServiceModule();$/;"	p	class:webdavsyncserviceaddin::WebDavSyncServiceModule	access:public	signature:()
what	src/sharp/exception.cpp	/^  const char *Exception::what() const throw()$/;"	f	class:sharp::Exception	signature:() const
widget	src/note.hpp	/^    Gtk::Widget *widget;$/;"	m	struct:gnote::Note::ChildWidgetData	access:public
widget	src/notebuffer.hpp	/^    Gtk::Widget                  *widget;$/;"	m	struct:gnote::NoteBuffer::WidgetInsertData	access:public
widget_swap	src/notebuffer.cpp	/^  void NoteBuffer::widget_swap (const NoteTag::Ptr & tag, const Gtk::TextIter & start,$/;"	f	class:gnote::NoteBuffer	signature:(const NoteTag::Ptr & tag, const Gtk::TextIter & start, const Gtk::TextIter & , bool adding)
widget_swap	src/notebuffer.hpp	/^  void widget_swap (const NoteTag::Ptr & tag, const Gtk::TextIter & start,$/;"	p	class:gnote::NoteBuffer	access:private	signature:(const NoteTag::Ptr & tag, const Gtk::TextIter & start, const Gtk::TextIter & end_iter, bool adding)
width	src/notebase.hpp	/^  int & width()$/;"	f	class:gnote::NoteData	access:public	signature:()
width	src/notebase.hpp	/^  int width() const$/;"	f	class:gnote::NoteData	access:public	signature:() const
windowed	src/gnote.hpp	/^  bool windowed()$/;"	f	class:gnote::Gnote	access:public	signature:()
write	src/notebase.cpp	/^void NoteArchiver::write(const Glib::ustring & write_file, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & write_file, const NoteData & data)
write	src/notebase.cpp	/^void NoteArchiver::write(sharp::XmlWriter & xml, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(sharp::XmlWriter & xml, const NoteData & data)
write	src/notebase.hpp	/^  static void write(const Glib::ustring & write_file, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & write_file, const NoteData & data)
write	src/notebase.hpp	/^  void write(sharp::XmlWriter & xml, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(sharp::XmlWriter & xml, const NoteData & data)
write	src/notetag.cpp	/^  void DepthNoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::DepthNoteTag	signature:(sharp::XmlWriter & xml, bool start) const
write	src/notetag.cpp	/^  void DynamicNoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::DynamicNoteTag	signature:(sharp::XmlWriter & xml, bool start) const
write	src/notetag.cpp	/^  void NoteTag::write(sharp::XmlWriter & xml, bool start) const$/;"	f	class:gnote::NoteTag	signature:(sharp::XmlWriter & xml, bool start) const
write	src/notetag.hpp	/^  virtual void write(sharp::XmlWriter &, bool) const;$/;"	p	class:gnote::NoteTag	access:public	signature:(sharp::XmlWriter &, bool) const
write	src/sharp/streamwriter.cpp	/^  void StreamWriter::write(const xmlBufferPtr buffer)$/;"	f	class:sharp::StreamWriter	signature:(const xmlBufferPtr buffer)
write	src/sharp/streamwriter.cpp	/^void StreamWriter::write(const std::string & text)$/;"	f	class:sharp::StreamWriter	signature:(const std::string & text)
write	src/sharp/streamwriter.hpp	/^  void write(const std::string & );$/;"	p	class:sharp::StreamWriter	access:public	signature:(const std::string & )
write	src/sharp/streamwriter.hpp	/^  void write(const xmlBufferPtr);$/;"	p	class:sharp::StreamWriter	access:public	signature:(const xmlBufferPtr)
write	src/synchronization/gnotesyncclient.cpp	/^  void GnoteSyncClient::write(const std::string & manifest_path)$/;"	f	class:gnote::sync::GnoteSyncClient	signature:(const std::string & manifest_path)
write	src/synchronization/gnotesyncclient.hpp	/^    void write(const std::string & manifest_path);$/;"	p	class:gnote::sync::GnoteSyncClient	access:private	signature:(const std::string & manifest_path)
write_attribute_string	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_attribute_string(const std::string & prefix,const std::string & local_name,$/;"	f	class:sharp::XmlWriter	signature:(const std::string & prefix,const std::string & local_name, const std::string & ns ,const std::string & value)
write_attribute_string	src/sharp/xmlwriter.hpp	/^    int write_attribute_string(const std::string & prefix,const std::string & local_name,$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & prefix,const std::string & local_name, const std::string & ns ,const std::string & value)
write_char_entity	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_char_entity(gunichar ch)$/;"	f	class:sharp::XmlWriter	signature:(gunichar ch)
write_char_entity	src/sharp/xmlwriter.hpp	/^    int write_char_entity(gunichar ch);$/;"	p	class:sharp::XmlWriter	access:public	signature:(gunichar ch)
write_end_attribute	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_attribute()$/;"	f	class:sharp::XmlWriter	signature:()
write_end_attribute	src/sharp/xmlwriter.hpp	/^    int write_end_attribute();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
write_end_document	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_document()$/;"	f	class:sharp::XmlWriter	signature:()
write_end_document	src/sharp/xmlwriter.hpp	/^    int write_end_document();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
write_end_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_end_element()$/;"	f	class:sharp::XmlWriter	signature:()
write_end_element	src/sharp/xmlwriter.hpp	/^    int write_end_element();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
write_file	src/notebase.cpp	/^void NoteArchiver::write_file(const Glib::ustring & _write_file, const NoteData & data)$/;"	f	class:gnote::NoteArchiver	signature:(const Glib::ustring & _write_file, const NoteData & data)
write_file	src/notebase.hpp	/^  void write_file(const Glib::ustring & write_file, const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const Glib::ustring & write_file, const NoteData & data)
write_full_end_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_full_end_element()$/;"	f	class:sharp::XmlWriter	signature:()
write_full_end_element	src/sharp/xmlwriter.hpp	/^    int write_full_end_element();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
write_html_for_note	src/addins/exporttohtml/exporttohtmlnoteaddin.cpp	/^void ExportToHtmlNoteAddin::write_html_for_note (sharp::StreamWriter & writer, $/;"	f	class:exporttohtml::ExportToHtmlNoteAddin	signature:(sharp::StreamWriter & writer, const gnote::Note::Ptr & note, bool export_linked, bool export_linked_all)
write_html_for_note	src/addins/exporttohtml/exporttohtmlnoteaddin.hpp	/^  void write_html_for_note (sharp::StreamWriter &, const gnote::Note::Ptr &, bool, bool);$/;"	p	class:exporttohtml::ExportToHtmlNoteAddin	access:private	signature:(sharp::StreamWriter &, const gnote::Note::Ptr &, bool, bool)
write_raw	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_raw(const std::string & raw)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & raw)
write_raw	src/sharp/xmlwriter.hpp	/^    int write_raw(const std::string & raw);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & raw)
write_start_attribute	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_attribute(const std::string & name)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & name)
write_start_attribute	src/sharp/xmlwriter.hpp	/^    int write_start_attribute(const std::string & name);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & name)
write_start_document	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_document()$/;"	f	class:sharp::XmlWriter	signature:()
write_start_document	src/sharp/xmlwriter.hpp	/^    int write_start_document();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
write_start_element	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_start_element(const std::string & prefix,$/;"	f	class:sharp::XmlWriter	signature:(const std::string & prefix, const std::string & name, const std::string & nsuri)
write_start_element	src/sharp/xmlwriter.hpp	/^    int write_start_element(const std::string & prefix, const std::string & name, const std::string & nsuri);$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & prefix, const std::string & name, const std::string & nsuri)
write_string	src/notebase.cpp	/^Glib::ustring NoteArchiver::write_string(const NoteData & note)$/;"	f	class:gnote::NoteArchiver	signature:(const NoteData & note)
write_string	src/notebase.hpp	/^  static Glib::ustring write_string(const NoteData & data);$/;"	p	class:gnote::NoteArchiver	access:public	signature:(const NoteData & data)
write_string	src/sharp/xmlwriter.cpp	/^  int XmlWriter::write_string(const std::string & s)$/;"	f	class:sharp::XmlWriter	signature:(const std::string & s)
write_string	src/sharp/xmlwriter.hpp	/^    int write_string(const std::string & );$/;"	p	class:sharp::XmlWriter	access:public	signature:(const std::string & )
write_tag	src/notebuffer.cpp	/^  void NoteBufferArchiver::write_tag(const Glib::RefPtr<const Gtk::TextTag> & tag, $/;"	f	class:gnote::NoteBufferArchiver	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, bool start)
write_tag	src/notebuffer.hpp	/^  static void write_tag(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, $/;"	p	class:gnote::NoteBufferArchiver	access:private	signature:(const Glib::RefPtr<const Gtk::TextTag> & tag, sharp::XmlWriter & xml, bool start)
xml_content	src/notebase.hpp	/^  const Glib::ustring & xml_content()$/;"	f	class:gnote::NoteBase	access:public	signature:()
xml_node_content	src/sharp/xml.cpp	/^  std::string xml_node_content(xmlNodePtr node)$/;"	f	namespace:sharp	signature:(xmlNodePtr node)
xml_node_content	src/sharp/xml.hpp	/^  std::string xml_node_content(xmlNodePtr node);$/;"	p	namespace:sharp	signature:(xmlNodePtr node)
xml_node_get_attribute	src/sharp/xml.cpp	/^  std::string xml_node_get_attribute(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * attr_name)
xml_node_get_attribute	src/sharp/xml.hpp	/^  std::string xml_node_get_attribute(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * attr_name)
xml_node_xpath_find	src/sharp/xml.cpp	/^  XmlNodeSet xml_node_xpath_find(const xmlNodePtr node, $/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xml_node_xpath_find	src/sharp/xml.hpp	/^  XmlNodeSet xml_node_xpath_find(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xml_node_xpath_find_single	src/sharp/xml.cpp	/^  std::string xml_node_xpath_find_single(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xml_node_xpath_find_single	src/sharp/xml.hpp	/^  std::string xml_node_xpath_find_single(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xml_node_xpath_find_single_node	src/sharp/xml.cpp	/^  xmlNodePtr xml_node_xpath_find_single_node(const xmlNodePtr node,$/;"	f	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xml_node_xpath_find_single_node	src/sharp/xml.hpp	/^  xmlNodePtr xml_node_xpath_find_single_node(const xmlNodePtr node,$/;"	p	namespace:sharp	signature:(const xmlNodePtr node, const char * xpath)
xmlchar_to_string	src/sharp/xmlreader.cpp	/^  std::string xmlchar_to_string(const xmlChar * s)$/;"	f	namespace:sharp	signature:(const xmlChar * s)
xmlchar_to_string	src/sharp/xmlreader.cpp	/^  std::string xmlchar_to_string(xmlChar * s, bool freemem)$/;"	f	namespace:sharp	signature:(xmlChar * s, bool freemem)
xmlreadertest_DEPENDENCIES	src/Makefile	/^xmlreadertest_DEPENDENCIES = libgnote.la$/;"	m
xmlreadertest_LDADD	src/Makefile	/^xmlreadertest_LDADD = libgnote.la -lxml2 $/;"	m
xmlreadertest_OBJECTS	src/Makefile	/^xmlreadertest_OBJECTS = $(am_xmlreadertest_OBJECTS)$/;"	m
xmlreadertest_SOURCES	src/Makefile	/^xmlreadertest_SOURCES = test\/xmlreadertest.cpp$/;"	m
xsl_DATA	src/addins/exporttohtml/Makefile	/^xsl_DATA = exporttohtml.xsl$/;"	m
xsldir	src/addins/exporttohtml/Makefile	/^xsldir = ${datarootdir}\/gnote$/;"	m
xyz_to_lab_f	src/contrast.cpp	/^xyz_to_lab_f(float t)$/;"	f	file:	signature:(float t)
xyz_to_srgb_C	src/contrast.cpp	/^xyz_to_srgb_C(float K)$/;"	f	file:	signature:(float K)
year	src/sharp/datetime.cpp	/^  int DateTime::year() const$/;"	f	class:sharp::DateTime	signature:() const
year	src/sharp/datetime.hpp	/^  int year() const;$/;"	p	class:sharp::DateTime	access:public	signature:() const
~AbstractAddin	src/abstractaddin.cpp	/^  AbstractAddin::~AbstractAddin()$/;"	f	class:gnote::AbstractAddin	signature:()
~AbstractAddin	src/abstractaddin.hpp	/^  virtual ~AbstractAddin();$/;"	p	class:gnote::AbstractAddin	access:public	signature:()
~AddinManager	src/addinmanager.cpp	/^  AddinManager::~AddinManager()$/;"	f	class:gnote::AddinManager	signature:()
~AddinManager	src/addinmanager.hpp	/^  ~AddinManager();$/;"	p	class:gnote::AddinManager	access:public	signature:()
~DynamicModule	src/sharp/dynamicmodule.cpp	/^  DynamicModule::~DynamicModule()$/;"	f	class:sharp::DynamicModule	signature:()
~DynamicModule	src/sharp/dynamicmodule.hpp	/^  virtual ~DynamicModule();$/;"	p	class:sharp::DynamicModule	access:public	signature:()
~EditAction	src/undo.hpp	/^  virtual ~EditAction() {}$/;"	f	class:gnote::EditAction	access:public	signature:()
~Exception	src/sharp/exception.cpp	/^  Exception::~Exception() throw()$/;"	f	class:sharp::Exception	signature:()
~Exception	src/sharp/exception.hpp	/^  virtual ~Exception() throw();$/;"	p	class:sharp::Exception	access:public	signature:()
~Gnote	src/gnote.cpp	/^  Gnote::~Gnote()$/;"	f	class:gnote::Gnote	signature:()
~Gnote	src/gnote.hpp	/^  ~Gnote();$/;"	p	class:gnote::Gnote	access:public	signature:()
~GnoteCommandLine	src/gnote.cpp	/^  GnoteCommandLine::~GnoteCommandLine()$/;"	f	class:gnote::GnoteCommandLine	signature:()
~GnoteCommandLine	src/gnote.hpp	/^  ~GnoteCommandLine();$/;"	p	class:gnote::GnoteCommandLine	access:public	signature:()
~IActionManager	src/iactionmanager.cpp	/^IActionManager::~IActionManager()$/;"	f	class:gnote::IActionManager	signature:()
~IActionManager	src/iactionmanager.hpp	/^  virtual ~IActionManager();$/;"	p	class:gnote::IActionManager	access:public	signature:()
~IGnote	src/ignote.cpp	/^IGnote::~IGnote()$/;"	f	class:gnote::IGnote	signature:()
~IGnote	src/ignote.hpp	/^  virtual ~IGnote();$/;"	p	class:gnote::IGnote	access:public	signature:()
~IInterface	src/sharp/modulefactory.hpp	/^  virtual ~IInterface()$/;"	f	class:sharp::IInterface	access:public	signature:()
~IKeybinder	src/keybinder.hpp	/^  virtual ~IKeybinder(){}$/;"	f	class:gnote::IKeybinder	access:public	signature:()
~ISyncManager	src/synchronization/isyncmanager.cpp	/^ISyncManager::~ISyncManager()$/;"	f	class:gnote::sync::ISyncManager	signature:()
~ISyncManager	src/synchronization/isyncmanager.hpp	/^  virtual ~ISyncManager();$/;"	p	class:gnote::sync::ISyncManager	access:public	signature:()
~ITagManager	src/itagmanager.cpp	/^ITagManager::~ITagManager()$/;"	f	class:gnote::ITagManager	signature:()
~ITagManager	src/itagmanager.hpp	/^  virtual ~ITagManager();$/;"	p	class:gnote::ITagManager	access:public	signature:()
~IfaceFactoryBase	src/sharp/modulefactory.hpp	/^  virtual ~IfaceFactoryBase()$/;"	f	class:sharp::IfaceFactoryBase	access:public	signature:()
~InterruptableTimeout	src/utils.cpp	/^    InterruptableTimeout::~InterruptableTimeout()$/;"	f	class:gnote::utils::InterruptableTimeout	signature:()
~InterruptableTimeout	src/utils.hpp	/^      ~InterruptableTimeout();$/;"	p	class:gnote::utils::InterruptableTimeout	access:public	signature:()
~ModelColumnRecord	src/noterenamedialog.cpp	/^ModelColumnRecord::~ModelColumnRecord()$/;"	f	class:gnote::ModelColumnRecord	signature:()
~ModelColumnRecord	src/noterenamedialog.hpp	/^  virtual ~ModelColumnRecord();$/;"	p	class:gnote::ModelColumnRecord	access:public	signature:()
~ModuleManager	src/sharp/modulemanager.cpp	/^  ModuleManager::~ModuleManager()$/;"	f	class:sharp::ModuleManager	signature:()
~ModuleManager	src/sharp/modulemanager.hpp	/^  ~ModuleManager();$/;"	p	class:sharp::ModuleManager	access:public	signature:()
~NonModifyingNoteAction	src/notewindow.hpp	/^    virtual ~NonModifyingNoteAction() {}$/;"	f	class:gnote::NoteWindow::NonModifyingNoteAction	access:public	signature:()
~Note	src/note.cpp	/^  Note::~Note()$/;"	f	class:gnote::Note	signature:()
~Note	src/note.hpp	/^  ~Note();$/;"	p	class:gnote::Note	access:public	signature:()
~NoteBuffer	src/notebuffer.cpp	/^  NoteBuffer::~NoteBuffer()$/;"	f	class:gnote::NoteBuffer	signature:()
~NoteBuffer	src/notebuffer.hpp	/^  ~NoteBuffer();$/;"	p	class:gnote::NoteBuffer	access:public	signature:()
~NoteDataBufferSynchronizerBase	src/notebase.cpp	/^NoteDataBufferSynchronizerBase::~NoteDataBufferSynchronizerBase()$/;"	f	class:gnote::NoteDataBufferSynchronizerBase	signature:()
~NoteDataBufferSynchronizerBase	src/notebase.hpp	/^  virtual ~NoteDataBufferSynchronizerBase();$/;"	p	class:gnote::NoteDataBufferSynchronizerBase	access:public	signature:()
~NoteManager	src/notemanager.cpp	/^  NoteManager::~NoteManager()$/;"	f	class:gnote::NoteManager	signature:()
~NoteManager	src/notemanager.hpp	/^    ~NoteManager();$/;"	p	class:gnote::NoteManager	access:public	signature:()
~NoteManagerBase	src/notemanagerbase.cpp	/^NoteManagerBase::~NoteManagerBase()$/;"	f	class:gnote::NoteManagerBase	signature:()
~NoteManagerBase	src/notemanagerbase.hpp	/^  virtual ~NoteManagerBase();$/;"	p	class:gnote::NoteManagerBase	access:public	signature:()
~NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.cpp	/^NoteOfTheDayApplicationAddin::~NoteOfTheDayApplicationAddin()$/;"	f	class:noteoftheday::NoteOfTheDayApplicationAddin	signature:()
~NoteOfTheDayApplicationAddin	src/addins/noteoftheday/noteofthedayapplicationaddin.hpp	/^  virtual ~NoteOfTheDayApplicationAddin();$/;"	p	class:noteoftheday::NoteOfTheDayApplicationAddin	access:public	signature:()
~NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.cpp	/^NoteOfTheDayPreferences::~NoteOfTheDayPreferences()$/;"	f	class:noteoftheday::NoteOfTheDayPreferences	signature:()
~NoteOfTheDayPreferences	src/addins/noteoftheday/noteofthedaypreferences.hpp	/^  ~NoteOfTheDayPreferences();$/;"	p	class:noteoftheday::NoteOfTheDayPreferences	access:public	signature:()
~NoteRecentChanges	src/recentchanges.cpp	/^  NoteRecentChanges::~NoteRecentChanges()$/;"	f	class:gnote::NoteRecentChanges	signature:()
~NoteRecentChanges	src/recentchanges.hpp	/^  virtual ~NoteRecentChanges();$/;"	p	class:gnote::NoteRecentChanges	access:public	signature:()
~NoteRenameWatcher	src/watchers.cpp	/^  NoteRenameWatcher::~NoteRenameWatcher()$/;"	f	class:gnote::NoteRenameWatcher	signature:()
~NoteRenameWatcher	src/watchers.hpp	/^    ~NoteRenameWatcher();$/;"	p	class:gnote::NoteRenameWatcher	access:public	signature:()
~NoteWindow	src/notewindow.cpp	/^  NoteWindow::~NoteWindow()$/;"	f	class:gnote::NoteWindow	signature:()
~NoteWindow	src/notewindow.hpp	/^  ~NoteWindow();$/;"	p	class:gnote::NoteWindow	access:public	signature:()
~Notebook	src/notebooks/notebook.hpp	/^  virtual ~Notebook()$/;"	f	class:gnote::notebooks::Notebook	access:public	signature:()
~PrefsKeybinder	src/prefskeybinder.cpp	/^  PrefsKeybinder::~PrefsKeybinder()$/;"	f	class:gnote::PrefsKeybinder	signature:()
~PrefsKeybinder	src/prefskeybinder.hpp	/^  virtual ~PrefsKeybinder();$/;"	p	class:gnote::PrefsKeybinder	access:public	signature:()
~PropertyEditorBase	src/sharp/propertyeditor.cpp	/^  PropertyEditorBase::~PropertyEditorBase()$/;"	f	class:sharp::PropertyEditorBase	signature:()
~PropertyEditorBase	src/sharp/propertyeditor.hpp	/^    virtual ~PropertyEditorBase();$/;"	p	class:sharp::PropertyEditorBase	access:public	signature:()
~ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.cpp	/^ReadOnlyNoteAddin::~ReadOnlyNoteAddin()$/;"	f	class:readonly::ReadOnlyNoteAddin	signature:()
~ReadOnlyNoteAddin	src/addins/readonly/readonlynoteaddin.hpp	/^  virtual ~ReadOnlyNoteAddin();$/;"	p	class:readonly::ReadOnlyNoteAddin	access:public	signature:()
~RemoteControl	src/dbus/remotecontrol.cpp	/^  RemoteControl::~RemoteControl()$/;"	f	class:gnote::RemoteControl	signature:()
~RemoteControl	src/dbus/remotecontrol.hpp	/^  virtual ~RemoteControl();$/;"	p	class:gnote::RemoteControl	access:public	signature:()
~SearchNotesWidget	src/searchnoteswidget.cpp	/^SearchNotesWidget::~SearchNotesWidget()$/;"	f	class:gnote::SearchNotesWidget	signature:()
~SearchNotesWidget	src/searchnoteswidget.hpp	/^  virtual ~SearchNotesWidget();$/;"	p	class:gnote::SearchNotesWidget	access:public	signature:()
~SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.cpp	/^SpecialNotesApplicationAddin::~SpecialNotesApplicationAddin()$/;"	f	class:specialnotes::SpecialNotesApplicationAddin	signature:()
~SpecialNotesApplicationAddin	src/addins/specialnotes/specialnotesapplicationaddin.hpp	/^  virtual ~SpecialNotesApplicationAddin();$/;"	p	class:specialnotes::SpecialNotesApplicationAddin	access:public	signature:()
~StreamReader	src/sharp/streamreader.cpp	/^StreamReader::~StreamReader()$/;"	f	class:sharp::StreamReader	signature:()
~StreamReader	src/sharp/streamreader.hpp	/^  ~StreamReader();$/;"	p	class:sharp::StreamReader	access:public	signature:()
~StreamWriter	src/sharp/streamwriter.cpp	/^StreamWriter::~StreamWriter()$/;"	f	class:sharp::StreamWriter	signature:()
~StreamWriter	src/sharp/streamwriter.hpp	/^  ~StreamWriter();$/;"	p	class:sharp::StreamWriter	access:public	signature:()
~SyncClient	src/synchronization/isyncmanager.cpp	/^SyncClient::~SyncClient()$/;"	f	class:gnote::sync::SyncClient	signature:()
~SyncClient	src/synchronization/isyncmanager.hpp	/^  virtual ~SyncClient();$/;"	p	class:gnote::sync::SyncClient	access:public	signature:()
~SyncServer	src/synchronization/isyncmanager.cpp	/^SyncServer::~SyncServer()$/;"	f	class:gnote::sync::SyncServer	signature:()
~SyncServer	src/synchronization/isyncmanager.hpp	/^  virtual ~SyncServer();$/;"	p	class:gnote::sync::SyncServer	access:public	signature:()
~TrayIcon	src/tray.cpp	/^  TrayIcon::~TrayIcon()$/;"	f	class:gnote::TrayIcon	signature:()
~TrayIcon	src/tray.hpp	/^  ~TrayIcon();$/;"	p	class:gnote::TrayIcon	access:public	signature:()
~TrieController	src/notemanagerbase.cpp	/^  ~TrieController();$/;"	p	class:gnote::TrieController	file:	access:public	signature:()
~TrieController	src/notemanagerbase.cpp	/^TrieController::~TrieController()$/;"	f	class:gnote::TrieController	signature:()
~UndoManager	src/undo.cpp	/^  UndoManager::~UndoManager()$/;"	f	class:gnote::UndoManager	signature:()
~UndoManager	src/undo.hpp	/^  ~UndoManager();$/;"	p	class:gnote::UndoManager	access:public	signature:()
~XmlReader	src/sharp/xmlreader.cpp	/^  XmlReader::~XmlReader()$/;"	f	class:sharp::XmlReader	signature:()
~XmlReader	src/sharp/xmlreader.hpp	/^  ~XmlReader();$/;"	p	class:sharp::XmlReader	access:public	signature:()
~XmlWriter	src/sharp/xmlwriter.cpp	/^  XmlWriter::~XmlWriter()$/;"	f	class:sharp::XmlWriter	signature:()
~XmlWriter	src/sharp/xmlwriter.hpp	/^    ~XmlWriter();$/;"	p	class:sharp::XmlWriter	access:public	signature:()
~XslTransform	src/sharp/xsltransform.cpp	/^XslTransform::~XslTransform()$/;"	f	class:sharp::XslTransform	signature:()
~XslTransform	src/sharp/xsltransform.hpp	/^  ~XslTransform();$/;"	p	class:sharp::XslTransform	access:public	signature:()
